gny.io's decentralized distributed machine learning blockchain one benefit blockchain's decentralized technology its application beyond cryptocurrencies. are applying the techology machine learning enable smarter "thinking" blockchain process. most machine learning models that have been used have underlying assumption that some global knowledge required its algorithms function (see fig these are centralized distributed, where the entire data set loaded into cloud distributed nodes that the two main functions machine learning are performed one large library functions etl/exploration and model training/parameter tuning. spark, watson, azure all use this platform based approach and are also biased towards methods that have been known work. figure typical spark machine learning architecture gny.io's distributeddeep learning breaks this pattern one large platform library creating two the smallest configurable self-learning unsupervised neural net nodes etl node and node and distributing these nodes into each block the block chain have them teach themselves the solution each problem. the one conceptual problem though machine learning that error detection requires global knowledge that gets backpropagated its constituents. this requirement though fixed gny.io's distributeddeep learning systems. therefore prefer the term 'localized models' and not 'model free models', even though both mean measure lack intelligence constituent parts. general though, this similar the concept 'parsimony', that seek the simplest mechanisms that give rise emergent properties prediction. gny.io not crushed small machine learning library; one node huge distributed brain. gny.io has configurable etl microservices and configurable machine learning microservices that can read the entire chain data can read the current block data. gny.io's microservices uses deep learning which class machine learning algorithms the form neural network that uses cascade layers (tiers) processing units extract features from data and make predictive guesses about new data. the smallest node system varies the weights and biases see better outcome obtained using neural network (see fig gny.io white paper figure neural node neural network the heart gny.io the special backpropagation algorithm. backpropagation errors and gradient descent are some optimization methods used calculate the error contribution each blockchain node after batch data processed. gny.io uses variation structured streaming and parquet data format this sets the weights the neuron. this means that the neurons change their connection and their weights lesson the error. gny.io will determine the normal rules the system itself with unsupervised learning. adjusted weights what configurable. backpropagation expression for the partial derivative c/w the cost function with respect any weight (or bias the network. the expression tells how quickly the cost changes when change the weights and biases. and backpropagation isn't just fast algorithm for learning. actually gives detailed insights into how changing the weights and biases, changes the overall behavior the network. let w(l)jk the weight are trying find kth neuron the (l-)th layer the jth neuron the lth layer. so, for example, the diagram below shows the weight connection from the fourth neuron the second layer the second neuron the third layer network: gny.io white paper let blj for the bias the jth neuron the lth layer. and use alj for the activation the jth neuron the lth layer. the following diagram shows examples these notations use: the goal backpropagation compute the partial derivatives c/w and c/b the cost function with respect any weight bias the network. the cost function expressed as: gny.io white paper where: the total number training examples; the sum over individual training examples, y=y(x) the corresponding desired output; denotes the number layers the network; and al=al(x) the vector activations output from the network when input. what gny.io does compute the partial derivatives cx/w and cx/b for single training example last blockchain connection. this allows use the equations design activation functions which have particular desired learning properties. each block the blockchain contains one neuron and the blockchain the neural net each smart contract account that has its own code with the neural nets. unlike watson, azure spark there controlling machine learning manager cluster and data lake. the neural nets are self organizing and self correcting. gny.io takes the data partition idea parquet its logical conclusion and performs massive parallel pattern learning that sets the weights the neuron. figure gny.io's parquet data format gny.io white paper figure parquet data flow gny.io's gradient descent optimization deep learning. deep learning advanced form artificial intelligence and powerful set techniques for learning neural networks. neural networks and deep learning currently provide the best solutions many problems image recognition, speech recognition, and natural language processing, gny.io fusion deep learning technology blockchain. the blockchain, being distributed transparent consensus based peer-to-peer network that has been shown extremely resilient adversarial attacks. the blockchain itself creates the neural net. gny.io the first apply this technique blockchain. gny.io uses probabilistic graph model (pgm) approach dl. the pgm approach, the neural nodes construct probabilistic graph that defines the relationship's different variables. the approach uses monte-carlo sampling construct bayesian consistent distributions for the variables. then use deep learning learn from this synthesized data. gny.io white paper figure the "layer cake" neural network gny has: embeddedness the neural nets not exist isolation and are embedded much larger blockchain ecosystem. redundancy duplication components may inefficient however provides the mechanism handle the unexpected. addition, functional redundancy offers way repurpose components reduce costs. heterogeneity different predictive machines make possible react more diverse range change well avoid correlated behavior that can lead total system failure. diversity required for evolutionary learning and adaptation. modularity decoupling components act like firewalls between components and help mitigate against total collapse. individual component damage can tolerated while the integrity other components are preserved. general, distributed loosely coupled system has higher survivability that centralized tightly coupled system. adaptation system needs sufficiently flexible and agile adjust changes the environment. adaptive approaches that involve simulation, selection, and amplification successful strategies are important. self-learning requirement achieve adaptability. gny blockchain application platform gny.io white paper gny blockchain application platform, which will help enterprise developers build their own blockchain application javascript. figure gny.io blockchain architecture each dapp chain parallel blockchain the gny core chain. gny core offers the sdks and apis help developers develop their own blockchain. gny also offers different consensus algorithms components. figure cross chain protocol gny gny.io white paper believe the future blockchain world that different blockchains can connected easily. will develop the cross chain protocol, which will connect gny core many other mainstream blockchains. every dapp developed based gny can import other tokens like btc, eth their dapp. gny.io will adapt the dpos bft consensus algorithm, which will have super nodes who maintain the network. there are many other lightweight nodes who will handle transactions the network. gny.io white paper