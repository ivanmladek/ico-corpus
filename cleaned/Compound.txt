compound whitepaper google docs compound: the money market protocol version february authors robert leshner, geoffrey hayes https://compound.finance abstract this paper introduce decentralized protocol which establishes money markets with algorithmically set interest rates based supply and demand, allowing users frictionlessly exchange the time value ethereum assets. contents introduction the compound protocol supplying assets primary use cases borrowing assets collateral value risk liquidation primary use cases interest rate model liquidity incentive structure implementation architecture ctoken contracts interest rate mechanics market dynamics borrower dynamics borrowing liquidation price feeds comptroller governance summary references https://docs.google.com/document/d/koxeeygyaapacsdudpufzwgaxswvyi-iecju/edit# compound whitepaper google docs introduction the market for cryptocurrencies and digital blockchain assets has developed into vibrant ecosystem investors, speculators, and traders, exchanging thousands blockchain assets. unfortunately, the sophistication financial markets hasn't followed: participants have little capability trading the time value assets. interest rates fill the gap between people with surplus assets they can't use, and people without assets (that have productive investment use); trading the time value assets benefits both parties, and creates non-zero-sum wealth. for blockchain assets, two major flaws exist today: borrowing mechanisms are extremely limited, which contributes mispriced assets (e.g. "scamcoins" with unfathomable valuations, because there's way short them). blockchain assets have negative yield, resulting from significant storage costs and risks (both on-exchange and off-exchange), without natural interest rates offset those costs. this contributes volatility, holding disincentivized. centralized exchanges (including bitfinex, poloniex...) allow customers trade blockchain assets margin, with "borrowing markets" built into the exchange. these are trust-based systems (you have trust that the exchange won't get hacked, abscond with your assets, incorrectly close out your position), are limited certain customer groups, and limited small number (the most mainstream) assets. finally, balances and positions are virtual; you can't move position on-chain, for example use borrowed ether tokens smart contract ico, making these facilities inaccessible dapps []. peer peer protocols facilitate collateralized and uncollateralized loans between market participants directly. unfortunately, decentralization forces significant costs and frictions onto users; every protocol reviewed, lenders are required post, manage, and (in the event collateralized loans) supervise loan offers and active loans, and loan fulfillment often slow asynchronous (loans have funded, which takes time) [-]. this paper, introduce decentralized system for the frictionless borrowing ethereum tokens without the flaws existing approaches, enabling proper money markets function, and creating safe positive-yield approach storing assets. the compound protocol compound protocol the ethereum blockchain that establishes money markets, which are pools assets with algorithmically derived interest rates, based the supply and demand for the asset. suppliers (and borrowers) asset interact directly with the protocol, earning (and paying) floating interest rate, without having negotiate terms such maturity, interest rate, collateral with peer counterparty. https://docs.google.com/document/d/koxeeygyaapacsdudpufzwgaxswvyi-iecju/edit# compound whitepaper google docs each money market unique ethereum asset (such ether, erc- stablecoin such dai, erc- utility token such augur), and contains transparent and publicly-inspectable ledger, with record all transactions and historical interest rates. supplying assets unlike exchange peer-to-peer platform, where user's assets are matched and lent another user, the compound protocol aggregates the supply each user; when user supplies asset, becomes fungible resource. this approach offers significantly more liquidity than direct lending; unless every asset market borrowed (see below: the protocol incentivizes liquidity), users can withdraw their assets any time, without waiting for specific loan mature. assets supplied market are represented erc- token balance ("ctoken"), which entitles the owner increasing quantity the underlying asset. the money market accrues interest, which function borrowing demand, ctokens become convertible into increasing amount the underlying asset. this way, earning interest simple holding erc- ctoken. primary use cases individuals with long-term investments ether and tokens ("hodlers") can use compound money market source additional returns their investment. for example, user that owns augur can supply their tokens the compound protocol, and earn interest (denominated augur) without having manage their asset, fulfill loan requests take speculative risks. dapps, machines, and exchanges with token balances can use the compound protocol source monetization and incremental returns "sweeping" balances; this has the potential unlock entirely new business models for the ethereum ecosystem. borrowing assets compound allows users frictionlessly borrow from the protocol, using ctokens collateral, for use anywhere the ethereum ecosystem. unlike peer-to-peer protocols, borrowing from compound simply requires user specify desired asset; there are terms negotiate, maturity dates, funding periods; borrowing instant and predictable. similar supplying asset, each money market has floating interest rate, set market forces, which determines the borrowing cost for each asset. collateral value assets held the protocol (represented ownership ctoken) are used collateral borrow from the protocol. each market has collateral factor, ranging from that represents the portion the underlying asset value that can borrowed. illiquid, small-cap assets have low collateral factors; they not make good collateral, while liquid, high-cap assets have high collateral https://docs.google.com/document/d/koxeeygyaapacsdudpufzwgaxswvyi-iecju/edit# compound whitepaper google docs factors. the sum the value accounts underlying token balances, multiplied the collateral factors, equals user's borrowing capacity. users are able borrow to, but not exceeding, their borrowing capacity, and account can take action (e.g. borrow, transfer ctoken collateral, redeem ctoken collateral) that would raise the total value borrowed assets above their borrowing capacity; this protects the protocol from default risk. risk liquidation the value account's borrowing outstanding exceeds their borrowing capacity, portion the outstanding borrowing may repaid exchange for the user's ctoken collateral, the current market price minus liquidation discount; this incentives ecosystem arbitrageurs quickly step reduce the borrower's exposure, and eliminate the protocol's risk. the proportion eligible closed, close factor, the portion the borrowed asset that can repaid, and ranges from such the liquidation process may continue called until the user's borrowing less than their borrowing capacity. any ethereum address that possesses the borrowed asset may invoke the liquidation function, exchanging their asset for the borrower's ctoken collateral. both users, both assets, and prices are all contained within the compound protocol, liquidation frictionless and does not rely any outside systems order-books. primary use cases the ability seamlessly hold new assets (without selling rearranging portfolio) gives new superpowers dapp consumers, traders and developers: without having wait for order fill, requiring off-chain behavior, dapps can borrow tokens use the ethereum ecosystem, such purchase computing power the golem network traders can finance new ico investments borrowing ether, using their existing portfolio collateral traders looking short token can borrow it, send exchange and sell the token, profiting from declines overvalued tokens interest rate model rather than individual suppliers borrowers having negotiate over terms and rates, the compound protocol utilizes interest rate model that achieves interest rate equilibrium, each money market, based supply and demand. following economic theory, interest rates (the "price" money) should increase function demand; when demand low, interest rates https://docs.google.com/document/d/koxeeygyaapacsdudpufzwgaxswvyi-iecju/edit# compound whitepaper google docs should low, and vise versa when demand high. the utilization ratio for each market unifies supply and demand into single variable: orrowsa (casha orrowsa the demand curve codified through governance and expressed function utilization. example, borrowing interest rates may resemble the following: orrowing interest ratea the interest rate earned suppliers implicit, and equal the borrowing interest rate, multiplied the utilization rate. liquidity incentive structure the protocol does not guarantee liquidity; instead, relies the interest rate model incentivize it. periods extreme demand for asset, the liquidity the protocol (the tokens available withdraw borrow) will decline; when this occur, interest rates rise, incentivizing supply, and disincentivizing borrowing. implementation architecture its core, compound money market ledger that allows ethereum accounts supply borrow assets, while computing interest, function time. the protocol's smart contracts will publicly accessible and completely free use for machines, dapps and humans. ctoken contracts each money market structured smart contract that implements the erc- token specification. user's balances are represented ctoken balances; users can mint(uint amountunderlying) ctokens supplying assets the market, redeem(uint amount) ctokens for the underlying asset. the price (exchange rate) between ctokens and the underlying asset increases over time, interest accrued borrowers the asset, and equal to: exchangerate underlyingbalance +totalborrowbalancea okensupply reserves the market's total borrowing balance increases (as function borrower interest accruing), the exchange rate between ctokens and the underlying asset increases. function abi description mint(uint amountunderlying) transfers underlying asset into the market, updates msg.sender's ctoken balance. https://docs.google.com/document/d/koxeeygyaapacsdudpufzwgaxswvyi-iecju/edit# compound whitepaper google docs redeem(uint amount) redeemunderlying(uint amountunderlying) transfers underlying asset out the market, updates msg.sender's ctoken balance. borrow(uint amount) checks msg.sender collateral value, and sufficient, transfers the underlying asset out the market msg.sender, and updates msg.sender's borrow balance. repayborrow(uint amount) repayborrowbehalf(address account, uint amount) transfers the underlying asset into the market, updates the borrower's borrow balance. liquidate(address borrower, address collateralasset, uint closeamount) transfers the underlying asset into the market, updates the borrower's borrow balance, then transfers ctoken collateral from the borrower msg.sender table abi and summary primary ctoken smart contract functions interest rate mechanics compound money markets are defined interest rate, applied all borrowers uniformly, which adjust over time the relationship between supply and demand changes. the history each interest rate, for each money market, captured interest rate index, which calculated each time interest rate changes, resulting from user minting, redeeming, borrowing, repaying liquidating the asset. market dynamics each time transaction occurs, the interest rate index for the asset updated compound the interest since the prior index, using the interest for the period, denominated calculated using per-block interest rate: ndexa,n ndexa,(n-) the market's total borrowing outstanding updated include interest accrued since the last index: totalborrowbalancea,n totalborrowbalance a,(n-) and portion the accrued interest retained (set aside) reserves, determined reservefactor, ranging from reservesa reserves a,(n-) totalborrowbalancea,(n-) reservef actor) borrower dynamics borrower's balance, including accrued interest, simply the ratio the current index divided the index when the user's balance was last checkpointed. https://docs.google.com/document/d/koxeeygyaapacsdudpufzwgaxswvyi-iecju/edit# compound whitepaper google docs the balance for each borrower address the ctoken stored account checkpoint. account checkpoint solidity tuple this tuple describes the balance the time interest was last applied that account. borrowing user who wishes borrow and who has sufficient balances stored compound may call borrow(uint amount) the relevant ctoken contract. this function call checks the user's account value, and given sufficient collateral, will update the user's borrow balance, transfer the tokens the user's ethereum address, and update the money market's floating interest rate. borrows accrue interest the exact same fashion balance interest was calculated section borrower has the right repay outstanding loan any time, calling repayborrow(uint amount) which repays the outstanding balance. liquidation user's borrowing balance exceeds their total collateral value (borrowing capacity) due the value collateral falling, borrowed assets increasing value, the public function liquidate(address target, address collateralasset, address borrowasset, uint can called, which exchanges the invoking user's asset for the borrower's collateral, slightly better than market price. closeamount) price feeds price oracle maintains the current exchange rate each supported asset; the compound protocol delegates the ability set the value assets committee which pools prices from the top exchanges. these exchange rates are used determine borrowing capacity and collateral requirements, and for all functions which require calculating the value equivalent account. comptroller the compound protocol does not support specific tokens default; instead, markets must whitelisted. this accomplished with admin function, supportmarket(address market, address interest rate model) that allows users begin interacting with the asset. order borrow asset, there must valid price from the price oracle; order use asset collateral, there must valid price and collateralfactor. each function call validated through policy layer, referred the comptroller; this contract validates collateral and liquidity, before allowing user action proceed. https://docs.google.com/document/d/koxeeygyaapacsdudpufzwgaxswvyi-iecju/edit# compound whitepaper google docs governance compound will begin with centralized control the protocol (such choosing the interest rate model per asset), and over time, will transition complete community and stakeholder control. the following rights the protocol are controlled the admin: the ability list new ctoken market the ability update the interest rate model per market the ability update the oracle address the ability withdraw the reserve ctoken the ability choose new admin, such dao controlled the community; because this dao can itself choose new admin, the administration has the ability evolve over time, based the decisions the stakeholders summary compound creates properly functioning money markets for ethereum assets each money market has interest rates that are determined the supply and demand the underlying asset; when demand borrow asset grows, when supply removed, interest rates increase, incentivizing additional liquidity users can supply tokens money market earn interest, without trusting central party users can borrow token (to use, sell, re-lend) using their balances the protocol collateral references cryptocurrency market capitalizations. https://coinmarketcap.com/ bitfixex margin funding guide. https://support.bitfinex.com/ ethlend white paper. https://github.com/ethlend ripio white paper. https://ripiocredit.network/ lendroid white paper. https://lendroid.com/ dydx white paper. https://whitepaper.dydx.exchange/ fred ehrsam: the decentralized business model. https://blog.coinbase.com/ https://docs.google.com/document/d/koxeeygyaapacsdudpufzwgaxswvyi-iecju/edit#