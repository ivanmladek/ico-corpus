kleros short paper v.. clement lesaege and federico ast november abstract kleros decentralized application built top ethereum that works decentralized third party arbitrate disputes every kind contract, from very simple highly complex ones. relies game theoretic incentives have jurors rule cases correctly. the result dispute resolution system that renders ultimate judgments fast, inexpensive, reliable and decentralized way. introduction "whoever controls the courts, controls the state". aristotle. the world experiencing accelerated pace globalization and digitalization. exponentially growing number transactions are being conducted online between people across jurisdictional boundaries. the blockchain promise comes reality, not distant future, most goods, labor and capital will allocated through decentralized global platforms. disputes will certainly arise. users decentralized ebay will claim that sellers failed send the goods specified the agreement, guests decentralized airbnb will claim that the rented house was not "as shown the pictures" and backers crowdfunding platform will claim refund teams fail deliver the promised results. smart contracts are smart enough automatically execute programmed, but not render subjective judgments include elements from outside the blockchain. existing dispute resolution technologies are too slow, too expensive and too unreliable for decentralized global economy operating real time. fast, inexpensive, transparent, reliable and decentralized dispute resolution mechanism that renders ultimate judgments about the enforceability smart contracts key institution for the blockchain era. kleros decision protocol for multipurpose court system able solve every kind dispute. ethereum autonomous organization that works decentralized third party arbitrate disputes every kind contract, from very simple highly complex ones. every step the arbitration process (securing evidence, selecting jurors, etc.) fully automated. kleros does not rely the honesty few individuals but game-theoretical economic incentives. based fundamental insight from legal epistemology: court epistemic engine, tool for ferreting out the truth about events from confusing array clues. agent (jury) follows procedure where input (evidence) used produce output (decision) (). kleros leverages the technologies crowdsourcing, blockchain and game theory develop justice system that produces true decisions secure and inexpensive way. previous work: schellingcoin mechanism game theorist thomas schelling developed the concept schelling point (also known focal points) solution that people tend use coordinate their behavior the absence communication, because seems natural relevant them. schelling illustrated the concept with the following example: "tomorrow you have meet stranger nyc. where and when you meet him?". while any place and time the city could solution, the most common answer "noon the information booth grand central terminal". there nothing that makes noon grand central terminal location with higher payoff (any other place and time would good, provided that both agents coordinate there), but its tradition meeting place makes natural focal point. schelling points typically arise when communication impossible, but also when, while communication possible, party can provide the other with reason believe that what says true (). based the concept schelling points, ethereum founder vitalik buterin has proposed the creation the schelling coin (), token that aligns telling the truth with economic incentives. wanted know rained paris this morning, could ask every owner schelling coin: "has rained paris this morning? yes no". each coin holder votes secret ballot and after they have all voted, results are revealed. parties who voted the majority are rewarded with their coins. parties who voted differently from the majority lose their coins. thomas schelling described "focal point(s) for each person's expectation what the other expects him expect expected do". the schelling coin uses this principle provide incentives number agents who not know trust each other tell the truth. expect agents vote the true answer because they expect others vote the true answer, because they expect others vote for the true answer. this simple case, the schelling point honesty. schelling coin mechanisms have been used for decentralized oracles and prediction markets (). the fundamental insight that voting coherently with others desirable behavior that has incentivized. the incentives design underlying kleros based mechanism similar schelling coin, slightly modified order answer number specific challenges regarding scaling, subjectivity and privacy make agents engage adequate behavior. figure payoff table for basic schelling game use case alice entrepreneur based france. she hires bob, programmer from guatemala, freelancing platform build new website for her company. after they agree price, terms and conditions, bob gets work. couple weeks later, delivers the product. but alice not satisfied. she argues that the quality bob's work considerably lower than expected. bob replies that did exactly what was the agreement. alice frustrated. she cannot hire lawyer for claim just couple hundred dollars with someone who halfway around the world. what the contract had clause stating that, should dispute arise, would solved kleros court? kleros decentralized application built ethereum. after bob stops answering her email, alice taps button that says "send kleros" and fills simple form explaining her claim. thousands miles away, nairobi, chief software developer. his "dead time" the bus commuting his job, checking kleros website find some arbitration work. makes couple thousand dollars year the side his primary job serving juror software development disputes between freelancers and their clients. usually rules cases the website quality subcourt. this court requires skills html, javascript and web design solve disputes between freelancers and their customers. chief deposits pinakion, the token used kleros select jurors for disputes. the more tokens deposits, the more likely that will selected juror. about hour later, email hits chief's inbox: "you have been selected juror website quality dispute. download the evidence here. you have three days submit your decision". similar email are received benito, programmer from cusco and alexandru, from romania, who had also activated their pinakion for the dispute. they were selected randomly from pool almost candidates. they will never know each other, but they will collaborate settle the dispute between alice and bob. the bus back home, chief analyzes the evidence and votes who right. two days later, after the three juries have voted, alice and bob receive email: "the jury has ruled for alice. the website was not delivered accordance the terms and conditions agreed the parties. smart contract has transferred the money alice". jurors are rewarded for their work and the case closed. project description arbitrated contracts kleros opt-in court system. smart contracts have designate kleros their arbitrator. when they opt-in, contracts creators choose how many jurors and which court will rule their contract case dispute occurs the idea that they will choose type court specialized the topic the contract. software development contract will choose software development court, insurance contract will select insurance court, etc. figure shows example the court arborescence from which users can choose. the kleros team developing number standard contracts using kleros dispute resolution mechanism. figure example court arborescence from which smart contract creators must select court. for more information about courts, see the court arborescence section. options for jurors contracts will specify the options available for jurors vote. the introductory example, options may be: "reimburse alice", "give bob one extra week finish the website" and "pay bob". the smart contract will also specify the behavior the contract after the ruling done. the example: "reimburse alice" transfers funds alice's address. "give bob one extra week finish the website" blocks new disputes for one week and removes this option from further dispute. "pay bob" transfers funds bob's address. privacy solving disputes may require parties disclose privileged information with jurors. order prevent outside observers from accessing this information, the natural language contracts (english other) and the labels the jurors voting options are not put the blockchain. when the contract created, the creator submits hash(contract text, option list, salt) (where contract text the plain english text the contract, option list the labels the options which can voted jurors and salt random number avoid the use rainbow tables). the contract creator sends {contract text, option list, salt} each party using asymmetric encryption. this way, parties can verify that the submitted hash corresponds what was sent them. case dispute, each party can reveal {contract text, option list, salt} jurors which can verify that they correspond the hash submitted. they can using asymmetric encryption such that only the jurors receives the text the contract and the options. all these steps are handled the application users will run while using kleros. drawing jurors system token: the pinakion users have economic interest serving jurors kleros: collecting the arbitration fee that every juror gets for his work. candidates will self-select serve jurors using token called pinakion (pnk) the probability being drawn juror for specific dispute proportional the amount tokens juror deposits. the higher the amount tokens deposits, the higher the probability that will drawn juror. jurors that not deposit pinakions not have the chance being drawn. this prevents inactive jurors from being selected. pinakion play two key functions kleros design. first, they protect the system against the sybil attack (). jurors were simply drawn randomly, malicious party could create high number addresses drawn high number times each dispute. being drawn more times than all honest jurors, the malicious party would control the system. thorough this paper use hash referring cryptographic hash function, ethereum the one used keccak. the name reference the pinakion, the bronze plaque that each athenian citizen used id. the pinakion was used token for jury selection athens popular trials. most pinakion will distributed token distribution event; lower part will given project contributors and early stage supporters. second, pinakion provides jurors the incentive vote honestly making incoherent jurors pay part their deposit coherent ones. jury selection after candidates have self-selected specific courts and deposited their tokens, the final selection jurors done randomly. the probability drawn juror proportional the amount deposited tokens. theoretically, candidate may drawn more than once for specific dispute (but practice unlikely). the amount times user drawn for dispute (called its weight) determines the number votes will get the dispute and the amount tokens will win lose during the token redistribution. imagine that token owners signed for the dispute and deposited total with the following distribution: token owner activated start end weight figure example tokens deposited and drawn jury members. for dispute that requires votes, tokens are drawn out the that were deposited. the drawn tokens (as represented figure are number and token owners and are drawn with weight token owner drawn with weight deposited pinakions (except those paid incoherent jurors) can taken back after the court reaches final decision. random number generation order draw jurors, need process draw random numbers resistant manipulation. using protocol for creating random number between two parties does not work. attacker could create disputes between himself, select himself juror multiple times and select another victim juror. would then coordinate his own votes way that they would considered coherent but not those the victim order steal tokens from the victim when pinakion are redistributed (see the section incentive system). see the section incentive system. random numbers are generated with sequential proof work using scheme similar bunz al. adapted also work for proof-of-stake blockchains initialization: start with seed=blockhash and let all parties input value localrandom change the seed such that seed=hash(seed,localrandom). this allows any party change the seed. want the seed not chosen any one party. this way every party can change the seed, but not choose it, because choosing particular seedattack would require the attacker determine localrandom such that hash(seed,localrandom)=seedattack which difficult due the preimage resistance cryptographic hash functions. computing the master random value: every party who has stake the random number runs sequential proof work the seed. starting with seed, they compute hn+ hash(hn where the difficulty parameter. computing takes time and assures that certain amount time passed between someone gets the knowledge the seed and that gets the result. the difficulty fixed such that hardware can compute during the time the initialization phase. because need the result the previous step before starting the next one, this process can't parallelized. this means that party will able obtain the results significantly faster than the others. getting the results the blockchain: every party can post the with deposit they found. then other parties can disprove results which are wrong using interactive verification (). consists dichotomic search the results the attacker. attacker submits false honest party can ask him his hd/ value. gives the wrong value, there error the attacker values between and hd/ gives the right value, there error between hd/ and either way, the search space divided two. the honest party continues this process reduced space (where the error is) until two values are left. then the honest party can exhibit such that hx+ hash(hx the attacker answer which invalidates his answer. parties whose answer invalidated lose their deposit. part burnt and the other part given the party that invalidated them. note that the number interactions required invalidate false result only o(log(d)). getting all random values: after the honest parties have invalidated the results, there only the correct result left. from this master random value derive all the random values such that hash(hd n). the output this process random number long there least one honest party. computing the sequential proof work and the interactive verification takes time. but for most disputes waiting few hours from the moment the dispute starts and the moment jurors are drawn will not problem. however, for some subcourts with particularly low session time (for example subcourt solving disputes web blockchain oracle) this random number generation method could too slow. these subcourts could use less secured but faster random number generator based threshold signatures (). more details this process will available future work. votes after assessing the evidence, jurors commit their vote one the options. they submit hash(vote, salt, address). the salt random value generated locally order add entropy proof-of-work blockchains, the blockhash remains impossible exactly predict, can remove this step and only use the blockhash seed. but ethereum has planed switch proof-of-stake. prevent the use rainbow tables. the address the ethereum address the juror, required order make the commitment each juror different, thus preventing juror from copying the commitment another. when the vote over, they reveal {vote, salt}, and kleros smart contract verifies that matches the commitment. jurors failing reveal their vote are penalized (see incentive system section). after juror has made commitment, his vote cannot changed. but still not visible other jurors the parties. this prevents the vote juror from influencing the vote other jurors. jurors can still declare that they voted certain way, but they cannot provide other jurors reason think that what they say true. this important feature for the schelling point arise. jurors knew the votes others jurors, they could vote like them instead voting for the schelling point. let any party able show the commitment juror kleros before the vote closed steal the pinakions this juror and invalidate the vote this juror. juror wants reveal its vote another party, has two options: reveal only its vote. the party won't have any proof that effectively voted that way. the juror could lie about and the other party has way verify. reveal its vote and its commitment. the party would have the proof its vote, but the party would also able steal the pinakions this juror. this scheme prevent jurors from revealing their votes trustlessly. jurors are also required provide justification for their vote. after all jurors have voted (or after the time vote over), votes are revealed jurors. jurors that fail reveal their vote are penalized. finally, votes are aggregated and the smart contract executed. the option with the highest amount votes considered the winning one. arbitration fees order compensate jurors for their work and avoid attacker from spamming the system, creating disputes and appealing requires arbitration fees. each juror will paid fee determined the subcourt where the dispute solved. the arbitrable smart contract will determine which party will pay the arbitration fee. the rules can straightforward. for example, they may require the party creating the dispute the party appealing pay the fee. but may think more complex rules create better incentives. for example: first instance, each party will deposit amount equal the arbitration fee the smart contract. one party fails so, the smart contract will consider that the court ruled favor the party who deposited the arbitration fee (without even creating dispute the court). both parties deposit the funds, the winning party will reimbursed when the dispute over. still possible for jurors give insight about their votes. for example making smart contract with themselves committing vote certain manner and burning deposit they vote differently. discussion about these kinds behaviour will included future work. are considering methods more complex than first-pass-the-post. but the challenge deal with the asymmetry the incentive matrix they lead to. this asymmetry could affect the schelling point. for example taking the median value case values which can ordered could lead bias toward center values. appeals, both parties have deposit the arbitration fees. the appellant also has deposit extra stake proportional the appeal fees which will given the party winning the dispute. this way party makes frivolous appeals harm the opposing party, the opposing party will get compensation for the time loss, while the appeals are finally ruled legit, the stake will returned the appellant discussion about the fee structure defined arbitrable smart contracts will part future work. appeals if, after the jury has reached decision, party not satisfied (because thinks the result was unfair), can appeal and have the dispute ruled again. each new appeal instance will have twice the previous number jurors plus one. due the increased number jurors, appeal fees must paid (appeal fees new amount jurors fee per juror fee already paid). verdict appealed, jurors the appealed level are not paid (but they are still affected the dispute due token redistribution). this incentivizes jurors give explanations their rulings. when proper explanations are given, parties are less likely appeal they have more chance convinced that decision fair. due arbitration fees being paid each juror and appealing increasing the number jurors exponentially, arbitration fees rise exponentially with the number appeals. this means that, most cases, parties won't appeal, will only appeal moderate amount times. however, the possibility appealing high number times important prevent attacker from bribing the jurors (see bribe resistance section). incentive system jurors rule disputes order collect arbitration fees. they are incentivized rule honestly because, after dispute over, jurors whose vote not coherent with the group will lose some tokens which will given coherent jurors. after kleros has reached decision the dispute, tokens are unfrozen and redistributed among jurors. the redistribution mechanism inspired the schellingcoin where jurors gain lose tokens depending whether their vote was consistent with the others jurors. will assume jury member voted coherently voted for the option chosen the majority. the amount tokens lost per incoherent juror min activate weight. the parameter determines the number tokens redistributed after ruling. endogenous variable that will defined the governance mechanism consequence the internal dynamics the voting environment. the min activate parameter the minimum amount token which can activated the subcourt. the tokens are divided between the coherent parties proportionally their weight. parties are considered coherent they voted the majority you can see example token redistribution figure jurors could fail reveal their vote. disincentivize this behaviour, the penalty for not this requires post-dispute insurers for parties not having sufficient capital deposit appeal and stake deposits. the insurer would pay the deposit party exchange part the stake the dispute won. all this can smart contract enforced. see section previous work: schellingcoin mechanism token redistribution mechanisms are still under active research and may end with more sophisticated protocol future work. figure token redistribution after the vote with seven jurors. tokens are redistributed from jurors who voted incoherently jurors who voted coherently. bob lost the dispute and pays the arbitration fees. the other deposits are refunded. revealing one's vote twice large than the penalty for voting incoherently (amin activateweight). this incentivizes jurors always reveal their vote. case appeal, the tokens are redistributed each level according the result the final appeal. one level one voted coherently, the tokens are given the winning party. when there attack, parties are incentivized vote what they think, other parties think, other parties think. honest and fair. kleros, the schelling point honesty and fairness. one could argue that those decisions being subjective (for example, compared schelling coin mechanism for prediction market), schelling point would arise. (), the informal experiments run thomas schelling showed that most situations schelling point plebiscited all parties does not exist. but schelling found that some options were more likely chosen than others. therefore even particularly obvious option does not exist, some options will perceived more likely chosen others parties and will effectively chosen. cannot expect jurors right the time. arbitration procedure could ever achieve that. some times, honest jurors will lose coins. but long overall they lose less value than what they win arbitration fees and coins for other incoherent parties, the system will work attack resistance buying half the tokens party (or group parties colluding) were buy half the tokens, would control the results the general court and therefore could ultimately decide all results. however, having party buying more than half the tokens highly unlikely these are fairly distributed. first, half the tokens should available for sale, which not guaranteed. moreover, the fact that one party could afford all the tokens current market price does not mean would able buy half them. tokens, contrary most physical assets, have increasing marginal costs. they will dynamically priced exchanges, should one party buy significant part, the price would due market depth making increasingly more costly acquire tokens. bribe resistance appeals are important mechanism against bribes. bribing small jury relatively easy. but since the victim always has the right appeal, the attacker would have keep bribing larger and larger juries steeply rising cost. the attacker would have prepared spend enormous amount money bribe jurors all the way the general court and would very likely lose the end. control the verdict the whole court, the attacker would need bribe token holders holding more than the pinakions total. this attack doesn't work the honest majority model (where more than half the tokens are controlled honest parties who won't accept the bribe). but even with dishonest majority (majority token holder only searching optimize their profit), the system can withstand bribing attacks under certain conditions. successful bribe the general court would dramatically decrease the value the reputation tokens (who wants his contracts arbitrated dishonest court?). therefore, attacker should able provide more value than the expected loss from the price drop order for his bribing offer successful (which almost all cases would exceed the value stake the dispute). practice, party appealing every decision all the way the general court would extremely unlikely. however, the possibility needs exist for incentives correctly balanced. more elaborate attack (the epsilon attack) could done, promising pay the bribe only the attack unsuccessful. this attack requires high budget but has zero cost successful. however there game theoretic response against this attack where jurors use mixed strategy (jurors only accept the bribe with defined probability which increases their expected reward compared accepting the bribe). more details about this attack and the response can found (). court arborescence when registering jurors, users start the general court and follow path specific subcourt according their skills. each subcourt has some specific features regarding policies, session time, cost, number drawn jury members and tokens activated. each token holder can register most one subcourt each court they have token activated. figure show example legal registrations. asking jurors choose between subcourts incentivizes them choose the subcourts they are the most skilled at. they were able choose every subcourt, some would choose all them get the maximum amount arbitration fees from their tokens. governance mechanism kleros protocol gains users and use cases, will necessary create new subcourts, make changes subcourt policies and parameters and update the platform new versions with additional features. such decisions will made token holders using liquid voting mechanism (). token holders will have amount votes equal the amount pinakions they hold. they will have the option voting directly delegating their vote. when user fails vote, his voting power automatically transferred his delegate. you can see illustration the liquid voting mechanism figure example paths chosen jurors the subcourt system. clement can drawn juror the general court and the insurance subcourt. chief can drawn juror the general court, the e-commerce subcourt and the freelancing subcourt. figure vote delegation can also subcourt specific. users could choose delegate their vote some subcourts but not others. note that delegates not need humans. they can smart contract implementing arbitrarily complex voting rules (for example voting updating fees based market data). figure illustration liquid vote the governance mechanism can used to: set policies: policies are guidelines about how arbitrate disputes. they are the equivalent the laws traditional justice systems. they determine which party should win dispute when particular conditions are met. they can specific particular subcourt. modify the subcourts: (a) add subcourts. (b) remove subcourts. (c) modify subcourt hierarchy. modify parameters subcourts: (a) arbitration fees. (b) time each court session. (c) minimum amount tokens activated. change one the smart contracts kleros rely on. this allows arbitrary changes. this can used for improvements emergency appears that some elements kleros are not working properly applications kleros general, multipurpose system which can used large number situations. present some examples possible use cases: escrow pay for off-chain good service, the funds can put smart contract. after receiving the good service, the buyer can unlock the funds the seller. case dispute, kleros can used have the smart contract either reimburse the buyer pay the seller. escrows can more complex. for example for rental agreement, the renter can required pay deposit. case the property damaged and the renter doesn't agree compensation, dispute can created the owner claim part the security deposit. micro tasking: decentralized platforms could pay for microtasks (in the manner the amazon mechanical turk()). taskers would put security deposit and submit answers microtasks. the tasks would replicated. task gets different answers, taskers could admit their mistake, this would transfer part security deposit the taskers who performed the task correctly. case multiple taskers stay their position, dispute resolution process would ensue and the losing taskers would have part their security deposit transferred the winning ones. insurance the insuree will pay fee the insurer get compensation case particular event would happen. the insurer will have put some security deposit which could common multiple insurees (respecting risk management rules). when insured event happens, the insurer can validate and compensate the insuree. the insurer does not validate the event, dispute resolution process would ensue. the insuree wins the dispute resolution process, funds from the security deposit the insurer would transferred the insuree. case the security deposit linked multiple insurees claiming more than the deposit, dispute resolution process would also needed determine how those funds should split between insurees. oracle decentralized data feed used smart contracts was one the early envisioned use cases ethereum(). party (which can smart contract) asks question. everyone can give deposit and submit answer. everyone gives the same answer, returned audits and reviews will made before the code deployed. but can never guarantee that there isn't bug (either the code incentives) somewhere. having this failsafe provides extra security. the oracle. there are multiple answers, dispute resolution procedure ensues. the oracle returns the answer given the dispute resolution process and parties who put wrong answers lose their deposits which are given honest submitters. curated lists: curated lists can whitelists blacklists. for example, whitelist can list smart contracts having undertaken proper audit procedures. blacklist can list the ens (ethereum name service()) names registered parties having nothing with that name (for example, malicious party could register "kleros-token-sale.eth", scam people into sending funds that address). parties could submit items the list putting security deposit. one contests that the item belongs the list for sufficient amount time, the name added and the deposit refunded. some parties contest putting security deposit, dispute resolution process ensues. the item considered belonging the list, added and the submitter gets the deposits the contesting parties. otherwise, the deposit the submitter given the contesting parties. social networks: preventing spam, scams and other abuses challenge for decentralized social networks. parties can report violations the network policies and put security deposit. the violation contested, dispute resolution process ensues. ruled that violation happened, the reporter loses his security deposit the accused party. the violation not contested confirmed kleros various effects can implemented: the content can removed, the content poster can lose sign-up deposit and the reach his other posts can lowered. conclusion have introduced kleros, decentralized court system allowing arbitration smart contracts crowdsourced jurors relying economics incentives. you can see summary how kleros works figure the rise the digital economy created labor, capital and product markets that operate real time across national boundaries. the economy requires fast, inexpensive, decentralized and reliable dispute resolution mechanism. kleros uses game theory and blockchain multipurpose arbitration protocol capable supporting large number applications ecommerce, finance, insurance, travel, international trade, consumer protection, intellectual property and academia among many others. cryptocurrencies are giving many the possibility having their first bank account send and receive money secure way. cryptocurrencies are helping millions achieve financial inclusion. kleros will the same access justice enabling arbitration large number contracts that are too costly pursue court. just bitcoin brought "banking for the unbanked", kleros has the potential bring "justice for the unjusticed". references amazon mechanical turk. https://www.mturk.com/. ethereum name service. https://ens.domains/. gnosis. https://gnosis.pm/. blum, coin flipping telephone protocol for solving impossible problems. sigact news (jan. figure example dispute summing how kleros work. boneh, d., lynn, b., and shacham, short signatures from the weil pairing. journal cryptology (sep brassard, g., chaum, d., and crepeau, minimum disclosure proofs knowledge. comput. syst. sci. (oct. buterin, ethereum, next-generation smart contract and decentralized application platform. https://github.com/ethereum/wiki/wiki/white-paper, buterin, schellingcoin: minimal-trust universal data feed. https://blog.ethereum. org////schellingcoin-a-minimal-trust-universal-data-feed/, buterin, the epsilon attack. p-epsilon-attack/, https://blog.ethereum.org//// buterin, introduction cryptoeconomics. https://edcon.io/ppt/one/vitalik% buterin_introduction%to%cryptoeconomics_edcon.pdf, bunzy, b., goldfeder, s., and bonneauy, proofs-of-delay and randomness beacons ethereum. douceur, the sybil attack. revised papers from the first international workshop peer-to-peer systems (london, uk, uk, iptps springer-verlag, pp. ford, delegative democracy. http://www.brynosaurus.com/deleg/deleg.pdf, friedman, positive account property rights. social philosophy policy (). laudan, truth, error, and criminal law: essay legal epistemology. cambridge studies philosophy and law. cambridge university press, peterson, j., and krug, augur: decentralized, open-source platform for prediction markets. http://bravenewcoin.com/assets/whitepapers/ augur-a-decentralized-open-source-platform-for-prediction-markets.pdf/, reitwiessner, from smart contracts courts with not smart judges. https://blog. ethereum.org////smart-contracts-courts-not-smart-judges/, schelling, the strategy conflict. oxford university press, sztorc, truthcoin, peer-to-peer oracle system and prediction marketplace. http://www. truthcoin.info/papers/truthcoin-whitepaper.pdf/,