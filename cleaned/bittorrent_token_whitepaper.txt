bittorrent token whitepaper google docs https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs bittorrent token abstract tron foundation and bittorrent foundation are introducing new cryptographic token called btt along with extended version the bittorrent protocol order create token-based economy around the usage networking, bandwidth and storage hundreds millions computers the internet. our initial entry point introduce token-based optimizations the existing bittorrent protocol providing way for the value sharing bandwidth and storage captured network participants beyond the point which the current protocol longer values it. our longer-term vision broaden the usage bittorrent far beyond current use cases provide distributed infrastructure platform third party app developers and enable consumers continuously distill small amounts value from their devices allowing others make use their spare resources. the first step our project will create market-driven mechanism enable consumers collaborate optimize and prolong the lifespan existing bittorrent swarms. using additional extensions bittorrent will subsequently open opportunities for distributed app developers launch new apps making use infrastructure provided existing bittorrent clients which already constitute distributed networked storage platform unprecedented scale. these new apps will able offer incentives (btt) users return for access cost effective platform resources comprised incredibly broad collection already-deployed network endpoints. the position these endpoints the very edge the internet will have the additional appeal developers being extremely difficult for net-neutrality adversaries interdict. finally, the ability consumers capture the value their contributed computing resources within cryptographic token will give rise completely new transactional mechanism for internet consumers that distinct from either their attention their credit card. with over million monthly active users and millions additional new installs every week, bittorrent already manages one the largest distributed computing ecosystems the internet. integrating btt tokens and transaction processing will both address existing limitations bittorrent and open whole new borderless economy exchanging value for compute resources global scale. this will realization and extension the vision expressed satoshi nakamoto the original bitcoin white paper its tenth anniversary. the tron foundation and bittorrent foundation are legal entities incorporated the republic singapore. bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs bittorrent token abstract background what bittorrent? bittorrent the protocol bittorrent the ecosystem bittorrent the company bittorrent and distributed apps project origins high level project description btt cryptographic tokens and blockchain bittorrent speedtm incentives boost swarm lifespan agreement initial balance initial bidding round announcing trackers reserve prices autobid bidding user interface bidding revisions and frequency match making generalized btt services btt incentives implementation considerations blockchain user controls bittorrent wallets btt token issuance conclusion faq why not rewrite the bittorrent protocol? why did bittorrent not include incentives when was invented? how can this solution help get around net neutrality adversaries? how will you protect end users computers from malicious attacks? can users opt out? what they don't want provide their resources earn tokens? bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs background what bittorrent? bittorrent pioneering distributed communication protocol invented bram cohen peer-to-peer protocol which uses economic incentives facilitate the delivery large and highly demanded files around the internet, eliminating the need for trusted central server. open protocol that has been independently implemented dozens times and included software that has been downloaded and installed billions times the past years. today the protocol regular use well over one hundred million internet-connected computing devices each month. the protocol continuously updated through open process bittorrent enhancement proposals (beps) moderated the developer website. bittorrent the protocol the bittorrent protocol enables client software endpoints ("clients") collaborate with each other enable incredibly efficient and reliable distribution large files multiple clients. does this attempting make simultaneous efficient use every client's upload and download bandwidth balance peer-to-peer content delivery across `swarm' cooperating clients and reduce the reliance any single weak point (like the connection server). the key understanding how the protocol works understand how the underlying economic incentives are implemented. the protocol based system where files are cut into pieces and pieces are traded between multiple devices which are all trying get the file the same time. cryptographic hashes ("infohashes") the pieces are used verify that the pieces being shared are indeed the pieces requested. the system essentially implements barter economy where individual clients collaborate based trading pieces file they each are trying download, with delivery bandwidth used the deciding factor for whom keep bartering with. various mechanisms reward the most productive barter exchanges with further barter and punish the least productive ones disconnecting even banning the counterparty. once client has completed downloading file, continues upload pieces despite longer requiring any upload return, considered "seed." the default most clients "seed" other downloaders, but this activity entirely altruistic and there economic penalty for end users switching off their bittorrent client and stopping seeding. http://www.bittorrent.org/ bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs bittorrent the ecosystem the bittorrent protocol has been implemented many times and there healthy competition between companies maintaining different implementations well several very popular volunteer-maintained versions. well client software that implements the bittorrent protocol, there are infrastructure providers who independently offer additional useful services (e.g. trackers which introduce peers, torrent sites which index metadata about files being shared and provide access their associated torrents). this demonstrates how array cooperating distributed elements (clients) and semi-distributed elements (trackers, torrent sites) have been successful maintaining long-lived and highly robust ecosystem even the presence highly motivated attackers. relied many lessons learned the bittorrent ecosystem put together this project plan. bittorrent the company bittorrent protocol the world's largest decentralized protocol with over billion users, far surpassing the second-ranked decentralized application bitcoin (as october bitcoin has total number million addresses). bittorrent inc. invented and maintains the bittorrent protocol. while there are many implementations bittorrent software, bittorrent and utorrent (often called "utorrent") remain two the most popular. bittorrent protocol reached strategic partnership with tron blockchain protocol. the collaboration the two makes tron protocol the world's largest decentralized ecosystem; also makes bittorrent protocol the biggest decentralized application the world. the active usage software managed bittorrent inc. incredibly widespread around the world. software clients maintained bittorrent inc. are use today approximately million monthly active users almost every country the world with around one million new software installs every day. over countries have more than users, and countries have more than million users. countries have more than their internet users using our software (comprising almost million users). furthermore, while there are other providers bittorrent software, bittorrent inc. clients currently account for estimated current bittorrent protocol activity the public internet. bittorrent and distributed apps bittorrent foundation has been exploring distributed applications for over decade. have investigated adaptations the bittorrent protocol well entirely novel protocols with the aim providing services ranging from distributed messaging, bittorrent-based cdn, peer-to-peer live video streaming, file synchronization and distributed websites. the incredibly exciting emergence blockchain technologies has brought paradigm shift what achievable, enabling collaboration between untrusted parties persisted over much longer periods https://www.blockchain.com/charts/mywalletnusers https://en.wikipedia.org/wiki/comparison_of_bittorrent_clients bittorrent, inc. internal market share research bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs than practical the bittorrent ecosystem. but while many new decentralized protocol proposals are suggesting ambitious technical paths forward, almost all are silent how address the enormous marketing challenge building critical mass which crucial technical necessity for all distributed systems. even the few projects which are introducing cryptographic token existing user bases have experience the subttle art designing protocol which effectively balances many economic interests scale. seek combine the critical mass the existing bittorrent ecosystem, protocol engineering expertise from bittorrent foundation and new capabilities introduced blockchains pioneered platforms like tron. integrating blockchain technologies provide reliable and scalable mechanism store and exchange value, can enable new decentralized applications bootstrapped top our existing ecosystem. believe that expanding the bittorrent ecosystem combination with blockchain technologies will enable developers decentralized apps build top it, and help bittorrent address universe exciting new opportunities. believe that bittorrent far the closest being able introduce the infrastructure support the coming decentralized web and the economy support it. project origins this project evolved the light three basic insights: there huge and entirely unrealized opportunity for the application decentralized bittorrent technology many new use cases, and the market more ready for now than has ever been before. operation the bittorrent protocol today suffers from structural inefficiencies which limit the lifespan bittorrent swarms and limit its overall effectiveness protocol. most consumers (including bittorrent users) are reluctant pay with fiat currency for things online. the corollary that people pay with their 'attention' which leads directly web dominated privacy-destroying information monopolies. are setting out improve and extend bittorrent address these insights with project that marries the best bittorrent and blockchain technologies. will transform bittorrent create infrastructure platform for building elements the decentralized web enabling app developers directly reward consumers who provide the underlying resources, and enabling consumers use this 'found value' transact with publishers and app developers directly without involving fiat currency. accelerate introduction, will start addressing inefficiencies within how bittorrent works today. this will stimulate strong pull for the foundational technology and broad familiarity among consumers with the existence the token and the user experience and economics around its use. parallel will work with third party developers develop and promote apis and marketplace for distributed infrastructure services based broadly networking and storage primitives which are staples within the existing bittorrent technology. bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs will also work with third party publishers and app developers beyond the existing bittorrent ecosystem services which consumers may spend their tokens on. the fullness time, hundreds millions end users around the world will equipped with robust new way distill small amounts value out their own technical resources and have many opportunities spend that value services their choosing. high level project description will extend the bittorrent protocol and introduce new tron trc- cryptographic token called bittorrent (btt) order implement distributed infrastructure services economy. within this economy, end users may offer infrastructure services small increments return for tokens, with blockchain solution for store value and medium exchange that will scale meet the expected demand. speed adoption will launch feature called bittorrent speed optimize the operation bittorrent within the existing ecosystem. the introduction this feature will solve problems within bittorrent well prove the effectiveness using blockchain-based rewards for provision infrastructure services small increments across very large installed base. will address challenges around rolling out distributed ledger-based transaction processing with low latency very large scale. finally, will generalize the services offered bittorrent clients and make them available external application developers platform top which future decentralized apps can launched. the following subsections will first outline the bittorrent (btt) cryptographic tokens around which plan build new economy. second present the blockchain technology top which transaction processing will operate. third outline the proposed approach optimize the existing bittorrent protocol called bittorrent speed. fourth, will describe how bittorrent speed will operationalized with bittorrent (btt) tokens. fifth, will discuss the generalization bittorrent (btt) services and describe some the first decentralized applications being built it. btt cryptographic tokens and blockchain bittorrent introducing tron trc- cryptographic token called bittorrent (btt) act general purpose mechanism for transacting computing resources shared between bittorrent clients and any other participating service requesters and service providers. btt will the unit which denominates transactions for the provision different services the btt-enabled bittorrent ecosystem. btt will made available divisible token allowing for very fine-grained pricing for evolving set services within liquid market service requesters and service providers. bittorrent inc. will deploy "on-chain/off-chain exchange" which exists facilitate the transfer tokens between high-performance private ledger and the public tron blockchain. bittorrent speedtm incentives boost swarm lifespan observed previously, bittorrent swarms suffer from structural inefficiencies which lead frequent premature deterioration even the death swarms. due bandwidth asymmetry, files frequently bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs complete downloading long before peer has been able upload equivalent amount bytes. once the downloading peer has the entire file there insufficient economic incentive remaining continue make the file available other downloaders ("seeding"). result people leaving swarms without contributing much bandwidth they have consumed, many bittorrent swarms not last long they otherwise could. some cases possible for swarm allow the completion download even the absence seed. this possibility computed and displayed some clients "availability" metric, typically expressed the number distributed copies available. there least one active non-seed peer holding each the pieces, then the file said "available." the bittorrent protocol includes design decision "rarest first" which dictates that when client faces choice which its remaining undownloaded pieces request, should prefer request the pieces knows are held the fewest peers the set which has connected. this mechanism intended flatten the distribution pieces decrease the likelihood swarm losing key peer peers who are the sole providers required piece. these two considerations mean that seeds are not strictly necessary complete download. but research has shown that the majority (approximately seedless cases, this sort collective reconstruction not feasible and seeders have significant impact file availability. figure source: unraveling bittorrent's file unavailability: measurements and analysis clear, bittorrent overall functions quite well already, and nothing propose this optimization will reverse the way the current protocol works. nor are suggesting optimization that expected increase the aggregate sharing behavior new participants who previously were not adding torrents. the https://wiki.vuze.com/w/availability unraveling bittorrent's file unavailability: measurements and analysis https://ieeexplore.ieee.org/document/ bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs addition have mind simply overlay top the current protocol which will allow existing participants bittorrent swarms allocate resources each other more efficiently. this end, are developing new bittorrent feature called bittorrent speed, designed enable peers offer each other cryptographic-token-based incentives continue seed files after the initial download has completed. the existing bittorrent barter market will continue intact, but participating bittorrent clients will implement new set extensions the bittorrent protocol allowing end users engage market where both btt tokens and upload speed are used market inputs. bittorrent speed feature that will integrated into future bittorrent and mtorrent clients and will enable users advertise their bids within swarm and trade btt exchange for continued prioritized access seeds. the intended result that peers will choose seed for longer, leading better swarm longevity and faster download speeds for all swarm participants. our approach implementing bittorrent speed starts with how bittorrent currently allocates resources. bittorrent uses sharing algorithm called "tit-for-tat" which implemented using mechanism called "choking". bittorrent clients classify peers either choked unchoked. only unchoked peers are eligible receive data from the client. the choke state all peers re-calculated periodically (typically every seconds). example choking algorithm might sort peers how much data the client has received from each one since the choking algorithm was last executed. the first peers are then unchoked and the rest choked, where the number unchoke slots, fixed value chosen each client implementation. seeds not receive any data from peers they use the amount data sent each peer instead. this means seeds optimize for maximum throughput with regard for fairness, anything else for that matter. there are also number unchoke slots, typically one, which are reserved for separate choking algorithm called "optimistic unchoking". optimistic unchoking selects peers unchoke random round-robin fashion. this allows new peers opportunity receive some data that they can start reciprocating with other peers. choking the primary means allocating resources within bittorrent swarm. this mechanism that will adapt allow for clients offer rewards others for continued seeding content they want access to. allowing clients bid btt for preferential treatment the choking algorithm gives them powerful tool offer incentives seeds remain swarm. operational description bittorrent speed peers will act both service requesters and service providers. peer offering btt exchange for other users' local resources service requester and peer offering such services exchange for btt service provider. bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs service discovery the bittorrent speed application lifecycle begins when peers discover each other via existing bittorrent protocol mechanisms: they announce tracker using infohash find peers for given hash the dht. this way, infohashes naturally segment the space all peers into swarms users with common interest exchanging pieces set files. potential service providers swarm are either seeds (peers having complete locally downloaded copy torrent) peers with partial copies. these service providers advertise what pieces they have available via the existing protocol have message. agreement initial balance prior making the first bid their client's lifetime, service requester must establish btt balance. does this placing some btt into payment channel between the service requester and service provider. initial bidding round the initial bid sent via new bid bittorrent protocol extension message, sent each peer having some pieces required the service requester. the message contains the number btt the service requester willing bid per piece. announcing trackers extension the bittorrent tracker protocol, the bidannounce key, allows clients include their current bid when they announce themselves trackers. the extension adds two new request parameters which allow clients request peers with the highest bids. due the long intervals between announces minutes more), clients must not trust bids returned trackers. peer's bid turns out radically lower than what the tracker claimed then clients should disconnect that peer. second tracker protocol extension, bidscrape, allows service providers retrieve lists infohashes and recent bids for service against those infohashes. this allows service providers find torrents need supplemental bandwidth very efficient and decentralized way. for detailed description bittorrent protocol operations see https://en.wikipedia.org/wiki/bittorrent bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs reserve prices each torrent client seeding has reserve price associated with it. plan implement user-configurable mechanism with defaults designed enable rewards sought seeders grow over time. the default reserve price starts zero when the torrent completed and increases function the time since the torrent was last known possessed peer. possession another peer can proven peer submitting proof possession selected chunk within the torrent. when peer connection opened the client sends reserve price message containing the reserve price and the index chunk whose hash may sent prove another seed possesses the torrent. the reserve price message also sent all connections when the reserve price proof chunk changes. the proof possession may sent the client source proof message which contains the piece index, chunk index, and the hash the chunk. when valid proof received the torrent's reserve price reset zero. the chunk used the challenge prove possession piece should one which the client has not uploaded recently. the client maintains bitmap for each torrent where each bit represents one chunk. when the client uploads chunk its corresponding bit set one. when all bits for torrent become one they are cleared zero. the client selects which chunk require taking the output pseudo-random number generator (prng) seeded with secret value xored with the torrent's infohash. the selected chunk's bit set one then the prng invoked again until the selected chunk's bit zero. autobid for the initial release clients will use simplified auto-bidding mechanism. this version, the client simply bids fraction the remaining btt balance its wallet. the bid calculated such: bid (spending rate) remaining balance btt (remaining download bytes this formula implies that the download progresses, the bid can change. for the initial release, the client will not re-bid until the bid changes more than from the previous bid, and the spending rate parameter that can vary from depending how aggressive the client should bidding) will defined the future, this simple algorithm will refined. for example, based existing bid message traffic and current transfers the client can estimate market rate for unchoke slots. the client also has picture piece rarity, through normal bittorrent mechanics. clients may choose automatically bid limited amounts, seems likely they will able send rare pieces more peers who are bidding for slots higher rate. this incentive-based behavior more closely models network bandwidth topology than classic tit-for-tat. bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs bidding user interface bidding will take place default automated fashion. users' clients will earn and bid and from their token balance their behalf. may expose user interface controls enable users turn off the feature, turn off for certain torrents, adjust the spending rate parameter, set reserve prices, exercise even more fine-grained control over the bidding process. bidding revisions and frequency the client may receive data for less than its maximum bid (and very frequently for free, currently the case bittorrent), the bid computed dividing the remaining total spend the remaining data will creep upwards over time. the client can implement any heuristic likes determine when send bid messages with new bid value, but should not send new bids more than once minute. for example, the client could send new bids when its bid value changes more than percent. the user changes the total btt amount then course the client should send new bids immediately. match making peer participating the traditional bittorrent protocol makes decisions about which other peers send data ("unchoke") periodic basis, largely the basis how quickly receiving data from each. extend this unchoke mechanism that service provider will include both bid data and peer upload rate its decisions about which peer unchoke. mixed swarms with btt-enabled bittorrent clients and legacy bittorrent clients, service requesters will offer btt seeders but download speeds will saturated without regard for whether given seed was offered btt not. this will retain bittorrent's competitive bandwidth market where seed offering fast speeds will continue effective regardless another one has set reserve price btt return for seeding. the optimistic unchoke slot should not subject the same auction format the regular unchoke slots. caution must exercised when dealing with optimistic unchoking due its importance allowing new peers bootstrap into the swarm. the client using round-robin algorithm for optimistic unchoking, should only apply auction break ties between peers which have gone the same amount time since being choked. practice this means auctioning the optimistic unchoke slot will typically only happen between bidders who have never been unchoked. when comes time for the client run its choking algorithm described above, first compiles list eligible bidders. bidder eligible equal-to-or-greater-than the torrent's reserve price, any defined. the integration auction into choking will vary depending how the client's choking algorithm implemented. the example algorithm described above could modified first sort peers highest eligible bid, then most data received. when eligible bidder unchoked, the service provider first sends new protocol extension message bid-response the bidder containing the rate btt/byte the bidder expected pay and the details the payment channel which the btt must sent. the indicated rate must less-than-or-equal-to the rate received from the bidder. this message followed normal unchoke message. winning bidder was already unchoked and the required payment rate has changed, the bidder first choked and all requests rejected before the bid-response and unchoke messages bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs are sent. clients may implement any auction format they please, but variant the vickrey-clarke-groves auction expected produce optimum results. see figure for outline mechanics, which turns out multi-unit uniform price auction. each service requester bids only one unchoke slot per service provider. clients would therefore charge each unchoked bidder the rate the highest losing bid, the reserve price the requested torrent, whichever higher. there only single bidder charged the reserve price. this means that there always base level incentive for bidders ask for service the absence any other bids they will get the service for the reserve price regardless what they bid. figure transaction processing once service requester receives unchoke and bid-response messages, sends contract the private ledger for the amount single piece btt/byte rate. define the client the party sending btt, and the seeder the party receiving it. client creates public key (k) and requests public key from the seeder (k). client creates and signs but does not send payment channel transaction (t) that sets payment btt/byte rate times the number bytes needed, output requiring both the seeder's private key and client key, bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs using op_checkmultisig. client creates refund transaction (t) that connected the output which sends all the money back the client. has time lock set for some time the future, several times longer the the expected download time, plus few hours. the client doesn't sign it, and provides the unsigned transaction the seeder. convention, the output script checkmultisig" the seeder signs using its private key associated with and returns the signature the client. note that has not seen this point, just the hash (which the unsigned t). the client verifies the seeder's signature correct and aborts not. the client signs and passes the signature the seeder, which now sends the transaction the payment channel (either party can this they both have connectivity). this locks the btt. the client then creates new transaction, which connects like the refund transaction does and has two outputs. one goes and the other goes starts out with all value allocated the first output (k), ie, does the same thing the refund transaction but not time locked. the client signs and provides the transaction and signature the seeder. the seeder verifies the output itself the expected size and verifies the client's provided signature correct. when the client wishes pay the seeder, adjusts its copy allocate more value the seeder output and less its own. then re-signs the new and sends the signature the seeder. does not have send the whole transaction, just the signature and the amount increment sufficient. the seeder adjusts its copy match the new amounts, verifies the signature and continues. this continues until the transfer ends, the timeout from step getting close expiry. the seeder then signs the last transaction saw and sends the payment channel, allocating the final amount itself. the refund transaction needed handle the case where the seeder disappears halts any point, leaving the allocated value limbo. this happens then once the time lock has expired the client can send the refund transaction the payment channel and get back all the btt. the lock time and sequence numbers avoid attack which the seeder provides pieces, and then the client double-spends the output back themselves using the first version tx, thus preventing the seeder from claiming the btt. the user does try this, the won't included right away, giving the seeder window time which can observe the from the payment channel, and then send the last version saw, overriding the client's attempted double-spend. normal, when the service requester receives unchoke message, the service provider will begin send pieces. for some reason the transfer does not complete after timeout, the service requester choked and receives further data. repeated failures transfer btt service requester can result the service provider banning the service requester. banned service requester peers are disconnected and any attempt reconnect the service requester rejected for some period time. similarly, failure verify data from the service provider can result the service provider being banned. each party progressively contributes bandwidth (pieces) btt, with signed transaction produced for each step the process. the maximum breach exposure the service provider any given time therefore one piece worth bandwidth, and since service requesters pay only verified delivery, they have zero breach exposure. bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs generalized btt services optimizing the existing bittorrent protocol obvious first step the introduction cryptographic token but barely scratches the surface what rapidly becoming possible. the precedent being set allowing users store value from sharing small amounts infrastructure order spend later. are setting ourselves path dramatically extend both the earning opportunities and the spending opportunities for users btt-enabled bittorrent clients. address earning opportunities are developing range generalized btt services and preparing open the platform party developers who could make use those services provided return for paying btt. result extensive discussions with partners interested our platform have concluded that there will three btt services offered first: decentralized content delivery service enable service requesters advertise bids and pay btt for bandwidth receive particular piece content. this service will well suited for mass distribution content, especially the presence censors other types attackers. service providers will incentivized make available content which they can serve many people possible, thus ensuring robust performance even with very large numbers service requesters. decentralized storage service enable service requesters pay for storage over time. service providers will agree store some amount data and provide proofs-of-storage the service requester on-demand. service requesters will also able download the stored data from the service provider for pre-arranged fee. service providers will seek out content which offers the highest payment rate over time. this service will useful for remote backup and sharing private data among small groups. decentralized proxying service enable service requesters pay client for retrieval content url. this will useful highly mobile applications those which seek evade ip-level network controls. the protocol will also designed allow content requested chunks. this will, for example, allow clients with intermittent connectivity, such mobile users relying wifi, reliably retrieve web resources without needing maintain open connection long enough receive the complete contents. more btt services can implemented and introduced into the network service providers demand emerges from new btt applications. bittorrent foundation will provide forum for discussion and standardization new btt services similar what provides for the bittorrent protocol. characterized figure the various enhancements the bittorrent protocol well the btt transaction processing approach outlined will formally documented. these components will serve building blocks for distributed applications. bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs figure the bittorrent protocol extensions will submitted for comments the bittorrent community bep process informal but open standards-setting process and facilitated bittorrent foundation that has guided protocol enhancements for over decade. following community feedback will develop and test our implementation these extensions via engineering and release management practices which are well established bittorrent. furthermore, our normal practice with highly important updates will subsequently release these extensions open source library and establish support and incentives for integration into third-party bittorrent other clients order broaden the pool clients that can support btt applications much possible. btt incentives the continued evolution the bittorrent ecosystem this type productive direction will require coordination and incentives provided broad range existing and future participants. other bittorrent client implementers, third-party app developers and other online publishers will all eligible for system btt incentive awards. the bittorrent ecosystem has proven over many years that millions people will enthusiastically share their resources they can cooperate safely and securely bound the rules protocol they trust. introducing mechanism for value storage and exchange aim greatly broaden the universe possible participants either service requesters, service providers both. maximize chances for success vital that ensure that bittorrent inc. not central monopolist the btt-enabled bittorrent ecosystem, just far from monopolist the bittorrent ecosystem today. this will require coordination activities and provision incentives broad range existing and future participants. the btt project depicted figure one where the success ecosystem partners will lead increasing returns for all ecosystem participants. figure the purpose the btt incentives will to: promote the btt project current and prospective participants, they service providers, service requesters both this means finding and introducing new application developers who are interested participating service requests service provision; govern membership and participation rules among participants the btt ecosystem with overriding objective establishing level playing field http://www.bittorrent.org/beps/bep_.html bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs which all can participate fairly; govern the equitable and transparent distribution rewards and incentives such that promising ideas have fair chance and productive outcomes are fairly rewarded; work conjunction with volunteers bittorrent.org facilitate discussion around future related bittorrent protocol extensions. once the btt project running sustainably may consider transitioning the rules and procedures has established for administering btt incentives into lower overhead instrument such decentralized autonomous organization (dao). begin with, however, the immediate future will require more human ingenuity and flexibility which why believe that must invest heavily (both people and tokens) btt incentives. implementation considerations blockchain btt applications will supported active bittorrent users who number the tens millions each day. minimize the opportunities for fraud, btt applications will provide service small increments then wait for payment confirmed before more service provided. this will require transactions handled granular level and confirmed matter seconds, and ideally less than second. furthermore, even our most conservative estimates capacity requirements anticipate dozens transactions per second. with these needs mind clear that existing public blockchains will not able support on-chain processing and settlement any time soon. user controls plan introduce features like bittorrent speed and btt transactional support into bittorrent and mtorrent clients phased way allow iterate towards the clearest possible user education journey and thus optimize end-user participation. participation the btt transactions required both fully disclosed and optional for end users. bittorrent wallets part the rollout new bittorrent and mtorrent software that can participate the btt applications will distributing integrated cryptocurrency wallets all users. will distributing these wallets large scale mass market end users, and not necessarily cryptocurrency enthusiasts, will need pay close attention simplicity and usability. bootstrapping: the first available btt application will the bittorrent speed feature which will unproven the outset. given new service requester services will take time become prevalent any scale, may additionally pursue strategy pre-seed the market with promotional quantities btt. bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs use case diversification for btt: the introduction btt wallets the scale anticipated this project may create opportunities for new uses for the token that are wholly unrelated bittorrent technology. expect that many millions users will able accumulate small quantities btt that may not have material value until they are aggregated service providers. that say that users who may accumulate only small amount btt from providing services will look for ways spend that token that beyond their need for incentivizing seeding. due course expect evangelize this new capability and explore partnerships that can accelerate merchant acceptance this new type micropayment mechanism. this will particularly advantageous merchants who want aggregate and use tokens pay for infrastructure services support their ongoing services. expect able establish economy characterized figure where btt are introduced into the economy primarily distributed app developers, are then traded between service requesters and service providers within and beyond the bittorrent ecosystem, and may ultimately aggregate commercially significant pools some service providers who may part the bittorrent ecosystem may not. this point the cycle the btt will returned via the open market new service requesters who would like exchange them for distributed infrastructure services provided bittorrent users. bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs figure identity: bittorrent protocol has never provided any type identity service that goes beyond identifying client particular port number. that say that bittorrent essentially identifies instances software running machines rather than people. this analogous the identity framework behind cryptocurrencies. you have access the cryptographic token wallet software that stores token then generally assumed that your token. with the implementation btt expect follow very similar approach identity and expect tie btt tightly participating piece client software. beyond the possibility placing password that wallet, not currently anticipate that the btt project will directly give rise the need for any additional new layer identity management bittorrent. btt token issuance our objectives for offering are to: will create total supply ,,, btt. the total supply with divided follows: the allocation bittorrent, inc. torrent client users part client install and onboarding, the allocation existing trx holders, the initial supporters and investors, the bittorrent foundation and team, the tron foundation. users bittorrent, inc.'s torrent clients (and possibly other torrent clients which choose implement the required set protocol extensions) will able submit captcha proof work which will allow them access initial balance btt. conclusion have presented our motivation, qualifications and plans for extending bittorrent via the btt project bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs starting with new core feature designed improve the bittorrent ecosystem, new cryptographic token and practical implementation cryptographic token transaction processing scale. have outlined how are generalizing this approach enable other distributed app developers use distributed infrastructure platform composed over million consumer bittorrent clients for the provision networking and storage resources return for btt. particular have described three novel distributed apps from independent app developers that plan make use the platform and outlined the value they see it. have described the mission and operation the btt incentives program which will dedicated driving the number and success the btt distributed apps. will manage the progressive release and distribution btt ecosystem participants which are successful driving useful platform adoption. have discussed some important implementation considerations and challenges and how expect address them. and have presented plan for how tokens will issued and shared the pursuit stable and thriving economy built around the the sharing computing resources millions ecosystem participants. the potential this project compelling not just because the disruptive decentralized applications that will enable, but also because its open ecosystem approach that will welcome and reward participants every level and finally because the enormous head start the bittorrent ecosystem enjoys the building and deploying decentralized computing economy. bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs references bittorrent https://en.wikipedia.org/wiki/bittorrent_(software) bittorrent clients https://en.wikipedia.org/wiki/comparison_of_bittorrent_clients bittorrent protocol: https://en.wikipedia.org/wiki/bittorrent bittorrent company: https://en.wikipedia.org/wiki/bittorrent_(company) [*] bittorrent.org: http://www.bittorrent.org [*] bittorrent.org bep process: http://www.bittorrent.org/beps/bep_.html [*] bittorrent protocol specification: http://www.bittorrent.org/beps/bep_.html [*] bittorrent.com: http://www.bittorrent.com [*] mtorrent.com: http://www.utorrent.com [*] libutp https://github.com/bittorrent/libutp [*] newly open source bittorrent protocol aims unclog tubes https://arstechnica.com/information-technology///bittorrent-open-sources-new-protocol-i mplementation/ [*] unraveling bittorrent's file unavailability: measurements and analysis http://ieeexplore.ieee.org/document// appendices faq why not rewrite the bittorrent protocol? the maturation cryptocurrency projects like bitcoin one more proof (just like bittorrent) that distributed protocols can implement incentives that allow large numbers untrusted network participants collaborate productively. bitcoin's novelty compared bittorrent that introduces the blockchain concept enabling collaboration can endure over time, unlike bittorrent where collaborations are transient and occur wholly separate and unrelated events called 'swarms'. considered fundamental rewrite the bittorrent protocol allow collaboration persisted over time and ensure 'the right seeding behavior' was rewarded that more long-tail content (valuable content with only occasional demand) would available for longer. imagined protocol which would both download (like bittorrent) and hand out longer-term incentives (like bitcoin mining rewards). after lengthy consideration discounted this approach for several reasons: difficulty the problem implementing incentive system the protocol level requires precise thinking about objectives. found impossible articulate clearly what the long-tail seeding objectives should and how avoid gaming them there are plenty bittorrent swarms that die because literally no-one cares (e.g. some better version file becomes available) the only tractable answer seemed implement voting system let consumers judge, but that seemed call into question the desire wrap everything into the protocol. short, trying programmatically discern bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt bittorrent token whitepaper google docs between what should and should not preserved seemed like problem were poorly equipped answer without asking end users. the need strictly better than existing bittorrent (a.k.a. "soft-fork not hard-fork") any protocol rewrite would have compatible with the existing bittorrent ecosystem this immediately rules out things like penalties for not seeding consumers would just choose use clients which implemented the 'old' bittorrent protocol which did not penalize them. the parallel this issue within the existing bitcoin space the growing difficulty implementing hard forks. the bittorrent ecosystem now big that hard fork would have extremely low chance success. conviction that were over-complicating the solution the likely need for human agency the system (people voting) convinced should focus simpler extensions bittorrent as-is and design voting system that was based around existing cryptocurrency. this has the advantage allowing the market determine what should seeded while leaving bittorrent enhanced but not changed its core. why did bittorrent not include incentives when was invented? fact early research into projects that were forerunners bittorrent did try imagine how system persistent incentives might managed. they foundered largely due the difficulty finding effective solution `keep the score' while operating scale. blockchain and distributed ledger solutions using cryptographic tokens present powerful new way keep the score such that transactions can processed and ledger may managed scale even the absence perfect trust between all counterparties. how can this solution help get around net neutrality adversaries? some examples: proxying from will enable users find content that blocked isp their geography connecting via intermediary which both site and requester can connect. how will you protect end users computers from malicious attacks? the usage end-users' technical resources will strictly limited the provision technical services like networking storage within carefully bounded limits. network connections will protected utp self-adjusting bandwidth mechanism which ensures applications throttle back there any indication other apps (even other devices) using the network connection. storage will encrypted and limited user-configurable maximum. and users will able configure which applications they accept and which they not. the provision btt services limited simple infrastructure operations and way will permit untrusted third parties execute code user's device. can users opt out? what they don't want provide their resources earn tokens? yes, users will always able configure the parameters their sharing switch off entirely they choose. there should nothing mandatory about this ecosystem and users will retain the right opt out for any reason. bittorrent foundation working draft subject change https://docs.google.com/document/d/cvzkathkotuivauorlhm-zhxsbsgwsusywcydzq/edit#heading=h.jwxjjsjtt