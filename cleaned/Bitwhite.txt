decentralized application platform based side-chain technology table contents introduction overview decentralized application about sidechain about btw platform who should use btw platform developers enterprises end users design rationale turing-completeness scripting sidechain account utxo relational database non-relational database system highlights ease use development language toolkits deployment flexibility security technique specification consensus mechanism delegates vote byzantine fault tolerance sidechain and dapp sandbox and transaction account system client performance token system mediatory contract decentralized exchange existence proof iot (internet things) conclusion introduction since bitcoin was introduced and had been rapidly developing for these several years, people found that bitcoin has more potential than just kind electronic currency. especially blockchain, the underlying technology bitcoin, has the unlimited capacity even more valuable than bitcoin itself. the blockchain technology can applied the development different kinds application, which have the same characteristic that decentralization. the emerging these decentralized applications also promotes new application architecture, which based open-source platform. based this concept, propose the bitwhite (btw) system, development platform for decentralized applications. overview decentralized application decentralized application has following features: the application must completely open-sourced. must run under the control itself, which means should not tampered any centralized organization, institution individual. can revised reflect the market requests, but has recognized all users. the application data should stored distributed network that has secure, open, and redundant, order avoid data manipulation and single node failure. application users need tokens access, and application contributors can get tokens rewards. the application must apply value-proved cryptographic algorithm generate tokens. the decentralized application can make the stakeholder invest the development granting them the privilege that becomes possible self-sufficient. these kinds application also have the advantages such publicity, security, and trustless. therefore, not strange that decentralized applications will play vital role following fields: payment, data store, cloud computing, e-business, and etc., and even possible that the value created those applications will exceed the market value giant international company such visa, dropbox, amazon. about sidechain blockchain well-ordered collection data blocks generated using cryptographic algorithm. each block data contains amount network transaction information which used validate the authenticity, well generate the next block. normal user looks like public ledger which every single transaction will recorded, and application developer looks like distributed database, which features decentralization, open, self-autonomy, and harden against tampering. the blockchain presents very tight relationship with decentralized application which makes very suitable for store these applications. specific blockchain, the sidechain applies "spv (simplified payment verification) pegged" technology achieve the goal that the user's asset can transferred from one blockchain another, which means users can use their current assets utilize the new cryptocurrency system. there will need worry about the disadvantage bitcoin that hard adapt the innovation and meet the new request. what need done just create sidechain and link the main blockchain bitcoin. inheriting and reusing the powerful blockchain bitcoin, other issues such liquidity shortage and market fluctuation, often occurred when new currency introduced, can averted. furthermore, since the sidechain isolate individual system, any severe failure will only impact the sidechain itself instead the whole blockchain, thus significantly reduce the risk and cost innovations. about btw platform decentralized application platform, providing series sdk and api help developers creating decentralized applications based javascript and sidechain technology. providing whole set industry standard solutions including customized sidechain, smart contracts, application hosting, and etc., btw intends offer easy-to-use, fully functional and plug play ecosystem, which developers can rapidly iterate their javascript applications, and easily deploy them into application store built the system. these application can smoothly downloaded and executed every node and user located everywhere this ecosystem. the whole process will secured the btw sidechain consensus network. the other hand btw itself also fully opened, decentralized application, which has its own cryptocurrency known btw coin. btw coin capable interfacing with sidechain any decentralized application (dapp) through "two-way peg" mechanism that can the bridge media for the asset transition among all dapps, and achieve that purpose, the btw coin will sold the investors through ico (initial coin offering) before the deployment the system. once btw system published, will not under the control the core development team, but the stakeholders the system and the owners btw coin. who should use btw platform apart from some basic services, btw platform also provides technology and toolkit support, whose main target audiences are follow: developers developers can create and deploy dapp btw platform following the criteria application development and business activities. the business model these dapps may free fixed price, pay with value added service. all the developers themselves. enterprises the tools provided btw platform can used easily create complete blockchain, and more importantly, this blockchain can pegged into main chain btw platform even the blockchain bitcoin, thereby connected with well-developed electronic currency. very attractive feature that suitable for small and medium enterprises (smes) especially start-up companies. smes can utilize blockchain technology provide the information and data that were enclosed inside companies internet the past, and connect with the system data owned authority that they can promote the business publicity and improve the companies' image. consequently more trustiness can brought the investors and financial institutions make easy get the funds contracts. inevitable for smes public their business information. smes found difficult prevent social community know their secrets. therefore can assume that blockchain will play vital role smes everyday business activities. end users individual users can download, install and use numbers decentralized applications through btw built-in app store, which similar with application store current smart phone. btw system supports different kinds decentralized application which end users can make profit contributing the program content. possible for developers and users create vivid ecosystem together. design rationale turing-completeness scripting sidechain the scripting engine highlight design bitcoin which not only can transfer the currency but can realize the smart contracts such multi-signature, escrow and arbitration, and gambling. bitcoin's scripting system, however, applies concise design setting series limitations due the consideration security and difficulty implementation, for example, cannot support loop, must strict the length its scripts, only supports limited numbers standard transactions. the most attractive characteristic ethereum that significantly expands the scale functionality this scripting engine. detail, ethereum adds several instructions such reading blockchain, charging, jumping, etc., well releases the limitation the invoke depth stakes and functions, and length the script. ethereum claims that its scripting engine turing-completeness which developers can carry out almost any computation that can represented mathematic model. although with ethereum, expanding script became prevail approach decentralized application platform, still has one disadvantage that cannot ignored: the application itself and the data generated have stored the same blockchain, which makes the blockchain grows extremely rapidly. ethereum tried slow this trend down optimizing compressing the program code and data, but still cannot solve the problem completely. moreover, since those applications based scripting have share the same ledger, some parameters, i.e., created-time blockchain, cannot changed, which prevents developers from customizing the application. sidechain mechanism, contrast, deals with scalability another way. every sidechain running different distributed network node, having separate users, investors and development team. this partition-like solution has resolved the blockchain expansion problem, and has made every application has its own ledger, which the consensus mechanism, blockchain parameter, and transaction mode can customized. for this reason, believe sidechain mechanism lower-cost, more flexible and easier use solution than turing-completeness transaction scripting. account utxo within bitcoin and derived systems, there so-called "account" save the user's balance. the balance has dealt with the status transition the whole transaction system's status. let's introduce new term, utxo, standing for unspent transaction outputs. every utxo has its own nominal price and its owner and each transaction has multiple inputs and outputs. each input includes reference current utxo and cryptographic signature generated private key related owner's address. user own this private key, he/she can consume the value this utxo, other words, the balance this user has the sum the currency value all the utxo related the user's private keys. the main advantage utxo high level security, which means the user can generate new address for each his/her transaction that he/she cannot traced. great thing for currency involved transaction, but variety dapps, not sure. compare utxo, account has following benefits: space efficiency. for instance, will take user bytes space when he/she has utxos: (++) bytes bytes for address, bytes for transaction no., and bytes for transaction amount). meanwhile using account, the storage space will limited bytes: ++= bytes (in this case, bytes for address, bytes for balance, and bytes for random number). easy monitor. due the account, the electronic currencies are easy recognized, since all have know the account that the currency coming from. simple, easy code and understand. referring fixed time. lightweight client can access all the data user's account fixed time, while with utxo system, the access time will change every time once there transaction. btw platform not pure currency system because has contain various applications. general, account mechanism better option under this circumstance. relational database non-relational database present most blockchain system choose use lightweight non-relational databases, such berkeley db, leveldb, and on. usually these kinds database support some simple data structures, like b-tree, hashtable, and they are not able manipulate data through sql. generally non-relational database good enough the application electronic currency system, but speaking application platform, not the case, especially when talk about finance, bank, e-commerce and no. within these fields, the relational database wildly used because its following advantages: transaction processing very low cost data updating capability complex query (using join, for example) decide adopt sqlite, high-performance lightweight embedded rational database. sqlite can support data volume, and the data file can shared smoothly among different byte order machines. the most attractive feature sql, which very suitable for dapp developers. system highlights ease use development language developers can use javascript and numerous npm libraries create their application. unlike c++ and transaction script for bitcoin and new solidity for ethereum, javascript more popular, has more followers, and easier master. furthermore, introducing relational database, btw platform make decentralized application development more like coding traditional web application, hence become the easiest way among all the current development approaches. toolkits btw system provides command-line tool rapidly create sidechain which any kind applications can created and deployed. also the system provides series api, involving consensus mechanism, strong random number, database, and cryptography, help users creating complex smart contract applications. deployment deploy the applications, all the developers need committing their dapps onto github, and registering web wallet light wallet. after that dapps will presented app store download. flexibility developers can freely customize all parameters their sidechain, such generating speed block, transaction type, and transaction fee, etc., even can carry out new consensus mechanism. security one well-known highlight btw system consensus algorithm based improved dpos, detail, the system embedded high-performance byzantine fault tolerance algorithm upon original dpos hence significantly reduce the possibility network forks. long there more than nodes which are attempting attack together, the system will not generate separate chain, fork, that the risk double payment will avoided. secondly, btw system closely examined every detail with security consideration, such passphrase hint based bip algorithm, two level trading password, and multi-signature, etc. technique specification consensus mechanism the consensus mechanism used btw system based dpos, mechanism delegates vote, but applied optimized variant algorithm pbft, which can make loyal nodes reach agreement, i.e., not fork, o(n^) message complexity and o() time complexity when n/. here "t" refers the number byzantine node (on which any situation can happen, such network delay, machine shutdown, malicious attacks) and "n" refers the number all nodes. delegates vote the delegates vote mechanism btw similar with the one dpos, which composed delegate nodes. delegate trustful account voted community, and delegates who have the most votes are allowed running the nodes which maintain the network and generate the blocks. those accounts who cannot the top are called "candidates", who can delegate once they get enough votes become the top every btw user has the right vote delegates, and the weights vote determined the amount btw owned this user. each voting round will generate blocks, and the ranking change each voting and delegates will shown the next round. the new block will generated seconds after the previous one, and then broadcasted into network and appended the blockchain. once new block added, the confirmation count all transactions before will increased time. after gaining confirmations, transaction can treated "safe". the amount transaction small, less confirmation count allowed. other words, larger confirmation count necessary when large transaction improve the security. some failures occurred few delegates, such under attacks shut down, the block will miss, and this issue will recorded. this problem has impact the online rate this node hence the voting community. therefore the election delegate should treated solemnly, for example, delegate needs have experience running website, ability maintain the nodes stable, that the security and stability the whole system will strengthened. byzantine fault tolerance the major difference between btw system and dpos reflected the second part the algorithm. what the dpos applied is, first, randomly sorting the delegate list current round (to make sure the delegate next round cannot predicted since the order delegate each round will different), then let delegates create block turn through round-robin way. the main issue this algorithm that, delegate attempt attack, may broadcast many different blocks, which may contact double payment trades, "fork" the whole network. doubt that only one delegate betrays, the fork will solved syncing with the next longest chain. however, will take much longer time eliminate betrayed nodes their amount increasing. few betrayed nodes are enough have serious impact system security, which means even can gain confirmations, still may not sure that the network safe. deal with this problem, introduced algorithm known pbft (practical byzantine fault tolerance). same dpos, pbft also chooses delegates the way round-robin. the different part there will not block generated after delegates are voted. fact, there will piece propose issued determine the hash code next block. only when more than all nodes agree with this propose, next block will generated. the hash next block must the same that agreed with all delegates current round. essentially, the introduction pbft solved the issue abusing the delegates' right, and improved the control capability ledgers. sidechain and dapp btw system provides command tool which developers can easily create basic sidechain system. developers are also able fully customize their sidechain system, including its own database, consensus mechanism, trading mode and account architecture. sidechain system can hosted the clusters nodes individual delegates, that partitioned mechanism can naturally generated hence avoid the rapid expansion the main blockchain. every dapp related sidechain. sidechain's core code developed nodejs, but can programmed any front-end techniques such qt, html, javascript. the communication between front-end and back-end usually implemented under json rpc protocol. the developer owner dapp can trace the usage their application. compare cryptocurrency that based community consensus, dapps are more like private company. all the transactions within dapp are handled main node, which run dapp's owner. the owner dapp must have btw account, like multi-signature account, whose major objective create consensus new block and sign dapp's main node, just like multi-signature wallet. once new dapp created, and signed main node, the sha hash this block need calculated, and submitted the main blockchain btw system dapp block the owner it. when btw main blockchain received information trade including dapp hash, the delegate will compare with the previous one and then store into btw blockchain. then lately when main node sync with network, the user will validate all dapp blocks through btw blockchain, which means impossible remove the previous dapp block from main blockchain. developers can replace btw blockchain with bitcoin blockchain use the same functionality since the usage btw api will the same. the security dapp can also guaranteed bitcoin blockchain. developers can take advantage both btw and btc the currency their dapp. the case money in-and-out when using dapp, the btw coin btc will delivered dapp address, and appropriate amount money will shown that dapp's account, ready use. the deposit mechanisms both btc and btw are the same, which deliver particular dapp address, and then the appropriate amount will shown the account. every dapp the account created the developer, all deposited btc btw coin will saved related address. considering the security, only those dapp accounts owned trustable signers with multi-signature are recommended. withdrawal from dapp main node's responsibility. when someone requests withdrawal money, dapp main nodes will acquire the request and move the money from dapp address btw blockchain bitcoin blockchain. developers are allowed issue token their own dapp, and use the currency this dapp. these kinds token can circulated dapp like btw btc, but are not allowed transfer from one dapp another directly but through btw main blockchain. sandbox and sandbox running environment that restricts program's activities under the security policy. early time was used test suspicious software, for example hackers usually use sandbox technique run some virus unsafe program. the implementation classic sandbox usually intercept the system calls, monitor program's activities, order control the usage computer's resource such disk i/o according user's policy. btw system implemented sandbox mechanism using module nodejs. the module encapsulation javascript engine, which used run the pure javascript code. but cannot use system apis like file system network communication. also lack "require" function therefore the third-party libraries cannot imported smoothly and even worse, the modular development cannot conducted. this requires dapp developers use "browserify" technique bundle all the third-party libraries they used javascript file, that btw system can load and run. some necessary system level api will provided sidechain through ipc (inter-process communication), which takes into account both security and functional completeness. transaction btw system has built abstract transaction layer, which almost all the functionalities system core are established, such transferring, voting, application store, deposit, and withdrawal. the sidechain itself can also implement its own type transaction. the main difference between each transaction their types and assets. the data structure basic transaction follow, and the extension transaction will saved different asset table according its type. transaction required varchar() id; required varchar() blockid; required tinyint type; required int timestamp; required varchar() senderid; optional varchar() recpientid; required bigint amount; required bigint fee; required binary() signature; optional binary() signsignature; optional text signatures; required binary() senderpublickey; let take vote transaction example: the vote entity connected basic transaction through transaction like follows: asset_votes required varchar() transactionid; optional text votes; account system every account btw system consists one passphrase, pair public/private key and address. users can also set their own secondary password. note that the difference with bitcoin here that each account related only one address, instead multiple addresses and private keys related one wallet bitcoin. passphrase mnemonics used produce real wallet line with bip standard. the mnemonics much easier remember for people than other binary hexadecimal characteristics. the way which passphrase generated convert entropy multiple bit into several words, particular btw system, the length entropy bit and will converted into words. the passphrase, top-level password, maintained users instead published public. once users lost their passphrase they would lost the ownership their account. passphrase generally like follows: barely decline dust stamp protect color certain cup arena busy latin shell pair keys includes public key and private key, which uses sha hash passphrase seed and generated through edwards-curve digital signature algorithm (eddsa). looks like this: public key: baefdfbabaebeafadcfa private key: efeeddcdeebddfcfbcdbceab fdfbabaebeafadcfa the account address big number generated reversely converting the first bits sha hash public key, shown follows: client btw platform provides three types clients: the full version client perfect solution for those super users, delegates and developers, running windows, mac osx and linux, but only linux system can run delegate nodes which blocks forging enabled. the lite wallet client allows users connect network through full version wallet api, but necessary open all the right this api the owner this full version wallet. full version wallet can download the whole blockchain from other full version wallets through peer-to-peer network. ordinary user usually use lite wallet manage his/her btw account. the lite wallet can run windows and mac osx platform without installation. utilizes the system built-in browser. needs noted that the lite wallet cannot run network node since would not download the blockchain data but only links with other nodes through http protocol, which have several advantages: first, blockchain data downloaded would keep the volume small; second, private key broadcasted network make possible make all types trade since all the data will signed locally. you want run delegate node, you can use lite wallet register delegate account, but cannot run delegate node through produce block. order run it, downloading and running full version wallet linux would necessary. the dapp users can take advantage lite version wallet manage installed dapp. the apis both dapp and node are available for developer invoke, that can make them rapidly and easily creating javascript dapp through node.js. the mobile version client allows users manipulate their own btw accounts their mobile devices, both ios and android platform. they can download the client from appstore google play. the backend the client based our solution applied our desktop version, but mobile client applies responsive instead fit the mobile device screen and changes some interface mode according the device characteristics. this mobile application brings mobile user-friendly interface, like bitcoin some major bank application, and course, the mobile client can also support all the dapp you like running inside it. performance all the information transaction usually occupies about bytes. let calculate how much network bandwidth will demanded when system achieve tps. since the interval block production seconds, each block needs carry transactions, which make the volume become megabytes. this data needs broadcasted whole network, even under the best situation, nodes will achieved the first step, and then nodes the next step, and each step supposed complete seconds, which makes the necessary bandwidth mb. considering the bandwidth loss and unexpected circumstance, think that bandwidth needs least satisfy the tps throughput. although this volume bandwidth not easy gain, can sure that will bring much more benefit delegates than the cost. nov the peak throughput alipay payment system reached per second. there still possibility for optimization trade throughput btw system, which our major investment the future. token system the "hello world" program generated btw toolkit would basic token system. developers may not need write even line code but adjust some initial parameters genesis.json, publish token system. like sub-currency top ethereum, the token btw system can represent gold, stock, mortgage, any other type asset. these tokens can traded with btw transferred sidechain decentralized way, and with any other currencies centralized exchange. mediatory contract let assume that buyer wants trade with person he/she does not familiar with. generally the trade well-doing, both would not hope the interference from third-party. but there any issue occurred during the procedure, like the buyer does not satisfy with the items, they would like mediator help solving the problem. the mediator will ask both sides present some evidences and then make decision, for example, ask seller making refund. this business process can described follows: both the buyer and seller the transaction choose mediator together. the buyer creates multi-signature account using public key shared with all the three parties. then the buyer transfers the money into this account, then signs and publishes transaction which the buyer's account and seller's one are treated promotor and recipient respectively. this moment this transaction would not confirmed immediately until two these three people have signed. the seller dispatches the item the buyer. the buyer received the item and satisfy with it, he/she will sign the transaction with his/her private key. after that when the seller sign the transaction again, will completed successfully. the buyer does not satisfy with the item, he/she can launch complaint the mediator and show evidences about the item with faults. then the seller also can show evidences against buyer's one. finally the mediator would make agreement with one the two sides trade and sign this trade together complete it. decentralized exchange there are two types decentralization according legal currency support. legal currency not supported, the full decentralization can realized; otherwise only half decentralization would supported. this case, legal currency can circulate through gateway but transaction information would made public. full decentralized exchange can still divided into two types: one peer-to-peer trade through "atomic cross chain exchange api". the other one pending order, which require seller transfer amount asset btw sidechain from other blockchain. this moving should achieved the spv proof frozen assets main chain. beside, with the support relational database, easy create well performance matching engine using union-table query and index. existence proof existence proof used register copyright, patent and on, which based the idea that prove existed particular file saving hash code this file into btw sidechain. addition can add metadata such timestamps, owners' digital signatures prove when they own these files. this kind information cannot forged revised, will not expose the privacy data and ready verify any time without any third-party authority. iot (internet things) there are numerous online devices existed iot, which make difficult manage all the devices and identification every nodes single authority. btw sidechain excellent solution for it. firstly, can deal with trustiness among different nodes. means that all devices connect each other distributed network, and trade between devices can verified consensus algorithm, and can traced, audited, and analyzed. secondly, different types devices can connected different side chains, and this natural partition mechanism that mentioned above can prevent main ledger from explosive increment. let imagine that vending machine sidechain based iot can not only monitor and report its own stock, but also analyze historic trading data select suppliers submit the tender, and then automatically complete payment. conclusion btw system decentralized application platform, which designed lower the threshold for developers, such using javascript develop language, supporting relational database save transaction data, and making dapp development similar with traditional web application. sure that these characteristics are very attractive developers and smes. the ecosystem the whole platform cannot improved until developers make huge progress productivity. also, btw platform designed open for various fields, not limited some particular parts such finance, file storage, copyright proof. provides underlying and abstract api which can combined freely create different types applications. consensus mechanism, btw inherits and enhances dpos algorithm, which the possibility forks and risk duplicate payments would significantly reduced. furthermore, btw sidechain mode not only can mitigate the pressure blockchain expansion, but also make dapp more flexible and personal. btw system, proactive, low-cost and full stack solution, will surely next generation incubator decentralized applications.