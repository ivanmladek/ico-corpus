idex: real-time and high-throughput ethereum smart contract exchange aurora labs version january abstract this paper explore idex, the base component the aurora dao. for complete understanding the entire design also suggest reading the aurora whitepaper. idex hybrid, semi-decentralized exchange that provides trustless, real-time, high-throughput trading experience conjunction with blockchain based settlement. centrally managing trade matching and ethereum transaction dispatch, idex enables users trade continuously without waiting for transactions mine, fill multiple orders once, and cancel orders immediately without gas costs. the problem established decentralized exchanges, the improvements security come the expense the user experience. trade speeds are limited block times, and order books update slowly and are often out sync with the interface. filling multiple orders simultaneously and submitting market orders impossible, and canceling each individual order costs gas. these design flaws make the use trading bots key factor order book depth and liquidity cost prohibitive, creating poor user experience that ensures these alternatives won't meet the quality standard demanded modern traders. new relayers are addressing some these issues, but still fall short providing premium user experience. designating specific relayer helps with order book maintenance, but eliminates all the benefits shared liquidity. old orders must still mined completely invalidate them, and gas costs increase with each cancelled order, making bots cost prohibitive. trading directly from the wallet gives market makers opportunity back out unprofitable trades and opens exchanges and takers griefing attacks. our solution idex addresses these issues centralizing the non-critical components the trading process. all transactions, such deposits and trades, must authorized end users and their private key, but idex maintains ownership broadcasting these authorized transactions the network. carefully sequencing the dispatch these authorized transactions, idex provides the speed and user experience centralized exchange combined with the security and auditability decentralized exchange. idex consists smart contract, trading engine, and transaction processing arbiter. the smart contract responsible for trustlessly storing all assets and executing trade settlement, and all trades must authorized the user's private keys. the idex smart contract has unique design such that only the exchange authorized submit signed trades the ethereum network. this enables idex control the order which transactions are processed, separating the act trading from final settlement. users trade their exchange balances update real-time, while their private keys are simultaneously used authorize the trade the contract. this authorization prevents users from rescinding any completed trades, and prevents idex from initiating any unauthorized trades. authorized transactions are passed the arbiter which manages the queue pending transactions, dispatching them sequence ensure that each trade mined the correct order and that the smart contract balances stay sync with the exchange balances. this design allows users trade continuously across multiple markets without waiting for transactions mine, place true market orders and fill multiple orders once, and cancel orders immediately and without gas costs. fig. the idex ecosystem the maker and taker deposit their tokens into the idex contract. the idex database updated include the customer addresses and token balances. maker creates and submits signed order that includes the relevant trade data. idex confirms that the maker's account has sufficient funds and that the signed transaction matches what was submitted idex. all checks part pass, the order added the orderbook. the taker submits matching order, signing transaction with the same price the target order and amount less than equal it. idex confirms that the maker's account has sufficient funds and that the signed transaction matches what was submitted idex. all checks part pass, the trade marked matched and the orderbook updated. the idex database updated reflect the new balances, and both traders can continue make new trades based these updates. simultaneously, the signed order added the queue broadcast the ethereum network for processing. after all dependent trades have mined, the transaction dispatched the blockchain. the transaction mined and the contract balances update reflect the trade. once the transaction has mined, the maker and taker are able withdraw their funds. the idex design addresses almost all the challenges faced existing decentralized exchanges. gas fees for cancels general rule for dexs, all cancelled orders must invalidated the blockchain, otherwise traders run the risk others collecting old, unfavorably priced orders filled later date. each these cancellations costs gas. the protocol includes function bulk cancel transactions, however the gas costs this option scale almost linearly with the number cancelled orders. this aspect the protocol makes the use trading bots cost prohibitive. contrast, idex has specific function the contract that allows users invalidate all past order one single transaction. users can call this function on-demand after series many cancellations, while idex will purge cancelled orders across the entire exchange once week. this provides low-cost way ensure outdated orders can broadcast, even the event that idex compromised. changing the approach how canceled transactions are invalidated idex has created dex that friendly trading bots. order competition the protocol allows for one order shared across many relayers, but the process exposes users race conditions. multiple traders compete for the same order one time, one trader will successful while the others will encounter the dreaded "bad jump destination" and wasted gas. the preferred solution assign the rights fill order single relayer. doing prevents race conditions, but also increases the complexity sharing liquidity. makers can designated relayers separate orders for the same funds, but now must manage orders multiple exchanges. this creates coordination challenge between the designated relayers and leads further escalation order cancellation costs. some exchanges with this approach have suggested that cancellations are not necessary long you trust the relayer, however this ignores the possibility bad actor taking control their exchange, and the resulting product longer trustless solution. given the history exchange security and what stake, any solution that relies everyone playing fair should approached with caution. market maker non-compliance trading directly from your wallet leads great for honest actors, but exposes traders issues caused dishonest market makers. while waiting for matched trades mine, it's possible for the market maker submit cancel token transfer transaction with higher gas price and prevent the trade from settling. market makers are incentivized any time pending trade longer profitable. this also opens the exchange griefing, and ethereum scales will become cheaper cancel matched orders and interfere with the integrity the relayer's orderbooks. idex requires that users first deposit the contract before trading, and users cannot withdraw until all transactions have cleared. while this may seem inconvenient, eliminates all the possible attacks related rescinding orders that have already been dispatched. the idex contract also has "escape hatch" that allows users withdraw directly from the contract after period time, guaranteeing users access their funds even the event idex unavailable. susceptible ethereum backlogs centralized exchanges have trained users expect speed. here traders can buy and sell the same assets quick succession, making possible take advantage quick price movements. traders must wait for previous transactions mine before submitting another order. the event ethereum backlog this problem becomes even worse, traders are forced space out their orders over longer periods time. this delay makes many otherwise profitable trading strategies untenable these exchanges. idex traders not have worry about any backlogs ethereum, the user experience insulated from longer settlement times. users can trade continuously, back and forth real-time. the idex balance updates immediately, while the authorized transactions are broadcast the correct sequence for final settlement. this asynchronous design insulates idex traders from the current shortcoming the ethereum network. idex currently the most advanced dex the market. however, order compete with and displace centralized exchanges, idex must able match and exceed the transaction throughput these less secure alternatives. the case idex, the ethereum blockchain the limiting factor. combining our innovative design with sidechain, idex will scale process the necessary number transactions and eventually render centralized exchanges obsolete. team have qualified team with healthy mix business and development experience. alex wearn ceo (https://www.linkedin.com/in/alexwearn/) alex expert leading teams the design and delivery software products. has managed wide range operations, marketing, and sales analytics products for amazon, adobe, and ibm, and most recently led product management team re-platforming their application operate private ethereum blockchain (project still stealth mode). alex graduate the kellogg mmm program, dual mba finance and operations and design and innovation. phil wearn coo (https://www.linkedin.com/in/philwearn/) phil co-founder etherex and has been building blockchain based companies since the time when ethereum was little more than white paper. while developing etherex identified the pressing need for high performance decentralized exchange protocol, insight which served the basis for idex. phil has background aerospace engineering. jason ahmad cto (https://www.linkedin.com/in/jason-ahmad/) jason has spent his career leading product and engineering teams the creation world class software. two-time venture backed founder, his last company, epoxy, was successfully acquired stanford graduate, jason brings his expertise and knowledge lead the engineering team aurora. brian fernalld full stack developer (https://www.linkedin.com/in/brianfernalld/) brian full stack developer with over years experience startups. addition engineering, brian has worked for many years the fields blockchain technology, product management, marketing, and design. brian uses his passion for fintech and blockchain technology build the best user experiences possible. aurora idex the first product the aurora dao, suite dapps and protocols that make distributed banking and financial network. the components aurora support the boreal, stablecoin, and together enable global banking the new currency. revenue from the various components aurora will used both expand boreal banking and provide economic incentives that ensure that aurora runs designed. more information about aurora, including the whitepaper, can found here. aurora (aura) token all fees from idex are remitted the aurora reserves. the reserves grow aurora can increase the value outstanding loans, generating additional revenue for the aurora network. fees from the aurora banking system will then flow back those who stake the aura token and provide the economic foundation that holds aurora together. aurora has its own native network token, aura, that aligns the interests aurora users and operators. all the revenue from aurora used compensate those who stake their aura and provide security for the aurora network. aura staking aligns the economic interests the operators with the health the network, and makes extremely costly for any would attacker disrupt operations. aura token details supply: ,,, will used help accelerate adoption the aurora network. the total amount aura tokens, will used help subsidize the growth aurora distributing aura users and community members through programs such market maker rewards, marketing campaigns, and air drops. the remaining will given out proportionally individuals who purchase idex memberships. the remaining aura will used follows: founding team future employee token pool future use businesses expenses market maker reward program aurora implementing crypto rewards program, enabled the aura token, encourage the creation limit orders idex. this program designed jump-start exchange usage and encourage the growth liquid order books. market makers who place and execute limit orders any idex market are eligible receive aura token grants. the total aura token supply will distributed the community via this grant program rate one percent the total remaining reward tokens per month. with each additional month the number aura rewards will slightly reduced, providing incentive for market makers join early and ensuring that the rewards program can continue indefinitely. traders will receive aura proportional the fees they spend their limit orders. for example, three traders trade during one month period with trader paying eth fees, trader paying eth fees and trader paying eth fees, they will receive and the total aura distributed that month respectively. membership sale (dvip) dvip crypto membership that entitles the holder free discounted trades idex until the year approximately weeks after the dvip are distributed each holder dvip will able redeem their existing dvip for new membership and aura per dvip. redemption will handled via ethereum smart contract. total dvip exist, and aurora labs selling the launch the idex mvp. each full dvip dvip) entitles the token holder the membership rewards. dvip divisible and membership rewards are applied pro rata basis. additional dvip above one grants further membership benefits including both trade discounts and aura reward multipliers. the benefits are the same whether user owns one five dvip. dvip members are able choose from the following membership benefits: free trades and aura rewards market making rewards and full trade fees proportional mix both membership benefits are function both the amount dvip held the member and the choice rewards. membership benefits not increase for any holdings above one full membership. members can view and set their benefit choices using the benefits tab the exchange. fig. dvip benefits allocation the rewards multiplier and fee discount are represented the following formulas: fee discount percentage (dvip) rewards multiplier dvip) (dvip rewards percentage; values range from zero, all fee discount, one, all rewards multiplier dvip number active dvip held; capped one holding more than one active dvip for example: joe has dvip joe sets his reward percentage he'll pay trade fees and does not participate aura rewards joe sets his reward percentage he'll pay the trade fees and receive market making rewards joe sets his reward percentage he'll pay the trade fees and receive market making rewards jane has dvip jane sets her rewards percentage she'll pay the trade fees and does not participate aura rewards jane sets her rewards percentage she'll pay the trade fees and receive market making rewards standard rewards membership rewards) jane sets her rewards percentage she'll pay the trade fees and receive market making rewards (.x standard rewards (.*.=.x) membership rewards)