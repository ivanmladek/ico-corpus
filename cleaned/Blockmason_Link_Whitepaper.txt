use smart contracts without any blockchain experience this document contains proprietary information. expressed written consent link ("blockmason link") required for duplication distribution any content contained herein. table contents executive summary introduction background blockchain developers and industry growth executing smart contracts: mammoth headache blockmason link why link? link for developers unburden yourself (of boring dev tasks) treat your dapps apps (and vice-versa!) link for end-users mechanics features documentation sample code insights, monitoring, data visualization user directory integration automated ethereum account generation maintenance benefits convenience ease use managed high-availability infrastructure enterprise-grade security portability blockchain-enabled mobile applications use cases traditional application developers hybrid deployment icos and product legitimacy private side chains for enterprises the next step managed infrastructure technical overview web service access control analytics api reference documentation client software developer kits (sdks) synchronized versioning logs security token features, usage economics revenue business models the path revenue premium management services development roadmap use funds meet the blockmason team disclaimer glossary executive summary blockmason link new application designed generate simple web apis from smart contracts written programmatic blockchains. while link will initially launch the ethereum network and will use ethereum example throughout the whitepaper link has the potential support smart contracts every major programmatic blockchain. the goal link remove the barriers developers and users face interacting with blockchain-powered applications. accomplishes this objective abstracting away the many confusing, esoteric processes currently necessary for developer interact with smart contract user interact with decentralized application, including: learning solidity other programming languages purchasing ether (eth) hosting ethereum node related infrastructure running metamask similar wallet software creating ethereum address the process creating "link app" from smart contract quite simple: any developer may register smart contract with link providing its address and abi, from which link generates set standard api endpoints. link also generates synchronized, dynamic api reference documentation, well interactive analytical tools help developers understand how their smart contract used, both and off link. finally, link also generates api key for use the developer, well eth account that link will use perform requests the developer's client's behalf. link has three primary, and vital, value propositions: create traditional, web-based application from smart contract decentralized app allow traditional developers empower their enable users unfamiliar with blockchain utilize blockchain-integrated applications seamless, recognizable web-based system web-based applications with smart contract infrastructure link tool adoption and growth for blockchain-based dapps. opens blockchain programming developers without blockchain experience, and opens blockchain-powered applications users unfamiliar with the arcane intricacies accessing networks like ethereum. furthermore, link tool applicable every blockchain enterprise. managing the necessary, but tedious mechanisms blockchain interaction, link frees developers pursue more creative and innovative projects. also opens every blockchain project the general public, making decentralized applications easy use any other application with which the population already familiar. with link, entirely possible imagine near future which every member our society utilizes blockchain-powered application daily basis without even knowing it. consistent with the theme removing barriers blockchain adoption, blockmason working hard make the link software-as-a-service (saas) offering simple and familiar for all users. developers, startups and entrepreneurs will have the option staking their account with link's token, using traditional payment methods like credit cards. introduction background blockmason excited announce the creation our second blockchain industry revolutionizing product: blockmason link! its core, link removes the barriers interact with smart contracts, allowing developers instantly turn smart contracts any programmatic blockchain into user-friendly applications. we'll use ethereum smart contracts the example throughout this whitepaper, but link main-chain agnostic and architected manner that adaptable the leading smart contract supporting main-chains without native web api layer. link solves some the most persistent and pervasive problems plaguing the blockchain community: ease-of-use and accessibility. while bitcoin and ethereum have grown the public consciousness, blockchain still primarily functions vehicle for cryptocurrency trading and other financial applications. blockmason, are true blockchain believers only matter time until blockchain spurs the healthcare revolution, empowers economic freedom developing countries, and stabilizes our fragile mass payment systems. however, impossible realize this beautiful crypto-future until the completion essential components blockchain infrastructure. blockchain has high barrier entry. from development perspective, requires learning solidity, cryptography apis, and the nuances esoteric decentralized systems. from user perspective, the hesitation even simpler: decentralized applications are too damn tough use! world that increasingly values convenience, it's difficult convince people increase their dapp usage when usage necessitates many prerequisites, including creating and learning use ethereum wallet, metamask, safely storing your private keys, and on. just try explaining someone the long-term benefits decentralized contracts when even those charge regulating new technologies have idea how they work. all the public thinks is: why use "smart contract," when dumb contracts work just fine? why use lndr, when could use venmo? which brings one blockmason's core beliefs: for emerging technology succeed, must value the user. for too long, the blockchain community has ignored functionality, favor niche technical development, finance, profit hindering mass adoption. this not say don't love nerdy, precise technical advancement (we do!), but rather that believe smooth, exciting user experience necessary part technological growth. fully realizing the potential blockchain technology requires the mass adoption blockchain technology. mass adoption requires enhanced user experience, which itself requires technological innovation. conversely, any technical breakthrough, regardless its importance, squandered does not solve the user experience. greater access technology leads greater technological advancement. just think blockchain's "typhoid mary." blockmason link the missing block blockchain's ever growing tower. innovation that sparks innovation. blockchain developers and industry growth blockchain the verge breakthrough. the web the nineties the public obsessed with but has idea the average number ethereum how use it. this enthusiastic, curious tech community transactions per day increased more than means that now the perfect time for link, application that enables developers make possible the mass adoption blockchain technology. consider some basic information about the growth the the end the fourth quarter ethereum ecosystem particular. ethereum network transactions per day oct jan jul apr oct jan apr jul oct even more relevant the necessity blockmason link the creation new ethereum smart contracts. new ethereum smart contracts quarter despite the increase the cost eth early and therefore temporary increase the cost creating smart contracts, has already seen record number smart contracts created, demonstrating significant developer interest. however, further research indicates that smart contracts were called fewer than times indicating some structural impediment further use and development. notwithstanding these difficulties, increasing percentage developers have reported already using plan use blockchain their development: blockchain development familiarity with blockchain know and plan use development not familiar all know and use now development familiar with the concept but have plans for them have heard about this but not familiar with the concept addition, the global developer population, primary target link, continues grow unprecedented rates. projected that the global developer population will reach almost million: global development population the top nation for growth china, where the growth rate between leading india's developer population will overtake the united states currently has the largest population software developers million developers million developers the same time, ethereum continues grow the public consciousness. ethereum-related google searches recently reached their highest levels since march, when eth's price had reached beyond programmatic and societal growth, ethereum has already seen record number icos though the year not yet finished, more than icos have occurred raising over billion usd beating total for the entire year. detail our use case section, icos comprise one the spaces which link most valuable, potentially allowing new blockchain companies bolster their token offering using link generate working apps prior token sale, feat all too rare today's ultra-fast, "wild west" ico world. executing smart contracts: mammoth headache order understand how link will revolutionize smart contract usage and development, important understand just how frustrating currently interact with smart contracts. blockchain programming joke. while solidity relatively straightforward, oasis vast desert. it's small, uncomplicated, and effective. however, impossible for developer use anything they have built that oasis without hauling across the vast desert and back civilization. relatively few developers outside blockchain have working understanding solidity how build applications that can interact with ethereum-based decentralized applications smart contracts. even fewer prospective users understand how utilize and access those applications. this completely understandable quite simply, decentralized applications have huge barrier entry. just check out everything needed interact with dapp from the perspective end-user: transfer ether metamask acquire ether install metamask visit dapp unlock metamask acquire wallet transfer ether see result dapp create exchange account exchange verification process buy ether interact with dapp wait for confirmation confirm transaction metamask before user can even think about jumping into the complete mess dapp usage, they must first acquire ethereum address, which process complicated enough there are many dozens blog posts dedicated doing correctly. the user must also acquire eth and transfer that address, which often requires first making account large exchange (coinbase, binance, etc.), submitting personal data for identity verification, linking bank account, receiving approval, and purchasing eth, all which can take several days weeks. once the user finally has wallet and some eth, they still need boot google chrome install they don't already use download metamask and link their wallet before they can even think about playing around with decentralized application. course, this isn't even accounting for all the complicated mechanics sending transactions, calculating sufficient gas, and waiting around query the network again see the transaction was success. can all agree this far from the "click button" experience everyone used the app store. it's scary, confusing, and frustrating process. and that's not even taking into account the difficulties using web build typical dapp that interacts with smart contract: install web library create web smart contract wrapper configure web provider send transaction wait for user confirm and sign transaction call smart contract functions wait for transaction confirmed send raw transaction sign transaction handle transaction result not mention writing the actual smart contract itself the developer isn't utilizing contract that open source. but, have fear! link here transform these nigh-impossible processes into something vastly easier use. blockmason link blockmason link simplification. elegance. before, you were running with ankle weights. allow link remove them, that you may run free! but what does link actually do? well, remember that nasty graphic above with all the arrows and long pathways? let present you with something whole lot simpler: visit app url interact with app see result app notice everything that using link does not require: ethereum address, deposited eth, metamask, coinbase account, and ton other annoying steps. link facilitates smooth user experience handling everything that traditional application users don't care about, including ethereum wallet creation, gas calculation, and communicating directly with the ethereum network. link creates classic, conventional web api interface for any smart contract, making the benefits blockchain programming available developers without any blockchain experience. even more exciting, link enables hybrid applications that utilize the power the ethereum network for certain tasks, while employing alternative networks cloud services for others, including the user interface. additionally, link opens entirely new population prospective users and clients the growing world decentralized applications, finally making possible for blockchain technology expand beyond the pool early adopters. what mean when say "turn your dapps into apps?" link creates classic, conventional web special. link makes existing dapps and smart contracts api more recognizable from the user perspective, allowing interface for any smart contract, making the link doesn't make special kind app; makes apps less prospective consumers and customers use ethereum-based decentralized applications without even having think about blockchain. benefits blockchain programming available developers without any blockchain experience. why link? link constitutes necessary infrastructure the developing blockchain ecosystem. more than single application; every possible application. link simplifies and streamlines the process interacting with smart contracts for everyone involved blockchain developers, users, tech enthusiasts, cryptocurrency traders and makes easier for those outside blockchain join the tech revolution. link for developers unburden yourself (of boring dev tasks) imagine atlas was longer tasked with holding the entire world. with that weight off his shoulders, could star athlete, the leader country, maybe even blockchain dev! that's not exactly what we're promising, but without the burden connecting their smart contracts the world outside the blockchain, developers will free focus more satisfying creative endeavors. know that every developer has limited energy. when they must spend their time focusing tedious, technical aspects development, reduces the mental power that may spent elsewhere. perhaps that means taking much longer complete project; perhaps that means never fully realizing project all. understand what goes into building and maintaining different types applications, below simplified graphic that represents the infrastructure typical database-backed web application. each node represents aspect the application that the developer must build and maintain: while entirely possible, and even common, operate web application with less sophisticated setup than that described above, such deployment not without significant trade-offs reliability, security, scalability, and performance. many ways, creating and maintaining traditional decentralized application much simpler. moves much the burden interacting with the application onto the end user, which turn makes the application less accessible: after writing the smart contract, the developer has minimal responsibilities, but their application may have limited functionality usability. course, this diagram does not include any the logistical challenges hosting ethereum node using third-party infrastructure service, described previously. next, let's consider the steps involved building and maintaining web-based, blockchain-backed application using blockmason link: you can see, link eliminates many the steps required the stakeholders involved with the building, operation, and use app. once deployed, developer can connect smart contract link and use the resulting api endpoints build application that simple access for the end-user, backed the blockchain without hosting ethereum node, and that interacts with traditional web browsers without the complicated infrastructure necessary run regular web-based application. the goal maximize the usability and power the developer's application while minimizing the amount logistical effort necessary deploy and maintain that application. this one link's main value propositions: let link shoulder the burden, that you may spend your energy what truly matters you. for developers, link like the introduction agriculture. once the general population had their needs met, new, more specialized jobs and skills emerged. only then, could human society grow and flourish. treat your dapps apps (and vice-versa!) with link, blockchain development accessible anyone with traditional programming experience. anyone who can use web api can consume smart contract. link generates all documentation, providing for developers all references, data types, endpoints, and demos. additionally, link can connect multiple smart contracts without the developer ever having interact directly with the blockchain, leading the possible creation elite, collaborative, hybrid blockchain microservices. any developer working traditional application can charge their product with the power the blockchain, without even knowing how blockchain technology works. course, the reverse also true. while link opens blockchain programming those with more traditional development experience, also opens the brilliant work blockchain developers the general public. creates simple, easy way for users interact with blockchain applications through the web. once confusing and complex, decentralized applications will now easy use anything else the app store. additionally, because link allows traditional developers interact with smart contracts through registered portal, offers blockchain developers the potential monetize their creations charging license fees for the use the smart contract. extrapolating from this premise, link enables the creation massive database open source blockchain apps powered smart contracts registered link. such database would empower developers with unprecedented discoverability, allowing them pick and choose which pieces new application they build themselves, and which parts are built upon link-enabled smart contracts. link for end-users for users, link all about accessibility. some circles blockchain dirty word people don't know what is, and they don't want know. with link, will possible create apps powered the blockchain without users having any idea. additionally, because link automatically generates ethereum addresses for all apps, users won't even necessarily need have ethereum account own any eth access the network. sometimes, you know you're doing your job well when one knows you're doing your job. mechanics essence, link takes care all the annoying steps between user interacting with application and that application connecting with the ethereum network. everything necessary execute smart contract under normal circumstances still occurs transaction created, signed, and sent only now, all those interactions are handled the background link, away from the user. you're developer looking register smart contract with link create app, the process quite simple. register smart contract providing its address and abi link. then, link generates set endpoints from the abi. the link app developer can then adjust these endpoints their liking renaming the path parameters, and link will handle mapping those the appropriate contract function and parameters. link also generates api key for your use, and ethereum account that link will use perform requests for you. features beyond its basic functionality creating easy-to-use web apis from difficult-to-access smart contracts link also hosts variety other features useful both developers and users alike. documentation sample code link generates usage documentation for all registered smart contracts, including sample code, guide developers how use the link-generated app. this documentation synched the app's configuration and hosted link, developers not need manage update their documentation their own. insights, monitoring, data visualization link provides visualizations, logs, and insights into how registered applications are being used, with tooling that makes all the data filterable, sortable, and searchable. with link, possible understand exactly how your app being used, and even see how the associated smart contract being used outside link for comparison. developers can sign receive notifications there are ever any issues with their app, including one the associated accounts running low eth cover transaction fees, error rates the smart contract have increased. user directory integration typical dapps and smart contracts rely ethereum's native authentication, using ethereum account's public/private key-pair. link uses delegated authentication model, transactions smart contract are signed using ethereum account within link, which developer can connect one more identities within the link app. these identities can authenticated any number ways. link supports variety authentication methods for individual link apps, users and developers can seamlessly integrate access with their own identity provider (e.g: active directory, okta, saml, oauth), let link handle authentication and identity management for them. automated ethereum account generation maintenance recall that when using typical web app, user will authenticate with trusted third party. for example, clicking "login with google," "sign with facebook," entering username and password which stored the app service provider. typical link-based dapp, exactly the same from the end-user's perspective. they will authenticate with the dapp, thus proving their identity and accessing the app. however, order communicate with programmatic blockchain-based network like ethereum, this type authentication isn't quite enough. dapp may have communicate with smart contract user-by-user basis, which turn means that each user would need their own ethereum account. link automatically generates these ethereum accounts and manage them for dapp developers. each account trusted the dapp and permitted interact with the ethereum network specific user's behalf. the dapp does not have provide any information about the users identities manages link. nor does the dapp have supply any the user's private authentication details. the user connects the dapp, the dapp connects the ethereum account, and together with link they connect the ethereum network. course, the dapp does need verify that the corresponding ethereum account for particular user has sufficient eth cover the transaction fees for any transactions the dapp intends perform. the link developer can transfer eth these managed accounts directly allow blockmason manage these accounts their behalf, abstracting away transaction costs from end users. important note that ethereum accounts generated within link are managed exclusively blockmason the private keys are never available the link developer. this significant for: security: link app developers cannot impersonate their users the ethereum network. reliability: guarantees transactions are processed order, reducing spurious failures due transactions potentially occurring parallel. cost: reduced potential for failed transactions means less wasted gas. automating the ethereum account generation and maintenance processes, link eliminates many the financial and technical hurdles blockchain usage, while retaining the decentralized computation and persistent storage features blockchain technology. benefits convenient easy use with blockmason link, building dapp becomes different than building any other app. now, there need for developers concern themselves with web, running ethereum node any kind, requiring the end-user load ethereum account with gas money, rlp encoding, wallets, any specialized libraries. just get auth token and use your smart contract like you would any other web api. any software capable using web api can now use your link app, with special libraries, tools, blockchain knowledge required. it's really that simple. additionally, because blockmason link automatically generates new ethereum addresses, possible for users completely unfamiliar with blockchain technology operate the app without any additional effort their part. from user perspective, the published decentralized application will different from any other typical application, even though it's really blockchain-powered...and that's just cool. managed high-availability infrastructure with blockmason link, you don't need any other infrastructure order for people start using decentralized application. developers must only deploy their smart contract, create their app blockmason link, and they're done. servers maintain infrastructure monitor. handle all. this way, blockmason link builds the important work companies like infura and other managed service providers, allowing developers and the blockchain community focus building exciting products and services without worrying about the difficulties accessing and utilizing the ethereum network. focus creating amazing products, not reinventing the blockchain wheel. enterprise-grade security blockmason, take security very seriously and make every effort secure link apps and their data. addition responsible disclosure policy and generous security bounty program, blockmason link will, regular feature ongoing maintenance and support, undergo quarterly penetration testing, use automated continuous security monitoring our infrastructure and products, and follow security-conscious development practices that include threat modeling, integrated static analysis, and mandatory peer review. blockmason maintains presence some the most prominent security conferences the united states and remains highly engaged the security community. additionally, developer's app targeting medium-large businesses and enterprise customers, common barrier entry with these customers compliance with number security certifications, including soc iso hipaa, fips, and others. pursuing these certifications and maintaining ongoing compliance inherent feature ongoing maintenance and support link. certifications can then applied applications registered with blockmason link. compliance with these certifications can burdensome and expensive, but with blockmason link, developers can let handle compliance for their app. portability blockmason link just layer top smart contract, developers their users can elect use the smart contract directly any time. any data developer has loaded into the blockmason link layer can exported any time. developer may delete all his her data from blockmason link, and have any funds remaining the app's eth accounts transferred out. blockchain-enabled mobile applications for the first time, blockmason link enables the uncomplicated creation walletless, blockchain-enabled mobile apps. because link generates simple web api, any developer can create mobile application that seamlessly interacts and integrates with the blockchain. additionally, link potentially disrupts app store censorship third-party applications that send and receive cryptocurrency. use cases link applicable any smart contract dapp currently being developed, its use cases are near infinite. any outward-facing dapp that interacts with ethereum other programmatic blockchains can (and should) use link. with that mind, here are few general use cases: traditional application developers many traditional application developers are interested harnessing the power the blockchain but don't have the resources technical knowledge so. instead facing the challenges hosting their own nodes the hassles using infura, developers may now connect the blockchain using link's web apis, creating blockchain-powered application minutes. for further comparison existing infrastructure services, including infura, see "the next step managed infrastructure" below. link also features multi-chain support, for dapp developers that desire connectivity many chains without the hassle supporting each chain turn. developers may rapidly launch application all platforms with nodes hosted blockmason, without having code anything other than javascript. it's the easiest possible way develop decentralized application. hybrid deployment with link, finally possible run web services alongside ethereum-based blockchain services. while this has near limitless applications, simple and familiar example would hybrid-blockchain authentication authorization service. delegating certain tasks the ethereum network, developers can utilize blockchain only for those aspects the product which benefit from added decentralization, all while having that completely indistinguishable from other non-blockchain applications. icos and product legitimacy with many icos launching each month, can difficult for new projects differentiate themselves. additionally, prospective buyers are rightly skeptical icos not attached working product prior their token sale. connecting smart contract link, ico project teams can generate easy-to-use application that demonstrates their product's legitimacy all potential buyers and allows users test product before they buy the token. link will host all relevant nodes and provide the necessary web apis, allowing the product take center stage. private side chains for enterprises while have primarily focused ethereum-based smart contracts that the most active programmatic blockchain link supports smart contracts developed any blockchain. that makes link particularly useful for anyone looking establish private side chains, trend that has caught among large companies like ibm. however, even private blockchains still have high barrier entry for the average employee such company. with link, companies like ibm can generate simple apps that issue credentials registered employees, allowing anyone associated with the company interact with privately-run smart contracts that deal with everything from supply chains employee management. the next step managed infrastructure the ethereum network, currently exists, entirely dependent several innovative and vital managed-infrastructure providers, most notably infura. infura makes possible interact with the ethereum network without installing and maintaining costly ethereum infrastructure, addition improving the ability the network scale times high demand. essence, infura managed ethereum client node, with direct awareness smart contracts. link improves this premise providing way for developers and users interface with smart contracts from outside the ethereum infrastructure layer. appreciate these nuances, important understand the differences how various infrastructure options services operate. client applications operate the application layer, interacting with smart contract were native restful web service; blockmason link operates the web service layer, providing restful interface for interacting with smart contracts; infura operates operates the infrastructure layer, providing thin wrapper around direct interaction with the ethereum network, with special treatment for smart contracts; ethereum operates the foundational persistence and computation layer. now, let's examine chart comparing the different aspects and features various infrastructure for client application interface and end-user ethereum network access. the table indicates, link provides vital service that builds upon existing iaas architecture simplifying the method interfacing with ethereum client applications. link is, essence, smart contract gateway. what infura does for the ethereum network general increasing accessibility and usability through delegated management link does for smart contracts specifically. link the natural evolution these essential services, opening programmatic blockchains and their smart contracts the general public for the very first time. link may utilized wide variety projects any field and applicable for everything from blockchain voting supply chain verification. link not single killer app; every killer app, building block without which the ethereum network, and blockchain general, will soon unimaginable. technical overview link itself runs web service deployed blockmason's cloud infrastructure. developer may link smart contract sending the contract's address and abi link. link uses the contract's address and abi generate link app. after creating link app, its creator has access each these features: web service http endpoints for each function the linked smart contract, and endpoint for querying its events. for example, constant function called getpizza would available via get https://apps.blockmason.link/example-contract/getpizza. access control developers may define how clients are allowed authenticate the application. the most straightforward authentication strategy generate api key. this api key has ethereum address that can used send eth cover transaction fees incurred that api key. more advanced authentication strategies may involve federation external identity providers via oauth saml. regardless the authentication strategy, each identity used interact with the app possesses ethereum address that can receive eth cover transaction fees. analytics link offers variety analytical tools for developers inform their understanding their app and how users are employing their smart contract. these tools include interactive charts that are searchable, filterable, sortable, and pivotable. possible queries include request volume, gas cost, and error rate (total, per function call, per account). using the elk stack behind the scenes create powerful visualization and search engines, link provides analytic tools par with products like domo kibana, all within the link user interface. api reference documentation http endpoints for each function the linked smart contract, and endpoint for querying its events. conforms the open api specification, common standard for web api documentation that both human-readable and machine-readable. https://swagger.io/resources/open-api/ client software developer kits (sdks) sdks including screen builder, editor, compiler, and linker for various programming languages that can used client apps integrate with the link app. each sdk comes complete with documentation, example code, and package hosting. constant functions are mapped endpoints using the http get method. non-constant functions are mapped endpoints using the http post method. payable functions are ignored. for example, functions involving the transfer eth (i.e: "payable" functions) are out scope. the http resource path for the endpoint mapped the function signature. for example, function adding topping pizza order: /addtopping(uint). after creating link app, its creator has access each these features. additional features are available for managing and monitoring the app: the inputs function are mapped query parameters (for get requests), json key-value pairs the request body (for post requests). for example, non-constant addtopping(string name, uint count) function would mapped post /addtopping and expect json request body that looks something like {"name":"pepperoni","count":}. numeric inputs may provided hex strings (e.g: "xfe") regular numbers (e.g: synchronized versioning the names all endpoints and parameters can renamed, and all documentation and sdks will kept sync. when making changes, link will automatically adjust the version each client sdk according semantic versioning (https://semver.org/) and will maintain backwards-compatible endpoints wherever possible ensure compatibility with clients that may using older versions. logs developer may also request logs the application's web service and audit them for administrative activity. for example, developer may audit functions such renaming endpoints and parameters adding and removing accounts. these logs are interactive, searchable, filterable and sortable. security blockmason fully committed the protection link's clients and users, well their data. have taken the following steps ensure our application reliable and secure: writing code according best practices, including extensive peer review; extensive and verifiable test coverage application code, integration static analysis tools into the continuous integration and deployment toolchain, and fully automated and auditable deployment infrastructure; professional, independent auditing smart contracts interacting with ethereum and link; offering 'bug bounties' encourage white-hat hackers identify and eradicate coding errors; undergoing quarterly penetration tests and other independent security audits part our general security hygiene. additionally, while some developers users may concerned about the risks offloading certain transactions third-party applications, link poses more risk data exposure than using ethereum itself. every transaction still logged the ethereum layer; link only retains temporary copy while waiting deliver the results call transaction. finally, even developer using account managed link, only limited amount funds cover transaction costs are ever stored that account. any time, developer may choose connect personal ethereum account instead using link-managed account. link poses risk any connected accounts. token features, usage economics blockmason has elected use traditional software-as-a-service (saas) model for link, which inline with the theme simple, familiar offering for our primary target: developers, especially those small-to-medium businesses and enterprise settings. while the pricing model for link still development, intend charge monthly subscription fees, api credit costs, combination both. developers and other link customers can choose pay these fees one two ways: using the link utility token, using traditional payment method like credit card. the link utility token the required "fuel" that provides api transaction capacity link. link user elects pay their monthly subscription and usage fees with the link utility token, discount will applied blockmason does not incur payment processing fees and other costs associated with credit card processing. the user instead pays with credit card, blockmason will use the revenue acquire link utility tokens the user's behalf and apply them their fees. initially, these will drawn from blockmason's reserve inventory pool. after the reserve depleted, blockmason will acquire link utility tokens pro-rata basis from all blockchains where the token available that time. regardless how link user pays for their usage and subscription fees, the resulting tokens will locked and removed from the circulating supply until the tokens remain circulation. therefore, all link utility tokens used access pay for the link platform will locked this initial stage, prior reaching the token supply lockup target. when the circulating token supply reaches the lockup target, the functionality the tokens will change membership model the form "staking." the token will longer consumed when using link services, providing link utility token holders with link platform access long they maintain their stake. blockmason will conduct these supply removals ongoing basis, with regular reporting and independent audits. are confident that this will provide transparency and visibility into how the link utility token operates and allow any observer the chance verify link user growth and adoption metrics. link designed support variety programmatic blockchains, the link utility token will minted with this mind. initially, link will support the use smart contracts the ethereum network. such, the total link utility token supply will minted the ethereum network erc- compliant tokens. link utility token support for alternate blockchains will added the future, line with link's development roadmap. when this occurs, blockmason will act reduce the erc- token supply via lockup ensure the total link utility token supply across all blockchains remains constant. key details regarding the tokenomics the link utility token are provided the table the next page. total link utility token supply ,,, initial ieo price per token usd total link utility token supply intended for ethereum blockchain total link utility token supply reserved for alternative blockchains marketing, bounty airdrop allocation advisor allocation team allocation circulation lockup target remove lock total circulating supply circulation lockup frequency monthly lieu traditional ico, blockmason has elected fund the development link via ieo (initial exchange offering) with our trusted exchange partners. this "early adopter" access the link utility token allows developers, startups, entrepreneurs and other potential link customers the opportunity pre-purchase their api transaction capacity. ieo run trusted, professional exchanges also avoids the many potential difficulties that come along with traditional ico, like scammers and other nefarious actors. also provides automatic post-ieo exchange listing and immediate legitimacy for the link project thanks the exchange partners' rigorous due diligence. blockmason firmly maintains that the link utility token product-use token. used provide link api transaction capacity and cover monthly access fees. however, given the continued scrutiny and lack clarity regarding regulatory issues, the link ieo will exclude citizens, permanent residents and passport holders the united states, china and india. revenue business models ensure the immediate, tangible benefit the blockchain community upon link's release, blockmason committed providing the same quality robust support and maintenance that have provided since our first products, the credit protocol and lndr, were launched year ago. link will support, developer chooses, the ability sell licenses use dapp which link will issue the paying user client developer credential access the application. this credential can restricted the developer's discretion, including limits credential length, transaction capacity. another use case link will support the formation large open source database smart contracts with basic functions, thus enabling for the first time hybrid blockchain microservices, allowing developers weave complex tapestry applications with each component precisely tuned its unique function. additionally, such database can allow developers save time and energy building the work other programmers, picking and choosing which basic smart contracts employ and which build from scratch, along with community rating system which other developers can provide feedback the functionality particular application smart contract. other considerations for the link saas model include: "freemium" link offering, with the base tier including one free dapp and one free, rate-limited client per user; pricing tiers structured around: number users (i.e. end-user credentials for mobile, desktop users); number linked smart contracts; number api requests being made; multi-user accounts (i.e. organizations teams). addition, fees may charged for providing priority customer support and 'hands-free' transaction fee handling for developers. blockmason interested growing link building community developers and clients enthusiastic about the future blockchain technology. are interested long-term partnerships well strong and social link community. believe that traditional saas model will aid achieving these goals. premium management services any the aspects account management seem overwhelming, blockmason can manage developer's application. services may include ensuring all ethereum addresses account hold sufficient eth for gas, handling user onboarding for the application, and managing payments for client application usage. development roadmap this the current edition the development roadmap and subject change: link "demo" release fully-functional product demo completely functional end-to-end demonstration experience linking smart contract and using link execute functions it. link "series fundraising round lieu initial coin offering, blockmason has elected fund the development link via traditional equity-based "series financing round. this private sale will made available close partners and associates who believe link product with lasting business potential. link "developers" release individual developers can apply for access individual developers who want use their own smart contracts with link can apply for access and begin using link. features including self-registration, polished and finished front-end user interface for managing link apps, self-funding link accounts and more. q-q programmable blockchain support expansion link will expand include support for programmable blockchains outside ethereum. q-q link "smb" release ready for small medium-sized business clients ready for small medium-sized business clients who want build port some their back-end infrastructure over link. features including support for multiple users, access control, link app usage analytics, deeper customization and more. q-q link "enterprise" release ready for enterprise-scale clients ready for enterprise-scale clients who are ready use link across hundreds thousands apps, users and clients. features including single-sign-on, directory integration, auto-provisioning accounts, highly detailed usage analytics, sophisticated filtering, sorting and search apps, users and clients, individual access control and more. future custom-requested and private blockchain support based client feedback and requests, link will expand support private programmable blockchains. future credential vending support link makes managing and monetizing smart contract applications easier than ever. developer chooses, link may sell licenses use app. link will issue the paying user client developer credential access the application. this credential can restricted the developer's discretion, including limits credential length, transaction capacity. future smart contracts database link app store registering many smart contracts one location, link will make possible the formation massive open-source database smart contracts with basic functions. for the first time, hybrid blockchain microservices will possible, allowing developers weave complex tapestry applications with each component precisely tuned its unique function. future professional standards compliance security certification compliance one the most important and difficult aspects marketing applications larger businesses and enterprise customers. many such businesses require compliance with any number standards including soc iso hipaa, and fips. blockmason intends pursue these certifications for link, and may then manage compliance the applications registered with link, saving developers significant time, energy, and money. use funds the majority the funds raised support the launch and growth link will committed the development the platform. link becomes more feature complete and begin add developers and other customers, our marketing, operations, growth and support departments will expand ensure that can maintain high level service. here estimated breakdown how plan dedicate the funds raise build, launch and grow link: link platform development (-%) the majority funds raised will used develop link per the milestones laid out the development roadmap section. necessary investments include new hires and salaries for our development team, hardware and software infrastructure and more. marketing and new customer acquisition (-%) new, paying customers are the lifeblood any business. our marketing plan includes digital advertising, email marketing, social media marketing, event sponsorships, hosting development hackathons and more. this may also include new hires the outsourcing work specialized agencies. customer support (-%) continue add new freemium and paying customers who have mission-critical application needs, our need provide immediate, high-level support will rise. our customer support expenses include new hires provide -hour assistance, hardware, software and ticket response systems, documentation, maintenance and other emergency services. operating, administration, legal and professional expenses (-%) finally, portion our funding will used cover traditional operating expenses. this can include salaries, office space, computer hardware and software, legal fees, accounting fees and other miscellaneous costs. meet the blockmason team michael chin ceo after growing seattle, michael graduated magna cum laude from washington university st. louis with degrees finance and accounting. began his career j.p. morgan's principal mezzanine credit investment group new york, then jpm's debt capital markets and syndicated leveraged finance group hong kong. afterward, michael joined intermediate capital group's investment team, ftse company with eur billion assets under management, and subsequently served managing director constance capital specializing structured financing deals. then co-founded blockmason, which created the blockmason credit protocol, system for permanently recording ledgers debts and credits between parties using the ethereum blockchain. michael investor technology companies and properties, and currently splits his time between vancouver and hong kong. devin canterberry cto devin distinguished generalist with deep background applied cryptography. steward software craftsmanship and professionalism, applying sustainable and scalable practices building libraries, applications, and teams. has served cto for transportation services startup, roadify; founder amused pony games (developer axes evil, the luxury zero-player rpg); principal software engineer silent circle (purveyor encrypted communications); and principal software engineer outreach.io scalable communications platform for sales teams). devin hails from north louisiana and graduated with b.s. computer science from the university louisiana monroe, before moving seattle now, devin building the next generation blockchain technology with blockmason, laying the foundation for new era massively distributed applications. erik mackinnon cmo having launched and successfully exited his first startup during the original 'dot com boom', erik accomplished entrepreneur with passion for building technology companies that disrupt established markets. chief marketing officer, erik excited introduce blockmason's innovative base-layer blockchain technologies the world. before joining blockmason, erik served paid media and digital strategy consultant sap, the world's premier enterprise software company. prior sap, erik was chief executive officer gravytrain, boutique content marketing and digital advertising agency founded ken cornutt director finance seattle native currently living los angeles, ken has long history working chief financial officer roles with growing startups. certified public accountant and member the aicpa, ken served senior auditor with deloitte touche before stepping into the startup arena. outside work, ken competitive chess enthusiast. william galebach software engineer will full-stack software engineer with background web and mobile apps and dapps, with focus user experience and scalability. previously worked senior software engineer farmers insurance and intelligence officer the marines. will passionate about making blockchain technology accessible for both developers and consumers. harish raisinghani business development manager harish all-round generalist having worked systems engineer, software developer, project manager, sales support and general manager for the cleantech startup pulse energy, which was acquired yardi systems. passionate about blockchain technology and has experience investing cryptocurrencies and building smart contracts and trading bots. harish grew and resides metro vancouver and engineering physics graduate from the university british columbia. blockmason, harish manages business development and operations north america. clayton savage digital marketing specialist clayton savage has joined blockmason digital marketing specialist. has lifelong passion for business, technology and human behavior. before joining blockmason, clayton worked digital marketing specialist for the world's leading knowledge management solution provider. clayton completed four-year business management degree the university british columbia. while ubc competed national business competitions, lead marketing director for the management students association and acted the sector head technology and telecommunication for the ubc portfolio management group. shares strong belief craftsmanship and sweat equity that goes into achieving the vision blockmason's technology. disclaimer this white paper presents general informational overview blockmason's current intentions with respect link, the date this document. prospective link users should rely their own evaluation link, rather than this white paper any other statements, written verbal, about link; our products are offered "as is" purchasers make their own judgments based the beta versions and documentation for the products. make warranties, and expressly disclaim all warranties, express implied, including the warranties merchantability, fitness for particular purpose, and non-infringement. cannot guarantee against service interruptions make warranties about the ethereum network other programmatic blockchains. purchasers are responsible for consulting their own country's laws and regulations. purchases our link product should based each purchaser's intended use and development the link product well each purchaser's evaluation link based its beta version and open source code. title and ownership link and all related documentation and support structure resides blockmason. blockmason reserves the right adjust the amount network capacity, and the number transactions allocated each link user, using reasonable efforts maintain efficient network operation and avoid congestion. glossary abi abbreviation for "application binary interface," ethereum concept for defining how smart contract can used api abbreviation for "application programming interface," generic term for how one unit software interacts with another http endpoint rest api endpoint technical term referring http method and resource path. common way for web servers expose functionality for other software (including web browsers) execute eth the native cryptocurrency the ethereum blockchain gas common term ethereum describe transaction fees ico abbreviation for "initial coin offering," common funding mechanism for blockchain-related projects whereby new blockchain-based token sold the general public, often serve license usage right for blockchain-based product, service network gas the name the protocol typically used dapps and other software clients for interacting with ethereum network. metamask the name popular extension for google chrome that provides software wallet for eth and other tokens operating the ethereum network; common requirement for many decentralized applications microservices architecture pattern for server software which, instead one monolithic server handling all logic, logic distributed across many loosely coupled services, each handling small domain responsibility restful web service common design pattern for server software specifying how http methods and resource paths map actions and resources solidity popular programming language for writing ethereum smart contracts smart contract concept native the ethereum blockchain, meaning unit software deployed and which runs the ethereum network web the name ethereum's official library for software written javascript use when interacting with the ethereum network dapp commonly referred "decentralized application," the term describes any user-facing app that interacts with the ethereum network thanks for your attention! all rights reserved,