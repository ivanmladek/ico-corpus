data-ownership assuring blockchain wallet for privacy-protected data exchange subtitle draft version daniel hawthorne serafin engel datawallet inc. ave san mateo, usa alex norta large-scale systems group, tallinn university technology, akadeemia tee tallinn, estonia contents introduction running case and background literature background literature goals data-exchange ecosystem high-level requirements data-provider requirements data requester requirements data-exchange architecture data-requester components data-provider components data-exchange components dynamics the data-exchange ecosystem blockchain operations create data profile create dx-contract simple data exchange data-product exchange augmented experience exchange conclusion appendix dxt token allocation ecosystem development roadmap v.--current implementation b.. data-requester system b.. data-provider system b.. data-exchange system v.--smart-contract based b.. data-requester system b.. data-provider system b.. data-exchange system v.--fully decentralized data profiles b.. data-provider system disclaimer nothing herein constitutes offer sell, the solicitation offer buy, any tokens, nor shall there any offer, solicitation sale datawallet tokens any jurisdiction which such offer, solicitation sale would unlawful. you should carefully read and fully understand this whitepaper and any updates. every potential token purchaser will required undergo on-boarding process that includes identity verification and certain other documentation, which you should read carefully and understand fully because you will legally bound. please make sure consult with appropriate advisors and others. this white paper describes our current vision for the datawallet platform. while intend attempt realize this vision, please recognize that dependent quite number factors and subject quite number risks. entirely possible that the datawallet platform will never implemented adopted, that only portion our vision will realized. not guarantee, represent warrant any the statements this white paper, because they are based our current beliefs, expectations and assumptions, about which there can assurance due various anticipated and unanticipated events that may occur. please know that plan work hard seeking achieve the vision laid out this white paper, but that you cannot rely any coming true. blockchain, cryptocurrencies and other aspects our technology and these markets are their infancy and will subject many challenges, competition and changing environment. will try update our community things grow and change, but undertake obligation so. abstract people engage more deeply and often with internet services like social media, search, and e-retail, they create ever more data. well known social-media companies and secretive data-brokerage industry monetize this personal data without explicitly consulting--or sharing the revenues with--the users who produced the content. such the dominant personal-data ecosystem. there clear need for transparent and fair data exchange based upon the expressive consent the internet users producing the data. this whitepaper specifies such system built upon user-controlled "datawallet" and blockchain-based smart contract system allow transparent and mutually beneficial exchange data between consenting parties. detail the requirements such system, its necessary structure, and the dynamic interactions its components and stakeholders through example focusing simple exchange data for dxt (the data exchange token). show how such exchange just one many use cases for the proposed data exchange describing how can provide augmented user experience for online video and music services well provide valuable insights data creators about themselves. keywords: data exchange, blockchain, smart contract, decentralized, peer-to-peer blockchain wallet for data exchange introduction people spend ever more their time engaging with online services, the volume and importance the data created from these interactions concomitantly increases. internet users are being cut out this rapidly growing economic sector that has the power impact their experience both online and off. there opportunity for data providers reclaim the value they create online from the owners the current data ecosystem. data-based economy emerges which users produce exponentialy increasing quantity content online through social media, online searches, and the purchase goods e-commerce platforms. however, the current data-based economy, centered around the 'data-brokerage industry,' deeply dysfunctional for both data creators and data consumers. the situation for data providers captured well senate court hearing the topic which concluded that customers the data-brokerage industry have control how their personal data and created content used and monetized. data providers know this--in recent study respondent state they not feel secure using social media for sharing private information. the data-sharing economy also broken for data consumers. this dysfunction can understood terms the silo, quality and ethics problems. the silo problem that the data scattered across field walled gardens with most the potential value only available the data could intelligently collated. this contributes the quality problem. the available data often the result probabilistic matching models (with uninspiring results ]), outdated, generally incongruent with true online engagement. finally, the ethics problem clear--data acquired and monetized corporations without informing the owning users. the advent blockchain technology poses remedy the current dysfunctional data-brokerage system. enables transparent systems that can simultaneously give data creators back control over their data while providing data-informed businesses the highest quality, ethically sourced data. the shortcomings the current data brokerage system and the necessity for new approach willful data exchange will only become more clear given the current technological and social trends. first, data production going dramatically ramp up. staggering all data has been created merely the past two years and this market predicted grow per year. this explosion data will further buttressed with the increasing adoption internet-of-things (iot) systems https://tinyurl.com/senate-hearing- http://www.adweek.com/digital/study-pew-public-perceptions-privacy/ briefly, the blockchain distributed database for independently verifying the chain-artifact ownership hash values that result from cryptographic digests blockchain wallet for data exchange []. second, the security and privacy situations for user data broadly lacking cloud-hosting the default for iot and social media storage despite providing wider security surface area []. assure the security and privacy data, suitable requirements-engineering framework lacking for system development. given the deficiencies the prevailing data brokerage system, surprising how few personal data-management tools are available data creators. one promising option consider the development specific blockchain-based web browsers that strive allow user control over self-generated content. however, this requires major shift user behavior with concomitant technological challenges. this paper proposes alternative that disrupts the data-brokerage system, and not the data-creators internet experience. propose blockchain-technology based datawallet that restores trust and control for users while providing datainformed businesses the most complete data profiles possible. this paper, therefore systematically describe system that enables this opt-in and mutually beneficial data-sharing ecosystem. proceed answering the following progressively refined sub-questions. what are the requirements such data-sharing ecosystem? what the static architecture the ecosystem that fulfills these requirements? and, finally, what are the dynamic interaction protocols stakeholders and this architecture that enables the desired mutually beneficial data exchange economy? the remainder this paper structured follows. section introduces running case and additional background literature. section defines the requirements for blockchain-technology based datawallet system. section shows the system architecture the datawallet that derived from the requirements. next, section explains the dynamic system engagement. finally, section concludes this whitepaper and also discusses limitations, open issues and future work. for concision, the description the system the present tense, but the fully decentralized system described the last milestone the implementation roadmap (described appendix b). additionally, for clarity focus our description the fully decentralized system (v. appendix b.). however, hosted versions these components will remain available for interested community members (see appendix b.). these security issues extend extremely sensitive information the recent equifax data breach illustrates specifically for the iot domain, the security and privacy forecast parabolically growing data production not assured since existing security frameworks not scale large networks heterogeneous devices. for example, the iot-subclass so-called wearable devices without secure hardware and software stacks can not authenticate running software and are therefore unable validate themselves. https://www.cryptocoinsnews.com/blockstack-joins-browser-wars-decentralized-tokenizedblockchain-web-browser/ blockchain wallet for data exchange running case and background literature figure depicts the current state user-content generation and monetization. internet users pictured the left, generating and consuming data through shopping, searching, and socializing the web. while each service cultivates its 'walled garden,' some choose engage large-scale data exchanges among each other. the right side figure depicts the numerous centralized interests that consume personal user data. the corporate categories the right may comprise profitoriented organizations such banks, advertising companies, tangible service-producers. additionally, government-affiliated non-profit organizations also consume socialmedia data, e.g., the police and intelligence agencies. thus, while figure shows that individual users generate and communicate their created content data without monetary compensation, the corporate side must pay the social-media cloud members for content-data generated intelligence. the individual users currently lack effective tool that allows them monetize their own data their discretion. figure current monetization situation user-generated data content social media. that why have developed personal data management platform--datawallet, and way directly profit from personal data--dx-insights, which datawallet's market and consumer insights data-application. will use dx-insights provide grounded examples throughout the subsequent technical sections. this running blockchain wallet for data exchange case just one example personal-data-based product. section highlight the expanse possible personal-data-based products describing two broad categories products--data products for the data provider (e.g. for introspection, decision making, and self-improvement) and data products that augment existing services customizing them with the user's data. background literature now highlight the literature that motivates our approach and the terms necessary understand the methodology employed the subsequent sections. our presentation the datawallet ecosystem follows the well-established model-driven design (mdd) methodology ensure quality system design, architecture, and implementation. line with this methodology present series formalizations that provide increasingly deeper treatment the static and dynamic features the proposed ecosystem. employ goal-model describe the requirements the system, uml component diagram outline the static architecture, and finally uml sequence diagram illustrate the dynamic behavior the system. now describe these formalizations turn. first, goal models are part the agent-oriented modeling (aom) method that employ formally specify the features the blockchain-based datawallet ecosystem. aom goal models use the notation figure capture the functional requirements system the form functional goals, non-functional requirements, 'quality goals', and agents (who may human artificial, i.e. software agents) with specified roles. adopt additional symbol, the right pointing arrow, for denoting multiple inheritance higher-level functional goals lowerlevel functional goal, seen figure figure icons aom goal-model notation []. the center aom goal model functional goal termed 'value proposition'. this captures the overall systems goal and requires hierarchical decomposition for establishing manageable development complexity. quality and emotional goals are attached respective functional goals and depending the position fact, dx-insights simply the first product available open data product exchange mdd entails front loading activities system-design process which results high degree generated code and testing instances. background literature blockchain wallet for data exchange the hierarchy, all refining functional goals must also satisfy assigned quality goal. the same holds for roles and their relationship the functional goal hierarchy. agent agent agent active ob(dep) active ob(pic) pictures ..: act(pic,value,value,value) (a) (b) figure notation uml component diagrams (a) and sequence diagrams (b). second, deduce technology-agnostic uml component diagrams from the aom functional goals specified the goal model specify that static structure the datawallet system. figure (a) shows the uml notation elements where components are labeled rectangles. components provide interfaces for intercommunication and are further refinable with sub-components. also employ actors indicate how components interact with the different stake-holders accordance the aom goal-model actor-positions. finally, third, use uml sequence diagrams specify the dynamic behavior the datawallet system. figure (b) shows example with communicating entities the top shown labeled rectangles. underneath each entity dashed line denoting timelines which bars show when respective entities are active. labeled directed arcs between those bars shows communication-message exchange along the timelines. the aim the described mdd approach capture the distributed-systems nature the datawallet ecosystem. while figure reflects the current data ecosystem where the majority data users produce inside social media walled gardend, the advent iot, cyberphysical systems (cps) will result new dimension which users will increasingly create data. cps are internet-integrated sets smart objects, such iot-devices, that may orchestrated clouds for complex processing tasks. such, cps integrate computational and physical capabilities that allow for interaction with humans through diverse means []. such novel interaction vectors have the promise expand the human's capabilities and background literature blockchain wallet for data exchange embodiment through computation, communication, and control enable the nextgeneration avionics and vehicles, smart cities, industry production systems, ehealthcare, etc. finally, pertaining blockchain technology, smart-contract technology essential for the datawallet system achieve traceability and security. essential for smart contracts decentralized validation transactions for which so-called proof-of-work (pow) the most often used. smart contracts employ public distributed ledger called blockchain that records transaction events without trusted central authority. the current smart-contract standard ethereum [], despite some widely acknowledged drawbacks. first, pow transaction validation does not scale and thus, ethereum not feasible for most industry applications. second, the ethereum affiliated solidity smart contract can not formally verified and was recently hacked because security flaws resulting loss ca. million more scalable smart-contract solution that uses proof-of-stake (pos) transaction validation and blockchain sharding []. for example, the smart-contract system qtum uses pos already successfully its application. goals data-exchange ecosystem define the goals and requirements data-sharing ecosystem built upon expressive consent using the goal model agent-oriented modeling (aom). the aom method socio-technical requirements-engineering approach used model dynamic and complex systems composed both human and software agents. aid comprehension the requirements the entire system, decompose the model into coherent pieces centered around the two primary stakeholders, namely the data requesters and the providers. begin describing the joint high-level requirements the data exchange section and then turn the requirements the data providers section finally, conclude describing section the requirements the data requesters. https://www.wired.com///-million-hack-just-showed-dao-human/ https://bitcoinsmagazine.com/articles/ethereum-classic-hard-forks-diffuses-difficulty-bomb/ note that when considering the requirements the data requestor, the focus lies those who desire decentralized profile management solution which the final step the technology development outlined appendix building from the centralized profile management solution currently developed datawallet. blockchain wallet for data exchange high-level requirements seen figure the principal value proposition both primary stakeholders the ecosystem, the data requesters and the data providers, engage consensual, transparent, and secure exchange around data. seed this exchange, data requesters need clear and easy method creating data request and incentivize its fulfillment. similarly, data providers who either offer customizations existing services build novel services based upon data need way offering services conjunction with requesting the necessary data and receiving compensation. enable this structured data request, data providers require easy, secure, and transparent method creating and managing collated data profile. they then need fair and transparent means explore the available data requests, and engage those they choose to. similarly, they require means customize their existing services and engage new services built upon their data profile. these are quality goals the system, pictured figure and structured according now turn describing each quality goal length. figure root goal model for the data-wallet ecosystem. interoperable means that the core ecosystem must able interface and composed with external components like data sources and applications. this challenging goal given the heterogeneity and dynamism the external interfaces for existing data sources and applications. secure indicates that the datawallet ecosystem must resist unauthorized usage attempts and denial service attacks while providing services trusted data providers and requesters. flexible data exchange indicates the ability the system integrate diverse and heterogeneous high-level requirements blockchain wallet for data exchange data and data products with uniform interface. usable means that the datawallet ecosystem must clear and approachable for both data providers and data requesters. error avoidance pertains proactively anticipating and preventing commonly occurring collaboration errors. error handling ensures system support for logging and gracefully handling software errors the ecosystem. learnability refers minimizing the time takes users master the datawallet ecosystem. transparent data exchange pertains ensuring both that the data provider and requester have clear understanding the data points, compensation, and services being exchanged, and that they are each away each other's previous reputation. finally, fairness the datawallet ecosystem means that the stakeholders are treated without favoritism discrimination and that all exchanges are clearly defined and explicitly accepted. additionally, there are quality goals that are not discernible during any particular interaction with the datawallet ecosystem. integrable indicates that all component must conform specified interface facilitate the interaction functionally contained components. modifiable means that the system must adapts during its lifecycle the application context, e.g, accommodate new data-format standards. data-provider requirements the hierarchy figure represent the data-provider core requirements--managing the data profile and available contracts. managing the data profile requires assurances that the data secure and private which necessitates private key management and storage which used encrypt the data. the provider requires control which data included the profile and which fields are exposed the data exchange what point time. the collation the data profile requires the linking the data sources, possibly though api access keys that need stored. this collated data profile should updated according the provider's data-directives. the second refining hierarchy figure illustrates the data providers' requirements for engaging and managing available data and product contracts. the core functionality desired find available contracts accordance with the provider's data directives providers require access different kind contracts--simple data requests like those posted dx-insights, novel data products, personaldata-based augmented experience existing products. each these three kinds contracts may targeted/restricted particular population providers that needs automatically managed for the provider. once accessed, the provider needs able accept reject contracts. fulfill accepted contract, providers depending their optimal trade-off between privacy and efficiency they can choose make some demographic fields available the contract search expedite the process data-provider requirements blockchain wallet for data exchange figure data-provider profile management and contract engagement goals. need able send the agreed upon data points, which requires isolating the data points, decrypting them, check and communicate the data's validity ensure fidelity, e.g., through 'data hash' match, and ideally re-encrypting them with the requester's public key ensure the sanctity the transfer. contract management also necessitates interacting with escrow service send and receive dxt after the exchange has completed. finally, all transactions should recorded easily-accessible and persistent log. data requester requirements the goal model refinement for the data requester figure displays their two primary requirements. first, they require being able create data request exchange for compensation (dxt). second, they desire able offer data product which requires specific data points, and therefore, much the same functionality simple data request. therefore employ the multiple inheritance symbol highlight the overlapping goals, and use colorized goals indicate where the requirements diverge (breaking multiple inheritance, see section for discussion). figure shows, both data requests and product offers need the ability specify the required data points, and optionally specify particular population for which the contract valid either through demographic parameters, through data requester requirements blockchain wallet for data exchange figure data requester goals. grey shaded goals are optional, and colored goals are owned the correspondingly colored parent (breaking multiple inheritance). access code/qr code. they then also need the ability ensure the data they receive not able interpreted along the transfer process, which accomplished sending public key the data provider encrypt the data prior transfer way that can only decrypted with the requester's private key. the data they receive has able verified, e.g., through hash match. valid data must enact the specified release function. for the data request, the release dxt allocated escrow. for data product, this requires the release the promised service. finally, all transactions must recorded easily-accessible and persistent log. having specified the requirements the data requester and provider terms aom goal models, now turn the architecture that satisfies the requirements. data-exchange architecture outline the core architecture system that satisfies the requirements for both the data providers and the data requesters previously outlined. figure shows the overall component diagram the datawallet ecoystem. note that there are three parts the figures that group the components for the data provider, data-requester and data-exchange components respectively. each part contains crucial and central manager component--the data-profile manager, smart-contract manager blockchain wallet for data exchange and the request manager--whose multiple functionalities are also depicted. figure uml component diagram the data-wallet ecosystem. describe each part the architecture turn. section describes the components supporting the data requester. section denotes the corresponding components the data provider. finally, section details the blockchain-employing data-exchange components that mediate the data and service exchange between providers and requesters. data-requester components the core component that the data requester directly engages with the request manager and provides two interfaces--an api for programmatic requests from data apps and expert users and user-friendly web-based system. the request manager allows for two major behaviors. first, allows for the creation new data request, and second, supports querying the status existing requests and accessing the resulting data. the request manager first guides new requesters through the creation profile and least one public-private key pair facilitate encrypted data transfer. the request manager then allows requesters create data requests populating data-contract 'template' (dx-contract template), specifying the information table abstracted interface, 'data api', collect data points that address common use cases, provides alternative manual contract specification. the data api built upon pool ready-made contracts developed and updated the datawallet and the community for common use cases. data-requester components blockchain wallet for data exchange turn the template into full-fledged data exchange contract and post the dx-contract that table depicts, the contract exchange requires the requester allocate the specified dxt into the escrow and affix the public encryption key the contract. these data requests are placed the open request section the contract exchange. for example, the dx-insights app, the first product the data application exchange, generates data requests for companies looking for customer and market insights based upon collated social media data from specific populations providers, all which are viewable the open contract exchange. mandatory field optional operationalizing action contract type data request data product data points requested (e) what data used for compensation (dxt) product price (dxt) number data providers category product (e) product description (optional external rolling adoption threshold describing links) product-delivery mechanism provider(s) demographic parameters (e) take-down date for request expiration data format, pre-processing preferences (e) data routing port (if not the standard requester data-manager) allocate specified dxt into escrow (and additional percentage support the contract-enactment ecosystem) attach public encryption key table list the template fields for dx-contract. the first column specifies all the fields associated with data request, while the second column indicates all fields associated with data-product offering. indicates enumeration field, i.e., field chosen from pre-specified list options. addition the open request section the contract exchange, there the data product section, whose contracts are similarly created. seen table shares some the same fields data request, but requires the specification additional fields such the price the product (in dxt) and specification how the data application delivered upon execution the contract. the application delivery mechanism can either contract-internal logic that, for example, provides access code and link the data provider, description off-chain delivery access the product. for example, datawallet provides personality analysis product that based upon provider's messages social media. the contract the data product section the contract exchange indicates the required data points, the price for the product dxt, and the delivery mechanism. the latter uniform resource locator (url) transferred the provider's profile manager that connected the hosted personality profile with embedded, initial password, data-requester components blockchain wallet for data exchange which can subsequently changed. through the request manager, requesters can also manage the contracts they have placed the contract exchange. for 'rolling' contracts that allow providers immediately execute the contract, requesters can see the current number executed contracts and the resulting data (if the request manager's data collection repo used). for thresholded contracts, requesters can see whether has executed (or set alert when the threshold arbitrary number providers have staked the contract). data-provider components data providers interface with the data-exchange via their data-profile manager that has two major responsibilities. first, constructs and maintains the provider's data profile, either through cloud-based service, the provider's local system. second, enables the provider use this profile and engage with contracts the data exchange manager. the data-profile manager constructs and maintains the provider's data profile accordance their data directives. the provider's data directives determine which data retrievable from external data sources customize the profile and search-agent behavior. for example, provider shares likes and engagement times from social media company, but not his private messages. additionally, data provider may specify that they want their respective data-profile updated regular specified intervals, on-demand. they could also customize their search-agent have access their age and geographic information more quickly find viable contracts. given the data directives, the data-profile manager coordinates with the requester and the profile-key server construct and maintain the provider's data profile. first, the data-profile manager guides providers through the generation profile encryption key which then split with the 'remote' half the key being stored the profile-key server ensure single point failure. the data-profile manager enables providers leverage their data the contract exchange through its coordination the provider profiles with the profilekey server, smart-contract manager, escrow, and the provider's search agent. described section the search agent finds dx-contracts that are consistent with the requestor's data profile and directives. for example, the search agent returns compliant contracts posted the dx-insights app provider searching for contracts the open exchange acquire dxt for data. execute the contract, the data-profile manager must isolate the specified data points, decrypt them with the combined local and profile-key server split-key, format the data specified the contract, re-encrypt the data with the requester's public key and send data-provider components blockchain wallet for data exchange the resulting data the smart-contract manager where the data routed either the request manager's data collection repo, external data application, server, specified the contract. the execution this contract described detail below section data-exchange components figure depicts, the core component underpinning the data-exchange the smart-contract manager which coordinates the execution and blockchain interaction dx-contracts. note that much the functionality described this section the province the smart-contract manager component executed the smart-contract itself (see section for the dynamics the blockchain interaction throughout the lifecycle dx-contract). this requires the coordination the blockchain components, the escrow and contract-evaluater ensure the compliant execution dx-contracts, well the provider's data-profile manager, search agent, the request manager and data applications components. the smart-contract manager hosts the dx-contract exchange that internally factored into two categories--the data request exchange and the data product exchange. each have public 'open' section and 'targeted' section that only viewable providers with the appropriate rights (see section for details about this distinction). the smart-contract manager provides interface the data provider's search agent that allows access compliant contracts, which conform the provider's directives and coordinates with the search agent and the provider's data profile verify that the latter compliant with the requester's specifications (see section for the details this process). the contract evaluator needs verify various elementary aspects smart contracts such the soundness control-flow, dataflow, resource allocation, exception, and compensation management the other hand, the smart-contract manager also coordinates the enactment contracts, e.g., checking ensure the data transferred compliant and then signaling the release the dxt the provider's data wallet. the smart-contract manager follows specific lifecycle that comprises specific setup [], rollout and enactment and rollback with termination phase []. dynamics the data-exchange ecosystem this section describes and formalizes the dynamic behavior the decentralized datawallet ecosystem with uml sequence diagrams (in accordance with the notation figure (b)). the sequence diagrams show the exchange data, value data-exchange components blockchain wallet for data exchange stores (dxt), and data services between data providers and requesters with the components described figure all exchanges described below ensure that the data provider knows exactly what data being exchanged, the data never available clear text, the data only recoverable the specific requester signified the contract, and the requester getting data that conforms their specifications. ensuring these features require transparent and auditable software agents maintained datawallet, smart-contracts that ensure transparent compliance all parties, and the judicious use asymmetric cryptography between data providers, data requesters, and datawallet maintained software agents. the remainder structured follows. section discusses the blockchain transactions that consider for achieving event traceability. section describes the creation and management data profile data providers. section shows data requester creating and posting data-request smart contract term dx-contract. section details simple data-transaction such those conducted dx-insights. slight modifications the basic dynamic behavior required for simple data-transactions enables more sophisticated data and product exchanges. this broader functionality shown section which details how data products designed for the providers end users can exchanged, and finally, section which describes how data provider can provide data augment one their existing services. blockchain operations storing events blockchain costly terms computing power and transaction fees. the case ethereum, pow (solving cryptographic riddles for transaction validation) proves performance and scalability bottleneck. thus, prudent define the minimal set transactions that allows for the required traceability the datawallet ecosystem. role number operation datawallet created (uid) data sourced smart-contract deployed dxt escrow data sent data received data checked dxt received smart-contract completed table blockchain transactions for the datawallet ecosystem. table lists the operations with the rq, pr, and columns denoting the roles data requester and data provider, smart-contract manager, respectively. the next column gives operation that will refer throughout the remainder blockchain operations blockchain wallet for data exchange this section clarify how blockchain operations are used. the right-hand column briefly labels operations. note that keep the set blockchain operations minimal limit computational and transactional costs. the minimal set operations chosen optimize the utility landscape that spans cost, performance, dxt tracking, and latency calculations with respect the current technology. now provide more thorough description each operation indicated table operation stores the unique (uid) newly created data provider and requester accounts. operation registers when data source integrated into provider's profile. both the time and source are recorded. operation saves every contract placed upon the exchange. operation records the deposit dxt the escrow associated with the contract. operation and indicates when data sent the provider, received the requester, and checked against one-another assure fidelity. operation stores the event when dxt have been received the provider. finally, operation records the successful enactment and termination smart-contract. create data profile data providers create local data profile through datawallet supplied application that optionally hosted locally with the data provider. figure shows the message-exchange protocol for data-profile creation between the responsible agents. note that the message-labels arcs figure and all other sequence diagrams section represent pseudo-code that use facilitate the protocol explanations. the creation profile initiated the data provider who interacts with their data-profile manager. the manager orders the creation the profile based upon the users unique identification (uid) cr_profile(uid) and the creation private user-key cr_pv_key(user). then splits the key. transmits half the key the profile-key server pv_key(uid), and stores the other half locally. pnext, the data-profile manager requests rq_fill(dd) that the provider fill out update(dd) their data directives control/customize their data profile and searchagent behavior. the relevant directives are transmitted the profile-key server and the search agent. for example, the types/categories requesters the provider wants consider (either exclusion via blacklist, inclusion via whitelist) transferred the search agent. then the manager requests access the data the technology improves the optimum point the transparency/efficiency trade-off will change the details this section follow providers who opt for locally hosted data profile, but data providers who prefer utilize datawallet's cloud profile hosting can also engage with the exchange create data profile blockchain wallet for data exchange figure data-profile creation uml sequence diagram. points the provider specified from each external data source rq_acces*(dd) for most external data sources, this requires the provider explicitly authorize the sharing the specified data points rq_authorization(dd). when the provider grants this authorization gr_authorization(dd), the resulting data keys (in some cases api keys that provide programmatic access the data) are transferred the profile-key server. then construct the provider's collated data profile, the data-profile manager requests the data for each data source specified the provider's data directives. this requires requesting each data source's key rq_d_key*(uid), receiving d_key*(uid). with the data key, the manager then requests the data from the external data source rq_data*(uid, d_key). after receiving all the data data*(uid) and collating process_data(uid, dd), the manager encrypts the resulting profile encrypt(pv_key), which requires requesting and receiving the remote half the private key rq_pv_key(uid)/pv_key(uid). finally, the completion the profile stored the blockchain operation note that functions that are repeatable are indicated with asterisks, e.g. fn*(param). this instance requesting access will done for each data source specified the provider's data directives create data profile blockchain wallet for data exchange table specifically, the timestamp and uid the profile stored (as visualized with the red-circled seen figure create dx-contract figure uml sequence diagram the creation data request, dx-contract. data requesters can post contracts the open data exchange through the their request manager, which coordinates with the smart-contract manager and escrow described section seen figure order create contract the requester first selects template select_template(uid) from the pool available the smart-contract manager. the request manager ensures all required fields (see table are completed rq_fill(fields). the request manager then creates the contract create_cntrct(fields), and posts the smart-contract manager along with the contract (cid) and the provider's public key (pub_key) post(cid, contract, pub_key). this contract posting saved the blockchain (operation the request manager also posts the necessary dxt into the escrow account associated with the contract post(cid,dxt). this dxt allocation recorded the blockchain (operation and communicated the contract the smart-contract manager. simple data exchange once dx-contract (see section placed the open-exchange viewable the data providers' search agent. figure describe the process which provider finds and executes data request. while users likely prefer the agent run batch mode, examine the sequential fetching and evaluation contracts for clarity. initiate search for simple data request the open exchange, data provider directs their search agent inspect the contracts posted the open-exchange rq_open_contracts(uid). order for request viable for create dx-contract blockchain wallet for data exchange data provider, the provider needs possess all the data points specified, and conform the (optionally) specified demographic information. seen figure providers can, through their data directives, grant the search agent relevant information ensure that all contracts returned satisfy both conditions. granting the search agent the relevant data enables performing contract viability checks the optimized contract management environment. figure therefore assumes that the search agent has all necessary information. otherwise, additional communication and coordination are required between the search agent, the dx-contract, the provider's profile manager, and the profile key server decrypt the relevant data points and then ensure that they conform the dx-contract's specifications. example this process dx-insights posting contract section and table for example, dx-insights could looking for the favorite television shows and musical artists year-olds who live cities the east coast. data provider who was looking exchange some data for dxt would able quickly find such contracts that are viable for them they have given their search agent the relevant information. this case that would the list fields available their data profile, which include favorite shows and musicians, well the values key demographic parameters like age and location. once request has been determined viable, the data provider has the option consent the contract consent(contracts). the provider consents the contract then their profile manager selects and decrypts the agreed upon data. this accomplished requesting the private profile key rq_pv_key(uid) from the profilekey server and combining with the locally stored half. next, the data hashed and sent the contract data-hash(cid) reference for the fidelity the data transfer. the profile manager then encrypts the data with the requester's public key encrypt(req_pub_key) (which provided with the contract). this point, the contract requires, the provider stakes dxt into the escrow deposit+(dxt). finally, the encrypted data sent the specified port the hosted request manager other compliant system. once the request manager receives the data decrypts with the appropriate private key decrypt(req_pv_key). then sends hash the decrypted data the contract manager data-hash(cid). this triggers the contract manager employ the contract evaluator ensure that the sent and received data hashes match, and that all other conditions the contract are met. the contract fulfilled result(cid) the contract manager instructs the escrow release the specified dxt release(uid,cid) the data provider. finally, the transaction appended both the providers' and requesters' logs. the data-requester (and only the data requester) able decrypt the data they receive given the asymmetric cryptography scheme employed. simple data exchange blockchain wallet for data exchange figure uml sequence diagram the execution simple data request. the blockchain-transactions are indicated figure with the numbered red dots that correspond the transaction ids table thus, when the provider stakes dxt (if required) this stored also recorded when the data sent from the provider's profile manager (operation and when received the request manager (operation operation record when the contract evaluator has validated the data exchange and other terms the contract prior contract enactment the smart-contract manager. operation indicates when the dxt received the provider. finally, operation terminates the contract enactment. the next two sections describe how minor alterations the exchange dynamics outlined here can allow for multitude data and product exchanges. simple data exchange blockchain wallet for data exchange data-product exchange instead requesting data order offer external product such dx-insights conducting research, some applications the app exchange are services for the data-providers themselves. the dynamics such data product exchange shares much with the previous spot data exchange figure but optionally requires the data producer exchange dxt addition their data, and must ensure the service delivery. figure reflective data-wallet experience uml sequence diagram. consider the example figure developer who has designed application that checks dark web sites see user's emails and passwords have been compromised. they must specify contract described above and, described section and table additionally must set the category product from enumerated list, concisely describe the product the contract, optionally referencing additional resources through external link, describe the product delivery mechanism, state the amount dxt required for the product and can optionally utilize smart-contract for the delivery method. for example, product access password check can required for the token released. the case figure the developer uses the provider's public key encrypt the password and transmit the data-product exchange blockchain wallet for data exchange data provider and optionally requires hash validation. note, the requester must still stake small amount dxt facilitate the contract management ecosystem. after the completion the data product contract, uploaded the data product exchange where viewable data-providers. note that data products can also targeted specific providers using, e.g., codes, described the next section. for example, providers then searching the data security category applications see the application and (after the viability checks discussed above) choose exchange for the product. the provider's data profile manager enacts the data transfer previously described. however, there are additional optional steps placing the specified dxt into escrow and providing public key for access code encoding. continuing with our example, the token would placed escrow until both the data and product access have been verified (via hash comparison the smart contract). augmented experience exchange specifically targeting customers, developers and businesses can augment their users' experience with their products. for example, music-streaming service can enhance their recommendation algorithm through personal user data. the dynamics such augmented experience exchange elaborates the previous data service exchange, but requires special targeted access rights the contract. augmented experience contract must additionally specify the access rights. the simplest way restrict access (reasonably) assume only people expressively invited have access the contact's unique hash leveraging the targeted exchange's 'security through anonymity'. necessary, additional measures can taken, e.g., requiring data providers supply passcode. this hash can communicated the data provider through code, manual input into the provider's profile manager. data provider's search agent can then access the targeted contracts they have been made aware of, and after checking the viability the contract, give providers the option consent and engage the contract. the dynamics this interaction parallel those the data service exchange albeit with additional complexity external the exchange. the data application developer must ensure that the augmented experience built upon the provider's data and granted their associated account. conclusion this whitepaper presents the datawallet ecosystem, blockchain-technology based data-exchange application that allows data producers reclaim the data they cre- augmented experience exchange blockchain wallet for data exchange ate online from those that use for their own profit. giving data producers fine-grained control their data, datawallet solves several currently existing problems, not only for the data producers, but also for the data consumers. first, the silo problem overcome being able deterministically combine datasets across the walled gardens the internet. second, collating these datasets intelligent way via smart contracts, resolves the data quality problem. third, the ethics problem resolved ensuring that every data point was expressively consented shared the people who produced it. consequently, this whitepaper presented requirements that resolve these three issues for data consumers well the injustice monetizing people's data behind their backs. the paper then derived the static architecture the datawallet-ecosystem from these requirements and subsequently described how its dynamic behavior enables disintermediated data-exchange using blockchain based smart-contracts. the datawallet requirements show that the ecosystem's main value proposition facilitate the secure and consensual exchange data. section the value proposition was hierarchically refined with functional sub-goals that were assigned the stakeholders data provider and requester. the former controls the refining datawallet functions managing data profiles and managing available contracts. the latter controls the functions for creating data requests and offering data products. section derived static architecture for the datawallet ecosystem from the goal models, which resulted three coherent sets distributed components. the data provider group components are data-profile manager that coordinates security through profile-key server, the creation and maintenance data profile through external data sources, and search agent interface with the smart contract exchanges. the blockchain-technology driven data exchange comprised smart-contract manager that coordinates with dxt-housing escrow and contract evaluator. finally, the data requester group components centers around requester-manager component that interfaces with the escrow, the smart-contract manager, and the provider's data applications. addition these three groups components the data-exchange contract template essential element the static datawallet ecosystem comprising mandatory and optional data fields, and specifications for operationalizing actions for data requests and products. section the running case was used show several interaction protocols between the architecture components. outlined the minimum set eight blockchain operations that allow for immutable dynamic protocol-event traceability. consequently, showed four running cases the dynamic protocol for creating data the quality goals the system must realized the implementation with architecture and software styles and patterns, which are out focus for this whitepaper. blockchain wallet for data exchange profiles, performing data spot-transaction for the provider consuming additional music, data-product exchange where the data provider checks has been hacked, and augmented experience exchange where the data-wallet requester starts media campaign. note that all four protocols show which points time the blockchain stores transaction events executing the eight detected operations. the resulting system will developed stages, described appendix b.. however, each stage the development represents viable product that addresses pressing issues for both data providers and data consumers, and culminates fully disintermediated, consent-based, data exchange. the resulting system has the potential nurture the next generation personal data products and ai-based customized experiences, finally allowing internet users make their data work for them. references c.c. aggarwal and c.x. zhai. mining text data. springer science business media, alqassem. privacy and security requirements framework for the internet things (iot). companion proceedings the international conference software engineering, pages acm, arias, wurm, hoang, and jin. privacy and security internet things and wearable devices. ieee transactions multi-scale computing systems, ():-, baheti and gill. cyber-physical systems. the impact control technology, :-, balasubramanian, gokhale, karsai, sztipanovits, and neema. developing applications using model-driven design environments. computer, ():-, bell. uml basics: the component diagram. ibm global services, bentov, gabizon, and mizrahi. cryptocurrencies without proof work, pages springer berlin heidelberg, berlin, heidelberg, bhargavan, delignat-lavaud, fournet, gollamudi, gonthier, kobeissi, kulatova, rastogi, sibut-pinote, swamy, and zanella-beguelin. formal verification smart contracts: short paper. proceedings the acm workshop programming languages and references blockchain wallet for data exchange analysis for security, plas pages new york, ny, usa, acm. d.m. blei. probabilistic topic models. commun. acm, ():-, april chung, b.a. nixon, yu, and mylopoulos. non-functional requirements software engineering, volume springer science business media, dai, mahi, earls, and norta. smart-contract value-transfer protocols distributed mobile application platform. url: https://qtum. org/uploads/files/cfdcaddbccff. pdf, dalvi and suciu. management probabilistic data: foundations and challenges. proceedings the twenty-sixth acm sigmod-sigactsigart symposium principles database systems, pods pages new york, ny, usa, acm. zyskind g., nathano., and pentland decentralizing privacy: using blockchain protect personal data. ieee security and privacy workshops, pages may kotonya and sommerville. requirements engineering: processes and techniques. wiley publishing, kshetri. privacy and security issues cloud computing: the role institutions and institutional evolution. telecommunications policy, ():- luu, narayanan, zheng, baweja, gilbert, and saxena. secure sharding protocol for open blockchains. proceedings the acm sigsac conference computer and communications security, ccs pages new york, ny, usa, acm. norta. creation smart-contracting collaborations for decentralized autonomous organizations, pages springer international publishing, cham, norta. establishing distributed governance infrastructures for enacting cross-organization collaborations, pages springer berlin heidelberg, berlin, heidelberg, norta. designing smart-contract application layer for transacting decentralized autonomous organizations, pages springer singapore, singapore, references blockchain wallet for data exchange norta, grefen, and n.c narendra. reference architecture for managing dynamic inter-organizational business processes. data knowledge engineering, (): norta, ma, duan, rull, kolvart, and taveter. econtractual choreography-language properties towards cross-organizational business collaboration. journal internet services and applications, ():-, norta, othman, and taveter. conflict-resolution lifecycles for governed decentralized autonomous organization collaboration. proceedings the international conference electronic governance and open society: challenges eurasia, egose pages new york, ny, usa, acm. norta, vedeshin, rand, tobies, rull, poola, and rull. self-aware agent-supported contract management blockchains for legal accountability. url: http://whitepaper. agrello. org/agrello_self-aware_ whitepaper. pdf, b.s. panikkar, nair, brody, and pureswaran. adept: iot practitioner perspective, prince, li, fu, mohammed, and elder. probabilistic models for inference about identity. ieee transactions pattern analysis and machine intelligence, ():-, jan ragunathan, lee, sha, and stankovic. cyber-physical systems: the next computing revolution. proceedings the design automation conference, dac pages new york, ny, usa, acm. rumbaugh, jacobson, and booch. unified modeling language reference manual, the (nd edition). pearson higher education, sicari, rizzardi, grieco, and coen-porisini. security, privacy and trust internet things: the road ahead. computer networks, sterling and taveter. the art agent-oriented modeling. mit press, tanenbaum and van steen. distributed systems: principles and paradigms. prentice-hall, references blockchain wallet for data exchange vukolic. the quest for scalable blockchain fabric: proof-of-work vs. bft replication, pages springer international publishing, cham, r.m. weber and b.d. horn. breaking bad security vulnerabilities. journal financial service professionals, ():-, wood. ethereum: secure decentralised generalised transaction ledger. ethereum project yellow paper, references blockchain wallet for data exchange references blockchain wallet for data exchange appendix dxt token allocation figure overview dxt token allocation. blockchain wallet for data exchange ecosystem development roadmap the following describes the roadmap for development the transparent, opt-in data marketplace. there are three major milestone versions the marketplace ecosystem. our current implementation--the v., the smart-contract based ecosystem v., and the decentralized stored v.. important note that the current implementation timeline built upon number assumptions. there are both technological assumptions well community demand/business assumptions. the community demand assumptions, e.g., that there substantial demand for fully decentralized solution milestone have informed our long-term development goals. however, these plans only reflect our research and experience the current ecosystem. subsequent research and community engagement may point more desirable data storing, managing, and exchanging solutions. the technological assumptions include the emergence scalable implementations some currently unscalable solutions and open research questions. have striven factor this uncertainty into our milestone progression, but the emergence necessary technologies can impact the proposed timeline. exogenous circumstances may therefore impact this roadmap, but significant deviations will clearly communicated and explained the community. v.--current implementation the current implementation the data-exchange, data providers manage their profiles through mobile device. the data profiles are collated into central database and all data sales are mediated dx-insights. b.. data-requester system there open data product marketplace. companies interested accessing providers' data through dx-insights. b.. data-provider system the data-profile manager the datawallet mobile app, which available for ios and android. communicates with datawallet-hosted key-server and datawallet-hosted centralized database. potential data requests are posted directly mobile application. b.. data-exchange system all data exchanges originate from dx-insights and posted the mobile application. blockchain wallet for data exchange v.--smart-contract based the smart-contract based ecosystem embeds the promise datawallet--transparent, opt-in data exchanges--directly into the architecture. this stage the fidelity the system not dependent upon trusted party (datawallet). the assurances the system are structural and verifyable interested members the community. all pii encrypted with private key that only the data providers themselves posses. all data-transactions therefore necessitate the expressive consent data providers. the data product marketplace open such that data providers are not limited interacting with dx-insights; data requesters can publish products the marketplace. the data exchange open--all data requests are executed smart-contracts the blockchain. b.. data-requester system data product marketplace open. requesters can create data requests through the online interface programmatically with the api. b.. data-provider system all data stored datawallet-hosted centralized database encrypted with private key that only the data providers themselves posses. exchanges are searchable from the provider mobile app. b.. data-exchange system the data exchange open--all data requests are executed smart-contracts the blockchain coordinating the provider's data profile and the requester's requestmanager. v.--fully decentralized data profiles the ecosystem with fully decentralized data profiles the ultimate realization the self-sovereign wallet. interested providers can store their profiles systems their choosing and interact directly with the data exchange. b.. data-provider system data-profiles can created locally using open and auditable code. data profile structure and search agents are similarly open sourced and customizable (as long they provide the necessary interface smart-contract exchange). v.--smart-contract based