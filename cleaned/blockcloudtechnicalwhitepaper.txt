blockcloud: blockchain-based service-centric network stack zhongxing ming* shu yang+ li* dan wang++ mingwei xu* xu* laizhong cui+ dept. comp. sci. tech., tsinghua univ., tsinghua national laboratory for information science and technology szu national engineering laboratory for big data system computing technology dept. computing, the hong kong polytechnic university abstract--connecting hundreds billions devices, the internet things (iot) has become technology with large influence people's life. however, the future iot threatened frail connectivity, poor scalability, absent trust, cracked security and broken business model. researchers have proposed service-centric networking (scn) provide reliable connectivity and global scalability, while the trust, security and incentive services such approaches are hard guaranteed. another direction use the blockchain technology achieve trust, secure and incentive iot. however, most those solutions are based the assumption stable and well connected underlying network, which often luxury mobile and dynamic iot scenarios. this paper, describe new approach that combines the advantages scn and blockchain empower iot. propose service-centric blockchain architecture, which leverages service-driven communication paradigm support mobility and scalability. design new consensus mechanism and efficient ledger structure provide trust, security and incentive decentralized manner. finally, develop service pricing and distribution mechanism that fairly protects the profits both service providers and users the network. ntroduction with predicted billion devices [], the internet things increasingly platform for accessing services that run anywhere. applications such smart healthcare, virtual and augmented reality, vehicle telematics, self-navigating cars/drones and multi-user ultra-high-definition telepresence are envisioned common the near future (table i). unfortunately, the dream smart, safe and efficient future being threatened. inherited from the internet design, today's iot architecture facing great challenges frail connectivity, poor scalability, absent trust, cracked security and broken business model []-[]. number researchers propose service-centric networking (scn) address the above problems []-[]. scn future internet technology that provides service-aware network stack, where applications communicate directly service names instead addresses. this way, scn provides clean-slate solution for interface failover, device mobility, and global scalability []. however, scn frail terms trust, security and economic incentive the service level []. another problem scn the lack compelling and the research supported the national natural science foundation china under grant and the national key r&d program china under grant yfb and yfc, and the chinese postdoctoral science foundation under grant table iot units installed base category (millions units) category business: cross-industry consumer business: vertical-specific grand total source: gartner (january sustainably profitable business models, which the same time, holding back. many studies use blockchain provide iot with trust, secure and economically incentive properties []-[]. the blockchain the first technology that provides everyone with working proof decentralized trust []. also provides frictionless internet-native currency that allows for the first time empower sensor take part world-wide service market and immediately earn profit, which strongly incentivizes the sensor provide services the network []. however, blockchain application-layer overlay whose functions rely the underlying network. unless the underlying network provides stable connectivity and sufficient scalability, the blockchain cannot play positive role real iot scenarios, which are highly mobile and dynamic. present blockcloud, new approach that combines the advantages scn and blockchain empower iot. blockcloud, scn forms the underlying physical network that provides connectivity, mobility and scalability. the blockchain logically operates top scn provide decentralized trust, security, fairness and economic incentive. the above design concept shown figure combining scn and blockchain unified system and making fit for iot challenging task, with little previous work for reference. there are aspects our approach address this challenge. (i) design layered structure embed blockchain into scn. (ii) leverage service access layer (sal) enable service-based communications. (iii) design proof-of-service (pos) mechanism reliably verify services. (iv) develop compacted directed acyclic graph (codag) structure effectively record transactions. (v) devise truthful continuous double auction (tcda) mechanism fairly distribute services. note that blockcloud model compatible with todays internet and has clear, simple evolutionary strategy. like .pcjmjuz svtu fdvsjuz #-$,$)"*/ dbmbcjmjuz *odfoujwf 'bjsoftt &.&*/(*p fig. empowering iot through service-centric blockchain ip, blockcloud "universal overlay": blockcloud can run over anything, including ip. thus blockcloud's advantages service distribution, application-friendly communication and naming, robust security, mobility and broadcast can realized incrementally and relatively painlessly. the contribution this paper follows. design blockcloud, new service-centric blockchain architecture systematically address mobility, scalability, trust, security, fairness and incentive problems iot. design proof-of-service consensus for reliable verification iot services. develop codag for fast recording iot transactions. devise tcda for fair pricing and matching services. the remainder this paper organized follows. section presents the reason leveraging service-centric blockchain approach. section iii illustrates the architecture the proposed approach. section provides the detailed description the service-centric communication paradigm. section shows the novel proof-of-service consensus for reliable service verification. section presents the design the compacted dag and prove its effectiveness. section vii, describe the tcda mechanism and prove that strategyproof for both service providers and service users. ii. background and otivation why service-centric approach? iot exposed more challenges than traditional internet. this largely result the design today's internet design, where communications are expected happen between fixed entities []. however, the iot world, the scale and dynamic property the connected sensors are facing great challenges the sense mobility, security, scalability, network management and business model [], []. unless executives make big strategic changes, they are set disappointed they seek scale todays iot solutions support tomorrows hundreds billions things []. service-centric networking (scn) promising approach evolve the internet infrastructure away from host-centric paradigm based perpetual connectivity, network architecture which the focal point "named service". this paradigm, connectivity may well intermittent, end-point and in-network service can capitalized upon transparently. the expected benefits are improved efficiency, better scalability, better mobility and better robustness challenging communication scenarios []. for example, placing environment monitoring service near the user, may become possible for the user access locally when backhaul internet connectivity not available (e.g., after earthquake). the blockcloud team proposes improve iot the service-centric paradigm. this simple change the hourglass model, allowing the thin waist use service names instead addresses for service achievement, makes service rather than its containers first-class citizen the iot architecture. the service names blockcloud can used name chunk data conversation, the tcp/ip transport signature plus sequence number does today, but they can also name streaming service from youtube directly, rather than forcing embedded conversation between the consuming host and youtube.com. figure shows three interconnected autonomous systems (ases), each has one more data centers acting service execution environments. service has been instantiated two locations. from service management and placement perspective, the orchestrator logic needs decide which service execution environment service should instantiated. given this rich set resources, scn aims optimize the location individual service component instances according the performance requirements the application, the location its users and according the experienced demand. improving mobility: blockcloud, the mobility devices inherently supported adopting service-based communication paradigm introduced serval []. the centerpiece serval architecture new service access layer (sal) that sits above unmodified network layer, and enables iot devices communicate directly service names. the sal provides clean service-level control/data plane split, enabling policy, control, and in-stack name-based routing that connects clients services []. from the service subscriber's perspective, service provided the network and she does not need manage the direct communication with the exact end-point who provides the service. such manner, end-points can seamlessly change network addresses, migrate flows across interfaces, establish additional flows for efficient and uninterrupted service access (explained further section iii). the best our knowledge, blockcloud the first blockchain-based technology comprehensively address the mobility problem iot. enhancing scalability: traditional network, most the iot platforms provide centralized server aggregate all iot devices, data and services, publish them the web portal, and manage the subscription membership. while such centralized architecture ensures data/resource availability, renders poor scalability and high bandwidth consumption due fswjdf *otubodf: fswjdf *otubodf *$ tfs *" fig. *# tfs tfs service-centric networking overview the high volume control and data exchange. scalability the iot spaces will more challenging than webscale internet-scale applications. the bisection bandwidth requirements for centralized cloud solution are staggering, the amount data generated will easily exceed the reported trillion objects amazon []. blockcloud, the distributed nature services with peerto-peer technology makes scalability possible. service registration and discovery become the key features blockcloud, which can easily achieved from the adoption distributed hash table (dht) network (explained further section iii). why blockchain? while the service-centric approach supports ubiquitous service mobility and good scalability, does need some kind centralized infrastructures for service registration, up-todate service resolution and routing [], []. although these infrastructures can provided internet service providers (isps) using existing systems like dns, the centralized operation exposed potential risks malicious attacks and intrusive surveillance. also, the published service cannot credibly verified, which greatly harms the profits end users when malicious services are subscribed. another serious problem the incentive model, where service providers have incentive publish service the network. this because: the quantity profit for providing service cannot predicted; the achievement profit for providing service cannot guaranteed. the reason that there means build fully trusted party (either centralized distributed) perform the global accounting and profit distribution current scn traditional internet technologies. the above problems can well solved blockchain approach. one the important contributions blockchain enable the formation trust-generating mechanism decentralized manner, which makes the network trust-generating machine. another important contributors blockchain the decentralized governance and incentive mechanisms for ecosystem growth. service providers get to- kens with the help smart contracts, with the certainty getting profits protected distributed consensus mechanisms. adopting blockchain approach enhance the servicecentric network, achieve the following gains. getting trust: blockcloud, devices form blockchain network where the system runs fully decentralized manner. propose novel proof service (pos) consensus mechanism solve problems about guaranteeing truthful service. the facticity services provided the network automatically checked and guaranteed the pos consensus. cheating providers will punished even kicked out from the system. successful decentralization the iot, however, will lie not just being peer-to-peer, but also being trustless: environment which there need for participants trusted and centralized, single point failure. protecting security: blockcloud, the blockchain system and peer-to-peer network known coral form the secure backbone the blockcloud network. communication operations between devices are embedded the blockchain and service information stored coral, routed peer nodes (called service miners) and guaranteed the proof-ofservice consensus (explained future section iii). the system therefore has central point which exposed attackers and security guaranteed the consensus mechanism distributed miners who are economically motivated honest. achieving fairness: blockcloud, services are published/subscribed to/from the network. service providers and subscribers are atomically matched blockcloud. the matching process performed smart contract which cannot controlled any end-point centralized party. the smart contract runs truthful continuous double auction (tcda) that prevents cheating and maximizes social welfare the entire community. tcda mathematically strategy-proof, where there incentive for any the traders lie about hide their private information from the other traders. the best our knowledge, this the blockchainbased technology approach the global fairness service distribution iot. strengthening incentive: identifying and matching supply and demand for services real-time, blockcloud will create new marketplaces. these complex, real-time digital marketplaces will build upon the foundation established iot devices and blockchain networks expand the reach this transformation very quickly. they will enable new peerto-peer economic models and foster sharing economies. the end, the iot expected make the physical world every bit easy search, utilize and engage with the virtual world. iii. lockcloud rchitecture architecture overview blockcloud introduces new functionality top blockchains defining set new operations that are otherwise not supported the blockchain. carefully learning the lessons from the design philosophy the tcp/ip network [], and exploring the successful experience superior -bzfs fswjdf fswjdf" fswjdf# fswjdf$ fswjdf"eesftt -bzfs pvujoh fswjdfmf -bzfs fswjdf dibjo ubuf.bdijof nbsu$pousbdu -bzfs sbotbdujpo dibjo $psbm fswjdftfs fig. fswjdfmftupsbhftztufn fswjdfdibjospdfttps fswjdffrvftu #-$,$-% fswjdfmf fswjdf .bslfuqmbdf fswjdfbcmf "ibti #ibti $ibti %jtdpwfsjohsbotbdujpot oefsmzjohsbotbdujpodibjo $pnqbdufe%"( sbotdbujpo the blockcloud architecture blockchain research result [], the blockcloud team decide build layered structure. blockcloud has four layers, with two layers (transactionchain layer and servicechain layer) the control plane and two layers (routing layer and service layer) the service plane. blockcloud layers transactionchain layer: the transactionchain occupies the lowest tier. blockcloud operations are encoded transactions the underlying transactionchain. the transactionchain stores the transactions the network global ledger and. while blockcloud holds evolving concept that provides the feasibility and compatibility different underling blockchain technologies, due the characteristic iot, the chosen technology for the transactionchain layer must elastic, efficient, secure, scalable and cost-effective. currently, the blockcloud team proposes use compacted directed acyclic graph (codag), which can mathematically proved efficient for large-scale and dynamic iot scenarios []. codag improves the traditional dag structure guarantee fast confirmation time and liveness property. section vi, describe the design codag and prove its properties. agnostic the underlying transactionchain: the design blockcloud does not put any limitations which blockchain technology can used with the transactionchain, long the security and reliability properties are directly dependent the underlying blockchain. believe that the ability migrate from one technology another important design choice allows for the larger system survive, even when the underlying blockchain compromised. servicechain layer: above layer servicechain, which defines new operations without requiring changes the underlying blockchain. only blockcloud nodes are aware this layer and underlying blockchain nodes are agnostic it. blockcloud operations are defined the servicechain layer and are encoded valid blockchain transactions additional metadata. blockchain nodes see the raw transactions, but the logic process blockcloud operations only exists the servicechain level. the rules for accepting rejecting blockcloud operations are also defined the servicechain. accepted operations are processed the servicechain construct database that stores information the global state the system along with state changes any given blockchain block. servicechains can used build variety state machines. currently, blockcloud defines two state machines global service management system and service matching and pricing system. routing layer: blockcloud separates the task routing requests (i.e., how discover service) from the actual providing service. this avoids the need for the system adopt any particular management service from the onset, and instead allows multiple service providers coexist, including both commercial entity and peer-to-peer systems. blockcloud uses service files for storing routing information, which are similar dns zone files their format. the servicechain binds names respective hash (service file) and stores these bindings the control plane, whereas the service files themselves are stored the routing layer. users not need trust the routing layer because the integrity service files can verified checking the hash(zone file) the control plane. service layer: the top-most layer the service layer, which serves the actual services for the network. all service names are signed the key the respective owner service. providing services outside the transactionchain, blockcloud allows arbitrary iot services that provided variety iot devices. users not need trust the service provider because they can verify the authenticity the service proof-of-service the control plane. blockcloud designed service oriented platform, whose design was motivated the team's experience yearslong research and development service-centric networking [], [], []. communication blockcloud driven service names rather than addresses. service name corresponds group (possibly changing) processes offering the same service. applications can use names directly express their intent publish access specific services. this elevates services first-class network entities (distinct from hosts interfaces). the core blockcloud new service access layer (sal) that sits between the transport and network layers []. the sal maps service names packets network addresses, based rules its service table managed blockchain (explained further section iv). unlike traditional "service layers" which sit above the transport layer, the sal's position below transport provides programmable service-level data plane that can adopt diverse service discovery techniques. the sal can programmed through user-space control plane, acting service-level events triggered active sockets (e.g., service instance automatically registers binding socket). this gives network programmers hooks for ensuring serviceresolution systems are up-to-date. section iv, provide details the clean service-centric network stack. proof service practice, service publishers must convince their customers that they truly provide the service. blockcloud, introduce novel class proof-of-service schemes that allows proving that particular service physically provided the network announced. section describe the operations and prove the properties proof-of-service detail. global state updated. servicechain can introduce new types state machines without requiring any changes from the underlying blockchain. currently, blockcloud introduces two state machines: service machine that represents the global state the service management system, dealing with who provides particular service. market machine that matches service publishers and subscribers, through truthful continuously double auction algorithm that explained further section vii. marketplace blockcloud incentive-driven marketplace for iot services. anyone can publish service blockcloud, and anyone can subscribe service from blockcloud. there central party stop someone from doing so. service providers who contribute the network will rewarded with tokens form positive, self-growing platform that continues evolve its own. the blockcloud marketplace decentralized blockchain application built blockcloud platform itself. service providers publish services the marketplace and users subscribe services from the marketplace. also responsible for maintaining public feedback about the quality services and the reputation their providers, well other information. this information will help users evaluate reusable services. market mechanism for the efficient determination service trades must address the following tasks []. first, the buyers and sellers who would benefit from trade must identified. second, these buyers and sellers must matched maximize total gains trade. third, specific price must determined for each matched buyer-seller pair. blockcloud, propose novel truthful double auction mechanism, where multiple buyers and sellers compete with another buy and sell services. continuous double auctions (cdas) are one the most common forms marketplaces and have emerged the dominant financial institution []. the cda used because exploits the dynamics the free market balance demand and supply efficiently highly responsive and decentralized system. the blockcloud team develops truthful continuous double auction (tcda) mechanism that allows users bid for service. tcda has the following properties: state machines blockcloud supports smart contacts running state machines the servicechain layer. blockcloud can construct arbitrary state machine after processing information from the underlying transactionchain. servicechain treats transactions from the underlying blockchain inputs the state machine and valid inputs trigger state changes. any given time, the state machine can exactly one global state. time moves forward the underlying blockchain evolves and the defending against price cheating. cheating traders can not increase the profit that they not have incentives cheat. guaranteeing fairness. tcda treats sellers and buyers equally, where sellers and buyers have the same opportunity earn profits. minimizing trading maintenance cost. tcda optimizes the trading maintenance cost scale the system support large number tradings simultaneously. the preliminary work tcda was first used support service trading mobile networks, with the theoretical result published []. blockcloud, generalize the problem and use the core algorithm build the service trading fswjdfvctdsjcfs fswbmubdl vctdsjcfs fswjdf fswjdfvcmjtifs fswbmubdl vcmjti fswjdf fig. publishing and subscribing services block- cloud component the marketplace. section vii, describe tcda detail. iv. ervice centric etwork tack researchers have conducted number studies servicecentric networking (or information-centric networking) since years ago [], [], []-[]. among the scn designs, serval provides service-aware network stack, where applications communicate directly service names instead addresses and ports. the sal provides clean servicelevel control/data plane split, enabling policy, control, and instack name-based routing that connects clients services via diverse discovery techniques. carefully investigating different scn/icn technologies and combining with previous work the blockcloud team this research field [], [], decide use the serval network stack implement blockcloud's service-based communication. distributed applications (dapps) running the serval stack can publish/subscribe services to/from blockcloud, with the logic shown figure this paper, briefly introduce the serval network stack, with most the descriptions coming from the serval publication. the serval stack offers clean service-level control/data plane split: the user-space service controller can manage service resolution based policies, listen for service-related events, monitor service performance, and communicate with other controllers; the service access layer (sal) provides service-level data plane responsible for connecting services through forwarding over service tables. once connected, the sal maps the new flow its socket the flow table, ensuring incoming packets can demultiplexed. connectivity can maintained across physical mobility and virtual migrations. dapps interact with the stack via name-based sockets that tie socket calls (e.g., bind and connect) directly servicerelated events the stack. these events cause updates data-plane state and are also passed the control plane (which subsequently may use them update resolution and registration systems). figure shows the above logic. such, blockcloud gives service providers more control over service access, and clients more flexibility resolving services. for instance, forwarding the first packet connection based service name, the sal can defer binding service until the packet reaches the part the network with fine-grain, up-to-date information. this ensures more efficient load balancing and faster failover. the rest the traffic flows directly between end-points according networklayer forwarding. the sal performs signaling between endpoints establish additional flows (over different interfaces paths) and can migrate them over time. doing so, the sal provides transport-agnostic solution for interface failover, device mobility, and virtual-machine migration. handle wide range services and deployment scenarios, the controller disseminates serviceid prefixes (hashed names) blockcloud, while the sal applies rules packets, sending them onward necessary, through service routers deeper the network remote service instance. the sal does not control which forwarding rules are the service table, when they are installed, how they propagate other hosts. instead, the local service controller (i) manages the state the service table and (ii) potentially propagates other service controllers. the blockcloud responsible for registering, resolving and routing services, which supports different service deployment scenarios. due page limit, not introduce more details about the serval stack. comprehensively understand the serval architecture, highly encourage the readers read the serval paper []. "qqmjdbujpo tfs qbdf pdlfu "dujwf pdlfut ,fsofm /fuxpsl ubdl cjoe dmptf fswjdf $pouspmmfs fswjdf $pouspm"* %bub%fmjwfsz 'mpx*% pdlfu 'mpxbcmf $poofdufe 'mpx fig. %ftu"eesftt fswjdf*% fnpuf fswjdf $pouspmmfs sbotqpsu "dujpo fswjdfbcmf /fyu)pq *'psxbsejohbcmf pdl"ees %bubhsbn fswjdf "ddftt /fuxpsl serval network stack service registration blockcloud maintains service naming system separate logical layer top the underlying transactionchain which operates. blockcloud uses the underlying blockchain achieve consensus the state this naming system and bind services providers. specifically, uses the underlying transactionchain communication channel for announcing state changes, any changes the state name-value pairs can only announced new blockchain blocks. relying the consensus protocol the underlying transactionchain, blockcloud can provide truthful manner for all operations supported the naming system, like service registration, updating and matching. separation the control and service plane: blockcloud decouples the security name registration and name ownership from the availability data associated with names separating the control and data planes. the control plane defines the protocol for registering services (identified service names), creating (service, hash) bindings, and creating bindings owning cryptographic keypairs, which logically separate layer top. the service plane responsible for storing service information, mainly the service-hash pairs. consists (a) service files for discovering service hash url, and (b) external storage systems for storing service information []. service names are signed the public keys the respective service owners. devices receive services from the service plane and verify their authenticity checking that either the services hash the service file, the service includes signature with the name owners public key. our design not only significantly increases the data storage capacity the system, but also allows each layer evolve and improve independently the other. service resolution mentioned ssiii-b, services are resolve through alternative resolution networks, such dht-based ones. such cases, hash-based serviceid forwarded through service tables, ultimately registering resolving with node responsible for the serviceid. this dht-based resolution can coexist with iana-controlled resolution hierarchy, however, both simply map different rules the same service table. currently, the blockcloud team decide use coral dht. coral peer-to-peer content distribution network that offers high performance and meets huge demand. completely decentralized and self-organizing, which enables people publish content that they previously could not would not because distribution costs. also fit for mobile and dynamic networks, where simple composition previous solutions cannot achieve []. due space constraints, omit most details coral from this paper. believe that the blockchain industry still relatively young and evolving, and too early pick winning dht technology. hard predict which dht technology will operational and reliable five years from now. the layered structure blockcloud provides fully compatibility with new dht technologies, which enables the system self-evolved. service routing the service files stored coral serves pointers the device who provides the service. the route the service returned the servicechain the subscriber. when the previous service provider moves gets offline (can quickly discovered the serval stack []), the route for the particular service redirected alternative provider with the help serval. meanwhile, the service file the previous service provider updated. such manner, blockcloud supports ubiquitous mobility and service migration, which frequently happen most real iot scenarios. the coral network only stores service files the service was previously announced the transactionchain. this effectively whitelists the service that can stored the coral. the key aspect relevant the design blockcloud that routes (irrespective where they are fetched from) can verified and therefore cannot tampered with. further, most production servers that can used service miners maintain full copy all service files since the size service files relatively small (roughly per file). keeping full copy routing data introduces only marginal storage cost top storing the blockchain data. roof ervice provide services massive users, the whole network has contribute resources, including storage, computation, bandwidth, routing and data. evaluate the contributing resources historically tough problem []. this document, propose flexible model formalize the service, and solution that incentivizes correct behaviors among all participant. syntax model for single registered service, many network entities are related the process, including routers, end servers, internal cache servers, various middle boxes. for each entity, the contributed resources are composed storage, computation, bandwidth, routing and data, etc. illustrate the resources following, storage: storage end users [], servers, even intermediate nodes can used disks caches []. computation: according the contract scripts, device (or set devices) with enough capacity could chosen execute the scripts. the system designate group leader, which will assign jobs each node (group member), each node computes the intermediate results the leader, relay: the intermediate nodes that help deliver data the destination, including the last-hop delivering devices, e.g., wifi, vanet, and hop-by-hop delivering devices, e.g., wsn (wireless sensor network), routers, vpn middle-boxes, etc. which will assemble the final results. for example, can design distributed firewall intrusion detection system, where each node along the path can defend part the attacking traffic []. bandwidth: services may need download upload data the network, connection will setup between devices storing the data and end users, data will flow along the connection. bandwidth from different devices can aggregated promote the total bandwidth, especially the multi-homing scenario []. use denote network entity, denote the total proved resources, and pse pce pbe pre pde represent the proved storage, computation, bandwidth, relay, and data entity thus, the total contributed resources can seen combination different resources devices across networks. (pse pce pbe pre pde prove the reality and contribution services, several great challenges should addressed, including, the devices that act service provider should provide services correctly promised, and the services could verified other devices; the devices that provide services, and verify services should properly incentivized and penalized, such that the whole network can provide "common good" services users, avoid "verifier dilemma", including resource exhaustion ddos attack and incorrect transaction attack []. recently, many work have been devoted prove contributions decentralized network. [], the authors proposed the concept "consensus" computer, which miners are expected execute correctly. [], filecoin used reward those store data correctly, and penalize those not. [], new protocol called "verification game" devised verify the computation results and incentivizes correct behaviors. however, these work focus storage and computation, which not enough for iot network where many devices have limited storage and computation resources. while draw lessons from previous work, build new protocol that can extended the iot world. address the challenges, define the following roles the proof model. definition provide service correctly, there involves three parties, service provider, subscriber and verifier. subscriber (s): who needs and subscribes service. provider (p): who provide the service. verifier (v): who verifies the service. shown equation proof service can decomposed into proof several basic elements, including storage, computation, bandwidth and relay. among these elements, proof for storage and computation have been addressed, thus focus bandwidth and relay this document. however, different with computation and storage, which return deterministic results, bandwidth and relay are more probabilistic. define approximate qos (quality service) help prove relay and bandwidth. intuitively, the service provider promises its qos when registers the service initially. and verifiers will repeatedly try check the service. call service d-approximate, verifier try times, and more than times success. definition the dht table the routing layer will maintain approximate qos record, which {vi counter}, where denotes current verification results table represents success and represents fail), counter loops forth and back from indicating current position the verification results table, and {vi denotespthe verifiers set. say satisfies d-approximate qos with the concept d-approximate service, service provider will not penalized once fails meet qos requirements. verifiers will try many times, and the state results will stored the dht table decentralized way, thus other verifiers can read the table before trying and write into after trying. when the counter loop back (reset the system will decide whether reward penalize the provider, and reward the verifiers. finally, the specific incentive for rewarding can set according []. vi. ompacted irected acyclic raph simple survey related ledger structure achieve consensus, many ledger structures have appeared recently. they can categorized into the following classes. permissioned protocol: achieving consensus through permissioned protocol extensively studies the past years []. new node needs apply for permission before joining the network and transacting with other permitted nodes. permissionless protocol: different with permissioned protocol, nodes can freely join leave the network permissionless protocol, thus totally decentralized. can classified into on-chain model and off-chain model. the off-chain model, part the nodes can make transactions with each other privately, and summarize upload all transactions the whole network periodically (or eventually). while the on-chain model, each transaction directly submitted the network. off-chain model: accelerate the transaction speed, many off-chain solutions have been proposed. among them, lightning network improves the scalability through setting micropayment channels between users. blockstream proposes sidechains [], where independent sidechains could devised with desired flexibility, and the sidechains can communicate with the main chain through two-way peg. other off-chain solutions rely credit between transaction parties, another trusted third parties, however, the cost sacrificing decentralization. on-chain model: linear chain-based: bitcoin the first permissionless protocol that widely deployed and every transaction could carried out on-chain. bitcoin uses "proof work" "key-less digital signatures" prevent double-spending and guarantee safeness. since bitcoin, many improved solutions were springing up, like ghost [], bitcoin-ng [], these solutions tried improve bitcoin through different aspects, e.g., efficiency, fairness and usability. among them, ethereum was considered most promising, increases the transaction speed while supporting flexible smart contracts based evm (ethereum virtual machine), which users can develop decentralized application rather than crypto-currencies only. although continuously being improved, the linear chain-based solutions are limited their efficiency, for example, bitcoin only supports transactions per second and ethereum supports transactions per second, while visa supports transactions per second. [], was proved that the speed constrained the maximum network delay guarantee security. dag-based model: break through the limit linear chain-based solutions, alternative structure based directed acyclic graph (dag) was proposed []. unlike linear chain-based solutions, which allows only one block attached the end the chain, dag-based solutions allow multiple blocks attached simultaneously. many current projects are using dag-based ledger structure, such iota and byteball []. although iota famous due its better scalability and lower transaction fee, some researchers find that sometimes has non-deterministic confirmation time and huge flooding traffic [], []. byteball maitains main chain, which selected witnesses establish total order between blocks. the witnesses are reputable users that could elected other users. byteball makes tradeoff between deterministic criteria and decentralization. the academic area, phantom and spectre were proposed, and their performances were proved more strictly. spectre enjoys high throughput and fast confirmation, but can not extended support full linear ordering over all blocks. phantom keeps full ordering, but the cost slow confirmation process. hybrid consensus: hybrid consensus protocol combines the advantage both permissioned and permissionless protocol, and tries achieve the best both worlds. nakamoto himself first proposed forum that bitcoin can used backbone protocol for solving byzantine agreement []. project called thunderella [], hybrid consensus used support instant transactions. above all, the permissioned protocol faster, but works centralized manner. permissionless protocol allows miners join leave freely, but sacrifices efficiency and works much slowly. although off-chain solutions can improve it, these patch-like solutions may cause new problems. hybrid consensus protocol combines the benefits both worlds, but still relies permissionless protocol the backbone protocol for solving byzantine agreement. this document, adopt the hybrid consensus while improving the underlying backbone protocol, for the iot world with much faster transaction speeds. codag framework the iot network, iot devices are usually constrained battery, computing power, communication bandwidth, etc. lqhu *dwhzd\ rghv fig. codag ledger framework solve the problem, design framework shown figure the framework, besides the miners and devices, there additional role called gateway, which ubiquitously exists the iot world. miner: responsible for maintaining the ledger, which represents the consensus over the network, through improved dag structure that will illustrated the following section. like [], miners have slow and fast modes: )slow mode using dag-based ledger structure, slow mode also responsible for electing members for fast mode; fast mode use byzantine agreement, where the members are elected slow mode decentralized way, rather than centralized way []. gateway: could device with enough resources run the protocol, like cellphone connected various wearable devices, smart car connected many incar devices, base station connected numerous iot devices. the gateway responsible for downloading part the ledger (most recently), maintaining encrypted communication channel with the devices, and making transactions with other gateways. the gateway like important intermediate node the off-chain solutions []. because the gateway usually reliable and trusted entity the iot world, devices: only needs upload its payment and other data the gateway, and receive the results. the device has enough capacity, itself can also the gateway. codag compacted dag-based ledger structure the iot network has numerous devices and resources, thus high frequency transactions between devices should supported. initially, the miners enter into the slow mode, which uses permission-less protocol achieve consensus and elect members for the fast mode. the members are elected decentralized way, i.e., the most recent miners that have found new blocks being confirmed the ledger protocol. after election, the miners enter into fast mode using byzantine agreement. when members misbehave encounter attacks, the system fall back slow mode. although hybrid consensus greatly improves the transaction speeds permission-less protocol, and works decentralized way. however, its underlying protocol influences the period that takes enter into fast mode. more worse, under attack, the speeds will lower orders magnitude, fall back slow mode. this document, use dag, which suitable for asynchronous operations decentralized environments, the ledger structure improve the permission-less on-chain protocol. besides, traffic congestion, uncertain worst-case confirmation time brought new challenges these solutions. this document, design new ledger structure called codag (compacted directed acyclic graph) structure. transactions are enveloped blocks, which organized directed acyclic graph (dag). the dag gossip-like structure, that fits well asynchronous operations. unlike previous dag-based structures, the new graph well connected between the honest blocks, and has limited width. table ii: summary notations graph dag this document set nodes set directed egdes level node width level maximum width connectivity node reverse connectivity node candidate set level the new ledger, let (v, dag, where the set nodes blocks (in the following text, use node and block interchangeably), and the set directed edges. the graph, use denote the level node the graph, which the length the longest path from the genesis node the current node. for example, fig. the level node each level has width, which the number nodes the level. for example, there are nodes level and use denote the width level for dag, call its width constrained constant for |lv for {lw hw, then |{v|lv l}| the future equals e-l z-k (q/p) lemma the reverse connectivity node locates level away from the largest level, then the possibility that its candidate identity could overtaken is: e-l z-k (q/p) there are two strategies the channel-based scenario. the first the adversary will start alternate channel the level, shown figure this case, the best strategy for the adversary party develop complete separate channel, i.e., adversary node will only point adversary node, but not honest node the previous level. the model then the same bitcoin. different with bitcoin, there second scenario, where the adversary competes the same channel with the honest miners, that is, the honest nodes may point the adversary node, shown figure obviously, the best strategy for the adversary point adversary nodes first, and point the honest nodes with its left pointers. for the honest nodes, will first point honest nodes, and point the adversary nodes with its left pointers. first prove that any level for any two honest nodes and then cvi cvj and cvi cvj for any two adversary nodes and cwi cwj and cwi cwj prove through induction, level all honest nodes will point and avoid pointing thus their connectivity and connectivity all adversary nodes will point and avoid pointing thus their connectivity and connectivity for level suppose the nodes the level satisfy the assumption, and there are honest nodes and adversary nodes, any honest node satisfies cvk and cvk any adversary node satisfies cwk and cwk then level for any honest node cvk+ and cvk+ for any adversary node wk+ cwk+ *q+x *(k -q) and cwk+ q). secondly, prove the above lemma. for level let r(k) rvk the total reverse connectivity all honest nodes level and let r(k) rwk the proof. suppose there are two nodes level node produced honest miners and produce adversary miners, suppose when the largest level the graph satisfies l-l should satisfied make the adversary party catch with the honest party. level r(k) lemma q+q*-*k because (k-q) pq satisfied with higher probability. thus, the second strategy will fall back the first strategy. for the second strategy, intuitively, each node considered have votes, and the votes are given the nodes the previous level. for the honest nodes, the votes are first given the honest nodes, the left are randomly given the adversary nodes the previous level; while for the adversary nodes, the votes are first given the adversary nodes, the left are randomly given the honest nodes the previous level. however, the honest party owns larger portion the computing power, then most votes will given the honest nodes, and the votes will accumulated with the level growing. vii. ruthful ontinuous double auction preliminaries this paper, consider buyers and sellers services have multi-unit capacities and differentiated revenues and costs for auctions and their private information cannot observed directly traders. moreover, each trader bids manner that permits the exploitation profit opportunities arising from the pricing behavior other traders. summarize, base the auction the independent, private value model. definition the independent, private value model the model which each trader knows how much he/she values the item, he/she does not know how much others value it, and his/her value for does not depend the values others. require the trading system strategy-proof that traders have incentive lie about their price. definition auction strategy said strategy-proof there incentive for any the traders lie about hide their private information from the other traders. the strategy-proof property has been used wide range computer network problems []-[]. typical application strategy-proof vickrey-clarke-groves (vcg) mechanism []-[], which order maximize the individual welfare, trader should seek maximize the social welfare the public system. while the vcg mechanism achieves socially optimal allocation incentive-compatible manner, not suitable here puts high computational costs the central organizer. balance supply and demand, need design system with competitive equilibrium. definition competitive equilibrium market for positively valued good (positive) unit price total quantity supplied and total quantity demanded such that that is, the total quantity supplied must equal the total quantity demanded. the notation and indicates that these supply and demand quantities depend the price the total supply each given price simply the sum the quantities good that each seller plans sell that price. let denote the quantity the service seller plans sell price then takes the following form. the competitive profit seller takes the following form: the marginal price parameter denotes the price that the seller expects sell the service. similarly, the total demand each bid price the sum the amount commodities that price. let denote the quantity the commodity buyer wants buy price the competitive profit buyer takes the following form: the marginal price parameter denotes the price that the buyer expects buy the service. note that competitive equilibrium achieved any price where )=qd definition equilibrium price the price which quantity supplied equal quantity demanded. possible that infinitely many competitive equilibria and market clearing prices exist. competitive equilibrium ensures that demand meets supply free market populated rational and selfish agents []. the concept widely used various economic areas, such the new york stock exchange, the nasdaq stock market [], and ecommerce websites (e.g., free market). our mechanism, determine uniform equilibrium price each auction round. then use the equilibrium price determine the winners the auction. the marginally matched buyers and sellers use the uniform equilibrium price for all units. such way, both buyers and sellers achieve the same privilege that the system fair both buyers and sellers. contrast traditional auction markets such electricity and spectrum, the blockcloud marketplace may involve tens millions traders. result, the system-level cost maintaining the trading may significantly high. generally speaking, the more transactions the system manages, the higher trading cost takes. therefore, existing auction algorithms cannot applied tcda they cannot control the number transactions. this paper, reduce the trading cost reducing the number transactions. next, will propose three-stage mechanism solve the problem. build linear programming model targeted minimizing the number transactions and develop algorithm solve the problem that allows the matching result buyers and sellers. algorithm overview figure shows the tcda framework that based multilateral and continuous double auction. tcda consists traders who provide subscribe service and marketplace that manages the auction. the prices for services are specified for each buyer and seller. the auction anonymous and these parameter values are private each trader. fig. the tcda framework the auction performed rounds. the beginning each auction round, traders submit price and quantity offers the marketplace. each bid and ask consists single price-quantity pair. the price can submitted via api that provided blockcloud. the end each auction round, the marketplace matches the price and quantity offers received during the round accordance with publicly known protocols, and reports these matches back the buyers and sellers. the prices set the marketplace each auction round uniform (set equal across all matched buyer-seller pairs). upon receiving the auction result, the matched buyers and sellers carry out their assigned trades and get their profit outcomes. the system continuous double auction. the real iot scenario, traders may continuously join and leave the system. the traders that are not matched the previous round and the new participants can bid next rounds. three-stage double auction mechanism the auction tcda performed under the following three procedures sequentially. (i) determining the transaction price, (ii) determining the winners the auction, and (iii) determining the quantity level for each matched buyer-seller pair. present three algorithms that handle the issues above. figure shows the tcda that achieves the equilibrium price. the winners the auction and the matched buyer-seller pairs are determined sequential manner. the system strategyproof and fair both sellers and buyers, and can minimize the trading cost terms the number transactions. procedure determining the transaction price: this section, calculate the market-clearing price based which the winners the auction are determined. let the number sellers the system, the total units service under sell (for short, supply), the number buyers fig. the trading procedures tcda. the system, and the total demanded service wanted the buyers (for short, demand). let denote the number total traders, i.e., auction round, each trader reports i.e., the units service supplied (or demanded), and the estimated price the organizer. can have the following definition. the trader seller. calculate the market-clearing price, sort the absolute value the reported prices descending order. let denote the ith highest absolute value, denotes the supply (demand) corresponding the trader with price then the price set defined follows: where |pl each listed price represents the price for each unit supplied (or demanded) service. the benefit constructing such price set that the organizer can change the auction with traders auction with traders and each trader supplies demands unit quantity service. given the above price set, define the price located the +)-th position the set the +)-th price. algorithm presents the pseudo-code finding the +)-th price. note that, the upper bound the absolute value the carrier price, which definite number. real practice, for practical online service trading system, the accuracy the price expected definite. therefore, use bucket sort, p[...l] can sorted with computational complexity o(l). result, the computational complexity algorithm o(l) well. algorithm price determining procedure (the set price, i.e., p[...l], and supplied service) for (i=; rank(pi where rank(pi represents the position let {bi rank(pi rank(pi the trader the +)-th position buyer, can obtain: {bi rank(bi similar (i), can show that the market achieves competitive equilibrium well. this completes the proof. procedure matching the traders: given the trading set generated algorithm now describe how match the buyers and sellers. for the service trading model, there will system-level cost for managing the trading. the type the cost may vary depending the specific technology perform the trading, such the computational and storage resources the organizer. the trading system should minimize the trading cost that the system scalable enough manage millions users. generally, can expect that the more trading transactions there are the higher trading maintenance cost will be. result, the system should efficiently match the traders minimize the number trading transactions. now formulate this minimization problem. consider trading set generated algorithm consider there are sellers prove that such auction model strategy-proof for all buyers and risk averse sellers. risk averse mean that the trader reluctant accept bargain with uncertain payoff rather than another bargain with certain and possibly lower payoff. the following two theorems lay the foundation tcda's property, with proofs provided detail appendix and appendix theorem tcda strategy-proof for buyers. theorem tcda strategy-proof for risk averse sellers. contrast regular auction markets such electricity and stock, iot device may dynamically join and leave the system. when such situation happens, blockcloud can use signaling message let the remaining trader quickly join the next auction. the system can also use fine-grained accounting approach that the buyer gradually pays tokens the service provider. this way, the buyer does not waste money the seller leaves the network before the agreed quantity service consumed. viii. onclusion this paper, propose new approach that combines the advantages scn and blockchain empower iot. propose service-centric blockchain architecture, which leverages service-driven communication paradigm support mobility and scalability. design new consensus mechanism and efficient ledger structure provide trust, security and incentive decentralized manner. finally, develop service pricing and distribution mechanism that fairly protects the profits both service providers and users the network. ppendix roof heorem theorem tcda strategy-proof for buyers. proof. assume that the real estimated price unit service buyer let denote the auction price that buyer submits the auction. suppose that the price other traders will not change, the result the market clearing price will only relate buyer the end the auction. let represent the market clearing price when buyer submits the real price (assume that the sth highest price among all submitted prices). let and represent the (s+)-th and the (s-)-th highest price when buyer declares price the utility buyer considered the difference value between real price and market clearing price (i) when the relationship between the market clearing price and the declared price buyer illustrated figure where the shadow part represents the situation that buyer can win the auction and the area marked with '-' means that buyer gains negative utility when she wins the auction. the bold lines show the relationship market clearing price and buyer j's submitted price when other traders' auction prices keep unchanged. see that even through buyer wins the auction offering price higher than the utility will negative, which -b+ therefor the best strategy buyer declare the real price even buyer can not win the auction. the other hand, declaring price that lower than will not help the buyer win the auction change the market clearing price, thus the buyer has incentive so. (ii) when the relationship shown figure can see from the figure that when sellers declare their marginal price, they will win the auction and gain strictly positive utility although they can gain the same utility offering lower price, can lead the possibility gaining negative utility. let the overlapping part the shadow (including the border) represent the pricing area that the seller can gain higher utility than submitting the real price, namely she will not only miss the expected higher utility, but also lose the stable income that comes from offering the real price. this not the optimal strategy for risk averse seller. (ii) when get strictly positive utility winning the auction (ui which the seller will not only miss the expected excess utility, but also lose the stable income that brought offering the real auction price. that not the optimal strategy for risk averse seller, because the possibility losing the stable utility much higher than that gaining higher utility declaring higher price fig. the relationship between and when fig. fig. novo, "blockchain meets iot: architecture for scalable access management iot," ieee internet things journal, pp. iansiti and lakhani, "the truth about blockchain," harvard business review, worner and von bomhard, "when your sensor earns money: exchanging data for cash with bitcoin," proceedings the acm international joint conference pervasive and ubiquitous computing, pp. alsaadi and tubaishat, "internet things: features, challenges, and vulnerabilities," international journal advanced computer science and information technology (ijacsit), vol. no. pp. "challenges the internet things iot," texas instruments (it) iot report, "irtf information-centric networking research group (icnrg)," irtf.org, barr, "amazon two trillion objects, million requests second," [online]. available: https://aws.amazon.com/blogs/aws/ amazon-s-two-trillion-objects--million-requests-second/ freedman, freudenthal, and mazires, "democratizing content publication with coral," usenix/acm symposium networked systems design and implementation (nsdi), clark, "the design philosophy the darpa internet protocols," acm sigcomm, ali, nelson, jand shea, and freedman, "blockstack: global naming and storage system secured blockchains," usenix annual technical conference (usenix atc' yang, ming, pan, xu, and wang, "an efficient and secure blockchain protocol for internet things," blockcloud consensus technical report, popov, "the tangle version .," iota white paper, ming, xu, xia, li, and wang, "siona: service and information oriented network architecture," journal network and computer applications, pp. ming, ubillos, and xu, "name-based shim: name-based approach host mobility," sigmobile mob. comput. commun. rev., vol. no. freedman, "the double auction institution: survey," santa institute studies the sciences complexity, pp. vytelingum, cliff, and "strategic bidding continuous double auctions," elsevier artificial intelligence, vol. pp. ming, xu, wang, gao, and li, "towards truthful auction for user data allowance trading mobile networks," ieee international conference distributed computing systems (icdcs), sen, joe-wong, ha, and chiang, "smart data pricing: using economics manage network congestion," commun. acm, vol. no. pp. nov. "filecoin: cryptocurrency operated file storage network," https:// filecoin.io/, ming, xu, and wang, "age-based cooperative caching information-centric networking," international conference computer communication and networks (icccn), aug pp. yang, xu, wang, and wu, "source address filtering for large scale network: cooperative software mechanism design," international conference computer communications and networks (icccn), july pp. ming, xu, wang, gao, and li, "truthful auctions for user data allowance trading mobile networks," ieee international conference distributed computing systems (icdcs), june pp. luu, teutsch, kulkarni, and saxena, "demystifying incentives the consensus computer," proc. acm ccs' new york, ny, usa, teutsch and reitwiebner, scalable verification solution for blockchains," https://truebit.io/, castro and liskov, "practical byzantine fault tolerance," osdi, "the bitcoin lightning network:," https://lightning.network/ lightning-network-paper.pdf. back, corallo, dashjr, friedenbach, maxwell, miller, poelstra, timon, and wuille, "enabling blockchain innovations with pegged sidechains," nakamoto, "bitcoin: peer-to-peer electronic cash system," sompolinsky and zohar, "secure high-rate transaction processing bitcoin," eyal, gencer, sirer, and renesse, "bitcoin-ng: scalable blockchain protocol," usenix nsdi' santa clara, ca, wood, "ethereum: secure decentralised generalised transaction ledger," pass, seeman, and shelat, "analysis the blockchain protocol asynchronous networks," advances cryptology eurocrypt pp. lewenberg, sompolinsky, and zohar, "inclusive block chain protocols," financial cryptography and data security, pp. popov, "the tangle," https://iota.org/iota whitepaper.pdf. https://byteball.org/byteball.pdf, "byteball: decentralized system for storage and transfer value," http://www.gartner.com/newsroom/id/ does all kind spam benefit the network? [online]. available: https://iota.stackexchange.com/questions// does-all-kind-of-spam-benefit-the-network sompolinsky, lewenberg, and zohar, "spectre: serialization proof-of-work events: confirming transactions via recursive elections," https://eprint.iacr.org//.pdf. sompolinsky and zohar, "phantom: scalable blockdag protocol," https://eprint.iacr.org//.pdf. pass and shi, "hybrid consensus: efficient consensus the permissionless model," disc' nakamoto, "the proof-of-work chain solution the "byzantine generals" problem," https://www.mailarchive.com/cryptography@ metzdowd.com/msg.html, nov pass and shi, "thunderella: blockchains with optimistic instant confirmation," https://www.thundertoken.com, "eos.io technical white paper v," pass, seeman, and shelat, "analysis the blockchain protocol asynchronous networks," advances cryptology eurocrypt cham, pp. li, wu, liu, cui, and xu, "defending against distance cheating link-weighted application-layer multicast," ieee/acm transactions networking (ton), vol. no. pp. huang, berry, and honig, "auction-based spectrum sharing," mob. netw. appl., vol. no. pp. feigenbaum, papadimitriou, sami, and shenker, bgp-based mechanism for lowest-cost routing," distributed computing, vol. no. pp. vickrey, "counterspeculation, auctions, and competitive sealed tenders," the journal finance, vol. no. pp. clarke, "multipart pricing public goods," public choice, vol. no. pp. groves, "incentives teams," econometrica, vol. no. pp. vytelingum, cliff, and jennings, "strategic bidding continuous double auctions," elsevier artificial intelligence, vol. pp. klemperer, "how (not) run auctions: the european telecom auctions," working paper, oxford university,