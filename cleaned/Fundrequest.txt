fundrequest decentralized marketplace for open source collaboration version november st, www.fundrequest.io executive summary today, open source software vital component the functioning governments, large and small companies, and non-profit organisations all around the world. open source software refers software that released the general public, effectively allowing developers access the source code, modify it, and redistribute again. soaring interest open source development has however unearthed growing pains. lack incentives for developers work open source projects renders many inactive projects. fundrequest makes easy fund open issues any project, any language. inspired the rise the gig economy, bring together developers and organizations requesting open source development. blockchain technology and smart contracts provide with the tools necessary build decentralized platform that benefits both suppliers and customers open source development. can guarantee that every contract created between parties will resolved without any third-party interference. platform upkeep costs are thus drastically reduced. turn, this allows remove the service fee that has become commonplace existing gig economy platforms. increased transparency and trustless transactions are two other blockchain features that feel will aid our mission boost the entire open source ecosystem. stylized transaction flow, the requesting organization (funder) allocates funds open source issue. these funds are stored smart contract, which acts escrow incentivize parties act good faith. the smart contract will eventually distribute the funds after set predetermined conditions met. once the open source issue funded, the developer (solver) can select it. since also needs have skin the game avoid malicious behaviour, required stake funds proportionally the value the funded issue. the developer then solves the issue and claims the reward. the smart contract settles the transaction. naturally, disputes may arise during this process, some which may need solved through human interaction. this end, will partner with existing providers that offer conflict resolution flows their core product. open source development diverse that one size does not fit all. clear that more complex structures are required serve the entire space. for example, fundrequest will enable combining several issues under governance structure support large features and projects. other projects require number distinct skillsets such that team developers put together take the challenge. finally, different organizations may interested identical open source solutions, which would warrant type open source crowdfunding mechanism. our aspiration expand the platform this direction. the fnd token catalyst the platform's development and user experience. allows create network effects and introduce mechanisms fair play. our own utility token also means can operate independently from third-party token. sum, fundrequest facilitates the funding, claiming, and rewarding open source contributions through blockchain technology. addressing some the key challenges open source facing today, aim boost open source development introduction over the last two decades, open source software (oss) has changed the way software developed, deployed, and used. according the open source initiative open source "enables development method for software that harnesses the power distributed peer review and transparency process". fundrequest offers solution the lack incentives found developing open source projects making easy fund open issues any project, any language. open source software software released the general public, effectively allowing them view, copy, and modify the source code. opening the code others, allows developers around the world contribute code, add new features, improve the present code, report bugs, and submit fixes the current version. benefits open source relative traditional software include increased transparency, greater flexibility, and lower risk predatory vendor lock-in. moreover, estimated that the adoption open source software has resulted billion usd per year savings its consumers, suggesting that open source software economical alternative altogether []. both the public and the private sector alike have shown increasing interest leveraging community-based software development and distribution. examples include the european commission, the white house, tesla inc., and startup ecosystems embracing the practice. according the future open source survey respondents contribute open source projects, which increase compared the survey. different study forrester consulting, found that more than north american and european companies use open source software products for their crucial applications. furthermore, over american government organizations have adopted open source software. user statistics open source platforms show similar trend. github, one the largest platforms for developing and maintaining open source projects, welcomed million new developers from all around the world the past year alone. now harbors around million users, compared less than million users five years ago. https://ec.europa.eu/info/departments/informatics/open-source-software-strategy_en https://obamawhitehouse.archives.gov/blog////peoples-code https://techcrunch.com////tesla-promises-to-not-sue-anyone-using-their-technology/ https://techcrunch.com////open-platforms-fuel-startup-ecosystems/ http://www.northbridge.com/-future-open-source-survey-results https://go.forrester.com/consulting/ https://octoverse.github.com/ https://github.com/blog/-the-octoverse-in- despite the unprecedented growth open source development, many open source projects fail. fact, almost projects experience failure prior completion []. reasons for failure include the inability maintain performance and activity []. developers point out that lack time continue working projects one the main reasons why they cease working challenging projects []. other reasons for abandoning projects include being usurped stronger competitor, and lack developer interest. number studies also suggest that not providing developers adequate financial rewards, corporations might exploiting altruistic individuals [,]. contemporaneously, transparent and efficient marketplaces have sprung connect freelancers with buyers their services the so-called gig economy. one notable example uber, the ride-hailing service connecting drivers with riders. today, more and more people are choosing this type independent work alternative addition maintaining full-time job. estimated that around million people the united states and the european union alone are active the gig economy. the online gig economy, subgroup marketplace conducted remotely over digital platforms, has grown annual rate percent. interestingly, asian countries account for over percent workers the online gig economy. the growth and magnitude the gig economy coincidence. studies have shown that independent, remote workers are more satisfied, engaged, and productive than other workers result increased autonomy and lower work-family conflict []. inspired these global developments, fundrequest aims bring together organizations requesting software development with the actual developers. similar companies like uber and airbnb, facilitate the matching supply and demand way that beneficial both parties. developers are able obtain extra income, and have more flexibility choose working hours. companies people requesting software development benefit from lower search costs, well more affordable solution compared traditional software. the same time, they receive tailor-made solution hoc basis, and can enter into dialogue with the developer. offering this solution the people and companies within the open source space, our goal spur collaboration and enrich the entire open source ecosystem. https://www.mckinsey.com/global-themes/employment-and-growth/independent-work-choice-necessit y-and-the-gig-economy http://ilabour.oii.ox.ac.uk/the-online-gig-economy-grew--over-the-past-year/ https://cdn.hubspot.net/hubfs//tinypulse_what_leaders_need_to_know_about_remote_ workers.pdf?t= the development blockchain technology and smart contracts enables pursue these goals. brief, blockchain digital ledger economic transactions that duplicated across network computers. this implies that blockchain incorruptible, and that cannot controlled any single entity. turn, blockchain technology has enabled the coding smart contracts that are executed when predetermined set conditions are met. the ethereum protocol perhaps the most well-known blockchain-based platform featuring smart contract functionality. given that similar platforms exist without using blockchain technology, one might wonder why the technology crucial for our development. number reasons stand out: using blockchain technology and smart contracts, can guarantee that every contract created between parties will able self-resolve. escrow context, the blockchain keeps track the funds allocated specific development request, and acts trusted third party []. upon validation the solution, the blockchain releases the allocated funds the solver. crypto economics and governance protocols incentivize developers developers and organizations play fair and act good faith. thanks the decentralized feature blockchain technology the upkeep cost for the fundrequest platform low, creating win-win scenario for transacting parties. contrary some other, existing platforms, fundrequest will not charge service fee developers requesting organizations. reducing friction for adoption and usage the right thing want genuinely enrich the open source ecosystem. since its inception, ethereum has enabled many projects battle centralisation and for-profit models. for example, hosting your files decentralized storage solution has the potential vastly cheaper than hosting files amazon's cloud storage service. transparency important. the ability know the average historical development cost specific issue informative both the developer and the requesting organization. turn, this should lead more efficient market https://github.com/ethereum/wiki/wiki/white-paper functioning. distributed ledgers enable consulting all previous transaction transparent and incorruptible way. blockchain technology allows the fundrequest platform itself accessed other services who may want benefit from the work have done. the early stage the project will integrate with existing, third party platforms, but eventually third parties may natively start integrating with us. for example trello web-based project management application, could use the fundrequest smart contracts and apis offer fund functionality their own platform. the creation our native fnd token (cfr. infra) key component incentivise non-profit open source communities. supporting their development will result real-world impact people's lives, well foster open source general. the nature the goal are pursuing, i.e. enriching the open source ecosystem, the same spirit the technology underpinning it. that is, open source and blockchain technology share the common characteristic ultimate decentralization. fundrequest will the first application use the skilltoken factory smart contract which can accessed other decentralized applications too. enables fundrequest award developers skill-specific tokens return for the work they have completed. those skill specific tokens are not tradable and will forever locked the ethereum address they have been issued too. help alleviate the constraints many open source projects face the core the fundrequest vision. recent developments, such the gig economy and blockchain technology act means amplify the benefits open source. conclusion, fundrequest the intersection open source, the gig economy and blockchain technology. the skilltoken factory smart contract that issues non-transferrable skill specific tokens return for previously whitelisted tokens (here fnd token). will developed the fundrequest team and ownership will passed the community. also see section building blocks key terminology for consistency purposes, will using the following terminology throughout the rest this white paper. request: define request the solicitation funder work existing project, the creation new project. similarly, the solicitation fix bug add new feature considered request. typically, the request made the funder, after which the solver resolves the request. funder: individual, group company that adds funds complete request. funder can the owner request can co-funder pre-funded request. solver: individual, company, organization that wants participate completing request. funds: the tokens attached request, and the funds/reward the solver obtains once resolves the request. target platform: platform where fundrequest enables funding requests. platforms can code repositories like github gitlab, project management tools jira asana. while these type repositories are the most obvious ones, fundrequest ideally should able integrate with any (software-related) platform where funders can connect with solvers. project owner: the person organisation that can validate solution for specific request fnd token: erc token specific the fundrequest platform, which used fund issue and facilitate community verdict dispute flow. the token object also used communicate with the skilltoken factory. skilltoken: skill-specific, non-transferable token that rewarded after completing request and issued the skilltoken factory smart contract. skilltoken factory: decentralized system that manages skilltokens, which are rewarded for proven work, skill, integrity. integrity could proven for example partaking governance voting where one would vote honestly and honorably. multiple platforms can integrate with the skilltoken factory. fnd tokens are used pay the transactions fees related the skilltoken services. staking: locking fnd tokens until flow action completed. malicious behavior penalized either not returning, only supplying portion the stake. cooldown period: the time between claim reward and the time the solver can freely access the reward. during the cooldown period parties have the option raise dispute. project bond: amount fnd tokens that are locked (staked) until project completed finalised. solver stakes project bond order apply for the role project lead for certain project. service level agreement service level agreement (sla) contract between solver and the funder that defines the level service expected from the solver. funding, resolving and claiming baseline case the baseline case details the implementation request with one funder and one solver. within the baseline case there can ideal flow, where funders validate the solver's solution without any issues, dispute flow. ... ideal flow funder's perspective the fundrequest platform allows funder submit request through his favorite target platform. using our functionalities (through api browser extensions), the funder able appropriate funds his request. request can funded any erc compliant token (see section ..). this should allow projects reward solvers using their own project token. the baseline case with one funder and one developer, the allocated funds are the first allocated request. this case, new contract will created blockchain, which serves escrow service for the allocated funds. once request funded, ready selected solver. the solver selects and subsequently solves the request. the solver validates the solution, and funds stored the contract are awarded the solver. solver's perspective the solvers' flow starts when they decide work funded request. register for working request, the solver needs stake fnd tokens. the staking process serves number vital purposes. first, prevents solvers from registering for large number requests the same time but then remaining inactive some all them. such situation may detrimental the ecosystem. second, staking incentivises people play fair, since they would lose their staked fnd they don't (see section ..). requesting skin the game from the solver technique warrant acting good faith. the funder, appropriating funds the smart contract, already has skin the game design. staking thus constitutes critical mechanism trust-based systems. third, allows present information the number developers currently working request. using this information, prospective solvers can decide whether still useful for them register for the issue. fourth, staking required any case for requests the shape features and projects (see section ...). the stake returned the solver once the request solved, when the solver decides stop working request. the latter case, the solver might receive skill penalty (cfr. infra). fundrequest applies the same logic the project owner when comes settling the request. when the project owner considers request solved, then also solved from fundrequest's point view. once the request considered solved, the solver able claim the funds allocated the related request. upon claiming, the smart contract acts escrow service and validates both the authenticity the solver and the state the request. all the validation checks pass, then the funds are allocated the solver. this point, the allocated funds are locked until defined cooldown period has passed. the cooldown period the time during which the funder can raise dispute. when the cooldown period has passed and dispute has been raised, the locked funds and the solver's initial stake will available the solver. small percentage the funds will transferred the skilltoken factory, which rewards the solver with the case github, for example, request resolved when the repo owner accepts the solution ii) closes the github issue non-transferable skill-specific token (see section ..). the fees awarded the skilltoken factory are paid fnd tokens and will burned. funder adds funds request the fundrequest platform fundrequest locks these funds smart contract that acts escrow service solver wants solve that request and indicates this intention staking towards the solver solved the request and wants claim the reward the project owner gets notified about the claim and validates once the project owner validated the claim, cooldown period initiated during which the funds and stakes remain frozen. this done prevent any malicious behavior from funders and solvers. once the cooldown period has elapsed, the solver can withdraw the funds together with his stakes. addition, the skilltoken factory rewards the solver with skill specific tokens. ... dispute flow during any human exchange goods services, misunderstandings can occur and cause dispute between transacting parties. smart contracts, which are trustless nature, alleviate many the concerns related trust between parties that exist traditional markets. yet, there are specificities that are impossible describe with code, and therefore disputes will still emerge. observe the following example. party-a request the creation notification system written java, and the specifications are clearly defined the request. party-b started working that request and provided solution that was accepted the project owner. party-b claims the reward. however, party-a does not agree with the solution and therefore raises dispute. quality code difficult validate smart contract, and human interaction required come resolution. believe that fundrequest should grow into platform for the community the community and the dispute flow part that vision. hence, the dispute resolution resolved community vote. many other decentralized projects are offering governance prediction market services. therefore decided not build another system that resolves disputes via community voting mechanisms, but rather partner with existing providers that offer such services their core product. this will allow focus our core features, use widely tested conflict resolution flow, and strengthen the blockchain network. examples such parties include aragon, gnosis and augur. should we, for some reason find that external parties are not good fit with our goals, then will build one tailored our own needs. dispute can only raised the cooldown period request, and when dispute raised the allocated funds and stakes will remain locked the escrow until the dispute has been resolved. the majority the funds are transferred the winning party, while the losing party penalized losing staked funds and/or skill specific tokens. parties involved the voting process are awarded share the staked funds and/or skill specific tokens. ... post-cooldown once request without pending claims/disputes leaves the cooldown period the funds and the initial stake get unlocked and become available the solver. the funder and solver lose the right start dispute. both parties receive non-transferable skill-specific tokens for completing successful work transaction. both the funder and https://aragon.one/ https://gnosis.pm/ https://augur.net/ the solver get the opportunity leave review the counterparty and return are rewarded small amount skill specific tokens. ... skilltoken factory will using the skilltokens our platform because believe meaningful rewards are not exclusively financial nature. with skilltoken want reward our contributors highlighting their skills, level community involvement and contribution. skilltokens will evolve into indicator that illustrates contributors' (programming) abilities and level commitment. individual skilltoken balances are public order create level trust between future partners. example rewarding skill giving skill-specific tokens people who solve bug, answer difficult question later stage manage complete project. community involvement also rewarded with skill-specific token. participating dispute resolutions example being involved with the community. improving the overall quality the platform writing reviews great example contributing the platform. the initial stage our platform, focus the integration with other platforms, meaning that whereas today many systems have either skills system, they have implemented their own version such system, are able reward skill cross platforms. what does that mean? means that the skilltokens you earn for answering python specific question stackexchange will added the skilltoken you've received from fixing python bug github. today's recruitment market, developers refer their github account when going job interviews showcase their skills. believe that this trend that needs stimulated and expanded. creating cross-platform skilltoken factory, decentralized and transparent built blockchain and backed actual work, making source truth. details our skilltoken factory will explained more detail separate white paper. extensions software produced many different ways. large company has processes different small development agency, the same way that fixing bug not the same developing whole new project. however, consider all these cases challenges want tackle. with this goal will build the following extensions: https://en.wikipedia.org/wiki/token_economy features/projects bug fix, translation question can seen small request. new feature project considered large request. how large request differ from small request allowing only one solver (person team) work large request the same time. during the creation request the funder has the ability identify his request large request, for example feature project. the funder project feature has the right decline the candidacy the solver. large request can also disputed and will follow the same dispute flow small requests. crowdfunding requests funded request may relevant for several parties, opposed the baseline case one funder and one solver. this case, economies scale are possible, the extent that will enable crowdfunding requests, effectively enabling multiple parties combine their resources. the increase overall funds for single request raises the incentive for solvers while reducing the individual cost for each funder. dispute crowdfunded request follows the same flow that single funded request, meaning dispute between two parties, the group funders and the solver. the dispute resolved favor the solver will receive the full reward. resolved favor the funders, then the solver penalized losing his staked fnd tokens and the remaining funds will returned back each party that funded the request. organizations could use this functionality well let the community "vote" features they want implemented and the community can actively participate the roadmap. team work some development tasks require more than one developer people with different skill sets and that why want introduce the team concept, where people can form development team and apply large requests projects team. team will managed team owner, who can invite approve new members his team. each team will have its own governance, which will allow for example the election new team lead when required. will first evaluate third parties provide governance services (for example aragon). are unable find partner that can facilitate our governance needs, will develop house realizing kind community voting mechanism. using this extension also want enable project funder fund the project per-month basis, contrary funding the complete project upfront. additionally want introduce the concept project lead, where funder can appoint project lead for his request. the project lead will able manage the funders funds and allocate them work items. platform user can apply for the role project lead posting (staking) project bond. upon successful completion the project the project bond returned. rewards will split across the team members predefined distribution ratio defined the team owner. private issues/invite only some issues are sensitive and companies will want the ability use the power the community but without sharing the details the whole world. for such issues allow the funder create private requests where they can invite known developers teams help them address the issue hand. here the skill token system will have indirect effect, the more skill token you have the higher the chance get invited private issues and the more interesting the reward. service level agreement (sla) for fully leveraging the power the open source community, which nature decentralized and worldwide represented, offer funders the ability link sla request. adding more conditions request requires increase funds allocated the request, since the solver bound specific agreements. example extra condition could have time-based agreement. later stage, teams could offer support. skilltoken plays key role the sla extension, since not following the conditions results the loss skilltoken and staked fnd tokens. imagine this could lead the formation international teams that offer sla driven, cross project, open source support. funding with fiat currencies other tokens support other blockchain projects will compatible with any erc token. this means that projects will able use their own token reward for solving requests related their project. increase mainstream adoption integrate with future fiat stable coins which would allow funding eur, usd, gbp any other fiat currency that has stable coin equivalent. platform specific services such staking and the fees related the skilltoken factory require fnd tokens. improve the usability funding any erc token, but being able pay fees fnd tokens will integrate with existing decentralized tokens exchange based the project (an open, permissionless protocol allowing for erc tokens exchanges). implementation smart contracts make fundrequest work, several smart contracts are needed the blockchain. these smart contracts will work together way that all functionality becomes available decentralized way. this will the core fundrequest. ... token already explained section fnd will the token used the fundrequest platform. this token will token the ethereum blockchain following the erc token standard. this token has already proven its strength and want leverage the already proven track record. for the actual implementation the fnd token, have chosen for the minime token contract which being used several other projects (eg. aragon). there will alterations the contract and all users can have full confidence the fnd token. the minime contract gives the flexibility token upgrade with the existing token acting the parent token. when balance queried, the state the parent token https://xproject.com/ https://theethereum.wiki/w/index.php/erc_token_standard https://github.com/giveth/minime added the state the new token, giving the final result. this very powerful mechanism should upgrade necessary. ... fundrequest contract(s) the fundrequest smart contract(s) will contain all logic decentralize the whole fundrequest platform. this evolving process and will updated the future. the fundrequest smart contracts communicates with the token contract. these contracts can, course, not alter the token contract state for everybody. for participating the platform, user will have allow the fundrequest contract act its behalf. how does this work? consider like prepaid card which you have charge before you can start using the services. the main difference the actual fnd tokens never leave your wallet until you actually spend using one the services. the erc token standard defines this function its interface: function approve (address _spender, uint _value) returns (bool success); this function will executed that the fundrequest contract can spend tokens your behalf, only the amount that has been approved you. the tokens still don't leave your wallet this point. when service the fundrequest platform used, the fundrequest contract can transfer the necessary tokens for the function that has been called. see example such approve call together with funding the sequence diagram below. platform the platform contains the following key components: blockchain smart contracts (see core: this the core fundrequest platform that contains the logic for the system. api: set api's that will offered internal applications that allow fundrequest services. these will act gateway for all frontend services frontend: several means communicating with the backend api, such web application and chrome plugin ... blockchain for more information about smart contracts, see section all balances are held the minime token contract and additional fundrequest contract used communicate with this token contract. when issue funded, claim rewarded event will triggered the blockchain. this event picked internal service called "azrael". this service translates the blockchain event "json" format object that stored message broker. this message broker routes the data the correct destinations who can then act this newly received information. this allows for easier maintenance and communication the blockchain. ... api our api acts the gateway for all clients accessing the fundrequest platform. this allows easy communication between clients and the fundrequest core system. initially, our api acts internal api for our clients. future api's will allow easier integration with other platforms. ... frontend web application will available for easy access all services fundrequest. here, users can easily browse the whole state the platform and initiate actions. http://www.enterpriseintegrationpatterns.com/patterns/messaging/messagebroker.html for better integration with existing platforms (github, stackexchange, ...), develop browser plugins. these plugins enrich the supported platforms with fundrequest data and services. users can access fundrequest services from within these platforms without leaving the actual platform, which results better user experience. ... decentralization our current structure, still have some centralized components. our vision for the future create fully decentralized solution which will allow fundrequest become unstoppable application. achieve this, will work together with the blockchain community and utilize other services. more and more services are being created this prone for change. but envision platform where: decentralized logic inside smart contracts (e.g ethereum) for storage using decentralized storage (e.g. ipdb, ipfs, swarm) using communication protocols communicate with other dapps (e.g whisper) decentralized authentication (e.g. civic) resource lookups with decentralized name services (e.g. ens, ipns) https://blog.ethereum.org////building-decentralized-web/ security all open endpoints offered the fundrequest platform will protected cloudflare. here can ensure that can protect ourselves against ddos attacks, apply web application firewalls, rate limiting, any other threat the continuity the platform. all communication will encrypted using ssl. ... authentication user will able authenticate himself within fundrequest using decentralized authentication provider like civic. when using the platform, you are obliged authenticate, with privacy mind (see the following section). ... privacy when using fundrequest services, you are obliged authenticated. with this information can offer the user extra services. for example, can propose new requests solver which are similar requests already solved him. processing this information will done privacy friendly manner and will immediately comply the new strict regulations data privacy, the gdpr. network effects the concept network effect pretty simple: the network becomes more valuable more people use it. the most famous example the telephone system, for which the value having phone increases when everyone else has phone. the case fundrequest, more solvers are working requests, the service offered funders becomes more valuable due better response times and increase code quality. this leads more funders using the platform, return attracting more solvers. the more solvers and funders, the more open source code that being produced, and the higher the quality the code, which leads increase adoptation open source software and return leads more funders. https://www.cloudflare.com/security/ https://www.civic.com/ http://www.eugdpr.org/ token functionality fnd tokens are utility tokens. they will always required solvers, stake towards issue and solvers will always required hold some fnd tokens. initially every issue can only funded and rewarded with fnd tokens. this will change with extension 'funding with fiat currencies other tokens' (see section .). with the team extension (see section .), will also introduce the ability for team members become team lead providing bigger stake. fnd will also the first token accepted the skilltoken factory and the skilltoken factory requires small portion fnd tokens return for skill tokens. those fnd token will burned forever. the more requests that are funded, the more solvers will claim rewards, the more teams that are created, the more project leads will required, the more fnd tokens need staked and thus remain the platform. http://vitalik.ca/general////moe.html the important thing that for the token have stable value, highly beneficial for the token supply have sinks places where tokens actually disappear and the total token quantity decreases over time. this way, there more transparent and explicit fee paid users, instead the highly variable and difficult calculate "de-facto fee", and there also more transparent and explicit way figure out what the value protocol tokens should be. funding the funding will allocated multiple aspects the fundrequest project. the largest part will serve for developing the fundrequest platform, but also need budget for supporting activities. development the main part our budget will allocated development. since software development requires mostly labour skilled employees this part our budget will used pay our software developers and analysts. operations the budget allocated operations run the supporting organisation, rent the office space and equipment, have proper means communication, provide level support the platform user, etc. marketing challenging task will get enough traction organisations. our marketing budget will used create awareness the possibilities our platform first instance with the business owners and cio's, and second instance within the development community. legal there are some legal aspects the fundrequest platform which need investigation. some examples: people using fundrequest getting rewarded for their work cannot seen employees fundrequest. how protect the platform from child labour? how can make sure funding organisation can get proper invoice? security since the fundrequest platform will used escrow service between funder and solver, security utmost importance. every version will need checked software vulnerabilities. infrastructure when developing software necessary have servers available run development, test, acceptance and production environments. contingency budget this budget the fundrequest 'reserve fund'. this will used when new budget needs arise, when one the other budget lines was underestimated and runs out funding. future vision our vision open source platform for the community, that runs decentralised and which developed, maintained and governed the community. its mission boost open source development and reward contributors fair and transparent way. references ghapanchi, a.h., aurum, a., low, g., taxonomy for measuring the success open source software projects. first monday colazo, j., fang, y., impact license choice open source software development activity. journal the association for information science and technology fang, y., neufeld, d., understanding sustained participation open source software projects. journal management information systems coelho, j., valente, m.t., why modern open source projects fail. in: proceedings the joint meeting foundations software engineering, pp. acm haruvy, e., prasad, a., sethi, s.p., harvesting altruism open-source software development. journal optimization theory and applications rossi, c., bonaccorsi, a., intrinsic vs. extrinsic incentives profit-oriented firms supplying open source products and services. first monday gajendran, r.s., harrison, d.a., the good, the bad, and the unknown about telecommuting: meta-analysis psychological mediators and individual consequences. american psychological association swan, m., blockchain: blueprint for new economy. o'reilly media, inc.".