you are advised read this disclaimer carefully before reading, accessing making any other use this document. please note that owing restrictions imposed law various jurisdictions, soliciting purchase cryptographic tokens may not permitted residents certain jurisdictions. the token sale and this technical white paper have not been registered under any law regulations. this document not intended for distribution to, use by, any person entity any jurisdiction country where (a) distribution use such information would contrary law regulation; (b) the foundation would virtue such distribution become subject new additional registration requirements. accordingly, this document this site not available any jurisdictions where (a) distribution use such information would contrary law regulation; (b) the foundation would virtue such distribution become subject new additional registration requirements; and any person comes into whose possession this document required inform himself herself about and observe any such restrictions. the token sale not open the residents the people's republic china nor any person (as such term defined regulation the securities act amended). accepting and reading this document, you warrant and represent and agree that you are not citizen, tax permanent resident country where the purchase cryptographic tokens under the token sale prohibited, restricted requires registrations any kind. you should read all information the website before confirming your participation the token sale. matrix technical whitepaper "the key growth the introduction higher dimensions consciousness into our awareness." lao tzu bc) the invention bitcoin symbolized the advent cryptocurrency. the succeeding years witnessed dramatic growing the blockchain technology. the introduction ethereum opened the path for supporting complex business behaviors with cryptocurrencies. the overall momentum development, however, now facing series key challenges. these include: slow transaction speed; programming barrier smart contracts; lack security smart contracts; and inflexibilities managing and updating blockchains. designed the new generation blockchain, matrix leverages the latest artificial intelligence technology resolve the abovementioned challenges. the fusion blockchain and technologies enables matrix build revolutionary cryptocurrency, which support significantly boosted transaction speed, superior accessibility general users, enhanced security under malicious attacks, and highly flexible operations. objectives matrix the challenges facing today's blockchains have resolved before the ideal cryptocurrency can really become reality. believe the artificial intelligence technology, which has received unprecedented growth the past decade, provides out-of-box solutions address the challenges. matrix designed intelligent chain unleash the potential power the blockchain technology. this section, briefly review the objectives matrix. automatic generation smart contracts although smart contracts give blockchains the essential capability handle scaled commercial behaviors, they need the users able write programs given programming language. with matrix, programing expertise needed any more for designing smart contracts. the unique code generation technique matrix allows automatic conversion abstract description smart contract into executable program. matrix only requires users input the core elements (e.g., input, output, and transaction conditions) contract with scripting language. then code generator based deep neural network able automatically convert the script into equivalent program. secured smart contracts smart contract programs may call functions offered the host system and/or third-party libraries. also, programs running different computers distributed framework not provide any guarantee for execution time. such openness and decentralization are the reflection the essential spirit blockchains, but give birth various sources security threats. fact, the lack security plaguing the smart contracts. the matrix blockchain equipped with power security engine consisting four major components, rulebased semantic and syntactic analysis engine for smart contracts, formal verification toolkit prove the security properties smart contracts, ai-based detection engine for transaction model identification and security checking, and deep learning based platform for dynamic security verification and enhancement. high speed transactions today all public chains are suffering from the problem long transaction latency and low transaction throughput. specifically, takes over minutes for bitcoin finish one transaction, while the transaction throughput ethereum only transfer per second (tps). fact, blockchain depends network validate transactions. since transaction needs broadcasted all nodes network, the overall latency has increase long more nodes are joining the network. matrix resolves the problem dynamically selecting delegation network which all nodes are voted delegates others. all proof-of-work (pow) processing only allocated inside the delegation network, which only incurs much smaller latency due the smaller number nodes. the selection process random the sense that node selected with probability proportional its proof-of-stake (pos). the online version matrix will support throughput tps. flexible blockchain management matrix designed highly flexible blockchain. the flexibility twofold. first, matrix offers access control and routing services allow seamless integration private chains into common public chain. such feature meets the requirements many industry and government players for authorization, while the same time allows necessary information flow from public chain private one and vice versa. second, matrix uses reinforcement learning framework optimize its parameters (e.g., consensus mechanism, and transaction configuration) evolutionary manner. the optimization paradigm ensures dynamic updating parameters for near-optimal performance without the risk incurring hardfork. value adding mining perhaps the most criticized part cryptocurrency the "waste" energy the mining computations. although essential attach physical value the cryptocurrency, the mining process does not make any sense out the world digital currency. the problem even worse when now over the total computing power around world dedicated mining bitcoins and others. matrix introduces new mining mechanism which miners perform the markov chain monte carlo (mcmc) computation, which essential tool for bayesian reasoning. mcmc based bayesian computing plays fundamental role numerous big data applications such gene regulatory network, clinical diagnosis, video analytics, and structural modeling. result, distributed network mcmc computing nodes provide the power for solving real-world compute-intensive problems and thus build bridge between the values the physical and virtual worlds. brief review technological innovations matrix the design matrix depends large number innovations both and blockchain technologies. table summarizes the essential technologies matrix. thanks these technologies, matrix distinguishes itself from its predecessors and initializes new generation blockchain. table technological innovations matrix category technological innovations objective base protocol random clustering based reducing transaction latency voting for network delegates introduction separate control chain enabling the interaction between public chain with private chains and the deployment security control evolutionary parameter optimization adapting blockchain design external usage patterns and environment smart contract automatic program generation breaking the barrier generation for smart contracts programming and making smart contracts accessible general users security formal verification and deep identifying potential learning based auditing loopholes and malicious including smart review intentions contracts, relational review contract elements, formal verification contract security, and transaction arbitration binary code checking identifying potential loopholes and malicious intentions credit score-based trusted gateway and proxy including maintaining credibility record for the network online-offline data proxy transfer (oracle), credit score public users, and multichain-based data routing dynamic security verification and enhancement smart ensuring robustness under high-intensity attack contracts with generative adversarial network secured custody contracts, mainly for transaction pattern match enabling long-term financial derivative transactions allowing data exchange and identification matched contracts for multi-party transactions transaction data search engine supporting permission-based assisting historical data tracing and data mining index, privacy-based user transaction tracking, and smart grouping based behaviors multiple users mining bayesian and deep learning the pow computation creating universal values from mining key technologies matrix plays essential role shaping matrix intelligent blockchain. moreover, matrix also the product extensive optimization and extension the blockchain technology. this section, review the key technology breakthroughs made matrix. hybrid pos pow consensus based stochastic network contraction the fundamental reason leading the excessive transaction latency today's blockchains the transmission overhead network cannot scale with the number nodes. the problem inherent the based pow consensus since every transaction broadcast the whole network. fact, the latency has worsen long the number nodes increases. the recently proposed lightning network devised solve the above problem. what does, however, more than creating private channel for the payer, receiver and transferring nodes that transaction can completed once consensus reached. such process lacks guarantee for the safety, especially when the channel under malicious attacks, because takes place off the blockchain. delegation network delegate node proof work super node honest node random clustering based pos and others figure random clustering based pos pow consensus effective out-of-box solution introduce hierarchy into the network that the broadcast overhead can contained. the key idea contract network into smaller ones (i.e., create hierarchy) and perform pow computation the contracted network with fewer nodes. the basic idea matrix's proprietary algorithm illustrated figure the hierarchy created with distributed random clustering process without centralized control. when the clustering completed, each node will have delegate for itself. the selected representatives constitute new network, coined delegation network, which has adjustable number nodes. then the transaction only broadcasted inside the delegation network. the pow allocated the delegate nodes and one such node can further partition its work into smaller jobs and assign these jobs the nodes voting for it. note that the clustering iteratively performed. the probability node selected delegate proportional its pos and other factors. the distributed random clustering based consensus algorithm matrix designed follows. node determines whether wants affiliated with another node based pos other factors. the node sends request neighboring nodes asking them join cluster, together with link list proof certificates sign and request for deposit. other nodes agree join the cluster, the certificate will used for verification and they will marked "affiliation committed". they not agree, they will marked "competitors" and will not receive information from this cluster. after becoming affiliated cluster, node calculates the connectivity neighboring nodes and elects group candidates according certain rules. with random method the best candidate will elected and the respective message distributed other nodes. when one node has enough number affiliated nodes, will marked "fullyloaded". such nodes will compete incorporate other clusters. nodes will send invitations neighboring nodes, asking the latter join them. through multi-signature mechanism, they jointly generate random seed, which can used initialize markov chain procedure. independent third party will judge who wins the competition looking the seed, public and private keys published both parties, and the results markov computing. both parties have confirm the result and put signature the result, which then published for book-keeping. nodes will keep incorporating others until they become "fully-loaded"(meaning when the number nodes reaches exceeds the total number nodes the previous round) until all other nodes its neighboring area are fully-loaded. will then marked "isolated". when there are only "fully-loaded" and "isolated" nodes the network, the next round absorption starts. "fully-loaded" will only absorb "isolated" nodes and vice versa. "fully-loaded" nodes will become "super" nodes (meaning they have more than nodes the respective cluster, more than the total number nodes the previous round), "isolated super absorbing nodes (meaning the number nodes falls below there are less than "fully-loaded" nodes left). when there are more than "super" nodes "isolated super absorbing" nodes, next round absorption begins and nodes will become core nodes, meaning they have more than nodes the respective cluster, have more than the total number nodes the previous round. when the number core nodes exceeds the total number nodes the previous round, the absorption process ends. the above procedure continues until there are less than clusters. the super nodes these clusters then become "delegate nodes". deep learning based code generation for smart contracts significant advantage matrix that users smart contracts longer need know how coding with programming language. matter fact, matrix only requires user type the purpose the contract, i.e., input, output, and transaction conditions, script. then deep neural network based code generator will identify the basic transaction patterns and convert them into program capturing the behavior the target smart contract. the future, are going use pure natural language the input frontend. script natural language convolutional neural network for text feature recognition recurrent neural network for code generation code library program for smart contracts figure deep learning based automatic generation smart contract programs recent development the deep learning technology proves the feasibility automatic code generation. first, the maturing the convolutional neural network (cnn) enables extracting high quality features from language and text. second, the recurrent neural network (rnn) mathematically proven turing complete computer that able generate any sequence. these deep neural networks offer the key techniques analyze the purpose contract and generate respective program. illustration the code generation process for smart contracts shown figure the script capturing the purpose contract fed convolutional neural work, which trained with large number labeled samples, identify the underlying transaction patterns and data attributes. the discovered patterns are organized sequence and then given recurrent neural network. the rnn has its parameters trained with typical patterns smart contracts. transforms the input patterns into program for the target program with the help code library containing codes for various design patterns smart contracts. besides offering dramatically enhanced accessibility, the code generation technology matrix can readily integrated with automatic security validation and enhancement techniques. fact, the whole process can made close-loop for iterative improvement. during the operation matrix blockchain, the underlying models can continuously updated for better code generation quality. ai-enabled security validation and enhancement matrix designed boost the security blockchain unprecedented level. the overall security framework matrix consists four major components, rule-based semantic and syntactic analysis engine for smart contracts, formal verification toolkit prove the security properties smart contracts, ai-based detection engine for transaction model identification and security checking, and deep learning based platform for dynamic security verification and enhancement. figure depicts the framework. formal verification revised smart contract program simulator cnn for security flaw recognition no-go gan based hacker attack generation success figure deep learning based security validation and enhancement smart contract programs syntactic and semantic analysis given program smart contract, martix's built-in compiler constructs bnf-based ast internal representation. for smart contracts that have been compiled into bytecode documents, matrix first disassembles the binary code and then produces corresponding bnf. based rule library, which built with domain knowledge and historical experience, the compiler uses recursive descent parsing check the ast for any security vulnerabilities. the syntactic level, martix's compiler identifies the respective finite state machine and data flow graphs from the program. then performs rule based checking and code revision. typical examples include: supplementing all conditional clauses prevent execution problems due incomplete conditions; analyzing all public members and functions that are called determine the level exposure contracts; and checking whether transactions steps are complete make sure that condition descriptions are complete. the semantic level, martix's compiler provides contextual check determine operations that not satisfy rules are not safe. typical examples include: checking objects and methods that have exposed external environment check their necessity and potential flaws; validating whether contract branches processing oracle are completed and whether there are other abnormal operations when contract called; checking the same condition different options avoid anomaly result different call sequences. formal verification smart contracts the above static syntactic and semantic analysis able identify logical flaws due human factors. however, logical problems runtime cannot detected. for instance, user may define contracting conditions when the target contract under complex constraints. also, security bugs can arise due the fact that contract executed distributed environment and each node sees unique execution sequence. result, the abnormal execution contract may leave loophole for other programs change its internal state. the matrix blockchain equipped with formal verification framework validate the security properties smart contracts. based functional programming language, the framework integrates smt solver and has multitude models and tools. has been used for verification various software and encryption programs. smart contract code function program translation fan fan smart contractdai smart contractdai compilation bian bian yuan dai han shu yuan dai han shu cheng xing cheng xing deng xiao jian cha deng xiao jian cha disassembling fan bian fan bian matrixxu bytecode jie virtual matrixxu jie jie han shu jie han shu cheng xing cheng xing function program figure formal verification smart contracts figure shows the formal verification flow for smart contracts. the verification tool-chain capable processing contracts both source-code and bytecode level. the source code will translated into equivalent program functional programming language. the adoption the functional programming model expose the hidden logic and ease the succeeding formal operations. the bytecode run the matrix virtual machine disassembled and transformed into equivalent functional program. equivalence checking and other consistency checking can accomplished the two functional programs. with the functional programs, set property checkers and theorem provers can applied validate various security properties (e.g., whether the return value send() function has been checked). ai-based verification smart contracts the abovementioned formal verification identified loopholes and bugs that can captured with explicit formal rules. the other hand, challenging define complete set security properties that cover all possible situations. accordingly, matrix has deep learning based framework discover the hidden intention smart contracts and detect complex patterns security vulnerabilities. matrix uses convolutional neural network extract textual features and detect interesting patterns. these patterns can syntax structure patterns (or combination the two). the former usually contains grammar and function features, while the latter structural features. the cnn trained with ethereum's open-source smart contracts, which are manually labeled. one key characteristic matrix its use automatically identity program syntax detect typical models and then automatically produce properties that satisfy security requirements. given program smart contract, matrix's engine will automatically detect similarity partial matching and complete matching predict the behavior model codes. based such models, the engine will produce set relevant constraints for indepth formal verification. dynamic verification and security optimization based deep neural network the security verification techniques covered the previous three sub-sections are static ones. however, there are loopholes that can only exposed during dynamic execution. table lists the ethereum smart contracts' vulnerabilities three levels, namely, high-level programming language, bytecode, and blockchain. can seen that most problems table only happen during dynamic execution distributed environment. table .vulnerabilities ethereum smart contracts level vulnerabilities attacks targeting responses vulnerabilities solidity call the unknown the dao attack fast increase call stack, depletion balance gasless send ."king the ether throne" fast consumption gas exception ."king the ether throne" fast increase call stack, disorders governmental fast consumption gas, fast increase data stack reentrancy the dao attack exhaustion call stacks, depletion gas keeping secrets multi-player games characterization codes and bytecodes evm immutable bugs governmental ether lost rubixi and bytecodes n.a. receiving address transfer blockchain characterization codes "orphan" address stack size limit governmental fast increase call stack unpredictable governmental fast increase data state dynamic libraries stack, access deleted updated modules generating n.a. random distribution randomness results code execution time constraints governmental fast increase call stack, increase contract balance, and change timestamp address these issues, matrix resort two dynamic approaches, generative adversarial network (gan) based security verification and distributed concurrence-based dynamic model verification. formal verification revised smart contract program simulator cnn for security flaw recognition no-go gan based hacker attack generation success figure deep learning based dynamic verification smart contracts ... generative adversarial network based security verification matrix adopts the recently developed generative adversarial network accomplish dynamic security verification. illustrated figure the dynamic verification procedure can coupled with the code generation framework closed loop. the gan framework consists two rnns. one rnn used revise existing programs for smart contracts, while the other learns generate hacker programs from random samples from given probability distribution. after smart contract programs are generated, they will deployed the "sandbox simulation network (one that simulates blockchain and where experiments can conducted controlled manner)", together with the corresponding hacker codes. the cost functions these two networks are tied together that the overall optimum achieved when the whole system reaches nash-equilibrium. this point, the revised program for smart contracts has the highest level security. ... distributed concurrence-based dynamic model verification besides the above general security verification and enhancement techniques, matrix also deploys customized tools for attacks follows. contract sequence attack this attack takes advantage the fact that the execution smart contracts asynchronous and subject dynamic change. even contract statically secure, still prone dynamic attacks, unless contract designed dynamically immutable. matrix uses machine learning techniques defend contracts against such attacks. these techniques include relation checking the contract sets identify relational contract transactions. matrix also provides asynchronous simulator help identify anomaly indicators this type attack. timestamp dependence attack the root cause this type attack due excessive discretion miners. matrix uses dynamically check timestamp dependence random number dependence avoid such behaviors. mishandling exceptions and reentrancy attacks these attacks are essence caused anomalies triggered the function calls smart contracts. matrix uses deep neural network find the coding patterns leading such vulnerabilities. highly flexible blockchain architecture matrix designed enable exceptional level flexibility blockchain management and operations. figure illustrates reference architecture matrix. shown the dotted box, matrix blockchain consists six types networked nodes, standard matrix nodes, cloud access nodes, cloud storage nodes, matrix trustworthy gateway, storage nodes for external data sources, and service nodes. matrixlian ying jian zai matrix blockchain storage nodes for external data sources matrixlian cloud access yun jie jie dian nodes dong lian wang yong users (shou genesis node yun cun chu cloud storage matrix matrix lian jie dian node external sources data trustworthy gateway aifu services matrix matrix lian jie dian node figure matrix system structure and deployment model standard matrix nodes constitute one distributed collaborative control chain and least one data chain. each node should have the computing power run virtual machine. the distributed collaborative control chain, abbreviated control chain hereafter, designed completely following the distributed and decentralized principle blockchains. cloud access nodes are devised facilitate the access mobile devices matrix's cloud service that all devices connected matrix have sufficient computing power. the block data matrix blockchain are copied real time the cloud storage nodes. instead serving for consensus, the cloud storage designed make easier for users view data offline. users can obtain the transaction records for validation, data mining, and other purposes. matrix trustworthy gateway the key interface communicate with external data sources. this device will obtain all the external data sources requested matrix and determine their credibility. when using these data, matrix nodes check the data consistency determine the level confidence each data source and give credit rating each external node. matrix trustworthy gateways are also organized with topology. storage nodes for external data sources from pool for data obtained via matrix trustworthy gateways. the data have pass based validation procedure before being checked in. the pool will also store private data users, but such data are encrypted ensure that only authorized users have access. all data inside the pool can verified checking their signature without accessing their content prove whether they have been tempered. service nodes serve two functions, supporting the optimization the entire system and initiating various services matrix. can service external users initiating matrix service provider and also arrange matrix nodes offer services internal users. the service nodes depend affiliated hardware provide computing power. multi-chain structure matrix seeing the strong need run public and private chains the same platform, matrix blockchain support multi-chain integration. allows the integration and interoperability public chains being completely public and private chains being coordinated with multitude security access and control mechanisms. figure depicts reference multi-chain platform enabled matrix technologies. consists one control chain and multiple data chains. matrix's support public and private chains mainly realized through control chain enable designated access control and security mechanisms. the control chain consists control blocks for access control, data storage safety, and multi-user security. the way every data chain block decoded and its parameter configuration are determined the configuration control blocks. there are also control blocks defining the configuration parameters the network. thanks the control chain, matrix adopts three-tier security guarantee mechanism composed block storage key, node security key and user security key. uses group keys and node keys encrypt transmission information and supports the distribution, management and security certification security keys the form private chains. the idea integrating multiple interoperable chains give matrix significantly greater freedom support real-world scaled commercial applications. for instance, now feasible have one data chain that supports bitcoin and one ethereum data chain. the two chains can exchange data and tokens through matrix's secure smart contracts. figure matrix's multi-chain structure natural evolution blockchain parameters blockchain typically has multitude parameters such block size, permission algorithm, consensus mechanisms, and mining algorithms. the configuration these parameters has significant impact the overall performance blockchain. generally impossible choose optimal group parameters for all situations. however, dramatic change these parameters incurs great risks for hardfork cryptocurrencies. the introduction the multi-chain integration complicates the problem because consensus mechanisms and other parameters different chains can vary significantly. reinforcement learning based parameter optimization engine embedded into matrix blockchains. so-called value network continuously learns the long-term rewards finetuning various parameters. after learning, the network can generate best parameter-tuning decision given the current structure and environment given blockchain. figure shows the natural evolution process matrix. since the matrix chain learns optimize itself, whole process designated natural evolution. policy network parameters action reward? observation blockchain optimized action figure natural evolution matrix parameters through reinforcement learning proof-of-work with markov chain monte carlo computations adopting hybrid pos pow consensus mechanism, matrix revolutionarily introduces value-adding computation replace the traditional hash computations. the idea use the markov chain monte carlo (mcmc) computation proof-of-work. mcmc has wide applications such scientific and engineering applications personalized medicine, finance modeling, human cognition modeling, and social network analysis. result, the mining process can unleashed for real-world applications and generate added value. fact, believe the mcmc based mining provides stronger bridge between the assets virtual and physical worlds. mcmc constructs markov chain draw samples from target probabilistic density. one the most influential algorithms invented the century, opens the path for enabling bayesian reasoning with real-world data. mcmc actually family sampling algorithms and the upper half figure lists the pseudo-code well-known derivative, the metropolis-hastings (mh) algorithm, sample posterior distribution (i.e., the distribution hypothesis given observed data). the mcmc algorithm has group essential features that make appropriate serve mining workload. first, compute intensive. the convergence complex distribution can take tens millions samples. the structural learning problem, which needs sample huge number graph topologies, can take days finish even supercomputers. second, the distribution samples after convergence unknown priori. such feature makes extremely hard cheat forging final results. third, possible evaluate the closeness final convergence, although the final results are unknown. the lower half figure illustrates one trajectory sampling. the shaded rings figure represent the target posterior distribution. metropolis-hastings mcmc bayesian bayesian mining:mining stochastic mcmc computation (mcmc) figure markov chain monte carlo computations the mcmc computing pattern not friendly either cpu gpu. fact, mcmc involves various probabilistic computations such random number generation and sampling probabilistic distributions. such computations are not natively supported current computers and thus incur significant overhead. our previous work, developed bayesian computing architecture for efficient mcmc computations. the overall hardware architecture illustrated figure organized multiple stochastic multiprocessors support multi-tasking. one more stochastic multiprocessors can allocated execute single task bayesian reasoning. stochastic multiprocessor equipped with set sampling units. note that these sampling units can invoked simd manner. sampling unit composed random number buffer and stochastic logic circuit with the purpose drawing random samples given set common distributions (e.g. uniform and binomial distributions). commercial core used generate true random numbers. programmable controller designed coordinate the parallel sampling according the given mcmc program. the architecture equipped with on-chip exemplar memory, which actually hybrid computing/memory module manipulate exemplar operations. each stochastic multiprocessor also has scratchpad memory for fast access generalpurpose data. the above architecture serves prototype for mining hardware and can implemented dedicated integrated circuit. bayesian computer ... stochastic multiprocessor stochastic multiprocessor ... stochastic multiprocessor program fetch programmable controller program mapper memory interface human memory model true random number generator global scheduler sampling unit sampling unit ... register file register file ... local exemplar memory register file shared memory figure hardware for markov chain monte carlo computations roadmap matrix age genesis initialization *infrastructure *private chain *inter-chain transaction age speed light speed network *ai-enabled pos+pow consensus *random generation delegates nodes *evolutionary parameter optimization age civilization ai-secured intelligent contracts *formal verification *ai based proactive protection *ai created autonomous constitution age wonder mining more apps *mining ics *computing/mining facility *big data applications shown the roadmap above, the development the matrix blockchain organized into four stages. the first stage, coined the age genesis, are going build the infrastructure consisting both control chain and data chains. the blockchain infrastructure also supports the interoperability between public chain and multiple private chains. the second stage, the age speed, the focus developing so-called light speed network. with the random hierarchy generation scheme, matrix will allow transaction speed over transactions per second. the third stage, the age civilization, will witness the rise ai-enabled protection over blockchains. besides offering ever stronger security protections, potentially allows the autonomous emergence constitution, which defines the rules behaving ethically the world cryptocurrency but exhibits itself distributed manner. the objective the final development stage build mining ics, deploy mining facilities, and deliver big data applications. designate this stage the age wonder because for the first time the computing power cryptocurrency can leveraged real-world data driven applications. conclusion with the integration cutting-edge technologies, matrix reflects the spirits ancient chinese sages. lao tzu, the great philosopher china, once said, "the key growth the introduction higher dimensions consciousness into our awareness." introduce new dimension, artificial intelligence, into the world blockchain and cryptocurrency. the blockchain technology already connects the world one, matrix's ai-enabled intelligent blockchain will give unparalleled capabilities understanding the past and predicting the future.