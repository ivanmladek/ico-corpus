trezarcoin sven van gelder and oliver ziegler sven.van.gelder@web.de o.zieglerz@web.de abstract introducing trezarcoin, extremely secure and energy efficient cryptocurrency. trezarcoin combines the best features both proof-of-work and proof-of-stake mining. its central innovation developed ghostlander, proof-of-stake, far the most advanced implementation this technology date. trezarcoin supports multiple algorithms achieve enhanced security. with these features, trezarcoin targeting users who place high value security. neoscrypt neoscrypt further development scrypt and will increase security and improve performance general purpose computer hardware, while maintaining comparable costs and requirements. although very innovative design for its day, scrypt has developed vulnerabilities. the first announced differential cryptanalysis salsa/ tsunoo al. did not deliver any advantage over -bit brute force attack, but the following research aumasson al. reduced time complexity break from with success probability. was improved shi et. although this not critical yet, improved attacks salsa/ may developed the future. neoscrypt uses salsa and chacha improve scrypt security. there are known successful attacks non-reduced salsa and chacha, other than exhaustive brute force hacks. neoscrypt replaces sha- with blakes which further development blake- [], one nist sha- contest finalists. based upon chacha neoscrypt operates with lower round count supports keyed hashing, native little endian and faster significantly than sha- and even blake-. could interfaced directly pbkdf with need hmac. however pbkdf constructs derived keys using blocks. this means minor change input datum, such nonce increment, may not result entirely different derived key. replacement kdf has been developed address this issue. proof-of-stake proof-of-work the underlying database structure for transactions bitcoin and other digital currencies decentralized ledger, called the blockchain, which stores the entire transaction history. the name stems from the fact that transactions are bundled into blocks; each block the blockchain (except for the first i.e. genesis block) references previous block. each node participating the bitcoin network has its own copy the blockchain, which synchronized with other nodes using peer-to-peer protocol. any implementation digital currency must have way secure its blockchain against attacks. the blockchain prevents attacker from spending cryptocurrency, and then reversing the spending transaction broadcasting their own version the blockchain without their transaction. security the blockchain does not rely single authority, instead uses network contributors agree all transactions. users have prior knowledge which version the ledger valid, cannot change the information contains. bitcoin, the security the network relies proof-of-work (pow) algorithm the form block mining. each node participating mining required solve computationally difficult problem ensure the validity the newly mined block; solutions are rewarded with bitcoins. the protocol fair the sense that miner with fraction the total computational power can win the reward and create block with the probability attacker required solve the same tasks the rest the bitcoin network, attack bitcoin will only successful the attacker can bring significant computational resources greater than the rest the network combined. operation the bitcoin protocol such that security the network supported physically scarce resources: specialized hardware needed run computations electricity spent power the hardware this makes bitcoin inefficient from resource standpoint. increase their share rewards, bitcoin miners are compelled participate arms race continuously deploy more resources mining. while this makes the cost attack bitcoin prohibitively high, the ecological unfriendliness the bitcoin protocol has resulted proposals build similar systems that are much less resource intensive. one possible decentralized ledger implementation with security not based expensive computations relies proof-of-stake (pos) algorithms. the idea behind proof-of-stake simple: instead mining power, the probability create block and receive the associated reward proportional the users ownership stake the system. individual stakeholder who has fraction the total number coins circulation creates new block with probability. the rationale behind pos the following: users with the highest stakes the system have the most interest maintain secure network, they will suffer the most the reputation and price the cryptocurrency would diminish because the attacks. mount successful attack, outside attacker would need acquire most the currency, which would prohibitively expensive for popular system. table :vulnerability proof work and proof stake consensus mechanisms attack vectors this one many reasons why combination proof-of-stake and proof-of-work implemented trezarcoin. advanced checkpointing advanced checkpointing feature originally invented and implemented feathercoin and its developer peter bushnell. its purpose defend the blockchain trezarcoin from attacks. the advanced checkpointing (acp) feature will remove the need for changes client software publishing feed checkpoints via central node. checkpointing infrequently utilized feature cryptocurrencies. its way maintain the integrity the block chain recording blocks out it. bitcoin, checkpoints are stored the code the client. this enables verify its checkpoints against the copy the block chain has downloaded, ensuring that block chain has not been retroactively rewritten attack. this means that the block chain grows, client software has updated store new checkpoints within its code. this leaves clients not having been updated for long time vulnerable attacks the block chain. the trezarcoin team intends solve this problem separating the checkpoint record from the client software. the team has created master node and updated its client, which will publish the series checkpoints for trezarcoin clients verify against. orbitcoin super shield the difficulty trezarcoin for pos and pow blocks defined orbitcoin super shield (oss), which uses various inputs retarget the difficulty. retarget every block, oss takes the two averaging windows and blocks, damping and further oscillation limiting. the idea behind oss the protection the network from multipool-mining, which creates higher difficulty for everyone. leaving blockchain difficulty-trap common attack blockchains which havent implemented intelligent retarget-algorithm. the basic advantage oss regulates the difficulty according few significant measurements, instead only through the average the last blocks like bitcoin does. proof-of-stake proof-of-stake adds additional layer security the trezarcoin protocol. essentially your coins start staking after one day period. this period starts from the moment your incoming transaction was broadcast, including previous pos block. not possible generate pos for inputs that are younger than one day and you cannot predict how much time will take generate pos afterwards. this quite similar traditional solomining with gpu. depends on: depends the current difficulty (which turn depends the amount and activity the "competitors" other miners) your mining power (but with pos your mining power not megahashes mining hardware but amount coins-days you accumulate your wallet) time which you spend mining (but with pos not time gpu/asic work, but time while you running wallet online with "old" coins staking) your luck the staking power, usually called "weight" calculated the following way: (amount coins)*(coinage coinweight. the coinage counted for each input transaction individually. explained above inputs with age smaller than one day have zero weight, although according the formula they would have negative value, but the protocol just accounts all this inputs weight, and aren't staking all. for example incoming tzc transaction that one week old have weight (-) coin-days, increasing continuously with time until generating pos finally.after successful pos generation coin age reset zero (so weight too) and the process starts from the beginning.maximum possible weight reached after days, maximum weight input size still not possible calculate the exact time when individual input will generate pos, because stochastic procedure and heavily dependent luck. sometimes very "lucky" inputs may generate pos blocks only few hours after reaching minimum age. case bad luck the exact opposite, transaction staking few days even weeks before generating pos reward possibly well. course having many inputs staking the same time reduces the luck factor and the timing rewards becomes more predictable. the main difference between the trezarcoin pos and other pos systems best explained example. you have coins and want stake them for profit continuously, traditional pos you can launch your wallet, say, once month, synchronise, generate single big stake quickly and shut down the wallet until the next month. you are not motivated keep online much possible and support the network. case tzc, doing the same means losing most the potential profit. first all, you want split these tzc into smaller parts like tzc each, they can stake independently process your wallet will take care automatically, but still the fastest way yourself). second, you want them stake soon possible, and the best way keep your wallet online much possible. you produce number pos blocks the process rather than single one, also you constantly replay blocks, transactions, messages and short help securing and maintaining the network. conclusion the primarily advantages and features trezarcoin compared standard scrypt coins have been described and evaluated above without going into much detail, everyone can understand the vast topic cryptocurrency mining. for more details please refer the source code trezarcoin. references yukiyasu tsunoo, teruo saito, hiroyasu kubo, tomoyasu suzaki and hiroki nakashima. differential cryptanalysis salsa/, january jean-philippe aumasson, simon fischer, shahram khazaei, willi meier and christian rechberger. new features latin dances: analysis salsa, chacha, and rumba, december zhenqing shi, bin zhang, dengguo feng and wenling wu. improved key recovery attacks reducedround salsa and chacha, november jean-philippe aumasson, samuel neves, zooko wilcox-o'hearn and christian winnerlein. blake: simpler, smaller, fast md, january jean-philippe aumasson, luca henzen, willi meier and raphael c.-w. phan. sha- proposal blake. submission nist (round /),