https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md table contents [introduction](#-introduction) [what lisk](#-what-is-lisk) [technical background](#-technical-background) [key innovation factors](#-key-innovation-factors) [lisk components](#-lisk-components) [clients](#-clients) [lisk](#-lisk) [lisk lite](#-lisk-lite) [lisk mobile](#-lisk-mobile) [consensus](#-consensus) [delegates](#-delegates) [network fees](#-network-fees) [peer-to-peer](#-peer-to-peer) [core features](#-core-features) [usernames](#-usernames) [contacts](#-contacts) [multi-signatures](#-multi-signatures) [decentralized applications](#-decentralized-applications) [virtual machine](#-virtual-machine) [dapps](#-dapps) [dapps development](#-dapps-development) [dapps computation](#-dapps-computation) [dapps consensus](#-dapps-consensus) [dapps master nodes](#-dapps-master-nodes) [dapps storage](#-dapps-storage) [dapps deposits withdrawals](#-dapps-deposits-withdrawals) [dapps tokens](#-dapps-tokens) [appendix](#-appendix) [sources](#-sources) introduction ### what lisk lisk next generation platform that allows for the development and distribution javascript based decentralized applications using easy use, fully featured ecosystem. through lisk, developers can build, publish, distribute, and monetize their applications within custom built cryptocurrency powered system that utilizes custom blockchains, smart contracts, cloud storage, and computing nodes; all from within one industry solution. ### technical background lisk written node.js[[]](http://nodejs.org) the backend, and html and css the frontend. works asynchronously and allows for fast processing all functions such network transactions. the database uses sqlite allow the use and running complex queries. ### key innovation factors lisk the first decentralized application solution written entirely node.js. this opens the lisk ecosystem thousands current developers with additional skills necessary. any web developer who already familiar with javascript and node.js can immediately jump and begin building decentralized applications from day one. our core goal with lisk was create entire plug and play system that would allow developers everything from design, development, publication, and monetization, all from within one platform. utilizing the lisk ecosystem, developers can quickly deploy their javascript apps lisk hosting storage nodes, gain listing the lisk dapp store, and have immediate access lisk compute nodes for execution the code. all while being backed the integrity and security the lisk sidechain consensus functionality. top all off, all these cloud functions are run the users and lisk delegates who are paid through built invoice system (or the network itself the case delegates) and paid lisk (lisk's own cryptocurrency) btc. truly one stop shop for https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md application development that provides cutting edge, affordable, and forward-thinking solution. ### lisk components decentralized hosting dapps decentralized storage for dapps decentralized computing sidechain consensus for every dapp lisk and bitcoin api interfaces developer tools: lisk cli lisk dapp sdk clients ### lisk the full client the best solution for super users, delegates and developers. available for windows, mac and linux. though only possible delegate with the linux client. lite client users can connect the full clients access the network. they can also use them make api calls, allowed the full client owner. all full client users download the blockchain from each other through peer-to-peer connection. dapp users can use the lite client for accessing their installed dapps well. the dapps api and the peers api are available developers. they make possible quickly and easily create javascript dapps using nw.js electron. ### lisk lite the regular user will mostly use the lite client, light-weight lisk client, access their lisk account. the lite client available for windows and mac os. does not require installation process, utilizes modern web technologies. does not act network node, only connects other peers which are online via http connection. this brings several advantages. the user does not have download the blockchain anymore, which means the application itself stays very small. does not broadcast secret keys through the network, all data signed locally your device. possible make all types transactions available. you want run delegate node, you can register delegate account with the lite client. however, not possible run delegate from it, i.e. creating new blocks. for this you need the full client. dapp users can use the lite client for accessing their installed dapps well. the dapps api and the peers api are available developers. they make possible create quickly and easily javascript dapps with nw.js[[]] (https://github.com/nwjs/nw.js) electron[[]](https://github.com/atom/electron). the full client the best solution for super users, delegates and developers. available for windows, mac and linux. though only possible delegate with the linux client. lite client users can connect the full clients access the network. they can also use them make api calls, allowed the full client owner. all full client users download the blockchain from each other through peer-to-peer connection. ### lisk mobile the mobile client allows the user access their lisk account while the go. will available for both ios and android and featured the apple and google play app stores. the backend infrastructure for the mobile client will mirror that our desktop solution. the real change comes the form additions and tweaks the user interface which will allow for tailored experience mobile devices. the app has been custom designed provide https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md familiar and easy use mobile interface, much like the bitcoin banking apps you already use daily basis. will also allow you launch all your favorite dapps from within the app itself. the future, plan integrate device specific functionalities like the ability utilize the fingerprint retinal scan capabilities for added security your account. consensus lisk based the dpos[[]](http://wiki.bitshares.org/index.php/bitshares) (delegated proof stake) consensus mechanism. this method consensus was originally created the bitshares team. dpos based delegates creating blocks. delegates are trusted accounts which are elected "active delegates". the delegate accounts with the most votes create the blocks. other delegates are listed "standby delegates", and can advance the top list receiving votes from the other lisk owners. all users lisk have votes available elect their favorite delegates into the top list. the weight each the votes proportional the amount lisk the user has the wallet the votes are cast from. this total amount shown the delegate list "approval", and listed percentage the million lisk available that voted for that delegate. delegate promotion the top demotion the standby list happens the completion the block generation cycle. each cycle blocks created the top delegates random order. the block time seconds. newly created blocks are broadcast the network and added the blockchain. after confirmations, block, along with its transactions, can considered confirmed. complete block generation cycle takes approximately minutes. dpos, forks can occur, but the longest fork wins. delegates must online all the time and have sufficient uptime. uptime used catalogue the reliability node logging each time that misses block that was assigned it. users vote for the top delegates based several factors, uptime being one key factor used make determination. delegate drops below certain rating, users may remove votes from the delegate question due poor performance. ### delegates the function delegates covered above the consensus section. delegate, user needs register delegate account. this accomplished from the client user interface either the full lite wallet. keep mind that block generation only possible the full wallet. this means that you can register delegate either version the wallet but will only able perform the delegate functions from full version the client. the account number and username will the same after the delegate registration. all lisk accounts are eligible become delegates. new delegates start standby delegates. standby delegates begin with approval rating and will need accrue votes from the lisk community order advance one the top delegates. block generation performed the top delegates only. you are standby status, you will not forge any blocks. ### network fees all valid transactions the network must processed. delegates process transactions and store them new blocks. for this work, the delegates receive fee. all transactions the network must contain some type fee spam countermeasure. the default network fee for sending lisk transaction lisk. for example, lisk transaction includes additional fee lisk for total transaction cost lisk. the following list fees for different types transactions: lisk amount sent for spend transaction lisk for registering second passphrase lisk for registering username lisk for registering delegate https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md lisk add contact lisk register dapp lisk per member for registering multi-signature group. delegates receive the fees from all transactions the last block cycle blocks). fees are split equally between all delegates who created block that cycle. delegates who missed creating block assigned them during that cycle are not paid. ### peer-to-peer are using standard network[[]](https://en.wikipedia.org/wiki/peer-to-peer), which works top the http protocol, and uses json formatted data method data interchange. the module captures the following information about each peer: version port core features ### usernames lisk allows users register usernames. which act alias your account. other users can send transactions this username and the linked account will then receive it. this eliminates the need remember long account addresses. the network fee for username registration lisk. usernames may contain the following characters: traditional alphabet (upper lower case): a-z, a-z numbers: special characters: and each username unique. the length currently limited characters. currently, not possible remove username from your account. ### contacts lisk allows users maintain contact friends list. this feature can used store frequently used accounts, but can also used reputation system. account has many confirmed contacts, may considered more reputable than one without. contacts work like followers twitter. user show pending contact request the user's user accepts the request, they will shown the request, the requester will added his new confirmed contact. added the contact list, which will then wallet. regardless whether not the other the contact list. once the other user accepts contact list well. both parties now have the network fee for adding new contact accepting incoming request lisk. ### multi-signatures lisk allows users create multi-signature group. multi-signature group consists several lisk users, called group members. transactions from multi-signature groups can configured require some all signatories for approval. achieve this multi-signature architecture implemented. all members multisignature group (n) are added, maximum signatories, and then the required number (m) signatures needed approve transaction specified. must greater than and less than equal than the number members the multi-signature group. once you initiate transaction from the multi-signature group, all members will see this pending transaction and decide whether approve ignore it. once the required number https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md confirmations has been collected, the group will allow the transaction and submit the blockchain. the owners multi-signature group may change the rules the group any time with the approval least the signatories. decentralized applications ### virtual machine lisk dapps are executed using lisk node, specialized version nodejs that provides sandboxed runtime environment which run individual dapps. inter-process communication achieved using named pipes, with imposed limit message size. upon launching new dapp, the lisk client starts new instance lisk node child process. dapp encounters fatal error, then the child process killed gracefully, leaving the parent lisk client unaffected. **please note, currently there protection against unauthorized system calls made from the running dapp. therefore, running untrusted code not yet advisable, and could potentially lead loss funds. work underway provide fully sandboxed environment which run untrusted code.** ### dapps dapp decentralized application[[]] (https://github.com/davidjohnstonceo/decentralizedapplications/blob/master/readme.md) written node.js and javascript. works with the lisk using either the lisk soon the bitcoin consensus algorithm. the lisk scalable node.js application that allows node.js and javascript developers write dapps. with current web technologies (html/css/javascript) the developer able create powerful ui. dapps can use custom node.js packages from npm (the node.js package manager). regular users can launch the dapps linux lisk client via the lisk lite client windows mac os. ### dapps development developers write dapps javascript which allows the use the full ecosystem node.js packages powered npm. the lisk integrated with the lisk api. this api interfaces with the lisk blockchain and even with the bitcoin blockchain. each dapp runs the lisk vm, which removes many possible attack vectors and thus makes much safer for the end user start dapps their local machine. the lisk api accessible the dapp. make the dapp development easy possible the lisk team released lisk-cli, command line interface which creates your own testnet and dapp environment answering few simple questions. additionally prepared dapp toolkit, which gives developers reference implementation the most important dapp functionalities, and serves solid foundation upon which they can start building their decentralized applications. many libraries have been written provide the full lisk api functionality for developers "straight out the box". this api includes: consensus api lisk api bitcoin api database api open dapp, the format: `http://ip:port/dapps/` used. ### dapps computation the lisk team developing system that allows for billing cpu time. where the lisk uses its api track how much cpu time used run dapp. result, owners nodes https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md can run dapp master nodes return for lisk btc payments. the purpose lisk create unique ecosystem, which computation one part. the future, lisk will have submission manager submit dapps candidate nodes offering their service run dapps and select the nodes meeting the specified resource requirements offering the best combination price and performance. the node owners will earn revenue from providing computation, memory, storage and other resources. this referred dapps billing. you can compare the heroku platform for deploying applications. ### dapps consensus each dapp has its own unique private side chain which operates synchronization with the lisk block time and current block height. dapp sidechains are managed group master nodes, each which have block generation enabled specifically for individual dapp. the primary role each master node process transactions and signify the validity each block generated the sidechain. the signing blocks master node against given dapp restricted the dapp owners. whom then approve individual lisk accounts master nodes, which then are allowed forge the dapp's side chain. sidechain consensus maintained among the master nodes using the same delegated proofof-stake (dpos) method used secure the lisk blockchain. this allows individual master nodes collect fees from each transaction reward for securing the dapp's side chain. the motivations behind this form consensus are prevent unnecessary enlargement the lisk blockchain and retain individual sidechain autonomy, while the same time, ensuring the integrity each side chain constantly upheld. should noted optional alternative the soon future, lisk dapps can instead secured the bitcoin blockchain using this same method. ### dapps master nodes dapp master nodes are lisk nodes with installed dapp and with block generation enabled specifically for that dapp. dapp owners need approve individual lisk accounts permitted master node. the nodes process transactions and generate new blocks which are then secured the lisk blockchain, making them the core the dapp system. ### dapps storage possible host dapps every kind storage network, centralized and decentralized. however, the used storage network has provide you with download link zip package. this necessary because you have provide the download link the dapp registration process that once consumer/user wants install your dapp lisk knows from where download and unpack it. later stage ipfs[[]](https://ipfs.io) will natively integrated into lisk decentralized storage option. ### dapps deposits withdrawals developers can use either lisk btc their dapps. users withdraw funds from any given dapp. when lisk btc are sent appear the dapp account. the funds will then become available works the same way for btc deposits does with lisk. btc address and then appears the dapp bitcoin wallet. dapp may deposit dapp address, the funds for use within the dapp. this sent special dapp dapp accounts are special type account created the owner dapp. all deposited lisk btc will stored the associated addresses. for security reasons, only the use multi-signature dapp accounts with trusted signers recommended. withdrawals from dapps are processed master nodes. when withdrawal request sent, the https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md dapp master node processes and moves the funds the specified withdrawal address the lisk bitcoin blockchain. ### dapps tokens developers may implement custom tokens their dapps, and use these tokens the main currencies within their dapps. these tokens may used the same way lisk btc, but the tokens cannot moved directly from one dapp sidechain another dapp sidechain. they must only move via the lisk main chain. appendix ### written max kordek oliver beddows ### releases february st, (v.) sources [node.js organization.](https://nodejs.org) [nw.js](https://github.com/nwjs/nw.js) [electron](https://github.com/atom/electron) [bitshares dpos.](http://wiki.bitshares.org/index.php/bitshares) [peer-to-peer wikipedia article](https://en.wikipedia.org/wiki/peer-to-peer) [seccomp wikipedia article](https://en.wikipedia.org/wiki/seccomp) [npm.js](http://npmjs.org) [david johnston. decentralized applications.] (https://github.com/davidjohnstonceo/decentralizedapplications/blob/master/readme.md) [factom. merkle tree.] (https://github.com/factomproject/factomdocs/blob/master/factom_whitepaper.pdf) [ipfs. decentralized storage solution.](https://ipfs.io) [sidechains. deposit/withdrawal sidechain.](https://www.blockstream.com/sidechains.pdf) [**based the crypti whitepaper the crypti foundation**] (https://crypti.me/crypti.pdf) https://raw.githubusercontent.com/slasheks/lisk-whitepaper/development/liskwhitepaper.md