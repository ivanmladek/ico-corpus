edenchain: the programmable economy platform james ahn technical whitepaper version edenchain: the programmable economy platform disclaimer not take any action before reading the following disclaimers. this document contains pertinent information about the r&d and businesses eden. this material has been prepared for informational purposes only, and not intended provide, and should not relied for, tax, legal accounting advice. you should consult your own tax, legal and accounting advisors before engaging any transaction. eden's technical whitepaper and the information posted its homepage are not guidelines solicitation documents attract investments. any token issued eden neither security nor equivalent one used any jurisdiction. you have decided contribute the development eden, your donation eden does not include the sale nor exchange cryptographic money the form securities, investment units, stock eden. eden token holders not receive dividends any other income. residents and permanent residents cannot donate eden and receive tokens due the uncertainty around legal regulations. you provide false information eden, this violates the fundraising terms and conditions and eden may request compensation. you should not download, distribute make copies any form information provided eden, such home pages, technical white papers, etc., wherever there might any possibility such breach. the information the white paper has not been reviewed approved regulatory authorities. the publication and distribution white papers not imply that they complied with the regulation the relevant law and its requirements. the maximum extent permitted applicable laws, regulations and rules, eden entrepreneurs, team members, etc. are not liable for any indirect, incidental consequential damages related the eden project whatsoever. this document contains information from open market research reports, information from industrial publications, internal research from eden, etc. while this information generally considered reliable, there assurance for the accuracy reliability the information. all information contained within eden's homepage, whitepaper, and other related documents suggested model case and neither binding and will not executed unless explicitly stated the funders' terms and conditions. you may not reproduce distribute any kind information documentation provided eden without including this disclaimer. technical whitepaper edenchain: the programmable economy platform abstract eden blockchain-based platform that can used capitalize and trade all types assets through programmable economy technology. using blockchain smart contracts, you can capitalize all tangible and intangible asset values through tokenization. use smart contracts integrate real and virtual economies, creating fundamentally new programmable economy platform. the use eden's programmable economy platform includes the following advantages: can lower transaction costs due system that bereft middleman. can redistribute the profits that the middleman has monopolized. creates new market that has never existed through the capitalization domestic and foreign materials; this turn can enrich the lives many returning the economic benefits back them. currently, there are two major technical problems achieving programmable economics blockchain technology: poor performance and the lack secured connectivity. eden solves these technical problems and provides components necessary for implementing programmable economy. eden implements merkle tree namespace solve the performance problem executing transactions different namespaces parallel and integrates e-oracle technology for external system interactions. addition, provides reliability and privacy, through the adoption mvt (median voter theorem) consensus algorithm, granting robust functions for selection values that can occur when interacting with external systems. eprotocol using ecc (elliptic curve cryptography) (threshold cryptography) acts powerful mechanism that can protect against attack hackers encrypting all network data. poet (proof-of-elapsed-time), the settlement algorithm ledger data, designed enable efficient leader emulation with fewer computing resources. eden's key programs are implemented the sgx enclave disable software attacks and hardware attacks, further enhancing secured connectivity when interacting with external systems. addition, eden incorporates global dns, multi-datacenter pattern, and virtual private network (vpn) hub technology order ensure secure services despite the potential occurrence situations that may disrupt local systems such natural disasters and largescaled attacks hackers. this results durable network that can continue operate from eden service zones around the world. technical whitepaper edenchain: the programmable economy platform eden can applied diverse array industries and services, such initial coin offerings (icos), iot, shared economy platforms, gaming, finance, etc. given its ability capitalize valuable assets and execute transactions rapidly, securely and low costs. technical whitepaper edenchain: the programmable economy platform introduction programmable economy the internet, smart phones, big data, cloud services, and artificial intelligence technologies have had major impact the way which live. these devices and services have become embedded into our daily lives that they are now virtually indispensable. similarly, blockchain technology will continue integrated into our lives, dramatically altering the manner which interact with the world around us. the programmable economy born when blockchain meets the economic system. the programmable economy new economic system that capitalizes tangible and intangible values with blockchain technology, and freely trades through the internet without the need for middleman. the existing system, the middleman provides services buyers and sellers order carry out transactions safely and quickly, and return the middleman receives compensation. such economic system, the general public cannot participate the network, the middleman monopolizes the profits from such trades. our programmable economy, the buyers and sellers are connected directly with one another, which eliminates the need for middleman. result, transaction costs are lowered, and the entire process simplified. participants within the network also receive corresponding revenues that would have otherwise gone entirely the middleman. the programmable economy, individuals can utilize blockchain technology tokenize all types assets, tangible and intangible, register them blockchain secure their ownership, trade tokens with others, and automate trades using iot services. technical whitepaper edenchain: the programmable economy platform figure eden's programmable economy tokenization tokenization the process converting certain types assets into tokens within the blockchain network (cameron-huff, throughout the world, there exist plethora asset classes, such stocks, real estate, automobiles, gold, etc. individuals are able buy and sell these assets for various purposes. technology has developed, distinct asset classes have begun emerge, such copyrights, insurance policies, and derivatives, which all contain tradeable value when certain conditions are met. with blockchain technology, existing assets can replaced with blockchain-based tokens and their ownership can registered; the necessary conditions can specified through smart contracts according the characteristics the asset. also possible create new assets through the combination different asset types. assetization the process assigning ownership intangibles such game items, credit card points, even one's own influence social media platforms. technical whitepaper edenchain: the programmable economy platform figure tokenization smart contract computer scientist and cryptographer nick szabo explained smart contracts follows: set promises, specified digital form, including protocols within which the parties perform these promises." (szabo, short, refers "automated trade agreement" that functions without human intervention the conditions specified the contract are met. the chamber digital commerce described szabo's concept smart contract four elements: model smart contract, automation, data processing protocol and software code (chamber digital commerce, furthermore, such smart contracts are composed six steps total: identify agreement set conditions code the business logic encrypt blockchain technology execution processing network updates technical whitepaper edenchain: the programmable economy platform bocconi university professor vincenzo morabito divided smart contracts into two types: deterministic and nondeterministic (morabito, deterministic smart contract type contract that does not have any data from outside its execution, while non-deterministic smart contract form that requires external data its execution (morabito, non-deterministic smart contracts are more vulnerable security breaches relative deterministic smart contracts because non-deterministic smart contracts need retrieve data from external systems rather than from blockchain networks. however, these non-deterministic smart contracts can integrated with external systems create various types smart contracts and automation agents, very important element smart contracts. figure smart contract bitcoin smart contract bitcoin provides programming language called "script". script bytecode stack-based language similar forth, and designed turing-incomplete, which intentionally does not support loop recursion order ensure the execution script programs without risk hacking (lamela-seijas, script supports various functions such stack manipulation, string manipulation, bitwise manipulation, and basic cryptography. however, script inherently limited use due various technical whitepaper edenchain: the programmable economy platform factors. the maximum size script bytes due the limitation bitcoin's block size, and the number available opcodes limited (harding, ethereum smart contract ethereum supports turing-complete language, and uses loop and recursion, which more flexible implementation than bitcoin's script language. script prohibits loop and recursion order deliberately delay the execution the program and prevent long wait times. ethereum solved this problem introducing the concept "gas" (wood, gas can understood kind royalty fee concept that uses ether encryption execute the smart contract. each time someone executes calculations ethereum smart contract, runs way that subtracts certain amount from the gas paid advance, individual cannot deliberately delay the execution repeat the calculation indefinitely. interesting feature the ether smart context language that has the reactive property, this ensures that smart contract programs cannot executed themselves and can executed other transactions. designed have the reactive characteristic order avoid dos attack. smart contracts written languages supported ethereum run the ethereum virtual machine (evm). evms that run smart contracts non-secure environment which anyone can create and register smart contracts publicly-permissive blockchain runs quarantined redundant network environment. when problems arise while running particular smart contract, evms roll back the state before execution and not return the gas already used. nxt smart contract nxt adopted the proof-of-stake (pos) consensus algorithm secure performance and scalability with first-generation blockchain technology. has been designed with client-server architecture and connects with internal and external systems using apis. unlike bitcoin and ethereum, nxt prepared using smart apis provided nxt. the nxt api provides the basic functions necessary for various fields such file storage, messaging, and trading. therefore, the general logic written using programming language such javascript, python, java order create nxt smart contract, while functions such input, delete, and update data block, are completed using the nxt api. technical whitepaper edenchain: the programmable economy platform the types and functions smart contracts that can created nxt are more limited than other blockchain technologies supporting language-based smart contracts such dummy because they depend the type and content the apis provided. .technical motivation smart contracts are key element the programmable economy since tokenization realized through smart contracts. these smart contracts should have the ability rapidly defend against attacks, misuse, and tampering hackers because they deal with large number transactions and sensitive data. smart contracts operate autonomous actors whose behavior completely predictable (christidis, this allows smart contracts used for reliable transaction processing. distributed systems professor aad van moorsel categorized the issues that could generated smart contracts into four categories: codifying issue, security issue, privacy issue, and performance issue (alharby moorsel, the codifying issue explains the difficulty creating completely seamless smart contract, while the security issue related attacks using bugs weaknesses within the smart contract itself. the performance issue caused the scalability problems the blockchain executing the smart contract. finally, the privacy issue describes the problems that arise the content the smart contract made public. there are number technical issues the need addressed order for smart contract used trusted autonomous actors. when these issues are solved, smart contracts can used various fields the programmable economy true smart contracts. technical issues there are two major technical issues the implementation the programmable economy: throughput speed and security. both these issues restrict the full functionality programmable economy. current blockchain processing techniques, there exists great deal difficulty using the techniques conjunction with actual services due both the slow speeds and the vulnerability attacks carried out hackers. performance scalability technical whitepaper edenchain: the programmable economy platform two the most discussed technical issues bitcoin and ethereum's respective blockchain technologies are performance and scalability. according coinbase co-founder fred ehrsam, facebook can handle requests per second, while ethereum can only handle transactions per second (tps) the case tokens. technical issues related performance and scalability must solved order for the continued growth and adoption blockchain technology. addition, higher levels scalability and performance are necessary for smart contracts that require far more computations than traditional blockchain transactions. for example, smart contract interfaced with external system, the slow processing the smart contract can become bottleneck the blockchain itself, degrading the performance and scalability the overall system, and seriously undermining system responsiveness. issues related performance and scalability may become more salient over time the number transactions conducted over blockchain-based platforms and smart contract applications continue increase. these obstacles continue present, blockchain may suffer from lack mainstream adoption both enterprises and consumers. figure tps performance lack secured connectivity economist mark flood states that important understand that financial network edge which vertices are connected, and that connecting these edges forms smart contract (flood, distinct systems often require require high degree connectivity order execute certain tasks. order for smart contracts create more abundant application services and further realize programmable economy, high level connectivity that can interact with external systems required. for example, suppose that cargo owner moves cargo from point point and then the owner creates smart contract pay for the gps information attached the cargo. order for smart contract implemented, gps information attached the freight car should transmitted the blockchain where the smart contract stored predetermined time interval. result, the smart contract executed, and the freight car driver can receive the promised cost. other words, system that can securely interlocked with external system can provided the smart contract provide various benefits promised the original smart contract. smart contracts must able work with variety external technical whitepaper edenchain: the programmable economy platform systems order process contracts automatically. important point that system interaction not only means interlocking with external systems but also means ensuring stability for interacting with external systems. figure lack secured connectivity ethereum allows oracle interoperate with external systems, but does not guarantee the safety data from external systems (alharby moorsel, secured connectivity protects against the attacks hackers that may occur during the interaction between smart contracts and external systems, which guarantees stability. secured connectivity important technical issue that must addressed for the scalability and automation smart contracts, but currently not provided blockchain technologies such bitcoin and ethereum. technical whitepaper edenchain: the programmable economy platform .eden: the programmable economy platform introduction eden eden blockchain-based programmable economy platform that provides high-performance processing speeds which address the aforementioned technical issues. eden has the capacity develop variety automated services using smart contracts, enabling interoperability with external systems. the core technologies implementing programmable economy smart contracts, have greater technological and economic value than non-deterministic smart contracts that require off-chain integration rather than deterministic smart contracts that are operated only onchain. conventional blockchain technologies such bitcoin and ethereum are unsafe because they are exposed hacker attacks. this due the lack guaranteed trust interacting with external systems that normally required for non-deterministic smart contracts. eden uses the e-bridge layer retrieve data from multiple data sources when non-deterministic smart contract interfaced with external system. eden encrypts this data and incorporates the median voter theorem (mvt) secure trust and defend against attacks from hackers. performance vital technical issue that essential the implementation smart contracts. eden combines namespaces with merkle tree, isolates transactions based its particular namespace, and secures performance and scalability constructing execution system capable parallel processing namespace. this enables the ability carry out vast number transactions simultaneously parallel. eden supports solidity, the most popular smart contract language this time, well dyerium's evm since smart contracts are heavily used for sensitive services such payment and settlement. stable and reliable smart contract programming languages are more important than the creation unnecessary new type programming language. the emergence new type language that requires long time validated through constant testing and can exposed serious security vulnerabilities during this validation period. eden constructs blockchain using evm and solidity, which are verified and continually improved the community. since eden guarantees secured connectivity, one can fully realize programmable economy trading various blockchain-based assets the internet. tokenization any type asset can technical whitepaper edenchain: the programmable economy platform publicly prove ownership the asset and the owner particular asset can take part both transactions and transactions exchanges. technical whitepaper edenchain: the programmable economy platform architecture figure eden architecture eden permissioned blockchain consisting three layers: distributed ledger layer, validation layer, and bridge layer. the distributed ledger layer place which data used the blockchain are separately stored, and only data transactions agreed the validation layer are processed. distributed ledger data can added through transactions. the validation layer where transaction executed and verified; this layer includes evm that runs the smart contract. the validation layer has transaction scheduling function, which has significant impact the performance and scalability eden. the bridge layer used securely import data needed on-chain smart contract within the blockchain cooperation with off-chain. the bridge layer, nodes naturally exist onchain and off-chain, and e-protocol that implements can encryption technique called elliptic curve cryptography -threshold cryptography (ecc-tc) used for reliable communication between these nodes. permissioned blockchain permissioned blockchain has evolved alternative permissionless blockchain technology, which allows anyone join network, such bitcoin and ethereum. permissioned blockchain technology must authorized network administrator through authentication process order participate the network. newly emerging blockchain technologies such kadena, tendermint, and chain, adopted permissioned networks, and hyperledger, blockchain open source project for the linux foundation, also adopted the permissioned blockchain technology. eden configured with permissioned blockchain run smart contracts quickly and efficiently trusted environment. technical whitepaper edenchain: the programmable economy platform permissionless blockchain network such ethereum, smart contract runs all nodes. this leads significant problems surrounding performance and efficiency. all smart contracts are stored evm within blockchain network and are executed according certain conditions. million, hundred million, smart contracts exist ethereum blockchain, serious performance problems may occur. miners within the network may prioritize running smart contracts from which they can gain higher profits, that is, those with higher gas, all smart contracts may not executed. although individually running smart contracts all full nodes are based the philosophy the permissionless blockchain technology, individually running and validating the smart contracts all the nodes all times not considered efficient. eden permissioned blockchain that builds and runs trustworthy environment for smart contract execution. this achieved with the use platform that not only ensures safety but also increases efficiency through the use nodes within namespaces which helps guarantee percent processing all transactions. figure transaction guarantee block withholding kyber network ceo loi luu described fraud technique called block withholding and its associated risks (luu, block withholding attack technique that prevents miner who has found solution problem pow consensus algorithm from receiving incentive not disclosing the answer mining pool. this technique can used effectively when one mining group seeks attack another. for example, miner group wants attack newly formed miner group miner group selects high-performance computer penetrate into miner group and launches block withholding attack. members miner group will stop receiving incentives, and thus their motivation participate the mining group will weakened, which eventually leads disorganization within miner group these types block withholding attacks have been identified the bitcoin forum and number recent papers (eyal, order avoid such issues, eden operates fair and stable system using permissioned blockchain. the purpose eden not secure incentives through mining but create technical whitepaper edenchain: the programmable economy platform programmable economy. since public confidence eden essential the creation programmable economy, the system transparently operated and devoid any foul play. high availability since eden permissioned blockchain, consideration service availability necessary. given that eden server operated small number authorized agencies companies, the server operation can terminated when many hackers attack the servers when there natural disaster such earthquake. eden must able guarantee high availability order ensure that the services for users and businesses alike can continue operate all times regardless any external threat. eden utilizes cloud services ensure high degree availability and operates eden system with multi-datacenter pattern using global dns and load balancer. the same system that provides the eden service configured and operated each service zone across major continents such asia, north america, and europe, and can provide stable service despite attacks from hackers and the occurrence natural disasters. network between service zones deployed each the continents composed virtual private network (vpn). cloud services provide connectivity between data centers across continents with high-speed dedicated lines, enabling fast networking and data center-to-data center configuration. multi-datacenter pattern pattern provided the cloud service provider amazon. used number internet companies such the apache foundation, netflix, cloudfoundry, and attlasian, and also recommended microsoft azure (meshenberg, gopalani, and kosewski, technical whitepaper edenchain: the programmable economy platform figure eden system operation for high availability figure shows configuration operating environment eden which multi data center pattern and vpn are applied. the operating environment receives data request from outside global dns, plays the role being connected appropriate service zone, and secures availability operating multiple global dns servers. endpoints all services are designed and operated the global dns. load balancer delivers requests forwarded from the global dns eden servers order processed. the load balancer not only requests routing but also collects status information from each the servers. this helps perform more intelligent service operation than round-robin service operation, which turn allows the system pinpoint servers that encounter problem and monitor the workload each server, thereby aiding capacity planning. servers running eden are protected operational firewall. the operational firewall way organize the eden servers into functional groups and apply firewall policy each the organized functional groups. the operational firewall can functionally apply well-abstracted security policy server that security policy can flexibly designed, applied each the groups, and managed internally. this allows the eden architecture minimize any form potential mistake setting work users. technical whitepaper edenchain: the programmable economy platform vpn full mesh topology built between service zones, performance and management problems will arise because each vpn configuration becomes more complicated the range the service zone increases. the eden operating system can configure vpn star topology that vpn router service zone can connected with vpn gateway without connecting all the service zones and enable vpn networking with the other service zones. proof-of-elapsed-time (poet) the consensus algorithm plays important role blockchain technique. there are two approaches. the first "nakamoto consensus," which way conduct leader selection through lottery process. when selected leader, one has the right authenticate previous block and create new block. case bitcoin, node that solves hash puzzle first selected the leader. the second method uses "bft (byzantine fault tolerance)." this method does not select leader and final agreement reached through several stages voting. eden uses proof-of-elapsed-time (poet) consensus algorithm. poet "nakamoto consensus" method, which uses cpu command select leader randomly without using enormous levels energy solve hash problem like bitcoin currently does. poet provides opportunity become leader with block generation authority for all nodes participating blockchain network with probability similar other leader selection algorithms (foundation, poet implemented sgx enclave defend against hacker attacks and allow the leader selection process proceed safely. each node, poet uses cpu command the sgx enclave obtain wait time that follows exponential distribution random number and selects the node that has the smallest wait time the leader. technical whitepaper edenchain: the programmable economy platform figure poet poet designed follow the poisson distribution, which form discrete probability distribution that follows the exponential distribution shown below and expresses how many times certain number events occur within unit time the event independent. f(t) le)*+ distributed ledger layer (dll) the distributed ledger layer provides decentralized database functionality eden and used the basis the linux foundation's open source project, hyperledger. the dll stores all data generated eden block. the data cannot modified and can only added. the dll stores the data disk device and assumes that all the stored data originated from legitimate transaction. the dll can find the necessary data from the outside using block transaction id, and also provides function accessing information about all transactions included the block. the dll has blockcache module minimize disk access. blockcache mainly stores currently used blocks memory, and when requested block cannot found, reads the block from disk and loads into the memory. depending frequency use, possible determine blocks that should kept the memory and those that should not, and thus cache effect with optimal use memory can obtained. software connector software systems researcher xiwei proposed method using blockchain technology form software connector (xu, this view can improve the quality software architecture technical whitepaper edenchain: the programmable economy platform and enhance information transparency and traceability. addition, also important architectural design determining which information stored the blockchain (on-chain) and which are stored off-chain the data size stored the blockchain limited. eden designed the entire architecture considering the distributed ledger layer, which stores information about various transactions that occur, software connector. any module can interact with the distributed ledger layer only when interfaces defined the software connector are followed. software connectors are form middleware component for interoperability among software modules, and they are essential elements distributed environments that affect performance, reliability, and security. hyperledger adopts modular design, which makes easy use distributed ledger function software connector the entire architectural design because can easily integrate functions into system according designer's purpose and needs. figure blockchain software connector execution layer (el) the execution layer (el) executes, processes, and verifies transactions, providing important functions for the smart contracts running the eden platform. transactions must used order update the data eden's distributed ledger. the provides trusted execution environment (tee) which the transaction can safely protected from data extortion data forgery hacker attacks. all transactions and key logic including smart contracts are executed the tee. the has transaction execution scheduling (tes) which specifies how transactions are executed and which node. tes important technical factor that affects performance and can show different processing performances with the same computing resources depending how transactions are managed and executed. tes also includes ethereum virtual machine (evm) run smart contracts written solidity. transaction being executed smart contract running ethereum, the executes the evm. technical whitepaper edenchain: the programmable economy platform ethereum virtual machine (evm) currently, ethereum's smart contracts have many users and are used several blockchain projects demonstrate their stability and functionality. instead developing new language system for smart contracts, eden leverages the evm eden permissioned blockchain increase accessibility eden smart contracts and create variety smart contracts. bridge layer (bl) the bridge layer (bl) important technical element that differentiates eden from other blockchains and guarantees zero-knowledge trusted connectivity between on-chain and offchain. ethereum, smart contracts can interact with external systems using oracle, but this does not guarantee trustworthiness data from external sources. realize smart contract-based programmable economy necessary secure trusted connectivity that enables the blockchain and external systems securely function despite threats from hackers. once trusted connectivity secured, possible expand functions interacting with external systems and automating various services. the composed on-chain module for interacting with smart contract, off-chain module for interacting with external system, and modules for networking between the onchain and off-chain modules. the on-chain module serves gateway for responding external data requests required smart contracts. the off-chain module fetches data requested with on-chain module accessing the actual external system; then verifies the data, selects specific value, and transmits the on-chain module. since the on-chain and off-chain modules are located different networks, they configure network which they can securely communicate and exchange data. transaction execution scheduling (tes) eden client can update data the dll through transactions. smart contract execution also possible through the transactions. eden uses batch and block units for grouping transactions. the transactions are gathered form batch and the batches form block. the el, transactions are processed block-by-block basis. technical whitepaper edenchain: the programmable economy platform figure transaction, batch, and block grouping transactions into batches, dependency between transactions that can occur smart contract can easily observed. transactions the same batch are assumed related and there problem executing certain transactions, other transactions can invalidated. for example, hypothetical transaction generated transaction and transaction all the transactions become related, and the process considered normally completed only when all the transactions are executed successfully. the transactions are grouped into batches and error occurs the transactions, one all the transactions included the batch can invalidated without considering the execution order correlation between the transactions. result, dependency problems can easily solved. transaction data structure transaction consists header and body, which contain the following data fields: field description public key client's public key dependency transaction data with dependency technical whitepaper edenchain: the programmable economy platform field description namespace namespace for differentiating between transactions nonce random data for differentiating between transactions figure transaction header field description header transaction header data header_signature signature data payload payload data figure transaction body similar other blockchain technologies, eden designed sign the transaction using client's public key. addition, the transaction header and body are configured pair. the dependency field the transaction header specifies the transaction that have corresponding transaction and dependency. the dependency field indicates which transactions are involved when transactions are run parallel, transaction scheduling can performed according relationship and order. namespace plays the role delimiter that indicates the nature the transaction. eden, anyone can create their own coin blockchain system using smart contracts. for example, alice wants create alice coin, she can issue alice coin using supplied smart contract template. order trade alice coin issued this way, transaction must generated. this time, "alice" assigned namespace indicate that the transaction related alice coin. technical whitepaper edenchain: the programmable economy platform eden can collect and process alice coin related transactions only referencing the transaction header. using this approach allows eden greatly improve performance and scalability parallelizing transactions according the namespace. merkle tree merkle tree was presented ralph merkle and tree data structure for authentication (merkle, all the leaf nodes have hash values child nodes and data stored nonleaf nodes. merkle tree currently used variety projects such ipfs, zfs, bitcoin, ethereum, and apache cassandra because can efficiently store data and verify data integrity with less data. since root node the merkle tree updated every time new node added, and hash function recursively applied hash value the leaf nodes, hash value the root node different even when only one value specific node changed. this property enables data integrity verified only knowing root node value, its own node value, and counterparty node value. namespace eden uses radix merkle tree store current state the blockchain. validator nodes that check conformity blocks all contain radix merkle tree. radix merkle tree displays some data with optimal space. there only one child node, unites the nodes into one, can effectively use memory. leaf node the radix merkle tree, node address included, and thus possible identify sibling parent the node the node address value. validator node examines node address included transaction within block and batch verify the transaction. node address namespace node path technical whitepaper edenchain: the programmable economy platform figure radix merkle tree with node address namespace form identification value for ascertaining the type transaction and all transactions eden must contain namespace information. validator nodes can use the namespace information group transactions into blocks related transactions. for example, for transaction that contains simple transactional information, the namespace "edn" used, and for smart contract xyz, namespace "xyz" used. the validator node can distinguish xyzrelated transactions from edn-related transactions simply checking namespace contained the transaction. since edn and xyz are different types transactions there data consistency problem and both transactions can executed parallel. result, longer necessary execute one transaction time due data consistency issues the case for many existing solutions the blockchain space. technical whitepaper edenchain: the programmable economy platform figure transaction based namespace transaction routing eden runs tee prepared from namespace using transaction routing. when router receives execution request for transactions submitted from validator node, searches resource registry for execution node order render batches separated the namespace and forwards the transactions processed the execution node. the resource registry, computing nodes for processing each namespace are recorded. the router does not find the namespace the resource registry, transfers the transaction default execution node and carries out the transaction. tee allocated namespaces can run independently and simultaneously without global lock the current state because there does not exist data consistency issues. monitoring workload allocated the tee real time and constructing appropriate number execution nodes, possible operate the blockchain with optimal computing resources according the required computing power. technical whitepaper edenchain: the programmable economy platform figure transaction routing namespace e-bridge e-bridge core technology the and connects eden with external system, which essentially acts software bridge connecting the on-chain with the off-chain. data moving within blockchain can ensure security implementing technologies such consensus algorithm and encrypted messaging. however, the case external system the data cannot guarantee security because can attacked hackers various places. therefore, when the on-chain module and the off-chain module interact, necessary trust the external system and assure that the data transmitted from the external system securely transmitted without any threat when linked with the on-chain module. trust problem off-chain data source can resolved the external system provides public services and has reputation. for example, apple stock needed smart contract and data received from nasdaq, the provided data can considered reliable. trust problem that can occur the off-chain module when communicating with external system can largely classified into three issues: technical whitepaper edenchain: the programmable economy platform data source reliability: the reliability problem whether the data provided the external system correct reliable data transfer from data source: correct delivery data means that data from reliable data source simply transmitted fully without being subjected hacking, data corruption improper data fetching reliable data transfer from the off-chain module the on-chain module: reliable data transmitted from external system should transmitted the on-chain module without being attacked e-bridge technology that solves these technical problems and provides trusted connectivity between the on-chain and off-chain modules. the e-bridge designed such way that there exist software modules such oracle server and enclave located off-chain, and executor located on-chain. the oracle clients are able interact with one another secure connectivity. figure e-bridge layer e-bridge architecture e-bridge consists executor that executes transactions, e-oracle client forwarding external data access requests from the smart contract, e-oracle server processing requests from clients, and sgx enclave which acts tee running e-oracle server programs. the executor and e-oracle client are located on-chain. the e-oracle server and sgx enclave are located off-chain, the e-protocol used enable secured connectivity between the onchain and off-chain modules within the e-bridge. technical whitepaper edenchain: the programmable economy platform figure e-bridge architecture executor the executor equipped with evm and responsible for running smart contracts. the executor runs isolated environment ensure security and updates the smart contract are not directly recorded distributed ledger technology (dlt). only data verified through validator allowed access the dlt. eden designed run and validate smart contracts each executor node running executor nodes. e-oracle e-oracle software module that provides functions for smart contracts access external data. consists e-oracle client and e-oracle server. when the e-oracle client requests external data, the e-oracle server collects the data and sends the e-oracle client. since the e-oracle client must have the ability called from smart contract, the e-oracle client loaded and used the smart contract. the e-oracle client uses e-protocol request data required for the e-oracle server. the e-oracle consists several nodes and provides data verification methods between these nodes and consensus algorithm for final data selection. e-oracle client the e-oracle client special form smart contract which smart contracts provide external data access functionality. when the e-oracle client requests external data access, the e-oracle client passes the parameters required for execution the e-oracle server, receives technical whitepaper edenchain: the programmable economy platform external data collected the e-oracle server, and delivers the smart contract. therefore, the e-oracle client acts gateway between the smart contract and the e-oracle server. e-oracle server the e-oracle server provides the actual functionality required access the data requested the e-oracle client. important feature the e-oracle server that can execute external data access requests from the e-oracle client, collect external data, select appropriate values, and forward the values the e-oracle client. order enhance security, the e-oracle server does not run external data access related code within the e-oracle server itself but runs the code separate space called sgx enclave. the e-oracle server consists n-nodes, and any external data designed fetch multiple pieces data. data from one e-oracle server imported, multiple e-oracle servers may run because data reliability systemic problems may prevent proper importing the data. sgx enclave sgx enclave intel's software guard extension (sgx) enclave, which runs programs trusted environment ensure security. the sgx enclave protects data and programs running the enclave from hacker attacks placing the programs separate spaces, encrypting the data, and making them inaccessible external processes. encrypted data and code are safe because they are able decrypted only within the enclave. even hacker finds the data and code directly accessing memory with side channel attack impossible decrypt them because there way determine the private key within the enclave. according senior wipro software engineer surenthar selvaraj, the sgx enclave provides security the cpu level defend against hardware and software attacks intel (selvaraj, the memory used the enclave cannot read written regardless the privilege level and cpu mode, and cannot enter the enclave environment with traditional calls, jumps, register manipulation, stack manipulation. addition, the keys used for encryption the enclave are randomly changed and the key values are stored the cpu, not memory, which cannot accessed externally. eden runs the e-oracle server code the sgx enclave order provide robust data and system security and defend against any form hacker attack. technical whitepaper edenchain: the programmable economy platform figure sgx enclave e-oracle consensus eden runs multiple e-oracle servers secure trusted connectivity. though external data may have been imported while running e-oracle server, complete correctness the data cannot always ensured because there may system error issue even when the data derived from trusted data source. avoid this problem, the e-oracle operates with called e-oracle pool. multiple eoracle pools are used, will difficult determine which the several values provided each e-oracle server use. the types values that can received from the e-oracle server can divided into two types, discrete type value and continuous type value. the discrete type value discontinuous value and refers value type, such true, false, "man", and "woman", while the continuous type value refers successive values such and while discrete type values can have the same value multiple e-oracle servers, the value continuous type values can vary depending the data source and the nature external system, even when the data generated from trusted data source. for example, there are derivatives that are determined apple stock prices, e-oracle server acquires the apple stock prices through various services such nasdaq and yahoo finance. the value from nasdaq and that from yahoo finance the e-oracle server selects either one the two values combines these values determine final value deliver e-oracle client. e-oracle consensus technology that determines which several values will ultimately used this situation. technical whitepaper edenchain: the programmable economy platform schelling point american economist thomas schelling first devised the concept the schelling point, which people tend behave naturally common sense think for themselves rather than act randomly when doing something (schelling, schelling famously responded the question "when and where should meet stranger new york have meet the stranger tomorrow?" stating "at the information booth the grand central station noon". explained the reason why people are likely choose this time and place because they are traditionally the most used time and place for appointments. one can use the schelling point create agreement external data within the e-oracle. the e-oracle server separate node and accesses external data using parameters passed from smart contract and receives results. e-oracle servers have exchange values and select final value itself without centralized system. important basic assumption that there trust the values submitted each the e-oracle servers. ethereum founder vitalik buterin suggested the creation schelling coin solution this problem (buterin, the schelling coin offered those submitting the ultimately selected correct value incentive for individuals participating the process determining value, then the participants will submit value similar the value that other individuals submit for receiving payment. this process repeated, values selected the participants naturally approach actual value. the schelling point uses common facts focal point make selection. the schelling point has create common knowledge among participants, continuously present incentives distinguish between incorrect and correct values and lead the value that the majority participants select. however, difficult apply the schelling point the participants are constantly changing common information about the value they should choose not created. e-oracle consensus median voter theorem (mvt) e-oracle servers can contain two types data, discrete type data and continuous type data, and each data type requires distinct consensus algorithm. e-oracle applies majority voting discrete type data and mvt continuous type data. majority voting the value that the e-oracle can have limited "yes"/"no" "true"/"false," majority voting performed select the most common value the e-oracle server and confirms the value the final value. majority voting commonly used consensus algorithm that can applied discrete type data without difficulty. technical whitepaper edenchain: the programmable economy platform median voter theorem (mvt) mvt method applied when there exists continuous type data. mvt theory which the majority voting system will choose the result preferred median voter (holcombe, economist duncan black explained that the result chosen the median voter the majority voting system "nash equilibrium", and value moves away from the value the median voter, benefit can gained (black, this implies that decision other than the median voter's choice made when large number participants try determine certain value within majority system, benefit can realized. this case, median voter refers person who thinks that the choice selected half the participants the ideal choice. figure mvt (puglisi, voting theorem case common resource, voting steady-state equilibrium (vsse) resource utilization and growth rate determined the median voter (borissov, equation illustrating this principle shown below. figure voting steady-state equilibrium (vsse) voter strives maximize utility. order increase the value vsse, the number individuals who want increase the vsse status value must exceed the total number individuals. technical whitepaper edenchain: the programmable economy platform the value vsse determined using the following equation. median voter) the equilibrium growth rate determined follows: therefore, the final equilibrium state value, vsse, determined the median voter, and majority not secured, the vsse value cannot changed. since mvt consensus algorithms are implemented the sgx enclave, hackers must hack more than half the nodes order succeed their attack, which requires considerable time and effort. since the mvt uses the median the final selection value, can applied continuous type data and thus can solve issues for cases which majority voting not suitable. addition, since the mvt does not require common information unlike the schelling point, can select the final value from among the values submitted e-oracle servers without any prior information. finally, since the mvt does not need introduce separate incentive system, can simply and clearly implemented. therefore, the e-oracle server uses the mvt select the final value when selecting continuous type data. threat model majority voting and mvt used the e-oracle consensus are vulnerable attack. hacker succeeds taking over all e-oracle servers exposed externally, the values submitted the hijacked server will the median, and the e-oracle server will send the modulated values the e-oracle client. order prevent such risk, e-oracle consensus module runs programs the sgx enclave defend against hardware and software attacks and accesses external services using https. data sources that not support https not allow data access the e-oracle server. technical whitepaper edenchain: the programmable economy platform e-protocol e-protocol protocol used for communication between e-oracle servers e-oracle pool. the e-oracle servers need interact with one another access external data and reach consensus collected data. although the e-oracle server cannot manipulate data tamper with the program running the sgx enclave, there possibility that hacker could sneak into network packets, which must prevented. e-protocol allows for communication using threshold cryptography and encrypts data well. threshold cryptography encryption protocol that allows people group composed people share special values protect their data. (shoup, furthermore, threshold cryptography protocol with cooperative property. data necessary for decryption shared among participants that encrypted data can decrypted only when data from one individual well that other participants present. threshold cryptography contains the following characteristics (lee, shen, and wheatman, trusted third party may not required depending the algorithm used participants smaller than cannot decrypt the message attacker cannot use the acquired information determine the signatures future messages after signatures are created, participants not have create mix signatures again e-protocol applied the process importing the data requested smart contract session and external e-oracle client, finally selecting the value and returning the e-oracle client. elliptic curve cryptography (ecc) threshold cryptography (tc) the rsa threshold method does not require trusted third party and does not leak important information during the initial setup for secret sharing (nguyen, the rsa threshold improves safety solving the problems existing threshold cryptography. the ecc-tc method provides similar level security with keys which are smaller size than those the rsa threshold, and thus can complete operations faster while using less memory (ibrahim ali, ecc does not share keys because both public key and private key exist technical whitepaper edenchain: the programmable economy platform points elliptic curve (padmavathi lavanya, the ecc-tc consists three stages: key generation, encryption, and decryption. the ecc encryption divides message encrypted into and encrypts each piece the divided message. the general steps for applying ecc-tc are described follows: randomly select abase point (x, the elliptic curve. place plaintext (xm, ym). divide "m" "w" apply each node selects private key "n" and calculates public key. n(x,y) for example, node must generate random number encrypt the message. {k(x,y),(xm,ym) kpa} decrypt cm, proceed follows ((xm,ym) kpa na(k(x,y) (xm,ym) k(na(x,y) na(k(x,y)) (xm,ym) the encrypted messages can reconstructed using shamir's method and decrypted using the private key read the original message. the e-protocol uses ecc-tc encrypt messages used e-oracle. the following figure illustrates the process encrypting and decrypting. technical whitepaper edenchain: the programmable economy platform figure ecc-tc encryption figure ecc-tc decryption external attacker external attacker accessed e-protocol message, the information that can obtained public key and random number these two pieces information can also obtained normal ecc, but attacker cannot obtain any other information. even external attacker accessed the message and knew that the e-oracle server uses ecc-tc, the attacker can only obtain the public key and the random number before, and thus impossible decrypt the message identify the signature. attack from malicious participant possible attempt modulate decrypt message within one node participating eoracle session. however, such attempt will also have little effect, since decrypt message technical whitepaper edenchain: the programmable economy platform ecc-tc, necessary know the secret keys the nodes participating the ecc-tc. impossible decrypt the message with one individual secret key. confidentiality eden confidentiality blockchain can divided into three aspects. the first confidentiality smart contract, which ensures that only specific individuals are able observe the content the smart contract. the second confidentiality transaction, which ensures that the content the transaction available only the specific individuals. the third oracle confidentiality, which ensures that data exposed when requested external system. account the philosophical characteristics and the technology the blockchain, difficult secure the first and second forms confidentiality. eden, variety smart contracts are implemented. individual allows encrypted smart contract, then that person should have full confidence the person organization that submitted the smart contract and execute it, believing that the initial contract safe. this important assumption that can greatly affect the overall security eden, which cannot guaranteed. therefore, eden does not allow encrypted smart contracts. encryption for transactions essential element some financial transactions such specialized sealed auctions. however, since eden's smart contracts need interact with various external systems, eden cannot provide records past transactions ownership when requested from the outside, the utility eden will decline. oracle confidentiality important security factor for communicating with external systems and trusted connectivity secured using smart contracts. order for smart contracts automate and secure, continuous interactions with external systems required, and this process, important information able migrate throughout the network. hacker able access this information, may cause margin misuse and seriously undermine security. confidentiality sgx and encrypted protocol confidentiality ensured using sgx enclave and encrypted protocol, and privacy guaranteed that details the transaction and smart contract executed eden cannot seen anyone. all processes, such e-oracle consensus, which access external system from e-oracle server import data and select one multiple pieces data, are executed the sgx enclave. while the sgx enclave running with limited access and data encryption, cannot understood insiders such system operators hackers. technical whitepaper edenchain: the programmable economy platform the sgx enclave, external data imported using https. because https uses ssl certificate and encrypted communication, both reduces the risk hacking and prevents insider from learning the content the data. smart contracts support interactions with external systems that support https and not allow unencrypted communication protocols. since the sgx enclave does not store the data used for communicating with external systems permanent storage device such disk, deleted immediately after the execution ends. encrypted protocol hackers have two possible attacks terms networking while the e-oracle running. sgx enclave networking with external systems and networking between e-oracle servers. since communication between the sgx enclave and external system requires https, the data encrypted. addition, communication between e-oracle servers encrypted using ecc-tc, and result not possible decrypt manipulate message even attacker accesses the message. lack censorship all transactions and smart contracts executed eden run evm and the sgx enclave, and thus the data used here cannot controlled, accessed censored. eden permissioned blockchain, but similar any permissionless blockchain, does not censor data, and therefore provides environment which all transactions and smart contracts run equally and completely. .conclusion eden blockchain technology that improves speed and security, which are typical technical requirements for applying blockchain technology programmable economics. due the data consistency problem, serial execution not scalable and increasing computing power handle more transactions cannot increase processing speeds. eden uses namespace technology tie transactions that contain the same namespace with one other. transactions belonging different namespaces have data integrity issues and can executed parallel simultaneously. the number namespaces increase, individuals can increase their processing speeds adding computing power, which can aid achieving higher levels scalability. individuals require faster processing, they can create each namespace computing technical whitepaper edenchain: the programmable economy platform zone that can process transactions based namespace order maintain optimal performance. the blockchain used conjunction with external service deal with large number transactions, the risk subsequent hacking event increases. conventional blockchain techniques focus the security the blockchain itself, external security often not provided. eden uses e-oracle technology effectively defend against hacker attacks conjunction with external services. e-oracle technology uses multiple data source, ecc-tc, and mvt technologies. given that the e-oracle implemented sgx enclave, nearly impossible hack. order succeed hacking, the e-oracle must attack the server. with eden, one can easily use blockchain technology for diverse array enterprise use cases. technical whitepaper edenchain: the programmable economy platform references alharby, and moorsel, (). blockchain-based smart contracts: systematic mapping study. computer science information technology. black, (). the rationale group decision-making. journal political economy. bontje, (). does every node execute the contract code for each transaction? retrieved from https://ethereum.stackexchange.com/questions//does-every-node-executethe-contract-code-for-each-transaction buterin, (). schellingcoin: minimal-trust universal data feed. retrieved from https://blog.ethereum.org////schellingcoin-a-minimal-trust-universal-data-feed/ buterin, (n.d.). next-generation smart contract and decentralized application platform. retrieved from https://github.com/ethereum/wiki/wiki/white-paper/ cameron-huff, (). nasdaq. retrieved from http://www.nasdaq.com/article/howtokenization-is-putting-real-world-assets-on-blockchains-cm chamber digital commerce (). smart contracts: use cases for business beyond. chianese, (). smart environments and cultural heritage: novel approach create intelligent culural spaces. journal location based services. ehrsam, scaling ethereum billions users. retrieved from medium: https://medium.com/@fehrsam/scaling-ethereum-to-billions-of-users-fdfdb eyal, (). the miner's dilemma. ieee symposium security and privacy. tschorsch, (n.d.). bitcoin and beyond- technical survey decentralized digital. foundation, (). sawtooth. retrieved from https://sawtooth.hyperledger.org/docs/core/releases/latest/introduction.html#proof-ofelapsed-time-poet harding, (). there maximum size scriptsig/scriptpubkey? retrieved from bitcoin stack- exchange: http://bitcoin.stackexchange.com/questions//is- there-amaximum-size-of-a-scriptsig-scriptpubkey. holcombe, r.g. (). public sector economics, upper saddle river: pearson prentice hall, ibrahim, m.h. and ali, i.a. (). robust threshold elliptic curve digital signature providing new verifiable secret sharing scheme. circuits and systems. jameson, accounts, transactions, gas, and block gas limits ethereum. retrieved from https://hudsonjameson.com: https://hudsonjameson.com/--accounts-transactions-gas-ethereum/ borissov, (). common and private ownership exhaustible resources: theoretical implications for economic growth. istanbul. konstantinos, c.. (). blockchains and smart contracts for the internet things. ieee. lamela-seijas, (). scripting smart contracts for distributed ledger technology. technical whitepaper edenchain: the programmable economy platform lee, h., shen, h., and wheatman, (). implementation and discussion threshold rsa. lewis, (n.d.). agentleintroductiontosmartcontracts. retrieved from https://bitsonblocks.net////a-gentle-introduction-to-smart-contracts li, s., xu, l.d., and zhao, (). the internet things: survey. information systems frontier. luu, (). power splitting games distributed computation: the case bitcoin pooled mining. ieee. flood, m.d. (). contract automaton: the computa- tional representation financial agreements. merkle, (). digital signature based conventional encryption function". retrieved from merkle paper: https://people.eecs.berkeley.edu/~raluca/csf/readings/merkle.pdf meshenberg, r., gopalani, n., and kosewski, (). "active-active for multi-regional resiliency". retrieved from medium: https://medium.com/netflix-techblog/active-activefor-multi-regional-resiliency-cfb microsoft. (). multiple datacenter deployment guidance. retrieved from developer network: https://msdn.microsoft.com/en-us/library/dn.aspx morabito, (). smart contracts and licensing, business innovation through blockchain. nakanishi, are gas limit transaction and block gas limit different? retrieved from stackexchange: https://ethereum.stackexchange.com/questions//are-gas-limit-intransaction-and-block-gas-limit-different nguyen, (). rsa threshold cryptography. padmavathi, g., and lavanya, (). comparison rsa-threshold cryptography and ecc-threshold cryptography for small mobile adhoc networks. advanced networking and applications. puglisi, (). the political economics approach. schelling, (). the strategy conflict. harvard university press. selvaraj, (). overview intel software guard extension enclaves. retrieved from intel https://software.intel.com/en-us/blogs////overview-of-intel-software-guardextension-enclave shoup, (). pratical threshold signature. ibm research lab. solidity. (n.d.). solidity. retrieved from http://solidity.readthedocs.io/en/develop/index.html huckle, (). internet things, blockchain and shared economy applictions. szabo, (). smart contracts: building blocks for digital markets. szabo, (). formalizing and securing relationships public networks. pureswaran, (). device democracy saving the future the internet things. ibm. gramoli, (n.d.). the blockchain software connector. wood, (). ethereum: secure decentralised generalized transaction ledger. technical whitepaper edenchain: the programmable economy platform xu, x., pautasso, c., and zhu, (). the blockchain software connector. ieee. technical whitepaper