aelf multi-chain parallel computing blockchain framework june abstract over the past few years, the blockchain community has seen rapid development. since satoshi's bitcoin emerged secured, decentralized peer-to-peer transfer mechanism, the concept decentralized crypto-currency became mainstream and changed the world finance forever. ethereum then expanded that idea with the successful implementation versatile "smart contracts," unleashing the potential blockchain into numerous applications and industries. result, many alternative crypto assets were built upon these blockchains. but the boundary between the blockchain community and the business world has yet broken. believe have reached turning point blockchain, with the next phase leading the integration blockchain and the physical business world, and inevitably bringing solid digital assets. order enter the new paradigm blockchain, there needs versatile operating system designed meet commercial needs. this chain must address three main challenges: current blockchains are not scalable, the performance one single node/mining machine determines the performance the whole system. current blockchains not segregate resources for different smart contracts, which causes interference between smart contract executions. current blockchains not have pre-defined consensus protocol adopt updates adapt new technology. this white paper introduces highly efficient blockchain architecture that incorporates state-of-the art design principles and technologies bring blockchain commercial standard. envision creates "linux eco-system" for blockchain. focus defining and providing the most basic, essential and time-consuming develop components the system and making significant improvements for existing chains the market. the system allows developers customize chains meet their own needs, particularly commercial requirements for various industries. will contain the following main features: main chain and multi-layer side chains handle various commercial scenarios. one chain designed for one use case, distributing different tasks multiple chains and improving processing efficiency communication with external blockchain systems, such bitcoin and ethereum, via messaging parallel processing for non-competing transactions and cloud-based service basic components minimum viable block and genesis smart contract collection for each chain reduce data complexity and achieve high customization permission for stakeholders approve amendments the protocol, including redefining the consensus protocol; permission for side chains join exit from main chain dynamically based consensus protocol, and therefore introduce competition and incentive improve each side chain contents current blockchain systems............................................................................... general blockchain vs. complex business scenarios .............................. performance limitation sequential processing ..................................... data complexity and redundancy ............................................................ dilemma protocol update...................................................................... inflation block ........................................................................................ inefficient point-to-point communication support ..................................... pending breakthrough for cross-chain communication ........................... key objectives aelf .......................................................................................... highly customizable for commercial use ........................................ cross-chain interaction............................................................................. performance improvement ........................................................................ protocol update......................................................................................... private chain module ................................................................................ core approaches realize aelf system ......................................................... performance enhancements ................................................................... resource segregation............................................................................. structure governance ......................................................................... ... resemblance representative democracy ......................... ... exercise power the delegates ....................................... aelf system ....................................................................................................... aelf architecture....................................................................................... ... one chain one contract ........................................................ ... side chain dynamic indexing ................................................ ... "tree branch" side chain extension....................................... aelf main chain ....................................................................................... ... side chain index system ....................................................... ... aelf token system .................................................................. ... consensus protocol ............................................................... ... dpos ...................................................................................... ... confirmation transactions .................................................. aelf side chain ........................................................................................ the economics aelf ............................................................................. system built-in aelf side chains ............................................................. ... information registration and authentication side chain......... ... digital asset ownership side chain ....................................... ... asset initial distribution side chain ........................................ ... decentralized exchange side chain ...................................... aelf cross-chain optimization ................................................................. aelf operating system ...................................................................................... definition minimum viable blockchain system .................................... aelf kernel ............................................................................................... ... built-in minimum viable blockchain system ........................... ... unified account system.......................................................... ... parallel transactions processing within block .................... ... transactions marked blocks .............................................. ... smart contract collection....................................................... ... smart contract update ........................................................... ... customizable consensus protocol ......................................... ... customizable block header ................................................... aelf operating system customer interface ............................................. ... smart contract execution....................................................... ... micro-service .......................................................................... ... cloud base ............................................................................. ... light node .............................................................................. ... optional modules.................................................................... .... data cleansing mechanism................................................ .... data tunnel ........................................................................ .... rapid confirmation model .................................................. .... token module ..................................................................... .... customization..................................................................... aelf eco-system development........................................................................... technology .............................................................................................. business applications .............................................................................. capital ..................................................................................................... current blockchain systems the blockchain technology and its applications are developing exponentially. many industries are migrating from traditional network architecture blockchain-based network architecture. however, current blockchain systems are not yet capable efficient enough function versatile operating system and support multiple applications. bitcoin, the pioneering blockchain design, more similar application. ethereum has demonstrated some characteristics operating system developers can program applications such smart contracts, and the chain provides programming language and adaptor the form solidity. however, from the perspective modern operating system, ethereum still has several drawbacks, such the lack decoupling between system components, the lack customization most modules, and insufficient system interfaces, among others. this approach lacks the holistic design aelf and not yet commercially viable for cross-industry application scenarios. greatly limits the commercial application blockchain technology. general blockchain vs. complex business scenarios the largest challenge facing commercial scale adoption blockchain technology its current inability meet the requirements multiple, diverse, and complex business scenarios. naturally, different scenarios often have different characteristics terms process and execution logic, and thus require distinct solutions. therefore, the "one size fits all" blockchain approach that currently utilized other chains not viable blockchain succeed the future. for example, ticket issuance requires high frequency where high transaction rate the system desirable, while digital legal contracts emphasize high security and reliability over speed. simply does not make sense for them both built around the same chain. there are two general solutions this problem: use blockchain solely database not deal with business logic. this approach aims handle any business scenario and maintain compatibility. many chains similar bitcoin use this approach. they record businessrelated data and hash into transaction output "op_return", which stored the blockchain. ii. record various complex smart contracts onto one single blockchain. these smart contracts serve pre-defined business models from various scenarios. ethereum represents this type chain. due the fact that all smart contracts are written one single chain, the blockchain becomes overly complex, requires high maintenance cost, and lacks effective structure execute smart contracts. performance limitation sequential processing blockchain becomes more and more widely used, especially for handling large scale transactions, its transaction processing capacity faces tremendous pressure when using sequential processing, which results the bottleneck network performance. current blockchain systems face multiple challenges improving capacity, sometimes the expense transaction efficiency. for example, the bitcoin transaction fee getting more expensive transaction volume increases and large backlog waits for confirmation. ethereum faces increasing number congestions during token sales. however, traditional architecture, modern techniques such partitioning, sharding and decentralized architecture have proven highly effective improving system performance. the other hand, the concept parallel task processing has not been adopted increase efficiency. when block contains large amount transaction data and complex smart contracts, sequential transaction has hit its efficiency limitation block formation and verification. data complexity and redundancy described section one universal blockchain used meet the needs different business scenarios. the drawbacks universal blockchain system are overly-complex smart contracts and consensus protocols, lack tailored solutions specific business scenarios, and redundant data. dilemma protocol update despite the increasing adoption blockchain, still its nascent stage. many significant improvements and innovations are yet come. these updates are essential evolve blockchains and keep with ever-changing environment and stakeholder's interest. the large variety stakeholders within the eco-system usually makes difficult reach consensus without effective governance mechanisms, leading most current protocol updates into impasse disputes. one vivid example bitcoin, the community found difficult reach agreements for the introduction many new features recent years. inflation block the more successful blockchain system is, the higher its maintenance cost. running through full current bitcoin node requires over space, and ethereum requires over this situation will not improved the future. more users adopt blockchain and conduct more transaction activities, the inflation blocks will accelerate and the maintenance cost will grow even higher. actions must taken alleviate this vicious cycle. inefficient point-to-point communication support existing blockchains mainly communicate through broadcast network where the support for communication inefficient and insecure. one example that certain data only concerns single group users, that data should communicated among finite nodes, not broadcasted all nodes. pending breakthrough for cross-chain communication existing blockchain systems have experimented with cross-chain communication process related business logics. however, the outcomes have been unsatisfactory. current cross-chain communication includes the centralized mechanism and the htlc mechanism. the centralized mechanism deviates from the idea blockchain, and leads lack trust, single node failure, single node bottleneck, and only applicable certain scenarios. the htlc mechanism can also only deal with specific scenarios, such asset exchange, and imposes strict requirements the protocols and consensus protocols communicating chains. and implementation such mechanism usually complex. result, imperative address two critical issues: protocol compatibility and data exchanging format compatibility. key objectives aelf highly customizable for commercial use envision aelf highly efficient and customizable that will become the "linux system" for blockchain. take linux example-linux kernel and various linux versions constitute the large and successful linux family. linux kernel resolves the most fundamental, critical and time-consuming parts, allowing other developers make customized systems based application scenarios and customer needs. this makes linux the most popular server os, and supports all kinds industries. this same idea has been incorporated into the aelf design. first, define and implement the aelf kernel which includes fundamental functions blockchain system, namely the minimum viable blockchain system. then, develop "shell" the basic interactive interface for the core. users can either use the complete blockchain os, rapidly develop customized based the core redefining the core through interfaces. cross-chain interaction aelf can interact with bitcoin, ethereum, and other blockchain systems. cross-chain interaction with mainstream chains can realized through messaging. will also form endogenous multi-level cross-chain structure based cross-chain interaction, order share digital assets, users and information. performance improvement traditional architecture, distributed structure the most popular solution debottleneck capability limitation. blockchain systems should also support distributed parallel processing, the ability process multiple transactions with non-competing data improve transaction efficiency. addition, when one chain has become too complex effectively processed, should split into parallel chains offload the traffic. the initial design effective blockchain should focus solving specific business scenarios, not combining all smart contracts onto one single chain. order deliver optimal performance based business requirements, the chain has provide effective and customized data structure, smart contract logic, and consensus protocol can designed specifically for the targeted objective. doing so, the components and data within the chain will much simpler and easier manage. addition, aelf can define mechanism trigger snapshot the system. upon defining cycle, takes snapshot current data and trims detailed transaction data. new genesis block will include all subsequent transactions. this idea has been adopted traditional database architecture alleviate system inflation. protocol update upon the genesis blockchain, the voting and update mechanism needs clearly defined. with introduction the consensus protocol include new features the future, avoids impasse and dispute over protocol update. private chain module considerable number businesses are interested private chains leverage the advantage blockchain technology. these private chains usually exist isolation without any connection external eco-system other businesses. provide model similar amazon cloud service, "ami", where users can rapidly create independent chain using our private chain module and obtain full ownership it. core approaches realize aelf system performance enhancements the core principle aelf resolve practical technical problems using solutions that have already been tested. instead "optimizing" the concepts blockchain, more attention paid provide mature configuration for the stable execution business applications. few performance enhancement ideas are currently being explored: most blockchain sharding solutions are implemented dividing single consensus into numerous sub-consensus. basically, the consensus whole split, leaving several sub-consensus groups which are easier attack than single one. people can increase randomness complicate the routing path, but this will impair the specialization the mining node. pow mining nodes decrease substantially more mining pools replace them specialized ledger system. these pools are able ensure mining efficiency and timely broadcasting, slowing down the speed block formation and keeping steady. leveraging experiences from the industry, mining pools have abandoned the standard official node software but aggregate computing power through load balancing and run smart contracts asynchronous parallel manner, putting their own nodes globally improve the broadcasting efficiency. however, the performance mining pools still limited the technical differences used the pool, and the fact that nodes are all designed equally and limited the protocol itself. so, the upgrading one single node does not lead the improvement the whole network. aelf's logic that nodes are categorized according their roles; those who provide standard services clusters are open-sourced and work through dpos reach consensus the main chain. the delegated mining nodes are able protect side chains and share the strong consensus the main chain. this method increases the pressure for each delegate, however, efficiency will improve more side chains are added, because delegated mining nodes are capable running clusters. side chains are independent each other, thus one additional side chain will increase the efficiency the whole system. moreover, the efficiency each side chain will also benefits from parallel processing. resource segregation protect smart contracts from unnecessary mutual interference and maintain their stable running blockchain, aelf abandons the one-chain-fits-all solution and design public blockchain that able ensure proper running each contract. aelf will cloud-computing platform similar aws. business would like disturbed other businesses. for example, trades future market should not interfered the traffic generated the black friday. however, this seemingly impossible interference commonly seen the domain blockchain. the key obstacle preventing blockchain technology being applied real cases lies its initial design. structure governance due historical limitations, the current blockchain governance structure often not well defined upon creating. this problem becomes more prominent when there major functional upgrading stagnation caused bugs. for example, bitcoin has been stuck scaling problems for more than two years and finally forked, and the differences the dao incidence between the ethereum community and the foundation led the birth etc. result, clarify the method aelf directionsetting before users entering the world aelf: acknowledge the fact that aelf token holders have the greatest right the future aelf, and token holders' interests are linked with the destiny aelf, particular those with long-term locked-in tokens. ... resemblance representative democracy one the key principles aelf designating specialized nodes perform specialized tasks. aelf, vital decisions are carried out through mechanism that resembles representative democracy. delegated nodes must have enough votes from other stakeholders participate aelf governance. some extent, mining nodes constitute the health the aelf system, these nodes are responsible for being ledger and handing out bonuses and feedback values the stakeholders who entrusted them through smart contracts. ... exercise power the delegates foundation members realize their governance submitting the source code and delegating mining nodes review and vote. the process goes follows: foundation members provide open-source code and submit new features. delegates then choose specific features incorporate based their needs. one feature adopted enough delegates, gains approval the whole system. aelf system aelf architecture introduce how aelf consists one main chain and multiple side chains attached the main chain (figure .). this differs from traditional single chain system that aelf "branched eco-system" where the main chain works the backbone the system and connects multiple side chains (this can even include multiple layers). figure overview aelf structure aelf connects with bitcoin, ethereum, and other blockchain systems via adaptor order compatible with existing popular eco-systems. aelf side chains include the system built-in aelf side chains and other chains generated based the aelf operating system aelf kernel. the main chain interacts with the side chains side chain dynamic indexing. ... one chain one contract compared with traditional structure "one chain any type contract", aelf imposes "one chain one type contract". illustrated figure (b), each chain dedicated one type transaction and resolves one type business problem. this makes the whole structure and data more simple and more tailored commercial requirements. adding new side chains aelf, aelf will empowered with new functions and maintain "easy manage" structure. (a) one chain any types contracts (b) aelf, one chain one type contract figure blockchain with complex data structure ... side chain dynamic indexing aelf dynamic system where all side chains are attached the main chain. the main chain contains the index the system boundaries and records where the side chains are. they interact with each other via the main chain the form merkle tree verification through external information input. such, side chains not interact directly, allowing side chains added excluded from the aelf system. ... "tree branch" side chain extension illustrated figure aelf defines "main chain and side chain structure". theoretically speaking, any side chain can also connected with few sub chains underneath, acting "main chain" one part the system. this creates branch structure the system that allows aelf extend both horizontally and vertically. this idea similar that partitioning and sharding database architecture. allows each shard perform specific functions, and when one shard becomes too large manage, can further broken down into multiple shards. aelf, this corresponds side chains. figure multi-layer side chain structure aelf main chain aelf main chain blockchain run the aelf os, and acts the backbone the whole system. the main chain consists side chain index system, token system, and dpos consensus protocol. ... side chain index system the side chain index system connects all chains within the aelf eco-system. aelf indexes two types chains: external chains high importance which can used expand the boundary aelf, e.g. bitcoin, ethereum internal side chains operating under aelf os, which contribute economically the aelf system and use the aelf token side chain indexing works following steps: nodes the main chain read information from side chains and form merkle tree the header the new block records the merkle tree root. illustrated figure want confirm transaction the block btc, only need prove the existence merkle tree for the block btc stored the merkle tree root the main chain, and merkle proof the block btc via messaging. this approach also works for other chains such ethereum, long merkle tree root formed figure side chain indexing order improve verification efficiency, suggest expanding the structure merkle tree include not only block hashes, but the merkle tree root transactions figure and their states figure figure transaction indexing figure state indexing one key issue that arises here the timing side chain indexing the main chain. the main chain frequently indexes side chain with high probability fork, wastes efforts indexing orphaned blocks. therefore, suggest different indexing strategy for each side chain based its own, unique characteristics, and this can defined the system. the indexing strategy for blockchains similar bitcoin can wait one minute from the time block formed. this has been proven statistically, block can confirmed not orphan after one minute its formation. with aelf, side chain and the main chain adopt merge mining, real-time indexing can conducted the same miners. figure timing indexing ... aelf token system aelf token incentivizes honest behavior the system. all aelf side chains accept the aelf token storage value and means value transfer. can transferred across any chains that accept the aelf token. when side chain applies indexed the main chain, receives some lockedin tokens from the main chain. when the side chain receives transaction fees, partially shares them with miners the main chain. when the main chain finds indexing side chain economically unfavorable, the main chain has the right terminate indexing, permitting competition two side chains providing the same services. ... consensus protocol stable and efficient block formation mechanism the foundation the aelf system. the operation and maintenance aelf more complicated than bitcoin and ethereum, because aelf block formation requires the main chain record information from side chains, and aelf designed provide cloud-based enterprise services more complex structure. addition, miners need update information from multiple parallel chains. the main chain will adopt dpos ensure high frequency and predictability block formation, which will improve user experience. ... dpos aelf delegates mining nodes. starts with and increases every year. these nodes the aelf system enforce all consensus rules aelf. the purpose these delegated mining nodes enable transaction relay, transaction confirmation, packaging blocks and data transfer. aelf adopts multi-side chain architecture, mining nodes have work miners for some side chains. nodes will through randomized order calculation each week. randomization process illustrated follows: the aelf running along the timeline within processing units call "round" (horizontal arrow fig. and fig. .). round, one mining node will produce one block each time, while one node will have one extra transaction the end the round (vertical arrow fig .). each mining node has three main properties specific round private key, which value inputted from the mining node and kept privately the mining node itself round will become public after all block generations round are completed; public key, which the hash value every node the aelf network can look this value any time; signature, which value generated the mining node itself the first round. after the first round, can only calculated once the previous round completed. used the signature this mining node this round and also opened public all times like the see fig for more details. there are two main processes dpos: pre-verification; and order calculation within each round. pre-verification (fig .): before node starts its block generation round has have its status verified round round public, and already published can queried any time. verify the status round other nodes can check figure pre-verification. order calculation (fig .): fig used mining nodes example explain our order calculation strategy. each round mining nodes have block generation. the first round (round fig .), the ordering block generations well the signature for each node are totally arbitrary. the second round (round fig .), the block generations are again arbitrarily ordered. however, from the second round, the signature will calculated where here, means the node processing the transaction round from round the ordering within round generated from the ordering and the node signature from the previous round. round traverse the signature nodes round order. the ordering node calculated for cases conflict, i.e. results pointed places which are not empty, point the node the next available place. the node conflict the place, will find the available place from the first place. the node that processes the one extra transaction calculated from the signature the node first place the previous round. figure order calculation details for first three rounds decided by: all the signatures from previous round the value itself round which node generate the extra block. can only calculated after the previous round completed. moreover, needs all the signatures from the previous round and the value input each node independently, there way control the ordering. the extra block generation used increase the randomness. general, create random system that relies extra inputs from outside. based the assumption that node can know all other nodes' inputs specific round, one node could control the ordering. one node cannot generate block round also cannot input its for this round. such case, the previous will used. since all mining nodes are voted reliable nodes, such situation should not happen often. even this situation does happen, the above-mentioned strategy more than sufficient dealing with it. every node only has certain time seconds process transactions. under the present network condition, reasonable time consideration, meaning that every node only has seconds process transactions and submit the result the network. any delegate who fails submit within seconds considered abandoning the block. delegate failed two times consecutively, there will window period calculated hours (w=n, stands for the number failure) for that node. the systematic design, aelf defines that only one node generates blocks within certain period. therefore, unlikely for fork happen environment where mining nodes are working under good connectivity. multiple orphan node groups occur due network problems, the system will adopt the longest chain since that the chain that most likely comes from the orphan node group with largest number mining nodes. vicious node mines two forked blockchains simultaneously attack the network, that node would voted out the entire network. dpos mining nodes are elected way that resembles representative democracy. the elected nodes decide how hand out bonuses the other mining nodes and stakeholders. this mechanism will further discussed the following chapter. ... confirmation transactions aelf has faster and more predictable confirmation process than present blockchain systems. dpos different than pow because does not need package hashes repeatedly. this means that the time for each mining node package block stable and can controlled within seconds). aelf recommends that one fast confirmation accepted blocks used for general transactions, and that one accepted blocks used for substantial transactions. thus, one general transaction will confirmed within seconds and substantial one within please note, that this conservative recommendation. bitcoin recommends confirmation blocks, but many users only use one two blocks per confirmation. advanced users are allowed observe and collect data from their own blockchain and tailor confirmation time for themselves according the average processing time their own mining nodes, and the whole network aelf side chain chains that are indexed the aelf main chain are considered side chains. mentioned before, recommended that each side chain designed handle one specific type transaction (figure .). when new side chain created via aelf os, recommended they merge mining with the main chain and establish their own consensus protocols. contribute the aelf eco-system, side chains should reserve certain amount aelf tokens and share partial transaction fees with the main chain. when side chain needs verify information from another side chain, must include the block header information the aelf main chain. side chains not interact directly with each other. verification done through the merkle tree root provided the main chain. figure messaging interaction between two side chains obtaining state information from utxo systems such bitcoin highly complex process; for example, very difficult obtain the available balance from bitcoin address. cross-chain communication can addressed via blockchain adaptor, where creates compatible block header including merkle tree with bitcoin. aelf adopts such adaptor and intends establish fully compatible bitcoin side chain using aelf cooperate with the widely used bitcoin and interact with its assets. the economics aelf virtuous economy the foundation sustainable aelf eco-system. for pos and dpos, any stakeholder can sell their tokens and exit from the ecosystem short timeframe (pos has certain lock-up period). one challenge that pos and dpos face the fact that exchanges can hold large amount tokens the system, and earn interest almost zero cost. for pow, miners face more complex consideration before exiting. their exit constrained external factors such electricity cost, mining machine depreciation, land lease, and human resources. aelf will use dpos the main chain incentivize large stakeholders maintain stable system. the aelf system, the consensus protocol each chain can customized achieve specific objectives. figure fee mechanism indexing aelf side chains after side chain included the aelf eco-system, will pay certain transaction fee the main chain for indexing. aelf adopts dynamic transaction fee strategy reflect the different contribution level each side chain the aelf eco-system. for instance, aelf will charge lower transaction fee for side chain with high levels contribution such bitcoin, which has wide adoption and many associated assets. the other hand, side chain with little value the eco-system and that consumes many resources from other chains will charged higher transaction fee. figure ..: sub-chain indexing the eco-system each side chain votes determine the indexing strategy for subchains independent the main chain. its own strategy includes, but not limited to, the business scope (e.g. insurance chain will only include sub-chains that are also related the insurance industry) and fee schemes sub-chains. any chain can also decide not include any sub-chain actively invite chain become sub-chain means enrich its eco-system. within the aelf eco-system, any chain can apply become sub-chain another chain even multiple chains. system built-in aelf side chains aelf node topology consists interlinking network between full nodes the main chain, light nodes, and nodes side chains. non-mining nodes are usually light nodes. similarly, ledger nodes are full nodes. nodes side chains are distributed aelf node topology based their indexing relationship with the main chain. side chains can developed under the guidance this foundation. believe necessary build system like this. aelf does not aim build side chain itself, but will provide development template and infrastructure for side chain, and facilitate communications between the side chains. for example, there could content-based network where users are able buy contents with the token this network. when decentralized "twitter" joins aelf, aelf will help users share contents through this network, distribute network resources, and swap this "twitter" token with tokens content-distribution network decentralized exchange. figure illustration aelf node topology ... information registration and authentication side chain information registration and authentication side chain create great value industries both online and offline. business such e-commerce, car hailing and delivery have already adopted this technology. huge opportunities have yet unleashed businesses such supply chain finance, logistics, credit scoring and more, where their large information assets can migrated onto this side chain the future. ... digital asset ownership side chain the main function this side chain store digital assets and wallet ownership information. ... asset initial distribution side chain the main function this side chain facilitate asset initiation (first coin sales). once the distribution has been completed, assets will moved the digital asset ownership side chain. the advantage that normal transactions will not interrupted during large scale first coin sale. ... decentralized exchange side chain decentralized transaction side chain functions exchange. enables kyc, asset transfer, order placement/ withdrawal and execution. aelf cross-chain optimization cross-chain transactions need optimized match the block formation speed between different chains. aelf has two mechanisms address this. the first hierarchical side chain mechanism. categorize chains into different levels according the block formation speed the chain and provide dedicated adapting side chain adapter module carry out the same level cross-chain transactions for each level the chain. part this solution cross-level guarantee mechanism. for cross-chain transactions different levels, the main chain provides guarantee for the slower chain, but this only optional mechanism required. these two mechanisms effectively enhance aelf's crosschain transaction speed. figure illustration aelf node topology aelf operating system definition minimum viable blockchain system the aelf system creates highly specialized and efficient chain structures handle all types business scenarios. also enables "chain splits" address capacity issues when demand increases. further enhance aelf's commercial potential, lay out the system's most fundamental block and infrastructure for developers and the community. the following chapters discuss the minimum viable blockchain system and aelf operating system the foundations for achieving high customization and efficiency. block: block used record state the system. the transition from the last block the current block defined the transactions included current block. transaction: transaction logic defined smart contract. smart contract essentially protocol. always gives the same output from the same input. account: account used distinguish the boundaries data storage. consists public key and private key systems. network communication: data transmission between nodes done through the underlying network. consensus protocol: consensus protocol defines the rules and authority update state within the blockchain. aelf kernel ... built-in minimum viable blockchain system these are the foundational components the blockchain system operating within the aelf kernel. they are linked with relevant interfaces define the customizable parts smart contracts, consensus protocols, blockchain headers. ... unified account system the bitcoin system introduced public and private keys into the concept account. the pay script hash gives transaction authority smart contract. while ethereum defines externally owned accounts and contract accounts, aelf kernel defines both types accounts smart contracts. ... parallel transactions processing within block aelf analyzes the static state transactions and assesses the impacted data range each transaction. illustrated figure multiple transactions without read/ write conflicts can then processed parallel, without affecting the output each transaction. during the process block formation, nodes assign transactions different groups based the mutex the transactions. transactions within group will processed sequence, while all groups will processed simultaneously. figure parallel transactions processing within block there are special transactions that cannot processed parallel because they impacted data ranges change while other transactions are being processed. for these circumstances, nodes will prioritize transactions that can processed parallel. with sufficient transaction fees, these special transactions nonparallel group will processed sequence. otherwise, nodes can reject these transactions. noted that, when faulty node accepts transaction that cannot processed parallel and time-consuming manner, the probability that other nodes reject this block increases. amdahl's law empirical rule computer architecture named after computer scientist gene amdahl that gives the theoretical speedup efficiency when using parallel processing. think about program that runs single processor. terms the execution time, "f" the proportion the execution time that the part benefiting from improved resources originally occupied, (-f) the proportion execution time that fixed for sequential processing. there are "m" (numbers) processors that run parallel, then the theoretical speedup this program will calculated follows: speedup&'()*+ two major conclusions are conducted: speedup hardly improves when minimum. rises the maximum, speedup limited /(-f). amdahl's law fixed-size mode, which means will solve problems fixed size with fixed proportion execution parallel. most blockchain transactions are not correlated. using amdahl's law, data execution can greatly sped up. however, most present blockchain systems execute sequence, and all nodes carry out the same set computing. this wastes resources and hinders transaction speed. evm, for instance, does not only process transactions sequentially, but also has requirement for gas fees, resulting extremely low performance efficiency. figure solve complex blockchain problems, low-speed transactions are simply not viable option. aelf aims build blockchain system with high on-chain tps through parallel processing. the key here separate transaction data and computational dependency, which solves data hazard issues. could refer the architecture intel micro-processor, where reservation station separates electrocircuit dependency along with other technics such register renaming deal with the large data hazards that frequently occur raw, waw, and war and execute alus parallel. the aelf parallel execution scheduler (gpes) adopts similar approach. the regular internal test, aelf separates computational dependency and data dependency blockchain from the memory pool. gpes also has set pretreatment (prediction computing time span), pre-indexing code segments that are able processed parallel, initiate the pipeline, and execute parallel processing multiple dimensions. this set indexing language can used solve more complicated parallel logic problems. aelf's pipeline also important method increase speed. has been widely adopted for cases such cpu and meta function (map, aggregate first, and contains) processing. this set turning incomplete language perfect for processing data streams (or simple transaction streams). parallel processing functions and context free/immutable computing will make full use cores and nodes. general, parallel processing comprehensive strategy significantly increase the speed blockchain transactions. ... transactions marked blocks valid transaction the period between broadcasting and confirmation considered "pending" state. usually, transactions will quickly packaged and confirmed. however, there are also cases where transactions are left unconfirmed for relatively long period; for instance, during times bitcoin network congestion when majority miners are unsatisfied with the gas fees. when transaction neither confirmed nor able withdrawn for relatively long period, will considered state "chaos". aelf requires that the broadcast for each transaction labeled with "mark", which the hash header the the latest block when the transaction happens. the mining node will then only process the hash header the most recent blocks. transaction not confirmed after blocks are generated, then this transaction deemed expired. simply put, transaction that not confirmed within minutes can rebuilt token holders. another function marking transactions effectively render blockchain forking obsolete. one node successfully marks transaction when the the hashes this transaction are included the latest blocks. node receives large amount invalid marking hashes from the highest chain and not able package these transactions, then likely working forked chain. nodes receive large amount transactions with invalid marking, there's high possibility that this blockchain has forked. this moment, nodes can suspend trading avoid risks. ... smart contract collection the aelf chain contract has collection smart contracts that are defined during the genesis. this collection named the genesis smart contract collection, honor satoshi. the essence smart contract collection class that defines the main functions, the consensus protocol the chain, and the update mechanism the collection. ... smart contract update the functions aelf are defined the smart contract collection. therefore, updating the collection impacts the functions the whole chain. the update mechanism the collection defined the previous collection. for example, majority votes for new smart contract collection the most recent block, confirmed the consequent blocks, and new collection will replace the original one. nodes that not update the collection will have their work terminated. ... customizable consensus protocol for specific business scenarios, the consensus protocol has major impact participants' decisions. for private chain with high trust level, pbft popular consensus protocol. creates high performance with small number preassigned miners. environment with low trust, the stability blockchain maintained via consensus protocols such pow, pos and dpos. aelf defines consensus protocols part the smart contract collection and can implement any type consensus protocol based any business scenario. will use bitcoin and peercoin examples illustrate the considerations choosing the consensus protocol. pow used bitcoin authenticates the blockchain solely based information from the block header without any forms input. the other hand, pos used peercoin requires data from stake transactions within the block-its own authentication the transaction besides block header. recommend future users pursue consensus protocol that only requires block header information order achieve timely authentication. addition, for highly specific scenarios, customizable consensus protocols can implemented. ... customizable block header facilitate the recommendation that the consensus protocol only uses block header information, introduced customizable block header. the block header peercoin does not contain information that verifies the legitimacy block, which means that stake block cannot verify block legitimacy itself. aelf kernel allows users customize block header structure during the creation chain. self-proof based block header can done verifying unspent transaction merkle tree with hash (txid value) and calculating the stored root obtain txid, and value and merkle tree verification. aelf operating system customer interface figure aelf operating system interface ... smart contract execution the aelf operating system defines smart contracts protocols. they can executed any forms service realization. the aelf operating system prefers docker, but also supports native programming languages such java, c#, go, javascript, lua. for docker, aelf provides internal rpc services grant access read variables and user accounts during smart contract realization. for native programming languages, aelf provides respective sdks execution functions. ... micro-service smart contracts are defined micro-service aelf. this makes smart contracts independent specific programming language. consensus protocol essentially becomes service, because defined through smart contract. ... cloud base through the micro-service approach, aelf kernel extends parallel processing cloud, thus enabling cloud-based contract execution. aelf kernel has defined data structure and standards, therefore hot data can stored ram. utilizing mature and decentralized database service, this effectively improves performance the system. ... light node figure illustration light node data structure each node within aelf handles only relevant information within the system, which accomplished through customization and internal merkle tree verification mechanism. this enables nodes lighter and significantly increases compatibility with light desktop and mobile terminals. ... optional modules .... data cleansing mechanism figure illustration data cleansing mechanism the aelf system adopts snapshot mechanism that resets block formation with the addition original data the new genesis block. however, the aelf system does not rely historical data, but rather focuses new data that needs processed. this similar human history, where despite the fact that many historical details have been lost, does not affect the decisions people the present. likewise, the aelf system has the ability abandon historical data becomes too bulky record. .... data tunnel the data tunnel mechanism execute transfer. these data are not recorded the block. data tunneling only applicable encrypted data transfer. for example, purchases data from transfers data while transfers assets both through the data tunnel. this design aims enable data transfer between two nodes directly. present blockchain systems, the only strategy broadcast transactions that all nodes need process the transaction. this waste resources and will limit the volume processed transactions well. data tunnels can realized through plug-in protocol, but this will require approval all the nodes. this does not occur, things will become intractable. for example, developers often get into trouble when internet explorer does not support features from chrome). with this protocol, aelf will support more applications, such data purchase contract, among others. (see further below). .... rapid confirmation model aelf permits rapid transaction confirmation only the recipient has been authorized the sender. the authorization only valid for certain type transaction during certain period and between assigned addresses. for example, wants initiate rapid confirmation model with during asset transfer, then needs initiate transaction with certain amount assets reserved for the transaction, and specify the counterparty. during the actual transaction process, will send the signed transaction via data tunnel. instantly confirms the transaction upon receival. affected assets will then transferred after signs the transaction with their address. will then receive the remaining assets. the data tunnel terminated after the transaction. .... token module the token module defines all logics and algorithms for the value carrier (token). specifically serves scenarios such payments for resource allocation, rewards for maintaining the stability aelf. most public chains, the token mechanism indispensable. used incentivize healthy development the whole network, and settle the contributions the different roles. aelf designed token module where every side chain recognized the aelf operation system allowed accept the aelf token. .... customization aelf enables developers rapidly customize the system redefining parameters each module, and implement side chains the aelf operation system. aelf's core principle that "one chain serves one specific business scenario", and established highly abstract and modular architecture. for enterprise users and entrepreneurs, this accelerates the process implementing their business ideas. for more advanced users, permits high customization for their own chains and unleashes the full potential blockchain. aelf eco-system development any new technology will not succeed without commercial adoption and sustainable eco-system. aelf has proposed technical blueprint with commercial application instilled throughout the whole design. crucial establish aelf ecosystem including internal and external resources. pursue this goal striving concurrently three dimensions: technology, business, and capital. technology the chapters above laid out the key technical features aelf. the aelf team has years blockchain development experience, with particular involvement few commercial-focused enterprise projects. the proposed aelf technical solution intends resolve the most pressing obstacles for commercial adoption blockchain, such scalability, security, customization, and interoperability. provides highly efficient infrastructure adopt new protocols and support all kinds commercial scenarios the future. business applications ultimately, aelf intended become new "internet infrastructure" support the next generation "digital businesses." the team and their advisors have worked with numerous blockchain projects the past, and see the industries that will the "early adoptors" and "blockchain stars" aelf: figure illustration aelf business applications financial services blockchain has drawn lot attention from the financial services industry significantly reduces intermediaries and ensures secure transactions. multiple chains can developed aelf specifically for financial services, including cross-border payments, trade finance, and supply chain financing. the parallel processing feature capable handling business transactions international scale, and the inter-chain communication feature allows smooth coordination from asset registration, account management, and real-time transaction. insurance insurance another well established and attractive field that can disrupted blockchain. dedicated aelf side chain for insurance will integrate various dapps and transform the whole industry value chain. these chains will encompass everything from from user identity, insurance contract execution, and claim handling. digital identity and ips aelf's multi-chain structure has built-in chain for digital identity. this ensures the performance this side chain another side chain busy, such when new token issued that other side chain. within aelf, digital identity can used other side chains via "messaging". using the adaptor, aelf also capable retrieving information and data from other established chains, such bitcoin and ethereum. smart city governments would able use aelf securely and conveniently run certain administrative tasks. governments organizations can customize the consensus protocol meet national security requirements. activities, such utility recording, citizen identities, government agency information disclosure and polling can realized aelf with great transparency and efficiency. few countries are experimenting this field, including estonia, singapore, and china. internet things aelf supports light node and cloud service, which reduces the computational requirement for connected devices while maintaining high performance. this critical order manage billions devices and enables micro-payments across them link internet things. aelf has laid out strong foundation for the above industries and more thrive, and actively identify new business opportunities and dapps part aelf eco-system. interoperate with existing dapps existing chains there are already some proven daaps existing chains, such bitcoin and ethereum. aelf will leverage its interoperability feature connect with these dapps order allow asset exchange and capture the transaction data coming from those dapps nurture new start-ups ideas the development team and their advisors are deeply involved new idea formation and commercialization the global blockchain community. new startups have approached for technical and commercial advice. will leverage these strong connections nurture the start-ups and include them the aelf ecosystem. together with vcs, are confident can identify and bring the most promising projects launch themselves aelf. transform established companies "blockchain savvy" established companies pose another opportunity benefit from and join the aelf eco-system. they already possess large customer bases and have proven value their current business. aelf can help them become even more powerful with strong incentives and rewards customers, resolving certain pain points within various industries described above. the aelf team has been discussion with internet companies and traditional corporates disruptive business model aelf. foresee few exciting announcements will made near future. addition, the team intends collaborate with global strategy consulting firms push the boundary next generation business models aelf eco-system. capital building eco-system requires large amount capital. besides leveraging the funds raised during the token sale, the team and its advisors have established strong alliances with leading crypto funds globally. have advised numerous token sale projects successfully raise funds and have helped them overcome the many obstacles they face. this international capital network and our reputation ensures strong financing capability, and are building pipeline support these businesses globally. references satoshi nakamoto. bitcoin: peer-to-peer electronic cash system. vitalik buterin. ethereum white paper: next generation smart contract and decentralized application platform. melanie swan. blockchain: blueprint for new economy. o'reilly media, inc.",. frederick brooks. the design design: essays from computer scientist. "addison-wesley", andrew tanenbaum. modern operating systems "pearson", joseph poon and thaddeus dryja, the bitcoin lightning network: scalable offchain instant payments. gavin wood. ethereum: secure decentralised generalised transaction ledger. hyperledger whitepaper. muhammad saqib niaz and gunter saake. merkle hash tree based techniques for data integrity outsourced data. robert mcmillan. the inside story mt. gox, bitcoin's dollar million disaster. sunny king, scott nadal. ppcoin: peer-to-peer crypto-currency with proof-ofstake. david schwartz, noah youngs, and arthur britto. the ripple protocol consensus algorithm. ripple labs inc white paper, leslie lamport. the part-time parliament. acm transactions computer systems, ():-, may leslie lamport, robert shostak, and marshall pease. the byzantine generals problem. acm transactions programming languages and systems (toplas), ():-, leslie lamport. time, clocks, and the ordering events distributed system. communications the acm, ():-, jul paul tak shing liu. medical record system using blockchain, big data and tokenization. information and communications security, pages springer, robert love. linux kernel development. "addison-wesley", shawn wilkinson and tome boshevski, storj: peer-to-peer cloud storage network. contract. url https://en.bitcoin.it/wiki/contract, mandatory activation segwit deployment, uasf, bip url https://github.com/bitcoin/bips/blob/master/bip-.mediawiki, smart property. url https://en.bitcoin.it/wiki/smart_property,