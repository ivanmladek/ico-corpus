tierion network global platform for verifiable data authors: wayne vaughan, jason bukowski, glenn rempe june table contents introduction history use cases tierion network chainpoint service benefits chainpoint proofs chainpoint proof generation chainpoint service infrastructure economics tierion network token conclusion appendix full chainpoint proof sample endnotes (c) tierion inc, all rights reserved. introduction businesses safeguard and notarize important documents such property titles and contracts ensure anyone can prove their veracity. surprisingly, there isn't universal equivalent for safeguarding digital data. much the world's important information stored digitally and susceptible modification system administrators hackers. when data sent over the internet, the recipient often can't verify when the data was created has been modified from its original state. problems with data integrity and digital record-keeping are particularly severe regulated industries such healthcare, insurance, and financial services where data corruption tampering has significant legal and reputational consequences. tierion building universal platform for data verification. tierion works creating proof that links data transaction blockchain. this called anchoring. anyone with this proof can verify the data's integrity and timestamp without relying trusted authority. tierion launched and has become the most widely used platform for anchoring data the blockchain. tierion's key innovation was making simple anchor virtually unlimited amount data single blockchain transaction. tierion's launch also marked the introduction the chainpoint protocol, the first standard proof format for anchoring data blockchain. several open source projects and multiple vendors have adopted the chainpoint protocol. july chainpoint was published. featured several improvements, including the use json-ld and anchoring into multiple blockchains. tierion formed the chainpoint community september chainpoint the first technology its kind receive public support from major internet standards organization continue our mission secure the world's data, we're launching the tierion network. chainpoint has been upgraded version and now runs service the tierion network. together, they provide universal platform for data verification that operates massive scale. microsoft joining tierion running core part the network infrastructure. anyone can join the tierion network running node. each node improves the network's scalability and reliability. along with this new distributed architecture, token being introduced. the tierion network token (tnt) provides economic incentive secure the network infrastructure, and serves method settlement between parties access network resources. each node serves mini-tierion. node operators can provide users with services using conventional payment and delivery models. (c) tierion inc, all rights reserved. history using the bitcoin blockchain notarize documents was popularized manuel araoz with the creation proof existence this system, and others like it, publish hash document bitcoin transaction. hashes allow computers compare arbitrarily complex data and determine they are identical. comparing the hash document with the hash published the blockchain, possible prove the document existed before the timestamp the block containing that bitcoin transaction. why use bitcoin? bitcoin's security model enforced the entire network instead trusted central authority. once transaction confirmed, becomes part immutable ledger that distributed across global network nodes. practically impossible for malicious agent alter data the blockchain. shortcomings these early systems had several shortcomings and never achieved significant commercial adoption: not scalable one document hash was published per bitcoin transaction. bitcoin's current network throughput approximately three transactions per second this far too low support the world's applications. cost june the cost anchoring data into bitcoin was approximately usd. june that cost has increased over usd. inaccurate bitcoin's block time accuracy hours this means the timestamp the block could hour before transaction was published. time travel violates the laws physics. these limitations made impractical and cost prohibitive anchor large volumes data the bitcoin blockchain. tierion overcame these obstacles and made simple link virtually unlimited amount data single transaction the blockchain. for the first time, developers had easy-to-use and affordable service for anchoring data scale. chainpoint provided standard proof format and open source tools for the creation and verification chainpoint proofs. (c) tierion inc, all rights reserved. use cases since launching june tierion has been used many organizations wide variety industries. several open source projects have adopted the chainpoint protocol. here are some examples that demonstrate how the technology being used. microsoft attestations data integrity microsoft and tierion are collaborating build service generate, manage, and validate attestations e.g. credentials associated with your work history. philips iot data provenance collect data from mri machines create audit trail its maintenance, usage, and calibration history. prove compliance with regulations and safety inspections. blockcerts blockchain verifiable credentials blockcerts open source project that emerged from the mit media lab that uses the chainpoint protocol issue blockchain verifiable education credentials. verifai machine learning auditability verifai creates cryptographically verifiable audit trail prove how neural network has been trained. verifai marks the first practical use blockchain technology artificial intelligence. use case description process audit trail cryptographic proof the order, integrity, and timestamp any business process. supply chain, insurance claims, know your customer (kyc), hospital patient care, financial transactions. document timestamping several companies offer free timestamping services using the chainpoint protocol. iot data collection prove the integrity and timestamp data gathered from connected devices. proof consent non-repudiable evidence that important consent and approvals have been recorded. patient care, corporate governance, etc. registry verifiable registry creative works, real estate listings, etc. (c) tierion inc, all rights reserved. data security secure the integrity key assets; customer records, databases, log files, backups, and virtual machine snapshots. clinical trials provide regulators with proof the integrity data for clinical trials. for each industry specific use case, tierion delivers three core capabilities. trust anchor cryptographic systems, trust anchor authoritative entity for which trust assumed and not derived. the bitcoin blockchain particularly well suited serve trust anchor. authority controls the bitcoin blockchain. once transaction confirmed, becomes part immutable ledger that distributed across global network nodes. erasing modifying this data virtually impossible. tierion provides scalable means use multiple blockchains trust anchor. data integrity data integrity the assurance the accuracy and consistency data. organizations with sensitive data need prove hasn't been corrupted manipulated insider threats external hackers. tierion provides global mechanism for verifying data integrity. timestamp public blockchains make poor timestamp authorities because their low time accuracy. for example, bitcoin's block time accuracy approximately hours. trusted timestamps are accurate, but require you trust the time provided authority. anchors public blockchain provide low accuracy but trustless timestamp. chainpoint solves this dilemma including multiple trusted timestamps and multiple trust anchors each proof. this allows chainpoint proofs simultaneously possess accurate and trustless time attestations. (c) tierion inc, all rights reserved. tierion network developers get started using the current version tierion visiting the website and signing for free account. this gives them access tools for collecting data, creating and verifying chainpoint proofs, and integrating data with popular software applications. with this next step, tierion evolving into distributed network that offers services that utilize the blockchain trust anchor. figure current tierion new tierion network chainpoint the first service the tierion network and serves the technical foundation for future services. chainpoint provides global utility for anchoring data the blockchain and universal platform for data verification. future additions the tierion network may include services for securing and sharing verifiable data, document notary and archival, and attestations related blockchain verifiable identities. (c) tierion inc, all rights reserved. the tierion network token (tnt) serves two primary functions: method settlement between parties access network resources incentive for network participants operate and secure the network. anyone can join the tierion network and earn tnt. end users will not require token use the network. see the "tierion network token" section this document for more details. roadmap the original version tierion has nearly two year track record and has been used thousands organizations. the application will continue operate. current customers will able migrate new version tierion. the tierion network and chainpoint service has been operating private beta with our partners. open beta planned launch august, which marks the two year anniversary tierion's launch. microsoft's infrastructure planned come online shortly thereafter. the tierion network planned launch before the end (c) tierion inc, all rights reserved. chainpoint service the chainpoint service global utility for creating and verifying chainpoint proofs that runs the tierion network. this section the white paper provides detailed technical overview chainpoint organized into four sub-sections: benefits benefits the new chainpoint service chainpoint proofs overview the elements chainpoint proof proof generation process how chainpoint proofs are created chainpoint infrastructure description chainpoint's global network infrastructure benefits chainpoint's new distributed architecture provides several significant advantages. scalability chainpoint uses highly scalable architecture that designed generate millions proofs per second. accuracy chainpoint includes time data from network time protocol (ntp) servers and the national institute standards and technology (nist) with anchors the bitcoin and ethereum blockchains, allowing chainpoint proofs simultaneously possess accurate and trustless time attestations. responsive chainpoint responds immediately when hash submitted. proofs are automatically upgraded they are anchored the bitcoin and ethereum blockchains. trust chainpoint periodically anchors into the decentralized bitcoin and ethereum blockchains. this allows the chainpoint proofs inherit the security properties multiple blockchains. cost effectiveness chainpoint's scalability makes cost-effective for the world anchor data secure public blockchain. this particularly relevant bitcoin transaction fees have increased more than the past two years and are likely continue rise. global calendar chainpoint servers work consensus generate global, publicly auditable, blockchain called the chainpoint calendar. this makes easier verify chainpoint proofs and audit the network. (c) tierion inc, all rights reserved. chainpoint proofs each chainpoint proof contains set operations that cryptographically link hash multiple blockchains. these links are called anchors. chainpoint proofs are verified replaying the operations and checking each anchor for expected value. the new proof format has the flexibility support the inclusion external data, multiple hash types, and branches. chainpoint proofs can verified with any chainpoint compatible verification tool. figure conceptual depiction the structure chainpoint proof. (c) tierion inc, all rights reserved. sample chainpoint proof this sample proof has been truncated for readability. see appendix for full proof. "@context" "https://wid.org/chainpoint/v" "type" "chainpoint" "hash" "daabcbfafdfaddbdcdefbcbc" "hash_id" "b--e--e" "hash_submitted_at" "--t::z" "branches" "label" "cal_anchor_branch" "ops" "l" "b--e--e" "op" "sha-" "l" ":cacfddbfcdaaffcdeffbdeededde bccdfdfcdcfcdabadfcb" "op" "sha-" "l" ":::a.chainpoint.org:cal:" "r" "eeebbeedddcdcabcaface" "op" "sha-" "anchors" "type" "cal" "anchor_id" "uris" "http://a.chainpoint.org/calendar//hash", (c) tierion inc, all rights reserved. chainpoint proof overview this section provides overview the chainpoint proof elements figure hash the hash element chainpoint proof represents some data that you want prove anchored the blockchain. hash cryptographic digest any data. hash functions always produce the same hash given identical input. hash functions output fixed length string regardless the size type input. input size hash (sha) text string bytes efedaabcfdaecfcccdddcccdffddd image bceddbbdecbafcfecfeeaaeeddcaa database dbeaeddfecbebddacbe hashes allow computers compare data. hashes match, the source data must identical. hash functions cannot reversed discover anything about the input. this makes hashes useful for proving the existence and integrity data while keeping the source confidential. hash_id ntp timestamp chainpoint uses network time protocol (ntp) keep time synchronized with worldwide network atomic clocks. chainpoint generates unique identifier for each hash receives. this hash_id rfc version uuid which contains high precision timestamp that reflects the ntp time. hash_id included the cryptographic operations, thus the exact time chainpoint received the hash embedded each proof. branches chainpoint proofs are organized into tree. the hash serves the root. each branch contains list operations which terminates anchor; claim that value published external system. figure contains three branches, calendar, ethereum, and bitcoin. (c) tierion inc, all rights reserved. operations (ops) operations are performed sequence verify proof. operations include left concatenate, right concatenate, and set hashing functions. chainpoint can extended include additional operations. the hash field chainpoint proof used the starting value when performing operations. the result each operation used the input for the next operation. consider the following example which begins with empty string (instead hash) the starting value: "l" "chain" "r" "point" "op" "sha-" the above sample translates to: sha('chain' 'point') resulting ccecceebaccddacdfbdaabebaaccfcb operations replay the calculations made when hash goes through the proof generation process. proof can verified executing the operations and checking each anchor for expected hash value. (c) tierion inc, all rights reserved. nist randomness beacon the movies, kidnappers provide "proof life" taking photo the victim holding current newspaper. this proves the photo was taken after the newspaper was printed. our team collaborated with the national institute standards and technology (nist) create analogous technique prove chainpoint proof was created after the hash_id generated the nist randomness beacon project, led dr. rene peralta, continues work started haber and stornetta at&t bell labs the 's. each minute, the randomness beacon publishes value created network random number generators. beacon values are generated specialized hardware that 'uses quantum effects generate sequence truly random values, guaranteed unpredictable, even attacker has access the random source' figure space-time diagram illustrating locality-loophole-free bell test nist beacon data included every chainpoint proof. since the random values are unknowable before they are published, can assert that each chainpoint proof: should have nist timestamp earlier equal when hash was received the nist time should generally within one minute when hash was received this the first time publicly verifiable data being used improve the accuracy blockchain timestamp proof. (c) tierion inc, all rights reserved. calendar anchor the chainpoint calendar similar hash calendar blockchain that created and maintained the participants the chainpoint network. each chainpoint proof anchored this global calendar within seconds hash submission. once anchored the global calendar, chainpoint generates partial proof, eliminating the need wait for bitcoin and ethereum transactions confirm. "anchors" "type" "cal" "anchor_id" "uris" "http://a.chainpoint.org/calendar//hash" the calendar also contains data for verifying chainpoint proofs. calendar data mirrored distributed network chainpoint nodes. more this later. ethereum anchor the anchor hash published ethereum transaction the data field. the eth address included the chainpoint proof. "anchors" "type" "eth" "anchor_id" "deeccdbefdaeaaededcbbefafbdfba" "uris" "http://a.chainpoint.org/calendar//data" (c) tierion inc, all rights reserved. bitcoin anchor the anchoring hash included op_return bitcoin transaction. consequence, this value included the raw transaction body, allowing the transaction and the merkle path from that transaction the bitcoin block's merkle root calculated. chainpoint waits for six confirmations after publishing anchoring transaction, determines the merkle path from the transaction the block's merkle root, and appends this data the chainpoint proof. this ensures proofs can verified op_return pruned, verifier has dataset that only contains block header data. "anchors" "type" "btc" "anchor_id" "uris" "http://a.chainpoint.org/calendar//data" (c) tierion inc, all rights reserved. chainpoint proof elements complete list chainpoint proof elements. see appendix for sample proof. name description @context the json-ld context for the proof string, required type the json-ld type definition string, required hash hash value between and hex characters. must even length. string, required hash_id string, required hash_submitted_at string, required version uuid with embedded timestamp. random number used mac input. timestamp represents server time (utc) hash submission. human readable iso timestamp extracted from time embedded the hash_id branches array branch objects. branches can nested without limit and must traversed only after executing 'ops'. (required only root) label text string representing the branch name string, optional ops array, optional branches array, optional array operations objects. operations are performed sequence arrive intermediate hash prior entering nested branch. nested array branch objects. each branch contains ops; labels and additional nested branches are optional. ops array operation objects (required under every 'branches' object) string, optional left concatenate value. the value hexadecimal string, will read hexadecimal byte array, otherwise the string will converted its byte value assuming utf- encoding. (c) tierion inc, all rights reserved. string, optional string, optional right concatenate value. the value hexadecimal string, will read hexadecimal byte array, otherwise the string will converted its byte value assuming utf- encoding. operation perform the current value combined with previous 'l' 'r' operation. current operations: 'sha-', 'sha-', 'sha-', 'sha-', 'sha-', 'sha-', 'sha-', 'sha-', the special purpose 'sha--x' which applies 'sha-' twice. anchors array anchor objects (required under every 'ops' object). type one 'cal' (calendar), 'btc' (bitcoin), 'eth' (ethereum) anchor types string, required anchor_id string, required uris array, optional identifier used look embedded anchor data. e.g. bitcoin transaction block id. array special purpose string uri's, each which can used lookup and retrieve the exact hash resource required validate this anchor. the uri must return only hexadecimal hash value string. the uri must also contain the 'anchor_id' value lookup the uri resource. this strict requirement allow automated clients retrieve and validate intermediate hashes when verifying proof. the body value returned the uri must even length and match the regex [a-fa-f-]. json-ld binary formats chainpoint proofs are commonly used their json-ld format, seen the many examples used throughout this document. the json-ld format makes proofs human readable and easy integrate into other json-ld documents. chainpoint proofs can converted binary format. the binary format uses messagepack and zlib substantially reduce the proof size. for example, byte json formatted proof reduced bytes when converted binary format. information the chainpoint binary format can found https://github.com/chainpoint/chainpoint-binary/. (c) tierion inc, all rights reserved. chainpoint proof generation the following description approximates how each element interacts throughout the proof generation process. figure chainpoint proof generation process hash submission submit hash chainpoint service. each submission may contain hashes. hashes can hex strings between and characters. this allows submission common hash types such sha-, sha-, and sha-. sha- encouraged. chainpoint immediately returns rfc version uuid with embedded ntp timestamp that uniquely identifies each hash. hash processing the submitted hash combined with the uuid create new hash. this mixing data acts cryptographic nonce and ensures that chainpoint processes unique hashes even when duplicate hashes are submitted. next, the hash combined with the nist beacon data create another new hash. this makes possible prove that the hash was submitted after the nist beacon values were published. hashes are then sent aggregation service. (c) tierion inc, all rights reserved. aggregation chainpoint periodically aggregates hashes into number parallel merkle trees. this hierarchical aggregation allows for handling massive numbers hashes. the merkle root from each tree periodically sent the chainpoint calendar. merkle inclusion proof generated for each hash and stored. these partial proofs are continually appended with new data throughout the proof generation process. calendar consensus the calendar blockchain that kept consensus between multiple chainpoint servers. this ensures that single global calendar blockchain can used verify chainpoint proofs. calendar data organized into blocks. these blocks are stored records distributed cluster cockroachdb databases writes the calendar are enforced leader election using cluster consul servers. calendar blocks the chainpoint calendar periodically aggregates merkle roots into new merkle tree. new set merkle inclusion proofs generated and appended the existing partial proofs. the root this merkle tree written calendar block anchor blocks calendar blocks are periodically anchored the bitcoin and ethereum blockchain. this done publishing transaction that commits anchor block hash transaction the blockchain. confirmation blocks chainpoint monitors the blockchain. when each anchoring transaction receives sufficient number confirmations, confirmation block added the calendar. each confirmation block contains the data needed finalize each chainpoint proof. proof completion after confirmation block written, chainpoint appends partial proofs with the final data. complete chainpoint proofs are now available for retrieval. (c) tierion inc, all rights reserved. chainpoint service infrastructure the chainpoint service designed run global network that operates massive scale. the network involves the interaction several classes participants. core core network partners that run the full chainpoint service stack, maintain the global calendar, and anchor data the blockchain. nodes nodes provide additional scaling, mirror the global calendar, and audit core. each node that joins the network improves scalability and reliability. anyone can become part this distributed network downloading the software and running node. chainpoint clients clients can connect node, directly chainpoint core via api. figure chainpoint service architecture diagram (c) tierion inc, all rights reserved. chainpoint service design goals scalable chainpoint designed for virtually unlimited scale. contrast other blockchain based systems, throughput increases nodes are added the network. reliable chainpoint designed have zero downtime and consistently return proofs predictable timeframe. chainpoint core distributed across independent data centers and geographic regions ensure availability and redundancy. chainpoint nodes form decentralized network create and verify chainpoint proofs. secure anchoring allows chainpoint inherit the security properties multiple blockchains. modifying the bitcoin ethereum blockchain would cost attacker millions dollars and becomes increasingly difficult over time. economic efficiency chainpoint designed inexpensive free for most network participants. increases network throughput scales independently blockchain transaction costs. open anyone can join the network running chainpoint node. nodes mirror copy the calendar data and can independently verify the full chain. (c) tierion inc, all rights reserved. chainpoint core chainpoint core network partners that run the full chainpoint service stack create and verify proofs, read and write the global calendar, and perform anchoring operations. each core member operates one more clusters servers. each cluster called service cluster. figure chainpoint core member diagram core members have the resources run scalable systems with high availability and near zero downtime. the first three service clusters will available chainpoint.org. microsoft first organization join core and will hosting service cluster. global calendar the chainpoint calendar blockchain that created core and audited nodes. the calendar provides several benefits: reduced costs one core partner anchors for everyone the chainpoint network. single transaction can used anchor millions proofs. this makes chainpoint inexpensive free for most network participants. faster response the full proof generation process can sometimes exceed hour due variations the time takes mine bitcoin blocks. each chainpoint proof anchored the calendar within seconds hash submission. chainpoint then returns partial proof that automatically updated throughout the proof generation process. this eliminates the need wait for bitcoin and ethereum transactions confirm. (c) tierion inc, all rights reserved. proof verification the calendar provides single source data for verifying chainpoint proofs. anyone with the calendar data can fully verify every chainpoint proof without having run bitcoin ethereum node. you don't have worry about servers going offline and parts your proof becoming impossible verify. those with advanced security requirements can cross check the calendar data with their own bitcoin ethereum nodes. auditability global calendar makes possible for anyone audit core and independently verify the validity and integrity the chain. each block signed with provider specific public key, and the chain periodically anchored bitcoin and ethereum. chainpoint nodes each additional node increases the total capacity the network create and verify proofs. nodes are able receive and process hashes, pass hashes core, receive partial proofs from core, and generate final proofs. additionally, nodes mirror copy the calendar and continually audit the chain. node operators anyone can join the chainpoint network running chainpoint node. proof generation each node provides http api that subset the core api. hashes submitted through this api are aggregated into their own merkle tree regular intervals. the merkle root that tree submitted core. each hash sent core may used generate thousands proofs per node. thus, each node significantly increases the network's capacity generate proofs. verification nodes store local mirror the global calendar real time. this allows nodes provide the same proof verification api core. every chainpoint node can fully verify every chainpoint proof. real-time calendar audit nodes mirror the calendar data real-time. nodes validate that each block the chain internally consistent, and signed with the public key the core partner. periodically, nodes verify that the entire chain valid all the way back the genesis block and report these results the network. (c) tierion inc, all rights reserved. economics when tierion was first released june the cost anchoring data into the bitcoin blockchain was approximately usd. june that cost has increased over usd. ethereum transaction fees are following similar pattern. figure bitcoin and ethereum transaction fees $usd. rising transaction fees have made too expensive for individual developers and most businesses anchor data. based current market prices, anchoring one transaction every ten minutes the bitcoin and ethereum blockchains costs per year. these costs are projected continue rise. the tierion network makes anchoring data economically viable for all. the chainpoint service scales anchor virtually unlimited amount data with minimal footprint the blockchain. (c) tierion inc, all rights reserved. tierion network token the tierion network token (tnt) incentivizes network participants operate and secure the network infrastructure. chainpoint the first service available the tierion network. have plans for future services that will built top chainpoint and will announce these services the future. core members core members incur significant costs operate server clusters. tnt provides method recoup these costs. core partners earn tnt for anchoring data into the bitcoin and ethereum blockchains. periodically, core's consensus algorithm elects leader that can create anchor block, which requires them spend btc eth publish transaction. the core member that creates the anchor block receives block reward, well the tokens paid core for that anchor block. nodes nodes earn tnt mirroring copy the calendar and publishing api endpoint for proof creation and verification. nodes are periodically audited prove they have current copy the calendar that can used verify chainpoint proof. nodes that pass the audit have chance win the reward for that period. periodically, nodes spend tnt send data core for anchoring. each node has local mechanism for constructing merkle trees and generating proofs. sending merkle root upstream, each node can create thousands chainpoint proofs using single anchoring transaction. nodes may charge for generating and verifying proofs. node operators can also build services and charge price that's independent the value tnt. fixed supply tnt will created during token sale using the erc standard. the token sale and our partner commitments guarantee that for the first year, users will able send limited amount data core zero cost. (c) tierion inc, all rights reserved. conclusion the world relies more and more digital data, becomes increasingly important identify the source information and verify its authenticity. this especially pressing for companies regulated industries, such healthcare, insurance, and financial services. these organizations are trusted with safeguarding huge volumes critical data. proving the authenticity information within these industries currently slow, cumbersome, and expensive. the tierion network will fundamentally improve how the world secures and shares data. providing "proof engine" for the internet, everyone will able prove with absolute certainty, when data was created has been modified from its original state. additionally, tierion provides ultra-secure trust anchor that doesn't rely trusted authorities. the vision for the tierion network stretches beyond the initial chainpoint offering. this just the first step longer journey. we're building global network for data verification that operates internet scale. incentives are built into the ecosystem ensure the network's reliability, growth, and development. running node, developers will improve the network's scalability and earn tokens which grant access growing array services. see the tierion network solution the problem trust the internet. the seemingly simple innovation using hypertext link html documents led the creation the world wide web. similarly, linking data the blockchain will create global standard for verifiable data. the implications this seemingly simple innovation could groundbreaking. there fundamental gap the internet's trust infrastructure. the root trust for all systems relies trusted authorities. tierion closes this gap and makes possible create better internet where proof replaces trust the foundation for security. for more information, visit https://tierion.com email info@tierion.com (c) tierion inc, all rights reserved. appendix full chainpoint proof sample this sample for demonstration purposes only. "@context" "https://wid.org/chainpoint/v" "type" "chainpoint" "hash" "daabcbfafdfaddbdcdefbcbc" "hash_id" "b--e--e" "hash_submitted_at" "--t::z" "branches" "label" "cal_anchor_branch" "ops" "l" "b--e--e" "op" "sha-" "l" ":cacfddbfcdaaffcdeffbdeededdebccdf dfcdcfcdabadfcb" "op" "sha-" "l" ":::a.chainpoint.org:cal:" "r" "eeebbeedddcdcabcaface" "op" "sha-" (c) tierion inc, all rights reserved. "anchors" "type" "cal" "anchor_id" "uris" "http://a.chainpoint.org/calendar//hash" "branches" "label" "eth_anchor_branch" "ops" "l" "defecfbcbdcdffcaaedbfecedfd" "op" "sha-" "l" "dbcbebebfacebfaffbea" "op" "sha-" "l" "daabcfdebceddbfcc" "op" "sha-" "anchors" "type" "eth" "anchor_id" "deeccdbefdaeaaededcbbefafbdfba" "uris" "http://a.chainpoint.org/calendar//data" (c) tierion inc, all rights reserved. "label" "btc_anchor_branch" "ops" "l" "cbdbbedbecebefcffecfcfdfccbeaefaf" "op" "sha-" "r" "cbdbbedbecebefcffecfcfdfccbeaefaf" "op" "sha-" "l" "dafeaacebbcbafccabfacbecfaa accdefabbaffbdbbdbeeedfeadca fabcebceebabddbaaeccfbcbbe efcacddffffffffa" "r" "bdeaccfcfdbdaeeecfddeaeac" "op" "sha--x" "l" "cacabbdcafacbadcdaeffcebafeebb" "op" "sha--x" "r" "eeafebbbdadcacbeeaedcd" (c) tierion inc, all rights reserved. "op" "sha--x" "l" "edcaaeecfbaadaaaefc" "op" "sha--x" "l" "acefcefdeffafffe" "op" "sha--x" "l" "fbbbbdaefdcdcdcfaaeebcadea" "op" "sha--x" "l" "fdecffcceefebcecadfdcfdbdaed" "op" "sha--x" "l" "cbdfedcbdccfeffddccfaaacfdd" "op" "sha--x" "l" "acccbfdcccbdfedfefbccdcb" "op" "sha--x" (c) tierion inc, all rights reserved. "l" "cbbabbcddebdcabbaecdcfeefbac" "op" "sha--x" "l" "ffadfbabdbadfeafedebf" "op" "sha--x" "l" "feeadaebdfbcacadeecdc" "op" "sha--x" "l" "dacedcdeceeeafabcabebaebe" "op" "sha--x" "anchors" "type" "btc" "anchor_id" "uris" "http://a.chainpoint.org/calendar//data" (c) tierion inc, all rights reserved. endnotes vaughan. chainpoint: standard blockchain proof protocol, https://medium.com/@waynevaughan/chainpoint-a-standard-blockchain-proof-protocol-defc json for linking data, json-ld https://json-ld.org/ "chainpoint community group", wc, https://www.w.org/community/chainpoint/ web consortium weighs blockchain standards, fedscoop, https://www.fedscoop.com/web-consortium-starts-work-on-blockchain-standards/ nakamoto. bitcoin: peer-to-peer electronic cash system, https://bitcoin.org/bitcoin.pdf. oz. what proof existence?, https://web.archive.org/web//http://www.proofofexistence.com:/about "transaction rate", blockchain.info, https://blockchain.info/charts/transactions-per-second?daysaveragestring=&timespan=all "block timestamp", bitcoin wiki, https://en.bitcoin.it/wiki/block_timestamp "microsoft and tierion collaborate attestations blockchain proofs", microsoft, https://azure.microsoft.com/en-us/blog/blockchain-identity-proofs/ trust anchor, wikipedia https://en.wikipedia.org/wiki/trust_anchor ntp: the network time protocol, ntp.org http://www.ntp.org universally unique identifier (uuid) urn namespace, ietf.org https://www.ietf.org/rfc/rfc.txt chainpoint innovations blockchain timestamp proofs, tierion https://tierion.com/blog/chainpoint-innovations-in-blockchain-timestamp-proofs/ how time-stamp digital document, anf.es https://www.anf.es/pdf/haber_stornetta.pdf nist randomness beacon, nist https://www.nist.gov/programs-projects/nist-randomness-beacon hash calendar, wikipedia, https://en.wikipedia.org/wiki/hash_calendar (c) tierion inc, all rights reserved. cockroachdb, cockroach labs https://www.cockroachlabs.com consul, hashicorp https://www.consul.io vogelsteller, "erc token standard", https://github.com/ethereum/eips/issues/ acknowledgements the development chainpoint has been collaboration many. the authors would like recognize the following individuals for their contributions. zaki manian --co-founder, skuchain zaki helped architect and code chainpoint eder santana developer researcher eder researched competing technologies, helped develop chainpoint and was the primary developer verifai. shawn wilkinson founder ceo, storj shawn made early contributions the first version chainpoint. manu sporny founder and ceo, digital bazaar; creator json-ld manu assisted our team with the use json-ld chainpoint also helped facilitate discussions the chainpoint protocol several industry standards events. christopher allen principal architect, blockstream; co-author ssl/tls christopher runs the excellent rebooting web trust events where chainpoint received peer review. christopher contributed the chainpoint protocol and has been supporter industry standards around chainpoint and similar technologies. ryan shea co-founder ceo blockstack ryan reviewed and contributed the chainpoint protocol. jude nelson engineering partner, blockstack jude reviewed and contributed the chainpoint protocol. paul sztorc economics, bloq paul reviewed and contributed the chainpoint protocol (c) tierion inc, all rights reserved.