loopring: decentralized token exchange protocol daniel wang daniel@loopring.org jay zhou jay@loopring.org alex wang alex@loopring.org matthew finestone matt.finestone@gmail.com https://loopring.org september abstract loopring open protocol for building decentralized exchanges. loopring operates public set smart contracts responsible for trade and settlement, with off-chain group actors aggregating and communicating orders. the protocol free, extensible, and serves standardized building block for decentralized applications (dapps) that incorporate exchange functionality. its interoperable standards facilitate trustless, anonymous trading. important improvement over current decentralized exchange protocols the ability for orders mix-and-matched with other, dissimilar orders, obviating the constraints two-token trading pairs and drastically improving liquidity. loopring also employs unique and robust solution prevent front-running: the unfair attempt submit transactions into block quicker than the original solution provider. loopring blockchain agnostic, and deployable any blockchain with smart contract functionality. the time writing, it's operable ethereum and qtum with neo under construction. introduction fails uphold the virtues these decentralized projects espouse. there are also numerous practical risks and limitations using centralized exchanges which are described below. decentralized exchanges (dexs) have sought address these issues, and many cases have succeeded alleviating security risks using blockchains for disintermediation. however, dex capability becomes crucial infrastructure for the new economy, there substantial room for performance improvement. loopring aims provide modular tools for said infrastructure with its dapp agnostic open protocol. with the proliferation blockchain-based assets, the need exchange these assets amongst counterparties has significantly increased. thousands new tokens are introduced including the tokenization traditional assets this need magnified. whether exchanging tokens for speculative trading motivations, converting access networks via their native utility tokens, the ability exchange one cryptoasset for another foundational for the larger ecosystem. indeed, there potential energy assets [], and realizing this energy unlocking capital requires not only asserting ownership, which blockchains have immutably allowed for, but the ability freely transfer and transform these assets. such, the trustless exchange tokens (value) compelling use case for blockchain technology. until now, however, crypto enthusiasts have largely settled for trading tokens traditional centralized exchanges. the loopring protocol needed because, just bitcoin dutifully emphasized that, regards peer-to-peer electronic cash, "the main benefits are lost trusted third party still required prevent double-spending", too are the main benefits decentralized assets lost they must pass through trusted, gated, centralized exchanges. trading decentralized tokens centralized exchanges doesn't make sense from philosophical perspective, current exchange landscape inadequacies centralized exchanges the three primary risks centralized exchanges are; lack security, lack transparency, and lack liquidity. lack security arises from users typically surrendering control their private-keys (funds) one centralized entity. this exposes users the possibility that centralized exchanges fall prey malicious hackers. the security and hacking risks facing all centralized exchanges are well known [], yet are often accepted "table stakes" for token trading. centralized exchanges continue honeypots for hackers attack their servers have custody over millions inadequacies decentralized exof dollars user funds. exchange developers can also make changes honest, accidental errors with user funds. simply, users are not control their own tokens when deposited decentralized exchanges differ from centralized exchanges part because users maintain control their private-keys centralized exchange. (assets) performing trades directly the underlying lack transparency exposes users the risk blockchain. leveraging the trustless technology crypdishonest exchanges acting unfairly. the distinction here tocurrencies themselves, they successfully mitigate many the exchange operator's malicious intentions, users are the abovementioned risks surrounding security. however, not truly trading their own assets centralized exchanges, problems persist regards performance and structural but rather, iou. when tokens are sent the exchange's limitations. wallet, the exchange takes custody, and offers iou its liquidity often remains issue users must search place. all trades are then effectively between users' ious. for counterparties across disparate liquidity pools and stanto withdraw, users redeem their iou with the exchange, dards. fragmented liquidity effects are present dexs and receive their tokens their external wallet address. dapps large don't employ consistent standards throughout this process there lack transparency, interoperate, and orders are not shared/propagated across and the exchange can shutdown, freeze your account, wide network. the liquidity limit order books, and, bankrupt, etc. also possible that they use user assets specifically, their resiliency how fast filled limit orders for other purposes while custody, such lending them are regenerated can significantly affect optimal trading out third parties. lack transparency can cost users strategies []. the absence such standards has resulted without total loss funds, such higher trading fees, not only reduced liquidity, but also exposure array delays peak demand, regulatory risk, and orders being potentially insecure proprietary smart contracts. front ran. furthermore, since trades are performed chain, dexs inherit the limitations the underlying blockchain, namely: lack liquidity. from the point view exchange scalability, delays execution (mining), and costly modifioperators, fragmented liquidity inhibits entry new excations orders. thus, blockchain order books not scale changes because two winner-takes-all scenarios. first, the particularly well, executing code the blockchain incurs exchange with the greatest number trading pairs wins, cost (gas), making multiple order-cancellation cadences because users find desirable conduct all their trades prohibitively expensive. one exchange. second, the exchange with the largest order finally, because blockchain order books are public, the book wins, because favorable bid-ask spreads for each transaction place order visible miners awaits trading pair. this discourages competition from newcomers being mined into the next block and placed into order because difficult for them build initial liquidity. book. this delay exposes the user the risk being front result, many exchanges command high market share run and having the price execution move against him. despite user complaints and even major hacking incidents. it's worth noting that centralized exchanges win market hybrid solutions share, they become ever-larger hacking target. for the above reasons, purely blockchain-based exchanges have limitations that make them uncompetitive with centralized exchanges. there tradeoff between on-chain inherent trustlessness, and centralized exchange speed and order flexibility. protocols such loopring and extend solution on-chain settlement with off-chain order management. these solutions revolve around open smart contracts, but navigate scalability limitations performing several functions off-chain and giving nodes flexibility fulfilling critical roles for the network. however, drawbacks remain for the hybrid model well []. the loopring protocol proposes meaningful differences our approach hybrid solution throughout this paper. from the point view users, fragmented liquidity significantly reduces user experience. centralized exchange, users are only able trade within the exchange's own liquidity pools, against its own order book, and between its supported token pairs. trade token for token users must exchange that supports both tokens register different exchanges, disclosing personal information. users often need execute preliminary intermediate trades, typically against btc eth, paying bid-ask spreads the process. finally, the order books may not deep enough complete the trade without material slippage. even the exchange purports process large volumes, there guarantee that this volume and liquidity not fake []. the result disconnected silos liquidity and frag- loopring protocol mented ecosystem that resembles the legacy financial system, with significant trading volume centralized few loopring not dex, but modular protocol for building exchanges. the global liquidity promises blockchains hold dexs multiple blockchains. disassemble the compono merit within centralized exchanges. nent parts traditional exchange and offer set public .a. the case fixing token reference, say that alice selling token for the price and bob buying token for the price .b. hence, who's the buyer seller arbitrary. the first situation alice willing pay higher price (.a) than the price bob selling his tokens for order ring (.a), while the second situation bob willing pay loopring orders are expressed what call unidirec- higher price (.b) than the price alice selling her tional order model (udom)[]. udom expresses orders tokens for (.b). clear that trade possible token exchange requests, amounts/amountb, (amount whenever the buyer willing pay equal higher price sell/buy) instead bids and asks. since every order just than the seller's price. exchange rate between two tokens, powerful feature the protocol the mixing and matching multiple orders circular trade. using orders instead single trading pair, there dramatic increase liquidity and thus, for set orders able filled, fully potential for price improvement. partially, need know the product each one the smart contracts and decentralized actors its place. the roles the network include wallets, relays, liquidity-sharing consortium blockchains, order book browsers, ring-miners, and asset tokenization services. before defining each, should first understand loopring orders. order# owner: amounts: amountb: order# owner: amounts: amountb: exchange rates buy orders results number greater equal so, all the orders can either partially, totally filled []. introduce third counterparty, charlie, such that alice wants give token and receive token bob wants give token and receive token and charlie wants give token and receive token the necessary tokens are present, and the trade possible if: order# owner: amounts: amountb: figure order-ring orders the above figure shows order-ring orders. each order's token sell (tokens) another order's token see section for more details about loopring's orders. buy (tokenb). creates loop that allows each order exchange their desired tokens without requiring opposing order for its pair. traditional order pair trades can, ecosystem participants course, still executed, what essentially special case order-ring. the following ecosystem participants jointly provide all functionalities centralized exchange has offer. definition (order-ring) let cn- wallets: common wallet service interface that different tokens, oi-i on-- gives users access their tokens and way send orders. those orders can form order-ring for trading: orders the loopring network. wallets will oi-i on-- incentivized produce orders sharing fees with ring-miners (see section with the belief that the where the length the order-ring, and future trading will take place within the safety mod individual user's wallets, connecting these liquidity pools through our protocol paramount. order-ring valid when all component transactions can executed exchange rate equal better than consortium liquidity sharing blockchain/relaythe original rate specified implicitly the user. verify mesh: relay-mesh network for order liquidity order-ring validity, loopring protocol smart contracts must sharing. when nodes run loopring relay software, receive order-rings from ring-miners where the product they are able join existing network and the original exchange rates all orders equal greater share liquidity with other relays over consortium than blockchain. the consortium blockchain are let's assume alice and bob want trade their token building first implementation has near real time and alice has token and she wants token for order sharing second blocks), and trims old them; bob has token and wants token for them. history allow for faster download new nodes. who buying and who selling? this depends only notably, relays need not join this consortium; they the asset fix give price quotations. token can act alone and not share liquidity with others, or, the reference, then alice buying token for the price they can start and manage their own liquidity sharing .a, while bob selling token for the price network. relays/ring-miners: relays are nodes that receive orders from wallets the relay-mesh, maintain public order books and trade history, and optionally broadcast orders other relays (via any arbitrary off-chain medium) and/or relay-mesh nodes. ringmining feature not requirement relays. computationally heavy and done completely off-chain. call relays with the ring-mining feature turned "ring-miners", who produce order-rings stitching together disparate orders. relays are free how they choose communicate with one another, how they build their order books, and how they mine order-rings (mining algorithms). order books built certain way, such firstcome-first-serve. instead, relays have the power make their own design decisions building their order books. liquidity sharing: relays broadcast the order other relays through any arbitrary communication medium. once again, there flexibility how/whether nodes interact. facilitate certain level network connectivity, there built-in liquidity sharing relaymesh using consortium blockchain. mentioned the prior section, this relay-mesh optimized for speed and inclusivity. loopring protocol smart contracts (lpsc): set public and free smart contracts that checks order-rings received from ring-miners, trustlessly settles and transfers tokens behalf users, incentivizes ring-miners and wallets with fees, and emits events. relays/order browsers listen these events keep their order books and trade history date. see appendix for details. order owner: amounts: amountb: accountx order owner: amounts: amountb: user accounty user accountz relay accountm order owner: amounts: amountb: asset tokenization services (ats): bridge between assets that cannot directly traded loopring. they are centralized services run trustworthy companies organizations. users deposit assets (real, fiat tokens from other chains) and get tokens issued, which can redeemed for the deposit the future. loopring not cross-chain exchange protocol (until suitable solution exists), but ats enable trading erc tokens with physical assets well assets other blockchains. user fee share liquidity settlement relay accountn ring-mining order owner: amounts: amountb: order owner: amounts: amountb: order owner: amounts: amountb: exchange process protocol authorization: figure user who wants exchange tokens authorizes the lpsc handle amounts token the user wants sell. this does not lock the user's tokens, who remains free move them while the order processed. submitring lpsc blockchain figure loopring exchange process order creation: the current rate and order book for token token are provided relays other agents hooked the network, such order book browsers. user places order (limit order) specifying amounts and amountb and other parameters through any integrated wallet interface. amount lrx can added the order fee for ring-miners; higher lrx fee means better chance processed earlier ring-miners. the order's hash signed with user y's private-key. ring-mining (order matching): ring-miners try fill the order fully partially the given exchange rate better matching with multiple other orders. ring-mining the main reason why the protocol able provide high liquidity over any pair. the executed rate better than what user specified, margin shared amongst all orders the order-ring. reward, the ring-miner chooses between claiming part the margin (margin-split, and giving back the lrx the user), simply keeping the lrx fee. order broadcast: the wallet sends the order and its signature one more relays. relays update their public order book. the protocol doesn't require verification settlement: the order-ring received lpsc. makes multiple checks verify the ring-miner supplied data and determines the order-ring can settled fully partially (depending protocol specification the fill rate orders in-ring and tokens users' wallets). all checks are successful, the contract anatomy order atomically transfers the tokens users and pays the ring-miner and wallet fees the same time. user order pack data that describes the intent the y's balance determined the lpsc insufficient, user's trade. loopring order defined using the uniit will considered scaled-down: scaled-down directional order model, udom, follows: order will automatically scale its original size message order sufficient funds are deposited its address, unlike address protocol; cancellation, which one way manual operation address owner; and cannot reversed. address tokens; address tokenb; uint amounts; operational flexibility uint amountb; unit lrcfee it's important note that loopring's open standard allows unit validsince; seconds since epoch participants significant flexibility how they operate. acunit validuntil; seconds since epoch tors are free implement novel business models and provide uint marginsplitpercentage; [-] value for users, earning lrx fees volume other metrics bool buynomorethanamountb; the process (if they choose). the ecosystem modular uint walletid; and meant support participation from multitude dual-authoring address applications. address authaddr; are parts the signature order book uint bytes relays can design their order books any number ways bytes display and match users' orders. first implementation dual-authoring private-key, our own order book follows otc model, where limit not used for calculating order's hash, orders are positioned based price alone. timestamps thus not signed. orders, other words, have bearing the order book. string authkey; however, relay free design their order book such uint nonce; way emulate typical centralized exchange's matching engine, where orders are ranked price, while respecting timestamps well. relay was inclined offer this type ensure the origin the order, signed against order book, they can own/integrate with wallet, and the hash its parameters, excluding authaddr, with the have those wallet orders sent solely the single relay, who user's private-key. the authaddr parameter used for would then able match orders based time. any signing order-rings that this order part of, which prevents such configuration possible. front-running. please reference section for more details. whereas other dex protocols times require relays the signature represented the and fields, and have resources initial token balances place taker sent alongside the order parameters over the network. orders loopring relays need only find matchable orders this guarantees the order stays immutable during its whole consummate trade, and can without initial tokens. lifetime. even though the order never changes, the protocol can still compute its current state based the balance its address along with other variables. udom doesn't include price (which must floatingpoint number nature), but, instead uses the term rate which expressed amounts/amountb. the rate not floating-point number but expression that will only evaluated with other unsigned integers demand, keep all intermediate results unsigned integers and increase calculation accuracy. liquidity sharing relays are free design how they share liquidity (orders) with each other. our consortium blockchain but one solution accomplish this, and the ecosystem free network and communicate they wish. besides joining consortium blockchain, they can build and manage their own, creating rules/incentives they see fit. relays can also work alone, seen the time-sensitive wallet implementation. course, there are clear advantages communicating with buy amounts other relays pursuit network effects, however, different business models could merit peculiar sharing designs and when ring-miner ring-matches orders, it's possible that split fees any number ways. better rate will executable, allowing users get more tokenb than the amountb they specified. however, buynomorethanamountb set true, the protocol ensures users receive more than amountb tokenb. thus, udom's buynomorethantokenb parameter determines when order considered completely filled. buynomorethantokenb applies cap either amounts amountb, and allows users express more granular trade intentions than traditional buy/sell orders. for example: with amounts and amountb the rate thus the user willing sell tokens for each tokenb. the ring-miner matches and finds the user rate allowing the user receive tokenb instead however, the user only wants tokenb and set the buynomorethanamountb flag true, the lpsc performs the transaction rate and the user sells tokens for each tokenb, effectively saving tokens. keep mind this does not take into account mining fees (see section .). indeed, use sub-ring checking this step prevents arbitrageurs from unfairly realizing all the margin order-ring implementing new orders within it. essentially, once valid order-ring found ring-miner, could tempting add other orders the order-ring fully absorb the users' margin (rate discounts). illustrated figure below, carefully calculated and will make the product all orders' rate exactly there will rate discount. order owner: amounts: amountb: order(amounts,tokens, amountb,tokenb, buynomorethantokenb) order owner: amounts: amountb: order owner: amounts: amountb: order owner: addressm amounts: amountb: order owner: amounts: amountb: figure order-ring with sub-ring this zero-risk, zero-value add the network, and considered unfair conduct the ring-miner. prevent represent order simplified form, then for this, loopring requires that valid loop cannot contain any eth/usd markets traditional exchange, traditional sub-rings. check this, the lpsc ensures token cannot buy-sell modeling can express the and the order buy sell position twice. the above diagram, can see that token sell token twice and buy token below, but not the other two: twice, which would disallowed. sell eth price usd/eth. this order can expressed as: order(, eth, usd, false). fill rate checking the exchange rate calculations the order-ring are made ring-miners for reasons stated above. the lpsc that must verify they're correct. first, verifies that the buy rate the ring-miner can execute for each order equal less than the original buy rate set the user. this buy eth price usd/eth, this order can ensures the user gets least the exchange rate they asked expressed as: order(, usd, eth, true). for better the transaction. once the exchange rates are confirmed, the lpsc ensures that each order the spend usd buy many eth possible order-ring shares the same rate discount. for instance, price usd/eth, this order can expressed as: the discounted rate then the price for each order will be: order(, usd, eth, false). g), g), g), and satisfy: sell eth price usd/eth get usd. this order can expressed as: order(, eth, usd, true). ring verification the loopring smart contracts not perform exchange hence: rate amount calculations, but must receive and verify what the ring-miners supply for these values. these calculations are done ring-miners for two main reasons: the transaction crosses orders, the discount is: the programming language for smart contracts, such solidity[] ethereum, does not have support for floating point math, especially pow(x, /n) (calculating the n-th root floating point number), and desirable for where the order turnover rate i-th order. obvithe computation made off-chain reduce blockchain ously, only when the discount rate can these orders computation and cost. filled; and the i-th order (oi )'s actual exchange rate r^i g), r^i during implementation can safely assume any order the order-ring have the lowest value, then iterate through the order-ring most twice calculate each order's fill volume. example: the smallest amount filled compared the original order all the transactions the order-ring are scaled down once the transactions are completed, the order that was considered have the smallest amount remaining filled should completely filled. recall our prior example where alice has token and wants token for them, bob has token and wants token for them. token the reference, then alice buying token for .a, while bob selling token for .a. calculate the discount: thus thus the exchange rate that renders the trade equitable for both parties token per token bob gives token and receives token more than the was expecting for those tokens. alice receives token intended but gives only token exchange, less than the she was willing give for those tokens. note, portion this margin will towards paying fees incentivize miners (and wallets). (see section .). ring settlement the order-ring fulfills all the previous checks, the order-ring can closed, and transactions can made. this means that all orders form closed order-ring, connected figure fill tracking cancellation user can partially fully cancel order sending special transaction the lpsc, containing the details about the order and the amounts cancel. the lpsc takes that into account, stores the amounts cancel, and emits ordercancelled event the network. the lpsc keeps track filled and cancelled amounts storing their values using the order's hash identifier. this data publicly accessible and ordercancelled orderfilled events are emitted when changes. tracking these values critical for the lpsc during the order-ring settlement step. lpsc also supports cancelling all orders for any trading pair with the orderscancelled event and cancelling all orders for address with the allorderscancelled event. figure ring settlement make the transactions, the lpsc uses the tokentransferdelegate smart contract. the introduction such delegate makes upgrading the protocol smart contract easier all orders only need authorize this delegate instead different versions the protocol. for each order the order-ring, payment tokens made the next the previous order depending the implementation. then the ring-miner's fee paid depending the fee model chosen the ring-miner. finally, once all the transactions are made, ringmined event emitted. order scaling orders are scaled according the history filled and cancelled amounts and the current balance the senders' accounts. the process finds the order with the smallest amount filled according the above characteristics and uses reference for scaling all transactions the order-ring. finding the lowest value order can help figure out the fill volume for each order. for instance, the i-th order the lowest value order, then the number tokens sold from each order and number tokens purchased from each order can calculated as: emitted events the protocol emits events that allow relays, order browsers, and other actors receive order book updates efficiently possible. the emitted events are: ordercancelled: specific order has been cancelled. orderscancelled: all orders trading pair from owning address have been cancelled. /ri allorderscancelled: all orders all trading pairs from owning address have been cancelled. /ri /ri ringmined: order-ring has been settled successfully. this event contains data related each innerring token transfer. ... where the balance left after orders are partially filled. lrx token figure loopring's fee model lrx our generalized token notation. lrc the loopring token ethereum, lrq qtum, and lrn neo, etc. other lrx types will introduced the future loopring deployed other public blockchains. where the lrx fee, the margin split, the mining income. max(f, indicated the solid line; the lrx fee for the order the equation max(, that simplifies indicated the gray line. the consequences are: fee model the margin split ring-miners will choose the flat lrx fee and are still incentivized. when user creates order, they specify amount lrx paid the ring-miner fee, conjunction with percentage the margin (marginsplitpercentage) made the order that the ring-miner can claim. this called the margin split. the decision which one choose (fee margin split) left the ring-miner. representation the margin split: the lrx fee the gray line results and the income based general linear model. when the margin split income greater than x(lrx fee), ring-miners choose the margin split and pay lrx the user. additionalbuyamount should noted that the lrx fee non-zero, matter which option the ring-miner chooses, there will always transfer lrx between the ring-miner and the order's sender. either the ring-miner earns the lrx fee, pays the lrx fee back the sender take the margin split. ring-miners will share certain percentage fees with wallets. when user places order through wallet and gets filled, the wallet rewarded with portion the fees margin split. although this modular, and unique business models implementations are possible, our inclination for wallets receive approximately %-% earned fees. wallets represent primary target for loopring protocol integration they have the user base, but little source income. arginsplit orderoriginalbuyamount otalbuyamount orderactualbuyamount argin figure margin split the margin the order-ring too small, ringminer will choose the lrx fee. if, the contrary, the margin substantial enough for the resulting margin split worth much more than the lrx fee, ring-miner will choose the margin split. there another proviso, however: when the ring-miner chooses the margin split, they must pay the user (order creator) fee, which equal the lrx the user would have paid the ring-miner fee. this increases the threshold where the ring-miner will choose the margin split twice the lrx fee the order, increasing the propensity the lrx fee choice. this allows ring-miners receive constant income low margin order-rings for the tradeoff receiving less income higher margin orderrings. our fee model based the expectation that the market grows and matures, there will fewer high margin order-rings, thus necessitating fixed lrx fees incentive. end with the following graph: its root, the loopring protocol social protocol the sense that relies coordination amongst members operate effectively towards goal. this not dissimilar cryptoeconomic protocols large, and indeed, its usefulness largely protected the same mechanisms coordination problems [], grim trigger equilibrium, and bounded rationality. this end, lrx tokens are not only used pay fees, but also align the financial incentives the various network participants. such alignment necessary for broad adoption any protocol, but particularly acute for exchange protocols, given that success rests largely improving liquidity robust decentralized ecosystem. lrx tokens will used effectuate protocol updates through decentralized governance. smart contract updates will, part, governed token holders ensure continuity and safety, and attenuate the risks siphoned liquidity through incompatibility. given that smart contracts cannot altered once deployed, there risk that dapps end users continue interact with deprecated versions and preclude themselves from updated contracts. upgradeability crucial the protocol's success must adapt market demands and the underlying blockchains. expectedm iningincome decentralized governance decentralized governance lrx stakeholders will allow for protocol smart contract updates without disrupting dapps end users, relying too heavily smart contract abstraction. lrx tokens have fixed supply, and the case lrc, certain percentages are frozen from the loopring foundation, and allocated community-purposed funds []. however, lrx token owners are not the only stakeholders consider steering the protocol's direction: relays/ringminers, wallets, developers, and others are integral part the ecosystem and their voice must heard. fact, given that these agents need not hold any lrx perform their respective roles (since traditional makers/takers and market-makers are nonexistent, initial token reserves are not mandatory) must allow alternative methods for their interests respected. furthermore, "simple" tokenbased voting, both on-chain and off, imperfect salve for disagreement, low voter turnout and token ownership concentration pose risks. thus, the goal implement governance model that built layers, and rests shared knowledge that some set decision-making processes the norm. this can facilitated coordination institutions that offer signals from diverse set participants, and, perhaps, from pre-established protocol focal points. this comes fruition, the loopring foundation will inevitably evolve from protocol developers into protocol stewards. dual authoring process: for each order, the wallet software will generate random public-key/private-key pair, and put the key pair into the order's json snippet. (an alternative use the address derived from the public-key instead the public-key itself reduce byte size. use authaddr represent such address, and authkey represent authaddr's matching private-key). compute the order's hash with all fields the order except and authkey), and sign the hash using the owner's private-key (not authkey). the wallet will send the order together with the authkey relays for ring-mining. ring-miners will verify that authkey and authaddr are correctly paired and the order's signature valid with respect owner address. when order-ring identified, the ring-miner will use each order's authkey sign the ring's hash, mineraddress, and all the mining parameters. order-ring contains orders, there will signatures the authkeys. call these signatures the authsignatures. the ring-miner may also need sign the ring's hash together with all mining parameters using mineraddress's private-key. fraud and attack protections the ring-miner calls the submitring function with all the parameters, well all the extra authsignatures. notice that authkeys are not part the on-chain transaction and thus remain unknown parties other than the ring-miner itself. front-running prevention decentralized exchanges, front-running when someone tries copy another node's trade solution, and have mined before the original transaction that the pending transaction pool (mempool). this can achieved specifying higher transaction fee (gas price). the major scheme front-running loopring (and any protocol for order-matching) are order-filch: when front-runner steals one more orders from pending order-ring settlement transaction; and, specific loopring: when front-runner steals the entire order-ring from pending transaction. when submitring transaction not confirmed and still the pending transaction pool, anyone can easily spot such transaction and replace mineraddress with their own address (the filcheraddress), then they can resign the payload with filcheraddress replace the orderring's signature. the filcher can set higher gas price and submit new transaction hoping block-miners will pick his new transaction into the next block instead the original submitring transaction. previous solutions this problem had important downsides: requiring more transactions and thus costing ringminers more gas; and taking least twice the blocks settle order-ring. our new solution, dual authoring[], involves the mechanism setting two levels authorization for orders one for settlement, and one for ring-mining. the loopring authsignature each order, authsignature protocol will now verify each against the corresponding authaddr and reject the order-ring any missing invalid. the result that now: the order's signature (by the private-key the owner address) guarantees the order cannot modified, including the authaddr. the ring-miner's signature (by the private-key the mineraddress), supplied, guarantees nobody can use his identity mine order-ring. the authsignatures guarantees the entire order-ring cannot modified, including mineraddress, and orders can stolen. dual authoring prevents ring-filch and order-filch while still ensuring the settlement order-rings can done one single transaction. addition, dual authoring opens doors for relays share orders two ways: nonmatchable sharing and matchable sharing. default, loopring operates otc model and only supports limitprice orders, meaning that orders' timestamps are ignored. this implies that front-running trade has impact the actual price that trade, but does impact whether gets executed not. free, public smart contracts enable any dapp build interact with the protocol. standardization among operators allows for network effects and improved end user experience. network maintained with flexibility running order books and communicating. other attacks reduced barriers entry means lower costs for nodes joining the network and end users. sybil dos attack malicious users acting themselves forged identities anonymous trading directly from user wallets. could send large amount small orders attack loopring nodes. however, since allow nodes reject orders based their own criteria which they may hide reveal most acknowledgements these orders will rejected for not yielding satisfying profit when matched. empowering relays dictate how would like express our gratitude our mentors, they manage orders, not see massive tiny order advisers and the many people the community that attack threat. have been welcoming and generous with their knowledge. particular, would like thank shuo bai (from insufficient balance chinaledger); professor haibin kan; alex cheng, hongfei da; yin cao; xiaochuan wu; zhen wang, wei yu, nian malicious users could sign and spread orders whose order duan, jun xiao, jiang qian, jiangxu xiang, yipeng guo, value non-zero but whose address actually has zero dahai li, kelvin long, huaxia xia, jun ma, and encephalo balance. nodes could monitor and notice that some orders path for reviewing and providing feedback this project. actual balance zero, update these order states accordingly and then discard them. nodes must spend time update the status order, but can also choose minimize the effort by, for example, blacklisting addresses and dropping related orders. appendices appendix summary the loopring protocol sets out foundational layer for decentralized exchange. doing, has profound repurcussions how people exchange assets and value. money, intermediate commodity, facilitates replaces barter exchange and solves the double coincidence wants problem [], whereby two counterparties must desire each other's distinct good service. similarly, loopring protocol aims dispense our dependencies coincidence wants trading pairs, using ring matching more easily consummate trades. this meaningful for how society and markets exchange tokens, traditional assets, and beyond. indeed, just decentralized cryptocurrencies pose threat nation's control over money, combinatorial protocol that can match traders (consumers/producers) scale, theoretical threat the concept money itself. protocol benefits include: new fee model loopring one the most exciting developments has been reimagining the protocol fee model, the role our native token, lrc, within it, and how can ensure token holders capture the value the loopring network. why were open change utility tokens that act medium exchange within particular ecosystem have been popular terms projects issuing them, but, more recently, less popular terms expected value capture and actual usefulness. beyond the questionable value accretion for these types utility tokens, the imposition specific token the means payment creates significant friction. dapps, including dexs, are currently un-friendly enough without requiring users pay with esoteric and otherwise nondemanded token. abstracting away token transfer behind off-chain order management and on-chain settlement the scenes helps, but still only half-solution. means sacrifice performance for security. open financial infrastructure its infancy, and what was considered best practice last year will certainly change. greater liquidity due ring-mining and order sharing. projects, protocols, and builders must remain adaptive and dual authoring solves the pernicious problem front open tweak their token dynamics, lest they stubbornly running faced all dexs and their users today. cling suboptimal models. objectives tokens will configurable lrc token holders governing the protocol. for now, propose the following: knew wanted to: make fee payment more flexible: remove the friction requiring specific fee-payment token. ensure the lrc token coveted and provides real utility the network. remain rent-free, with all benefits remaining inprotocol, accruing every participant. figure default settings, but will configurable. realize that while incentives are the most powerful force allow rational actors organize themselves, mechnow, user can pay fees any token, but there will anisms which optimize for the desired network behavours preferable treatment, and thus lower cost, pay fees are valuable. lrc. the preferable treatment for the fee-earning participants: wallets and relays; the fee the trader the same. introducing the lrc burn rate however, our reasonable assumption that wallets and with this mind, have introduced fee element, lrc relays will pass-upwards the fee (dis)savings, and calculate burn rate (or burn rate). wallets and ring-miners who different fees for payment different tokens. earn fees fulfilling roles the loopring protocol will have portion their fees converted into lrc (if not lrc already) and burned. other projects burning lrc the example below, the user pays for their trading fees using bnb. does not matter the trade actually want other protocols and projects able take involves bnb not. lets assume the protocol-defined advantage the fee model. such, possible for lrc burn rate for the bnb token and the fee for third-party project burn certain amount lrc the transaction bnb. settlement, the trader pays knock down the burn rates applied their token bnb and the wallet and relay earn *(%)=bnb, when users pay fees it. the exact burn rate schedule with the bnb being sent smart contract tbd, and again, will ultimately configurable. which buys and burns lrc. you want lower the rate certain token, such gto, the same third tier burn rate weth for months, you may need burn the total lrc supply (currently equivalent usd); you want lower the burn rate the first tierlrcs burn rate for months, may necessary burn the total lrc. more lrc are burned, the total lrc supply will decrease, and the number lrc that need burned switch tiers will decrease accordingly. lowering the burn rate particularly appealing for other decentralized exchanges that use their own platform payment tokens: the cost burning lrc obtain lower rate much less than the cost developing new dex/protocol, bootstrapping liquidity. figure fee model loopring protocol this mechanism actually gives the respective dex token increased utility and value. burn rate settings the above fee were paid lrc instead bnb, for example, the burn rate would lower, such allowing the wallet and ring-miner keep more their earned fees. the burn rate associated with different erc after the third-party dex platform token enabled for lower burn rate, using that token pay fees different the user than using lrc, which should enhance the competitiveness the platform. normal orders distinguish between normal ordersas seen all the examples aboveand orders. definition (pp order) the orders tokensfeepercentageor tokenbfeepercentage greater than zero, the order order. other fee parameters the order will ignored the protocol. figure two orders zero-fee orders normal order parameters: however, the wallets corresponding the two orders are set charge different tokensfeepercentage address feetoken: optional and defaults lrc tokenbfeepercentage, the actual fee and transaction token address not specified. this the type calculation more complicated: erc token paid the miner matching fees. unit feeamount: optional and defaults this the amount feetoken paid. this number should calculated the wallet software off-chain. uint feepercentage: optional and defaults this the percentage tokenb (token that user buying) paid matching fees the order does not have enough feetoken pay. this parameter should also supplied the wallet. uint waivefeepercentage: optional and defaults this number positive, the miner will waive waivefeepercentage% percentage the fees before the burn; this number negative, the miner will reward-waivefeepercentage%of its total fee after the burn the orderthe reward also subject burn. order parameters: uint tokensfeepercentage: optional and defaults the percentage tokens charge the wallet. figure two orders consisting orders with commissions uint tokenbfeepercentage: optional and defaults the percentage tokenb charge the wallet. there are many instances the real world that will make normal order what most are used to: submit use orders and not require third-party matching: order dex and leave them match and settle the ethereum blockchain. the backend, ring-miner you create order for anytokens for weth the one finding the match and submitting it, and that your loopring-enabled wallet, and show the code why you pay them fee the first place. your friend. she scans from her wallet, signs it, orders not pay matching fees, because they and submits directly the ethereum blockchain not want matched third party (ring-miner), one tap, resulting trustless token swap. your but want match themselves with counter-party. thus, friend was the ring-miner here, because she submitted the fees for orders are paid only the wallet. the transaction. however, the wallet here broader concept, including youre launching your ico and plan distribute any tools that can help you generate orders. fee, submitting sell orders for your newtoken the wallet can obtain percentage the purchase token loopring-built dex. you send this order out emails (tokenb) and the sell token (tokens) from order. your subscribers, put the code printed the this percentage set the wallet, approved the user, back your teams t-shirts. any interested buyer can and not provided the protocol itself. fill these orders with loopring-enabled wallet, and lets assume that both fees set wallet are act ring-miner submitting transaction the example below, two orders are swapped between the ethereum blockchain. dai and gto: the ico example, the wallet/ico platform can charge the project fees for this service few different ways: use newtokens income. for example, for every newtokens sold, newtokens are charged from the project side handling fee (the project party distributes total tokens, the buyer buys tokens); every newtokens sold, are charged from the buyer (the project party distributes total tokens and the buyer receives tokens). use eth income. for example, there are eth received from ico buyers, eth will charged from the project side (the project party will get eth); the eth will charged from the user (the user actually needs pay eth). any combination the above four different methods. without the new model these scenarios cannot achieved. fee burn rate for orders, the protocol specifies different burn rates. assuming that the burn rates for dai and gto are and respectively, the transaction calculations need adjusted follows: you may have few questions: (q) who burns the lrc tokens? given that the loopring foundation non-profit and ultimately wants take backseat the protocol flourishes, the burning smart contract (aka holding smart contract) will coded allow any user (willing pay the small gas cost trigger the function) burn the tokens. (q) what happens the non-lrc (weth, bnb, etc) that are sent the burning smart contract? like the burn rates, this will ultimately configurable. lrc holders may inclined send the tokens some external address fund community project, but for now, they will used buy and burn more lrc. the means which non-lrc tokens will sold for lrc quite interesting topic, and highlights the spirit open financial infrastructure. will allow anyone (willing pay the gas cost) trigger functionality the smart contract that queries other dexsspecifically dutch auction modelsfor any tokens price lrc, and submits the tokens sold the open market. this allows the burning contract trustlessly sell our non-lrc tokens discrete times, all once. the purchased lrc will then burned. this has the effect of: increasing lrc demand. reducing lrc supply. lrc lockup for fee rebates loopring also allows lrc token holders lock lrc smart contract exchange for percentage fees that would have otherwise been burnedeffectively, rebate. this would apply for each and every order during the lockup period. for example, order has total fee anytoken, and anytoken (%) burned. assuming the fee payer locked million lrc and has rebate rate, he/she will ended paying only anytoken, which will burned. the rebate comes from the fee component that burned, not the wallet relay income. please also note that wallet/relay can also lockup lrc for rebates, but that doesnt apply here. rebate rate ensures all orders are burnfree. the fee-rebate feature will very helpful for high frequency traders. figure fee burn rates. see the table the 'burn rate setting' section above for default burn rates. burn contract specifications with the new fee model, small piece every transaction will directed this smart contract and ultimately reduce lrc supply. such, more loopring network activity results more burn, and incentivize market makers lrc holders owning larger share the token supply. market making not protocol level consideration, but now, have economy where lrc holders: business decision made ring-miner their own. them incentivize market makers pay the lowest fees for their transactions. waiving fees for orders, introduce the parameter benefit from all network-wide activity. waivefeepercentage. this parameter positive, say, then the original decentralized governance fee paid the ring-miner bnb, now becomes bnb, please note that addition its utility, weve always before the burn. the waived fee applied the ring-miners planned giving lrc holders governance rights. while part the fee, but not the wallets. this easy say, and just about every project can throw that catchall, well-defined rights are truly important the loopring foundation will cede control. however, isolation, find pure-governance token lacking, and are excited reveal our model which supports further utility and value capture. with that said, there now more govern within the protocol itself. important future governance issues the loopring protocol will mainly relate the various burn rate parameters, and which ercs should placed certain tiers. decentralized governance incredibly difficult and nuanced, and faces risks like plutocracies and voter apathy. are currently exploring this aspect and hope provide upgraded version the first half allowing community parameter proposal and voting. references figure waiving fee for market maker alice this waivefeepercentage parameter can also negative. were -%, the order does not pay any fees the relayer, but can also get the fee other orders pay the ring. for example, the below diagram, the ring-miner will pay alice half the lrc fee paid bob. alices rebates are also subject the corresponding burn. vitalik buterin. ethereum: next generation smart contract and decentralized application platform (). url {http://ethereum. org/ethereum. html}, gavin wood. ethereum: secure decentralised generalised transaction ledger. ethereum project yellow paper, patrick dai, neil mahi, jordan earls, and alex norta. smart-contract value-transfer protocols distributed mobile application platform. url: https://qtum. org/uploads/files/ cfdcaddbccff. pdf, viktor atterlonn. distributed ledger for gamification pro-bono time, hernando soto. the mystery capital. basic books, satoshi nakamoto. bitcoin: peer-to-peer electronic cash system. fabian schuh and daniel larimer. bitshares financial smart contract platform, bancor protocol. url https://bancor.network/, figure giving fee rebate market maker alice yaron velner loi luu. kybernetwork: trustless decentralized exchange and payment service. https://kr.kyber.network/assets/ kybernetworkwhitepaper.pdf, accessed: --. with this functionality, the relay can choose exempt some all the fees market makers order, and even pay part the fees earned other orders. market makers fortune. how steal million will incentivized provide liquidity generous and cryptocurrency. http://fortune.com/// prosperous ring-miners. /coincheck-hack-how, accessed: --. robert mcmillan. the inside story mt. gox, bitcoins dollar million disaster. supersimmetry-loopring-remark.pdf, --. accessed: sylvain ribes. chasing fake volume: crypto-plague. fabian vogelsteller. erc: token standard. url https://medium.com/@sylvainartplayribes/ https://github.com /ethereum /eips /issues chasing-fake-volume-a-crypto-plague-eaacebe, chris dannen. introducing ethereum and solidity. accessed: --. springer, rossella agliardi and ramazan genay. hedging through limit order book with varying liquidity. vitalik buterin. notes blockchain governance. https://vitalik.ca/general//// will warren and amir bandeali. open protocol voting.html, accessed: --. for decentralized exchange the ethereum blockchain, loopring foundation. lrc token documents. https://docs.loopring.org/english/token/, iddo bentov and lorenz breidenbach. the cost accessed: --. decentralization. http://hackingdistributed.com/ ///cost-of-decent/, accessed: --. daniel wang. coinport's implemenation udom. https://github.com/dong/backcore/blob/ master/coinex/coinex-backend/src/main/scala/ com/coinport/coinex/markets/marketmanager. scala, accessed: --. supersymmetry. remarks https://docs.loopring.org/pdf/ daniel wang. dual authoring looprings solution front-running. url https://medium.com/loopringprotocol/dual-authoring-looprings-solution-to-frontrunning-dfccef, nick szabo. menger money: right and wrong. http://unenumerated.blogspot.ca/// loopring. menger-on-money-right-and-wrong.html, accessed: --.