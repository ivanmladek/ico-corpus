with the advent blockchain technology the early the world has been watching, excited see what becomes it. most notably bitcoin has captured everyone's attention being currency that operates the blockchain but other communities have sprung its wake. while bitcoin serves its own purpose, the core technology the blockchain can extended more secure and advanced. that's where digitalnote comes in. digitalnote robust proof-of-work/proof-of-stake hybrid blockchain with instant untraceable transactions and highly secure encrypted messaging features its core. innovative and forward-thinking, the network resistant the attacks that plague other cryptocurrencies (via its vrx technology) and mobile-ready with lightweight wallet functionality. digitalnote decentralized and competitive with masternode network that enhances untraceability and provides incentive for users secure the network, while enabling instant private transactions and messaging that are impossible trace censor. miners and stakers are encouraged participate via network fee payouts, causing consistent block generation and ensuring lightning fast network overall. this document intended describe detail the different systems that the digitalnote project employs and how they operate unison provide the end user any community seamless and intuitive experience. supply cap: ,,, xdn consensus: proof-of-work proof-of-stake pow algorithm: bmw (wish) asic resistant pos algorithm: echo asic resistant block time target: minutes minimum enforced block spacing: seconds maximum block spacing (soft limit): minutes confirmations required spend: masternode collateral: xdn block reward: xdn (pow pos dev allocation) block reward split: xdn pow pos see-saw, xdn dev allocation difficulty retarget: vrx hybrid chain swing codebase origins: btc reference source custom xdn features (dynamic max-block sizes, mn/network payout see-saw, dev allocation, velocity blockchain constraint system) dash features (darksend, instanttx, messaging, masternodes) masternode swing base: xdn/block masternode swing peak: xdn/block network swing base: xdn/block network swing peak: xdn/block emissions swing: incremental step: step interval: blocks step per interval: step steps per swing: steps (up down) epoch (see-saw finish): intervals upswing duration: intervals downswing duration: intervals idle duration: intervals (no adjustment) supply cap: the maximum coin supply estimated reached years after launch around with variance depending how many coins are burned after the swap period ends. once the maximum coin supply reached, the xdn system will only pay network fees the participants the blockchain's emissions ensuring exact cap billion xdn ever exist. coin burn: users have about months swap their xdn from the old codebase the current one. funds that have not been swapped from the old codebase within the swap period will "burned", thus lowering the circulating supply xdn. reserve blocks: initially the digitalnote team mined what are known "reserve blocks" order generate the proper amount coins needed for the swap from the old xdn codebase the current one (specifically xdn per block for blocks -). doing users are able retain their balance from the previous blockchain project and move onto more secure and stable codebase. small portion this was saved into digitalnote project fund order complete the xdn upgrade successfully, ensure future exchange listings and allow for future expansions and features. block reward split: portion the network paid emissions (xdn/block) sent developer team address support digitalnote team members directly that they may continue development and compensated for their work. "pp encrypted messages are completely anonymous, private and uncensorable." approaching the secure/private messaging system daunting task there are many implementation references floating and many schools thought proper implementation and functionality this sort feature. for the digitalnote system went with simplicity and effectiveness using dash reference private message system, which will soon reincorporate the legacy xdn self-destruct feature, allowing users force their messages become deleted from both the sender and recipient's history and data all together. addition this the xdn method relays messages directly using (peer-to-peer) protocol first sending the message data through encryption method, much like how blocks are encrypted the blockchain itself, and then relaying them through the protocol. the recipient then decrypts the message locally through the wallet/client and able then read and/or reply the message. the system very flexible and allows for further feature updates such aliases and account registration the network the user opts. there "middle-man" third party any part the function the private messaging there nothing intercept risk when relaying message another party. only the sender and the recipient using the proper authentication keys can access the messages and once again they are self-destructing then designated period time the message will eventually erase itself and cease ever exist entirely. encryption keys used either the sender recipient are stored encrypted file just like the main wallet data file and require the wallet/client properly load and unlock these keys using the appropriate data file. further security such passcode lock and unlock the messaging functionality order protect from possible equipment compromise other emergency situations are also reality being able plug right into this system further improving user security and privacy with this system. either data file goes missing from the messaging system will automatically recreated however the new one will blank thus either erasing all previous normal messages (not including self-destructed messages) even rendering that receiving address/key lost forever and inaccessible any party. storing and backing this would course wise decision however for utmost security and privacy this system operates such manner. general this powerful and adaptive system that great solution many shortcomings the way currently communicate the world. "the network combines its legacy cryptonote ring signature obfuscation with coin mixing." obfuscating and overall concealing transaction source and destination has always been big aspect blockchain technology for quite some time now. from cryptonote codebases which are designed solely for this type method but execute poorly such projects dash and pivx name couple that have provided attempts creating solution this. digitalnote's execution this type feature utilize dash's protocol and improve upon from there similarly the previously discussed messaging feature. the reason behind this that overall the system good base point. works first having "pool" available denominated coins that users have configured using their wallets and are shuffled around order conceal their original source. next when user utilizes the feature the transaction undergoes what's known mixing. mixing then does the name suggests and mixes the transaction through the masternode system utilizing denominated coins thus making tracking either difficult near impossible. this method course not perfect very determined individual entity could, using custom software and advanced systems, able track through the mixing process and eventually find where the transaction was either sent from despite using this type feature. solution this incorporate the way that cryptonote codebases had done utilizing ring signatures properly obfuscate the transaction further beyond what conventional mixing and denominated coin balances can do. putting these two systems together xdn will effectively create "best both worlds" scenario where the transaction cannot tracked any party matter how determined they are. both recipient and sender remain anonymous and unknown. course the user desires they may send "clearnet" transaction which case the transaction not put through such rigorous and complex process but instead simply relayed directly across the network. legacy cryptonote ring signatures for obfuscation will reincorporated and combined with coin mixing soon. that being said xdn's standard method sending through the dark anonymous sending rather than clearnet that has been the project's main aspiration since its inception. going beyond just security and privacy for the senders this solution also provides hands off approach for the operators masternodes even the controlling party the project one has the encryption keys for any user and they are never stored any system other than the user's own. making this secure, private, robust and simply fantastic solution currently lacking implementations. "digitalnote takes proactive approach attacks, eliminating them" attack refers attack blockchain group miners controlling more than the network's mining hashrate. the attackers could then prevent new transactions from confirming and reverse transactions that were completed during the attack, allowing them halt payments the network and attempt double-spends. the past attack was considered more hypothetical attack, but the popularity and wealth cryptocurrencies has made this type attack serious reality for all cryptocurrencies that not actively develop systems fend them off. there are various ways combat attacks and the digitalnote network deploys multiple strategies together help ensure the security the protocol. the first quality the network that protects from attacks the fact that digitalnote secured proof-of-work and also proof-of-stake. that means that the very nature this setup, not only must attacker have the hashrate but they must also have the total amount coins able attempt such attack. while that highly unlikely itself, there also another set systems that adds additional layer security verses attacks. terminal velocity ratex (vrx v.) balances the difficulty levels the network that neither proof-of-work miners nor proof-of-stake users have advantage over the other. this system ensures that neither block type can overpower the other and both miners and stakers can benefit the blockchain equally, eliminating either potential attack vector. vrx also ensures narrow window around the desired block target (while still allowing for some variance) via it's velocity blockchain constraint system, essentially eliminating timestamp attacks. learn more about the digitalnote vrx difficulty retargeting algorithm please read the detailed technical section dedicated it. many other coins (including bitcoin ethereum) are open attacks. digitalnote takes proactive approach, eliminating them. the wallet also verifies the entire incoming block before ever storing your disk, checking the stake difficulty and other parameters make sure that attack impossible. "masternodes enhance untraceability and provide incentive for users secure the network." masternodes are essentially service handlers that process additional feature data for the blockchain without compromising security forcing verified collateral lock specific amount xdn coins run/operate. the lock verified the masternode launching protocol and then the masternode registered the network and begins relaying data. this system ensures that the security and flexibility the digitalnote project and blockchains general not lost once again strengthening the overall network. the way masternode functions having participant register themselves the network additional data processor allowing them store/relay additional data that then used provide additional chain features such instantx and darksend. similarly the standard transaction protocol, masternode requires persistent internet connection and penalizes any participant that consistently disconnects avoid inconsistent connections any possible hang-ups service provided end users. the longer that user participates the system the higher their chance become being part the compensated masternodes which are automatically voted the network depending reliability and data processed. participating user must then also lock the specific collateral amount, mentioned previously the rewards and consensus section, which will effectively become frozen the participant will longer able use them any way until they are unlocked from the masternode and doing have the balance act held collateral while the masternode owner compensated periodically for the data processed their masternode. course the payouts are not consistent and users should not expect reward every block the network will not always selecting the same masternode winner. users may also force unlock their locked collateral amount instantly unregistering their activated masternode from the network. more proper method would for the user simply, using the system interface rpc commands, first turn off their masternode and then wait short while for the network unregister normally and then unlock their coins. locked balance will not able find the next block the chain however any coins generated the network then taken and portion sent the winning masternode vote. winning determined many factors that the chain automatically votes such network latency, time online, data processed, and on. voting the network this manner crucial ensuring the most helpful and critical masternodes are rewarded first and more often than ones that not provide good, reliable service. the network payout split the miner/staker and the winning masternode swings between which dominantly receiving rewards using mathematical seesaw which calculates swinging curve both and then back down what's called cycle. two cycles are then called epoch which counts completed seesaw between dominant network payout. epochs then infinitely repeat predefined intervals allowing the chain forever have this smooth fluctuating payout scheme. this "seesaw" designed generate both holder and mining/staking interest the network swings between which being compensated more and overall keeping things interesting opposed static reward system. the system also prevents possible abuse payout types leveling the field between the two receiving parties. aiming more dynamic not only can further user interest stimulated but also level security added and sense balance between network participants "the xdn pow/pos hybrid system makes the network secure." digitalnote uses proof-of-work/proof-of-stake (pow/pos) hybrid blockchain which directly affects how the system handles block production and stimulates interest doing while bolstering security and the protection from attack which still haunts many current projects. proof-of-work (pow) it's often referred to, the most notable consensus method it's also the most common among blockchain projects since its use bitcoin. pow functions having participants contribute computing power form known "hash" "hashing" reference the process creating block the blockchain. participants are rewarded for correctly submitted blocks that are accepted the blockchain/network and then confirmed the block ages ensuring subsequent generation (mining) future blocks keeping participants interested. furthermore multiple participants typically pool together their resources using "mining pool", opposed normally competing against each other, service allowing even those with little computing power able receive compensation for what they provide rather than attempting beat entity with considerably more hashing power. this distribution method falls short perfect though possible attack the blockchain controlling what information the blocks being mined and submitted. these are known "bad blocks" which are blocks with invalid information that would normally not accepted even possibly splitting the blockchain into two versions itself (forking) that then compete for network validity and acceptance when entity has the ability compute with massive amounts power that the majority not have access to. proof-of-stake (pos) for short newer method block generation, however arguably one the more secure methods distribution though not readily available newcomers just climbing board community/project. this because pos uses the coins that participant owns and holding generate block, thus owning more coins and staking them provides the participant with higher possibility generating the next block. staking the act allowing one's wallet/client remain online order support the network having randomly selected coins become temporarily unavailable while the wallet/client forges block and then compensates the participant with earned interest the coins used. the longer one has owned their coins the more "weight" they accumulate and the higher their chances forging the next block, once the block found the coin's weight reset allow for other participants chance also mining block. this method considered more secure properly distributed the participants will invalidate most any form attack that abuses hashing power order gain control blockchain, however one must first obtain coins order stake which depending their worth can costly and overall deterrent the project this the only method available. pow/pos hybrid, known typically just "hybrid" distribution method, shuffles both pow and pos together onto singular blockchain. hybrid systems are still relatively new, few blockchains employ robust enough difficulty algorithm which adjusts the time span between generated blocks for either pow pos and this case both unison. custom difficulty retarget algorithm known "vrx" was created for digitalnote order allow for proper shuffling generated block types within full hybrid blockchain. doing the security digitalnote substantially increased pow and pos complement each other's shortcomings, allowing the blockchain significant edge over one operating singularly particular method, almost completely negating the possibility attack. "vrx balances pow and pos while also securing the network against attacks." vrx terminal velocity ratex blockchain difficulty retarget system that, using several block depth scan, quickly adapts the implemented blockchain/altcoin's mining staking difficulty levels ensure narrow window around the desired block time. allowing course for some inconsistencies block spacing due significant increases decreases hashrate/staking depending whether the blockchain proof-of-work based, proof-of-stake hybrid, the vrx system ensures that blocks are generated consistently even pace. furthermore for hybrid blockchains the blocks are properly shuffled ratio allowing both consensus types even chance. simply put vrx indexes previous set amount blocks (typical reference implementations are set the previous six blocks) and then compares each them against one another relation their block times thus determining set spacing between those blocks. the system then takes the determined block spacing and compares against desired block spacing what called "check round". this check round similar the other retarget systems available but adjusts different curve which adapts quickly large changes the hashrate the blockchain, also making sure not adjust too much not "stall" the blockchain. there one check round per pair blocks indexed using six block count index depth vrx will yield five check rounds. after vrx runs through its checks then determines whether should change the difficulty either down depending whether the desired block time was overshot rushed, the severity which limited maximum doubling the previous block difficulty halving it. finally average calculated between the different pair difficulty changes that the most logical change difficulty occurs that best suits the blockchain and then logged the digitalnote system. late versions the vrx systems (such the one used) feature unique pow/pos difficulty swing which hybrid systems skew the difficulty curve favor the less often found block type. doing ensures that neither one block type can win out over the other one and both miners and stakers can benefit the blockchain equally. vrx was designed directly interact with digitalnote' velocity block constraint system, which discussed greater length the next section. this because other difficulty retarget method was compatible with since the block difficulty plays important role within the velocity system itself. overall this document's intention provide general understanding what vrx and what does. this vrx system will continue evolve become more robust and overall effective solution the blockchain difficulty retarget problem. velocity blockchain constraint system velocity tertiary blockchain constraint system designed ensure stringent block checks and parameter enforcement. this system was designed modular/scalable framework and over the years its use has been expanded include other check types along with being planned for considerate new check implementation. showing its usefulness now several different blockchain implementations velocity looking promising blockchain feature. the key importance velocity constrain the chain with the parameters already defined within the code opposed having aspects such block spacing and other properties act almost suggestion the chain's operation rather than rule and law speak. this very important the sense that sudden increase hashrate possible attacks are still vulnerability despite the best retarget systems out there being implemented control block spacing along with network fees, possible invalid balance issues while sending transactions and other portions the blockchain that are enforced with double check but still susceptible attack whether temporary double spend that confirmed and causes users the network grief and loss which unacceptable. this done the velocity system being "triple check", even after block during generation has seemingly met all requirements and then produced now longer immediately accepted. instead checked again for inconsistencies and possible other exploits. most notably users will see rejected blocks during the mining minting phase (or both depending coin properties), despite the tendency assume that there something wrong with the chain rejecting blocks this fact completely normal and welcomed operation. reasoning that rapid block times, incorrect fees, insufficient balance, faked/altered timestamps, altered inputs/outputs and other issues can manipulated talented programmer with malicious intent. guard from these kinds situations velocity checks the generated block against the chain parameters, first velocity checks the block for proper spacing, the block was generated too quickly thus has not met one the main parameters for the chain and promptly rejected, staving off possible attacks and any kind sudden increase hashrate. additionally verifying block spacing velocity also checks both block timestamp and block transaction timestamp against previously indexed values order verify the legitimacy the timestamp within block. this done least couple blocks more deep ensure timestamp attacks are negated. next the system verifies that previously the client that sent transaction (if sent one the previous block) was fact valid transaction comparing previous balance current balance along with fees paid minimum fee required pay. any these parameters are not met (mind you these are standard chain parameters and nothing outlandish) then the block again rejected despite being generated successfully. thus this system secures the chain, making more stable, predictable, and overall reliable, instilling confidence that the blocks that are accepted are indeed blocks that are proper. currently the biggest shortcoming that this feature still prototype system and such doesn't intuitively integrate into every blockchain flawlessly. some can experience issues such minimum spaced blocks with either min-diff near min-diff being used which not optimal operation any sort. next the transaction verification and previous balance checks are currently turned off until such time the checks become flawless, the implementation for these specific checks are still being developed properly assertain those sections chain parameters. hybrid blockchains require more intuitive difficulty retarget approach reduce rejected blocks and cause the system properly generate blocks that velocity becomes not life support system but merely security check stable and properly operating chain. users velocity implemented chains may also note that several blockchains have now been implemented with this feature, however the potential issues will not apparent them because they are implemented with vrx difficulty retargeting which pairs with velocity's constraints and thus will not have the same issues listed above, this case they will see only the benefits velocity running security check merely stabilizing the blockchain further and making more robust. security analysis miners may also able create automated cutoffs for the system not waste power while blocks are simply not accepted the chain creating two possible exploits. first that users with advanced mining systems may able effectively premine block during the time that the chain not accepting blocks and withhold from submission until the minimum time has elapsed. the system were then employ security check that verifies the block's timestamp see miner had withheld block for submission another exploit would set withheld block created with valid timestamp long the miner knew each valid time window. these two exploits are resolved first having the previously stated method the system ensure the block timestamp does not come from outside the allowed block window. this discourages attacks creating more steps for the attacker through before having chance success. next the vrx implementation penalizes minimum block time, making the power required maintain possible attack (even with injecting valid timestamp) increase exponentially until after just few generated blocks the difficulty great that minimum time can longer achieved and another miner/ staker can simply find the next block. this quickly negates any possible progress the attack. course the velocity system requires all parameters met and not simply just block time order accept what appears validly generated block. the system can expanded include more verification and even more stringent implementation that may adapt any kind features that are added removed. this makes the digitalnote system very adaptable and less hassle work with can grow with the coin and becomes more refined and mature will this new security feature called velocity. blockchain grows becomes "heavier" the sense that continuously stores information without regard possible hardware service limitations the end user. order circumvent such concern for possible mobile users users who simply cannot store the entire chain either that moment/ indefinitely important offer alternative what's known "full" client. standard "full" clients general practice store and verify the entire blockchain which allows for significant redundancy and support community members/users use the system while "lightweight" "mobile blockchain" acts access portal, querying the blockchain and pulling data from more like block browser rather than actually storing the system locally. not storing the majority files locally the digitalnote system can more readily used full scale mobile device user with limited network/storage capacities. though much what makes this system lightweight simply crawling the blockchain also course has the capability submit data the blockchain processed the upcoming block with without synchronizing the blockchain. every system should allow for customization the user that using and such the lightweight/mobile blockchain also capable synchronizing either partially wholly. the option selected, the system will synchronize from the last checkpoint and "assume" that previous transactions reported the chains hosted nodes are valid. another option have "quiet" full sync run where after the semi-sync completed from the last checkpoint the client then begins synchronizing the rest the blockchain silently the background allowing the user still support the network completely their discretion. another common shortcoming that many groups have attempted overcome block size limitations. either too small too large can problematic one renders the chain incapable processing large batches transactions within any kind reasonable time the network effectively "queues" and users are stuck waiting unknown amounts time receive send their coins while the other causes the chain possibly bloated having overly large block sizes available when there need for it. this can even lead such issues stalled blockchains. employing what's known "adaptive block sizes" the xdn blockchain itself automatically calculates, within size threshold, how large the maximum allowed block size that should adjusted and then sets this the next allowed size for the network utilize. this based off network usage, the more the network utilized the more space made available the block size, while the less utilized the lower amount space available the block for generation size allowing for seamless adaptability the blockchain system handle any kind network load and environment. this whitepaper (document) for informational purposes only, and not binding commitment. not rely this information when interacting with digitalnote coins ultimately the development and timing remains the sole discretion the digitalnote team. we, the digitalnote team, intend way harm any kind anyone any shape form. there has never been crowdsale coins, presale any other crowd funding method used for the digitalnote project its developers. please understand the risks involved with cryptographic blockchain technology and their respective coins. the digitalnote team cannot held responsible for any lost, stolen, otherwise missing funds any kind. you are unsure have any doubt about this project urge you not invest become involved this prototype technology system stated numerous areas and used your own risk. big thank you all who helped make this project reality, special thanks goes out the following community members (usernames) who have contributed this document's creation and revisions: auchri coke zero cryptocoderz kou