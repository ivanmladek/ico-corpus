white paper (some details might added) decentralized financial system credits version oct contents abstract introduction network ledger definitions network nodes the last saved block synchronization nodes network consensus consensus comparison the concept the main network node equipment network nodes consensus building building and initiating the ledger transactions not included the register transaction processing transactions consensus building transaction processing ledger entry structure credits ledger structure block size search for transaction participants data transmission channel action the system adding transaction for validation cost transactions smart contracts introduction entities smart contract method virtual executable machine value term performing the smart contract terms data sources implementation plan technical plan project implementation credits cryptocurrency abstract credits platform decentralized financial system for the direct interaction between participants peer-to-peer (pp) principles. the platform expands the potential using financial services the basis distributed ledger, self-executing smart contracts, and credits cryptocurrency. the system aimed unite all participants one site, providing them with platform for creating and using financial services; where everyone can both offer service and use it. thanks well-defined and balanced technological system, the credits platform offers new technical solution and new conceptual model networking participants' interaction for the development modern decentralized financial services. introduction fully peer-to-peer arrangement for service delivery systems which allows for forming financial services: money transfers, currency and value exchanges, crediting, funding and other services directly between participants. everything provided without additional intermediaries, according principle one the equal participants other system participants. result, everyone gets cheaper, faster and better services. the world moving towards the direct interaction between people peer-to-peer principles equal equal. revolution happened! this clearly seen the overturn the mass media: until the newspapers, magazines, and were the main providers information. today, opinion leaders are bloggers, found youtube channels and social networks, money invested crowdfunding and ico, and information stored decentralized cloud systems. the financial industry, perhaps, one the few industries that lags behind, that resists the introduction decentralization and direct interaction between participants. although, technically, much easier create decentralized financial services than create unmanned vehicles. corresponding technological environment required create system decentralized financial products and services based distributed ledger: high execution speed (in seconds), together with the capability handle huge number transactions simultaneously (hundreds thousands per second) low cost each transaction (for micro payments and non-cash transactions). development system where all participants and items necessary for the qualitative financial decentralized services are combined: personalization users, kyc, credit history bureau, settlement centers fiat money, withdrawal and cashing cryptocurrencies and these are two big and basic tasks that currently hamper the development peer-to-peer financial products. present you solution these tasks, implemented with the help the credits financial system. credits single technological decentralized platform can combine all participants financial services, safely and quickly execute all transactions using the principles distributed ledger. self-executing smart contracts and the principles federative voting system provide unlimited opportunities for all participants create unique interactions various financial products. the platform opens new huge market and new potential for using blockchain projects and services financial and other sectors that could not used previously because speed and transaction cost limitations. network ledger definitions system set decentralized network nodes performing processing, saving transactions, executing and confirming the terms smart contracts, processing requests from third-party systems, providing information data when requested. network node computer where complete network client installed, connected common system, verifying transactions and writing them the ledger. ledger the list transactions confirmed the system and stored all network nodes. transaction the system item, denoting request perform smart contract method any action the network and recording the results blockchain system. smart contract the system item, computer protocols that facilitate, verify ensure compliance with the terms interaction. they usually have user interface and often emulate the logic contractual relationships. the key property smart contract its decentralization and its independence from central source. smart contract method the program code responsible for calculating the result work the smart contract terms and recording the ledger. contracting party the final network participant and the system user. network nodes use several types nodes, depending their purpose build decentralized network based free access and node connection: common node (cn) the node participating transaction verification for validity but has minimum trust factor. also candidate for the role trusted node and the node the current processing the next cycle node role selection the network. trusted node (tn) the node participating transaction verification and has the maximum trust factor (), candidate for the role the node the current processing and common node. this node cannot become trusted during mathematically calculated number selection and voting cycles among nodes. the mathematical calculation depends the number nodes and the network complexity. the main node (mn) writing node, the network the node participating verification and responsible for adding transactions the transaction ledger block. this node cannot become trusted the node the current processing during mathematically calculated number voting cycles, which mathematical calculation depends the number nodes and the network complexity. the maximum number trusted nodes cannot exceed network nodes and not more then nodes. the last saved block the common ledger blocks (crb) the synchronized state the entire common ledger blocks all system nodes. the ledger block contents, mean unit information stored that contains hash code the previous block and list data related this ledger with the associated number the previous block. upon receipt the block from another node, takes its place the common ledger blocks according the number. this saves network bandwidth. during the synchronization, only the block number checked first. the block missing this node, downloaded and saved. result, the system any time contains the latest up-to-date copy the ledger. name the last ledger (lr). automatically created the node responsible for the ledger formation upon reaching consensus. this block sent all the system nodes order maintain the up-to-date uniformity the ledger state all the system nodes. each node associated with all other nodes the network and constantly exchanges new blocks with transactions with them, always maintain the relevant information. all blocks form set transactions-candidates waiting added the ledger. the same time, each server generates assumed sets the candidates for other servers and the proposed set transactions. decision made upon checking, whether add them the ledger. result, possible store the ledger data multiple times multiple servers the system nodes, and all information protected. the more nodes the system, the more reliable and independent is. synchronization nodes each new node launched and synchronized after determination definition and thorough trust verification. improve the information processing rate, all processes are handled simultaneously, independently each other. there are incoming variables, then empty ledger store created space reserved ram for further simplified access. the case the required ledger not being available, request sent trusted nodes receive all transactions made for the synchronized account. the input parameter object characterizing the transaction, then the search all running synchronization threads started. the operation results numeric code the position number the trusted node ledger for the current thread the error number the value less than zero. the thread method ends with connection error, then the thread completely ends. network consensus the consensus credits method group decision-making. with the aim develop final solutions acceptable for all network nodes. consensus comparison the definition the principles the decentralized credits ledger compare different types consensus: ledger availability (nodes can write data the ledger and read them from any time); modifiability all participating network nodes; consistency all system nodes (all nodes see absolutely identical version the ledger, which updated after changes); resistance separation (if one node becomes inoperable, this does not affect the operation the entire ledger). compared parameter credits specific dpos and bft pow pos the principle identifying the node that generated the block. calculation the mathematical function. confirmation storage the last ledger copy and bft performing iterative calculation the mathematical function, with varying complexity. search for the maximum stack among participants (competing nodes). attack unlikely, since necessary have complete ledger resources and computational power calculate, and the trusted nodes are selected dynamically. probable, but will very expensive terms the use resources. compensation for the work done the site for adding the ledger/blockchain. calculated automatically, provided fix for block depends the mining. commission per operation. probable, but expensive, because the need increase one's own stack. provided fix for block mining. the concept the main network node all network nodes are decentralized and none them have priority. required define network node that will process the queue transactions stored different network nodes. after that, must enter newly generated transaction block into the ledger. the credits platform uses its own combined protocol increase the speed transaction processing, provide complete security data storage, processing and transfer transactions. the protocol based the calculation the hash the last receive block. accurately determines the storage the latest up-to-date copy the ledger and software this node (proof capacity), calculating the checksum the values the entire contents the hash code. the size files determined well, the proof that this the latest, up-to-date copy and hash code the latest transaction recorded the system. become the main network node, the node searches for the value the hash function that calculates based the last stored ledger. organize healthy competitive environment between the network nodes for the opportunity become the main node; generate and store new ledger. after calculating the function and obtaining the result, sent all network nodes for verification. the result contains timestamp the calculation and value based the calculation the function the ledger files and software. all nodes receive the calculated value, compare the calculation time allocated for the search for the main network server, verify and confirm the trust factor the node, and also confirm its opportunity participate the competition become the main network node. after receiving approval from all network nodes (bft principals), list formed nodes that correctly calculated the value the function and contains timestamp. the node that received the correct result and had approved the fastest time, becomes the main network node the moment. the sha- algorithm concept used calculate the hash sum the file. hash functions the sha- family are built the basis the merkle-damgard structure. the initial message after the addition divided into blocks, each block divided into words. the algorithm passes each message block through cycle with iterations (rounds). each iteration, words are converted, and the rest the words define the conversion function. the results each block process are summarized. the sum the hash function value. however, the internal state initialized based the results the previous block processing. therefore, impossible independently process blocks and sum the results. equipment network nodes are striving build platform with the fastest possible transaction processing characteristics, propose using material incentive maintain network nodes the best condition: high-performance server equipment and high internet bandwidth. material compensation, the owner the main network node will receive remuneration credits currency from number commissions per transactions this processed ledger. the rest intended for the trusted nodes, which take part bft consensus. the percentage can changed, well separated the rate formation system through federative voting the network nodes, after the initial coin offering for least three years. result, encourage server owners keep this server hardware the highest performance and maintain high-quality, high-speed communication channel. consensus building result, have the main network node selected all nodes. the main tasks the main node are: obtaining transactions the candidate status add the ledger from all nodes, processing them, building the last relevant ledger and sending newly built ledger all network nodes. the process transaction handling and building the last relevant ledger precisely the search for consensus solution. the result building the last relevant ledger the consensus solution. the whole process can divided into the following stages: search for the main network node; building trusted nodes; receiving the list transactions and building list candidates for addition the ledger; processing the list candidates, voting nodes; removal from the list candidates unconfirmed transactions that have not been verified having negative confirmation; building list confirmed transactions added the ledger; adding transactions the ledger with the timestamp and hash code the block that contained the transaction; sending the block with transactions all network nodes. when received, added the registries all nodes. building and initiating the ledger the whole process can described the following sequence: the end user the network the system generates transaction. when all conditions the smart contract specified therein are met, the user initiates the action (transaction) through calling the required method using the platform software. follow the fundamental principles the blockchain, the kernel validators keeps track synchronization and invariance the latest ledger version. the time building the consensus, all transactions received during the cycle are collected the block. number assigned the block, consisting timestamp and node identifier converted into hash code, and then the block placed the consensus module. after compilation the white list candidates, not only the hash the transaction written the ledger, but also the hash the block, always certify the source based it. this hash kind signature the block and the one who created this block with transactions. after consensus building using federative search algorithm, the transactions added the block are passed the validator's kernel written the ledger. transactions not included the register transactions not included the list ready transactions are marked rejected. information about this immediately displayed the sender (initiator) the transaction. transactions not included the ledger remain the set candidates and are stored the network nodes. all the new transactions received the server the time consensus also arrive there, and then the search process begins anew. such continuous cyclic operation the network allows conducting transactions for fairly short period time while maintaining high degree reliability and relevance information. transaction processing transactions transaction the minimum unit the system informing the platform the execution contract methods direct transfers between accounts without creating smart contract, followed placement the result the peer-to-peer network. consensus building the system uses federative model build consensus voting trusted validator nodes, and also the consensus building algorithm algorithm for passage finite-state automaton. consensus works cycles (time steps), per time step, transactions are extracted and placed pool (one-dimensional array). after being placed the pool, all transactions are sent trusted nodes order receive response. the response received, then the transaction for which the request add was sent, can added the ledger this validator. after that, sent the next validator the network. when consensus built the end the chain where the transfer legality fully confirmed, the transaction sent validation with mark for writing and saving the ledger. transaction processing achieve the decentralized nature the system, each server must have both ledger storage and also fully-fledged handler all transactions. the system uses the concept system kernels. kernels, mean data handler that performs specific production task, regardless the availability and operability the remaining system components. each kernel, the input, the time the task executed, receives list variables for processing. and always gets result the output positive, any other error. result, the system kernel always contains the response code, addition the main data set. this structure required for the highest possible speed each process, which must work independently each other. ledger entry structure achieve significant ledger performance, but the same time, without compromising security, propose use ledger database without building the merkle tree from the hash code the previous block and the transaction result. merkle tree (tth tiger tree hashing) type hash function used check the integrity data, obtain unique identifier the chain, and restore the sequence. the data divided into small parts blocks that are individually hashed using leaf tiger hash, then the internal tiger hash calculated from each pair hashes one-by-one. the hash does not have pair, then transferred the new chain unchanged. next, internal tiger hash calculated again the chain for each pair. this procedure repeated until there one hash left. when the ledger operated using merkle trees, the transaction processing speed very low, and the load computing resources very high. our opinion, this not rational use data storage. credits ledger structure offer abandon merkle trees and use the transaction ledger the credits system; with each entry consisting hash code the transaction block add the list candidates addition the ledger. also, the entry has the node identifier and the timestamp when was generated. the ledger entry contains the transaction direction, its initial and final accounts, the type write-off, the number write-off units, the type depositing, and the number depositing units. this principle increases the speed transaction processing, increases the complexity illegitimate ledger change and excludes possible changes the ledger entry with hindsight. block size the unit time the cycle searching for the main and trusted nodes, and the cycle time calculated depending the network complexity. per unit time, the network contains transactions generated and transferred for processing the network from the end the previous cycle, until the start the next cycle, obtain the status "candidate added the ledger." the transactions selected from network are placed the block. the block size depends the number transactions it. search for transaction participants credits peer-to-peer network can represented graph, with user accounts the form vertices and multitude possible transactions the form directed edges that connect two vertices (account). since all edges have initial and terminal vertex, you can always construct oriented graph (orgraph). take the following conditions for identification: any transaction always has sender and receiver; any vertex (account) can always connected another vertex with directed edge (transaction); any vertex the graph (account) has finite number directed edges (incoming and outgoing transactions). connection with the foregoing, can say that the orgraph contains the required route for fulfilling the necessary transaction conditions and construct simple chain. since finite sequence vertices, where each vertex (except the last) connected the next vertex the sequence edge. data transmission channel each channel communication between the main network node and the common node the credits network separate thread (multithreading), within which data sent encrypted form when the transaction executed. ensure network security, all data between the validator nodes transmitted encrypted form, and each connection between nodes low-level based the network library. the data transfer occurs with error, the thread should automatically interrupted, the corresponding entry placed for writing the logging system, and then the log file. data transmitted through typified variables. transmitted data are encrypted using the symmetric algorithm. since this algorithm works under common secret key, this key transferred when connection created between nodes and transmitted encrypted form accordance with the diffie-hellman algorithm. the algorithm, like any stream cipher, built the basis pseudo-random bit generator. the key written the generator input, and pseudo-random bits are read the output. the key length can from bits. generated bits have uniform distribution. the diffie-hellman algorithm allows two parties receive common secret key using channel unprotected from listening through but protected from communication channel change. the received key can used exchange messages using symmetric encryption. the algorithm based the complexity computing discrete logarithms. it, many other algorithms with public key, the calculations are performed modulo certain large prime number first, certain natural number smaller than selected special way. want encrypt value then calculate mod and easy calculate having the inverse problem calculating from rather complicated. exponent exactly called the discrete logarithm thus, knowing the complexity calculating the discrete logarithm, the number can publicly transmitted any communication channel, since with large modulus the initial value will almost impossible pick. the diffie-hellman algorithm generate key based this mathematical fact. any actions the system are tied the timestamp, the number the previous block, the user's login, and the smart contract id. this allows finding duplicates when executing. duplicate found, then take the first transaction from the pool, the rest are considered illegitimate. action the system action the system transaction that characterizes the simplest transfer the value from account account the transfer the result the contract method the validator, for the subsequent search for solution the consensus search subsystem. order prevent duplication the transaction the same block with the same identifier, the system accepts agreement that the only true and correct transaction that which came first the validator subsystem for processing. since already recorded the validator system that transaction has already been made from the current account and there are values left the account conduct the transaction, consensus cannot found. thus, the problem double waste solved. when the transaction executed, information received the validator and confirmed, the information about the ledger status change automatically distributed all nodes from the trusted list, after which the ledger synchronized. order always have up-to-date transaction ledger among all trusted nodes for the current validator node, necessary synchronize the newly arrived transaction the ledger all nodes each time. solve this problem, separate port for synchronization should used (if there such opportunity). this opportunity will increase the speed processing the information incoming the validator kernel due the distribution the load the port. the synchronization thread always executed, cyclic. priority for the allocation ram and cpu load (using cpu cycles) lower than the average. the memory stores the last operations and the state accounts for them (in encrypted form using synchronous algorithm), this increases the speed responding requests from other validator nodes. adding transaction for validation adding transactions the ledger called only from the validator subsystem immediately after consensus building and compiling white list with the result transactions saving the ledger. calling from third-party systems impossible, order improve security. incoming parameters the object that characterizes the transaction. the resulting value resultvalue< execution aborted with error, the resulting value possible error code resultvalue the function was executed without errors, the result the number the entry the ledger. incoming parameter the object containing the unique label the transaction, the sender, the recipient, the transferred value, the value correspondence, the desired value, the amount the transferred value, the amount the desired value and other system information that can changed necessary. cost transactions the system uses the credits currency, which serves: internal means payment for the system usage; exchange different currencies within the system; exchange various values within the system; create and process operations under smart contracts; purchase information from third-party sources for services within the system. the cost transaction can vary depending the network load, particular user the system, which can theoretically direct huge flow transactions certain peak time. suggest using the material method and the impact the system users control the network load. the cost performing transactions the first three years the system operation will set individually for different types transactions and operations. the future, algorithm for the automatic generation the transaction cost will developed. smart contracts introduction smart contract the credits system electronic algorithm that describes set conditions which actions and events the real world digital systems can associated. implement self-controlled smart contracts, decentralized environment that completely excludes the human factor required, and use the transfer the cost smart contract, cryptocurrency independent the central authority required. entities smart contract credits consists the following entities: property (public variables) the system entity storing public data necessary for work the contract the credits system. method the credits system entity responsible for observing the logic and sequence actions when conducting the transaction (actions under the contract). participants the credits system sign the smart contracts using the method call that modifies the contract properties, launching the processes for verifying compliance with conditions and coordination. smart contract comes into force after signing the parties. ensure automated fulfillment obligations, environment existence required fully automating the execution contract terms. this means that smart contracts can exist only within environment that has unimpeded access the executable code the smart contract items. all contract terms must have mathematical description and clear logic execution. thus, the main principle smart contract complete automation and reliability contractual relations between the parties. smart contract method the credits smart contract method the system entity responsible for compliance with the logic and sequence actions during the transaction (actions under the contract). the logic and sequence actions are described program code (module) containing commands; their sequential execution allows obtain the desired result. this code can handle system commands (for example, the assignment command), user commands (separately written functions), contract properties (statically dynamically initialized variables available from any contract method), and methods from any other third-party contract available only the owner the connected (third-party) contract. for more popularization, the development provided scripting languages (for example, javascript). the method (program code) allows the use all widely used scripting language operators (commands) (assignment, conditional and unconditional jumps), the creation functions and procedures (subroutines), connection third-party libraries. virtual executable machine the contract method the credits system executed the virtual environment the system (virtual machine, hereinafter referred vm). when method called for particular contract, allocates memory area and loads the contract bytecode containing the methods and the variables initialized (or redefined when calling other contract methods). starts processing the method bytecode, runtime, variables and code are loaded into its memory area, and commands are successively executed, their result transferred the peer-to-peer network for subsequent placement the ledger. the initiator the execution method the user the system, behalf which this method launched. value term credits cryptocurrency also indicator the value term contract unit compare two completely different units and build consensus when executing accepting the contract the parties. instead registering each separate value/gateway combination, credits cryptocurrency serves bunch for effecting value transfers. this possible because any value liquid with respect credits currency, which means that any value can liquid with respect any other value. performing the smart contract terms the contract term the credits system the values the trigger (checked) fields required close (complete) the contract. fulfillment the smart contract terms procedure when the trigger (desired) fields are checked for equivalent desired value. there are three possible ways find solution fulfill the contract terms: the contract concluded between two more parties for the transfer value. this case, the contract fulfillment the provision the cost equivalent the value the transferring party from the receiving party. the contract concluded between the parties for the transfer value, but payment must made upon fulfilling certain number conditions (for example, delivery value the receiving party). contract for conversion one value another with cost equivalent the form credits placed the system. this case, the platform starts looking for the shortest possible path exchanging one value for another through conversion other contracts. any fulfillment the contract can provided per one transaction, per several transactions, which will provide opportunity collect the required quantity units value complete the contract. data sources for correct and fully-featured work, checking and providing additional information, make more balanced and optimal solution, credits uses third-party data providers. the need introduce additional data sources into the system due the inadequacy public information about one several contract parties (for example, obtaining the borrower's credit status for making decision issue credit). work with third-party information systems, the platform can call integration bus, which remote access generates request third-party system (site) format for data presentation paid basis for the system participants with payment credits. the request sent encrypted form ports and addresses provided information systems other than the standard ones. the result the request can any response the service containing the necessary information make decision, error code characterizing impossibility receiving the required response and possible steps eliminate the error. implementation plan credits cryptocurrency after launching the release version the system, fixed amount ,,, credits will issued. they will exchanged for erc standard tokens, issued the initial token sale. they will exchanged fixed exchange rate: erc standard token credits monetary units.