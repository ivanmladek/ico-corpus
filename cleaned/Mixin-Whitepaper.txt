draft july mixin network free and lightning fast peer-to-peer transactional network for digital assets. technical white paper contact@mixin.one subject further review and update draft july contents motivation overview mixin kernel ghost output asynchronous bft graph punitive pos trusted execution environment light witness mixin domain kernel system calls standard domain interfaces domain extensions attack resistance governance xin the token conclusion contact@mixin.one draft july motivation bitcoin started new era for financial resources management. people have regained the power manage their assets themselves, monitor how the resources are being distributed, and rescue the economy from the control the few. today, both professionals and the general public have accepted the idea behind bitcoin and blockchain technology, and the user base crypto currency growing faster and faster pace. unfortunately, bitcoin suffers from this fast growing adoption. the most significant problems are insufficient transaction capacity, slow confirmation and high transaction fees. due the inflexible highly distributed nature bitcoin network, it's impossible fix some critical flaws. rather than fix the original bitcoin project, most people attempt invent new projects that address different perceived shortcomings bitcoin. thus ethereum, monero, stellar, cardano and many new blockchains have been invented the past few years. almost all them attempt fix the problems bitcoin while adding some new features their own. however, they are unable rescue augment the contact@mixin.one draft july original bitcoin network, and are neither able interoperate with each other. lighting network https:// lightning.network fortunately, some bitcoin believers are working addressing bitcoin's shortcomings, and they have proposed several excellent solutions. the most significant one lighting network[], which micropayment system built bitcoin network without requiring any modifications bitcoin code. blockstream liquid https:// blockstream.com/ liquid another interesting solution the liquid[] project from blockstream, which federated and two-way pegged sidechain alongside bitcoin blockchain. raiden network https://raiden.network all these attempts have put forward the entire bitcoin network without sacrificing the security and distributed nature the original bitcoin vision. similar solutions have been put forward bitcoin competitors, e.g. the raiden network[] ethereum. this paper, try propose solution that can empower all the popular distributed ledgers. call this solution mixin. mixin not about creating yet another crypto currency competitor any distributed ledgers. similar what lighting network and liquid are for the bitcoin blockchain, mixin public distributed ledger allow any public distributed ledgers gain trillions tps, sub second final confirmation, zero transaction fee, enhanced privacy and unlimited extensibility. contact@mixin.one draft july overview mixin composed single theoretically permanent kernel, many dynamic domains and different multipurpose domain extensions, formulate extended star topology. kernel domain domain extension this topology may lead the concern that mixin centrally controlled network, but that's not the case because how the kernel itself works. contact@mixin.one draft july mixin kernel high performance distributed ledger and its sole responsibility verify asset transactions. that said, the single permanent mixin kernel also distributed network just like bitcoin network whole. although mixin kernel verifies asset transactions, doesn't produce any assets. all assets flow through the kernel mixin domains. each mixin domain also distributed ledger, whose job providing assets the mixin kernel. the assets may those bitcoin, ethereum any other blockchains, even central organizations like banks. while each mixin domain component provide assets for mixin kernel, the kernel itself also component the mixin domain verify and govern its assets. unlike most existing gateway based solutions, mixin kernel and domains are all public available distributed ledgers, with central authorities. from the kernel domains, the mixin network all about assets and transactions. the mixin domain extension where the magic happens, whether for ethereum contracts, eos contracts, distributed exchange somewhat trusted instances, anything else. contact@mixin.one draft july mixin kernel the core mixin network the mixin kernel, fast asynchronous byzantine fault tolerant directed acyclic graph handle unspent transaction outputs within limited kernel nodes. ghost output cryptonote https:// cryptonote.org/ whitepaper.pdf mixin kernel utilizes the utxo model bitcoin handle transactions, and cryptonote[] one time key derivation algorithm improve privacy, since there address reuse issue. call the one time key ghost address and the output associated with ghost output. the algorithm, each private user key pair (a, two different elliptic curve keys, and the public user key the pair (a, two public elliptic curve keys derived from (a, b). when alice wants send payment bob, she gets bob's public user key (a, and derives least three ghost addresses with some random data, which ensures least three different ghost outputs will created for bob. the three ghost outputs threshold delivers better privacy, and also forces the outputs random amounts. contact@mixin.one draft july after deriving the ghost addresses, alice will sign the transaction with cryptonote algorithm. cryptonote transaction sign note that, improve privacy, alice forced pick random utxos the transaction inputs. after the transaction signed, alice sends the mixin kernel. only bob can recognize his transactions due the ghost address feature, can decrypt the output information with his tracing key (a, b). cryptonote transaction verify contact@mixin.one draft july exchange wants have transparent address disclose all its assets information publicly, can just publish its tracing key (a, that everybody can recognize all its transactions but can't spend them without the secret key asynchronous bft graph section xin the token for details each mixin kernel node required pledge xin, therefore due the xin circulating supply[], more than kernel nodes will exist. prevent extremely centralized authority, the kernel can only booted with least kernel nodes. the kernel nodes make loose mesh topology, and are responsible for transaction validation and persistence. unlike blockchain, there are blocks the mixin kernel, all transactions will exponentially broadcasted soon possible. transaction flow when and contact@mixin.one draft july typical mixin kernel transaction finalization sequence goes follows: contact@mixin.one when alice's signed transaction sent the mixin kernel with random nodes (a) will receive it. each node does the same transaction validation. inputs are all unspent. input and output amounts are valid range. verify the signature each input. the total input amounts equal the total outputs. each node will create kernel snapshot with the validated transaction, and the snapshot the base unit stored the kernel construct dag. each snapshot composed of: the transaction payload. previous snapshot hash this node. the node signature. the signed snapshot will broadcasted another random nodes (b) soon possible. after received the snapshot and validated with the same procedure step new snapshot will created immediately. this snapshot has the same payload received snapshot, and the referenced snapshot hash pair previous snapshot hash this node and the received snapshot hash. steps will repeated until the node learnt that wether the transaction approved rejected least nodes. since each snapshot referenced the parents until the nodes group draft july it's easy for new nodes learn that the previous snapshots are aware the snapshots. this procedure can avoid lots redundant works. this procedure, transaction can approved rejected about k/b^ rounds average, considering the typical kernel size, the latency may within single second with very high probability and guaranteed within seconds. node snapshot snapshot snapshot reference snapshot reference node snapshot node transaction due the asynchronous bft consensus, double spend impossible. because the utxo nature, snapshots order irrelevant and high concurrency can guaranteed the dag. punitive pos each mixin kernel node takes xin, which approximate the network stake. the kernel can only operate with least nodes joined, about the whole network stake. the kernel bft consensus secured strict punitive pos, kernel node determined contact@mixin.one draft july attacker, all its collateral will recycled the mining pool. the node will identified attacker tried broadcast obvious double spend snapshot. snapshot will considered obvious when some its inputs state have been validated least nodes. the first time node sends out attacking snapshot, its stake won't recycled, but will flagged the network potential attacker. the kernel size will temporally reduced with this reduction invisible the potential attacker. all other nodes will still broadcast the flagged node, but won't consider its snapshots stake votes. further snapshots from the flagged node remain malicious, the kernel will sign snapshot with transaction that will transfer all the flagged node's collateral the mining pool. section governance for details trusted execution environment https:// en.wikipedia.org/wiki/ trusted_execution_envi ronment intel sgx https:// software.intel.com/enus/sgx-sdk/details contact@mixin.one the flagged node will permanently removed from the kernel and will have some period appeal mixin kernel governance[], which voted all xin holders. trusted execution environment mixin kernel already abft consensus dag. ensure further security, kernel nodes must run trusted execution environment[]. specifically, mixin uses intel sgx[] the tee implementation. draft july the tee enforcement ensures three important security and trust factors mixin kernel. section kernel system calls for details all kernel nodes should run the same consensus ruleset. mixin kernel will trusted due the intel sgx enclave, even when the kernel controlled several earlier kernel nodes. distributed domain communications will much more secure.[] the underlying logic for the tee security that intel sgx somewhat trusted for the mixin system. note that, mixin kernel secure itself, least secure existing bft solutions. the mandatory intel sgx just makes better. light witness mixin light node simplified payment verification (spv) node mixin kernel. typically stores all its unspent outputs for easy account balance query. the light node xin holder, has the chance act light witness. the light witness will actively monitor the mixin kernel, and will scheduled vote automatically the attacker appeals. the light witness vote weighted their xin stake. and the vote mostly the attacker node's network contact@mixin.one draft july connectivity state determine whether the attacker behavior caused due network delay. all the light witness votes will weight calculated with the mixin kernel governance votes, determine the final attacker appeal. the appeal fails, the penalty will final. the light witness incentivized these votes because they could get the mining reward they some work for the network itself. contact@mixin.one draft july mixin domain mixin domain distributed ledger provide assets for the mixin kernel. the assets may those bitcoin, ethereum any other blockchains, even central organizations like banks. mixin kernel, the abft dag. mixin domains, the distributed gateway provide assets for mixin kernel. domain extensions, could smart contracts, trusted application, etc. trusted external sources, e.g. bitcoin blockchain, bank api. contact@mixin.one draft july kernel system calls mixin kernel offers some system calls communicate with domains, and it's the only way the kernel and domains can exchange state. the system calls are defined standard json-rpc interfaces. json-rpc stateless, light-weight remote procedure call (rpc) protocol. transport agnostic that the concepts can used within the same process, over sockets, over http, many various message passing environments. uses json (rfc data format. currently mixin kernel only implements the standard https transport for the protocol, and the available calls are listed below. kernel_registerdomain register the domain and waiting for the kernel approval connect. the call can also update the domain nodes. the registered domain will forced form xin stake based network between the domain nodes and the kernel whole. the domain registration governance behavior, and should relate the domain nodes xin stake. the future, hope implement more automatic domain management policy mixin kernel. the upgrade policy should always governed all kernel nodes and xin holders. contact@mixin.one draft july parameters uuid unique uuid that represents the domain among all other domains. array array domain nodes' transparent public keys. params: ["cdc--b-ed-ddbfa", ["bacecdcbeceaffdbdf d", "baefbaacdfcbbdbdfbcebb faeb"]] returns string indicate the registration request state, the value one invalid, pending, denied, and approved. note that, all kernel system calls should forwarded known kernel nodes ensure delivery. standard domain interfaces domain can only registered the mixin kernel implements all the standard domain interfaces. domain_getkeyderivationfunction get the domain specific asset key derivation function, which one some key derivation methods mixin kernel, and could upgraded with governance. the supported methods may also extended some sandboxed languages such solidity. contact@mixin.one draft july parameters uuid the global unique asset the whole mixin network. params: ["cdc--b-ed-ddbfa"] returns object the function name and parameters. method: string the function name, one the predefined derivation function names kernel. params: array the parameters should used relative the method. domain_associatepublickey associate mixin public key the domain for asset supported the domain. the public key and domain asset association the magic that will associate external asset the mixin kernel. after public key associated with asset, will get asset specific public key, e.g. bitcoin public key. whenever the bitcoin blockchain has output this public key, the domain will create transaction the mixin public key. this works because the mixin kernel and the mixin domain also proof stake network. besides the xin collateral, there are also additional intel sgx enforcement for all related functions. contact@mixin.one draft july after the domain create the asset transaction the public key, the asset will locked both the mixin kernel and mixin domain. this result corresponding asset lightning transaction mixin kernel. parameters string the mixin public key. uuid unique asset within the whole mixin network. params: ["bacecdcbeceaffdbdf d", "cdc--b-ed-ddbfa"] returns string the asset specific public key associated with the mixin public key. domain_unlockasset unlock the asset and transfer out external sources, this similar the withdrawal action crypto asset exchange. the operation unlock somewhat similar the associate function, must signed both the mixin kernel and mixin domain make valid snapshot acceptable the network. parameters uuid unique asset within the whole mixin network. contact@mixin.one draft july string external asset specific public key. string the amount asset unlock. string the fee for external source transaction. params: ["cdc--b-ed-ddbfa", "sdofciwaoungrnhpcodwxwlcyztv", ".", "."] returns string the external sources transaction identifier, e.g. transaction hash. the above three domain interfaces are mandatory for all domains approved the kernel. they communicate through the intel sgx trusted transport layer, and all encrypted private keys are securely duplicated all kernel nodes and domain nodes. domain extensions with transaction only purpose mixin kernel, and mixin domains assets provider and gateway external blockchains any other sources, mixin has become the most sophistic and high performance distributed ledger almost all digital assets. however, people need smart contracts, which have been made popular ethereum. allow extensions mixin domains, something similar smart contract but with higher robustness, capability and performance. contact@mixin.one draft july domain extensions are programs running the domain virtual machine secured the secure enclave intel sgx, popular and secure trusted execution environment. due the possibility run the "smart contract" single computation unit, domain extensions can achieve many goals which are almost impossible something similar ethereum. much higher performance and lower latency which only limited the hardware. non-deterministic transactions, e.g. trustable random number. interact directly with trusted external sources. besides these trusted applications, it's also possible run other popular distributed vm, e.g. ethereum eos. contact@mixin.one draft july attack resistance due the pos and distributed nature both kernel and domain nodes, and enforcement intel sgx, the keys are almost guaranteed safe from leaks. because the highly distributed key duplication and secret sharing mechanism, the encrypted private keys are also guaranteed safe from loss. ideally, each asset should have many different distributed domains, these domains are governed the kernel and securely enforced intel sgx. the associated keys can only accessed from where they were generated the domain, further improving the degree protection. the kernel will balance the assets different domains constantly further prevent the asset loss the event almost impossible private key leak loss different domains. will prove that mixin safe for digital assets against different possible attack vectors. simplify the explanation, only bitcoin will used sample. contact@mixin.one draft july key association key association the first step grant mixin public key with bitcoin access. every mixin public key mpub will have bitcoin public key bpub associated, how this association occurs and managed determines the key safety. bpub the public derivation bitcoin private key bpriv, how bpriv generated defines the bpub correctness. bpriv generated purely the mixin domain itself, and will transfer part the kernel keep (t-n)-threshold secret sharing scheme. the domain trustable this procedure, the association absolutely secure. intel sgx will enforce the domain trustworthiness, and even when intel sgx itself not safe, which almost impossible, the following parts this paper will prove that the bitcoin asset will also secure mixin. deposit attack deposit the action when external assets flow into mixin kernel, this the first step when some btc joins mixin. since key association proved secure, and all mixin domains are governed mixin kernel, some btc contact@mixin.one draft july successfully submitted the kernel, will guaranteed the correct mpub. all bitcoin deposits will also require large enough domain finality threshold, e.g. there must least bitcoin confirmations before the system accept the asset. this way the system has enough time detect fraudulent domain action and will punish without any bitcoin loss. the domain mandatory intel sgx requirements will improve this further. fraudulent domain key leak the mixin kernel constantly balances the assets across all domains according their behavior and collateral amount. domain compromised hacked, the leaked key will only cause partial bitcoin loss. also, intel sgx will prevent fraudulent domains from existing and keep hackers away most cases. further more, kernel and domains will always load most bitcoin into multi signature bmpub, this almost impossible get hacked, especially when correctly and transparently distributed. contact@mixin.one draft july damaged domain key loss just like the fraud domain issue, domain damage key loss will only affect few bitcoin assets. since mixin governance will ensure the domain correctly implemented distributed system, it's almost impossible have the domain damaged whole. compare exchange exchanges other kinds central managed bitcoin solutions typically store most btc their cold storage. cold storage refers private keys which are never exposed the internet and managed several people the same firm. terms security, both mixin and exchanges implement the solutions correctly without any bugs, mixin should considered much safer and trustable., because mixin multi-signature bmpub guaranteed managed many different parties that are unknown each other, while exchanges have their keys kept their own people who are much more easily capable colluding. hackers aside, exchanges may have the chance steal the money themselves. this much harder even impossible mixin. contact@mixin.one draft july further, since exchanges are almost all closed source systems, they often have bugs which are not discovered until hack occurs. since mixin transparent, the code open all users and developers review and improve, the same way that linux thought more secure than windows, mixin should rapidly become more secure than any closed source exchanges. contact@mixin.one draft july governance try our best make mixin network simply work without any heavy-handed governance, but there are still situations that may require intervention. xin the only stake determine how the governance work all the mixin problems. the vectors that can voted governance are listed. contact@mixin.one amount kernel node penalty, mainly assessed when double spend, fraudulent assets are detected. asset and domain registration, determine which assets are added the mixin kernel. this may programmed automatically the future. external asset assurance, e.g. how recover when bitcoin forks after the domain finality threshold. kernel development and upgrade. determine some policy the mixin kernel specification and upgrade procedure. community development, vote community issues critical. draft july xin the token xin the sole token used many services mixin, including full node collateral, dapp creation and api calls. join the network full node, one must pledge least xin token establish initial trust. every new act dapp creation will have one-time cost xin, the amount which determined the resources the dapp claims consume. the mixin api calls from dapps may cost some xin well, depending the call type and count. all xin penalties and fees charged the network will recycled the mining pool. permanent total xin token issued the world one time, and them have been successfully distributed holders from with rate eos/xin. xin have been distributed early mixin messenger adopters. xin are reserved for the development team. the remaining xin will the incentives for all mixin full nodes and light nodes. contact@mixin.one draft july conclusion have proposed the mixin network multi-layer distributed network. the core layer (mixin kernel) highly distributed transactional network designed according the abft directed acyclic graph. the mixin domains layer quite extensible without any overhead the mixin kernel performance. also have thorough security proof that when managing external blockchain assets, mixin secure for daily usage compared almost any existing cold storage solutions. the most important thing that mixin isn't inventing any new things, and all technologies described this paper have been used modules existing mature projects. the mixin messenger app has proved that this paper feasible implemented real world, unlike most other projects that have beautiful new theories but evidence that their work can actually implemented the real world. contact@mixin.one