updated: jun version: pascalcoin albert molina bpascalblockchain@gmail.com herman schoenfeld herman@sphere.com pascalcoin next-generation cryptocurrency that pioneers new tier scalability comparable the visa network. pascalcoin paves the path towards infinite scalability and new form decentralised application coined monetized api's" version pascal coin addresses shortcomings version account distribution model and delivers the key feature checkpointing (among other improvements). the addition checkpointing into pascalcoin now delivers the promise true "deletable blockchains." the blockchain pascal coin now permanently deletable from the network itself without affecting proof-of-work validation for new nodes. this means new nodes can join the network without the need download the infinite history blocks. instead, they download the latest checkpoint and few dozen latest blocks order fully synchronize with the provably mostwork-chain. this paves the path towards, what this paper coins, "infinite scaling". table contents page introduction the pascalcoin value proposition infinite scaling how does pascalcoin achieve "infinte scaling" physical scaling limits why other coins cannot achieve similar scaling strong -confirmation guarantees need for lightning network commoditization address space account names and types monetized api's assets, sub-tokens and smart contracts self-funded community written free pascal pascalcoin architecture the safebox first block operations accounts account segments the blockchain protocol version limitations pasa distribution model new nodes required infinite history protocol version changes improved difficulty-calculation account names types new operation: change account info pascalcoin encoding checkpointing pascalcoin whitepaper table contents page in-protocol pasa exchange new operation: list account for sale new operation: delist account new operation: buy account modified operation: transaction accounting rules user workflows road map acknowledgements references pascalcoin whitepaper introduction page introduction pascalcoin innovative cryptocurrency that extends the blockchain-paradigm introducing new cryptographic structure known the safebox the safebox maintains ledger balance rather than ledger pascalcoin facilitates value-transfer between users allowing them transact funds (pasc) and from accounts (pasa) much the same way traditional banking. unlike most cryptocurrencies, pascalcoin accounts are simple and easy-to-remember (e.g. and not complicated strings which must copy-pasted scanned. since only the ledger balance required for consensus and not the full ledger, pascalcoin attains exponentially higher transaction throughput per unit storage than utxo-based cryptocurrencies. the design philosophy pascalcoin take bitcoin and rather than abstract and generalise ethereum does, simplify and refocus into single-use-case-optimised currency. the safebox the ultimate source truth pascalcoin and provides ledger balance all users' funds. structurally, like spreadsheet where each row denotes bank account (pasa) and each column denotes property that account (i.e. pasc balance, public key, etc). the "address" account simply its index within the safebox (with appended checksum). addition, every rows are grouped into account segment sub-structure which corresponds block the blockchain. every time new block minted, the transactions/operations contained within that block are applied the safebox resulting mutated state, and new accounts are created. the resultant hash the mutated safebox must then referenced the subsequent block order qualify the next block. unlike traditional utxo-based cryptocurrencies, the blockchain pascalcoin only used mutate the safebox decentralised, acid manner, not serve source funds. whilst proof-of-work blockchain still required facilitate byzantine consensus (up checkpoint), not permanently required. result, the blockchain pascalcoin deletable. pascalcoin whitepaper the pascalcoin value proposition page the context this document, infinite scaling defined the ability blockchain-driven network achieve infinite running time finite and constant storage". this definition defines theoretical limit which measures upper-limit throughput-per-unit-of-storage" kpi. blockchain architectures with high throughput-per-unit-of-storage result high numbers users with fast confirmation times and low-fees. networks with low throughput-per-unit-of-storage experience slow confirmation times, high-fees and admit inherent ceiling users. simply put, the blocks pascal coin will deletable past the checkpointing height since new blocks will appended the top the chain and old blocks deleted from the bottom, only constant number blocks will ever required any time. checkpoints occur every 'th block and are simply compressed safebox archives. when new node joins the network, only downloads the latest checkpoint and few dozen blocks. addition, the safebox now contains block header information every account segment sub-structure. this makes possible for node independently compute and verify the cumulative work required construct the safebox structure. does this by: checking that all block headers link transitively chain via the safebox recalculating the accumulated work the safebox using the proof-of-work payloads verifying that the accumulated work the safebox the largest known the network. result, pascalcoin achieves exponentially higher throughput-per-unit-of-storage than other cryptocurrencies, since node's only need store the network throughput not the aggregated network throughput other words, pascalcoin stores the flow transactions rather than the history transactions the flow constant, the storage. caveat here that the safebox does grow negligibly with every block, but always constant amounts and irrespective the quantity transactions. for example, the year the safebox will always size whether transaction occurred googleplex. pascalcoin whitepaper the pascalcoin value proposition page since nodes only need keep blocks any one time, pascalcoin allows for exponentially larger block sizes than current cryptocurrencies. for example, for the same amount storage that bitcoin node consumes today, pascalcoin could theoretically sustain blocksize with throughput txn/sec. clearly there would other bottlenecks such signature verification and network overflow that extreme scale, but does highlight the new tier cryptocurrency pascalcoin pioneers. other cryptocurrencies cannot achieve this for two reasons. firstly, they rely the old block data serve the source funds for new transactions the form utxo's (unspent transaction outputs). secondly, stake-proofs with the proof-of-stake paradigm cannot used retrospectively aggregate the "total stake" staked create that structure. short, the safebox structure attains intrinsic "difficulty" property proportional the total work the blocks used create it, and cannot easily forged. this only achievable the proof-of-work paradigm whilst there are other approaches these cryptocurrencies could use such pruning, warp-sync, "finality checkpoints", utxo-snapshotting, etc, there fundamental difference. their new nodes can only prove they are most-work-chain using the infinite history whereas pascalcoin, new nodes can prove they are the most-workchain without the infinite history. mimblewimble the closest proposal achieve what pascal coin already does terms storage efficiency utxo-based cryptocurrencies. since pascalcoin not utxo-based currency but rather state-based currency, the security guarantee confirmation transactions are much stronger than utxo-based currencies. for example, bitcoin merchant accepts -confirmation transaction for coffee, the buyer can simply roll that transaction back after receiving the coffee but before the transaction confirmed block. the way the buyer does this re-spending those utxos himself new transaction (with higher fee) thus invalidating them for the merchant. pascalcoin, this virtually impossible since the buyer's transaction the merchant simply delta-operation debit/credit quantity from/to accounts respectively. the buyer unable erase pre-empt this transaction from the network's pending pool until either enters block discarded. the buyer tries double-spend the coffee funds after receiving the coffee but before they clear, the double-spend transaction will not propagate the network since nodes not propagate transaction double-spends current pending transaction. pascalcoin whitepaper the pascalcoin value proposition page for even higher security guarantees, the pascalcoin developers will soon roll-out free and public double-spenddetection-service consisting json api that links several nodes geographically distributed throughout the world. for merchants who want high assurances for -confirmation payments, they can simply query this service after seconds receiving pasc payment. the service replies "no double spend detected" means virtually impossible for double-spend occur since the majority nodes are honest and will not propagate double-spend attempt. the only way double-spend can occur the buyer colludes with malicious miner mint his secret double-spend the next block costly and unlikely proposition. result, the merchant attains very high assurance that -confirmation payment will clear there double-spend anywhere the world after seconds and the majority nodes are honest. good enough for coffee. need for lightning network direct consequence reliable -confirmation transactions, there need for lightning network pascalcoin since -confirmation transactions are faster and their security guarantees almost good sufficient for micro-payments and everyday-commerce. almost all other cryptocurrencies, new users can simply create new address for themselves will. this creates infinite address-space which can quickly bloat the blockchain even though the number users remains constant. the address space was instead made finite, becomes limited resource able commoditized. this how pascalcoin accounts (pasa) operate. the accounts are limited, but any public key can associated it. this creates natural space-saving mechanism since the chain not littered with unneeded used keys. also disincentivizes spammers, since spammer accounts would naturally limited and thus easily identifiable/ blockable. also, and most importantly, commoditization the address space facilitates the safebox structure itself which the key component achieve "infinite scaling". one the key new features pascalcoin that accounts can have unique names which are publically visible, much the same way the domain names system. this allows user receive funds their email address chat moniker. allows shop receive payments their domain name brand name. payments still refer accounts via numbers, but the name used lookup the account number just domain name used lookup address. pascalcoin whitepaper the pascalcoin value proposition page more importantly, account names and types are serve fundamental purpose layer- applications and monetized apis. for example, the account name could serve chat room name forum name. account types further serve means distinguish accounts for their use-case. for example, browsing accounts with type could like browsing list chat rooms. how users interact with such layer- applications via monetized api's described below. monetized api's due reliable -confirmation transactions, pascalcoin allows new form decentralised application coined here monetized apis monetized api, pascalcoin accounts serve "ports" that listen/send "monetized-messages" other "ports" achieves this repurposing account named message-queue and utilising operation payloads. pascalcoin, operations can carry any arbitrary byte payload user-data. payloads can public encrypted. this unique capability allows operations embed layer protocols much the same way that http lives inside tcp. the difference here that the protocol messages carry financial weight and result, can used conduct granular economic communication suitable for algorithmic/autonomous/micro-commerce scenarios. examples: pascal chat: account can serve chat room where the the account name the room name. operations payloads the account can contains the user's chat message. the users handle would simply the sender's account name. these chat rooms can used for trading goods and services decentralised manner. anonymity can enhanced via other layer- applications. users can settle payments for goods attaching funds private messages between themselves. monetized content: pascalcoin browser-plugin that pays content providers for content on-the-fly. the payment itself contains info allow the server unlock the content for the browser. this could used for monetizing news, blogs, ebooks and social media content. one-click e-commerce: one-transaction e-commerce site who's shopping cart reduced single payload code the buyer merely sends pasc payment containing the payload code, and when received the merchant the order executed for the buyer. credit card numbers complex payment-gateway integrations were required. pascalcoin whitepaper the pascalcoin value proposition page anonymity mixers: accounts can receive funds from other accounts and then then re-send those funds using complex financial routing information encrypted within the sender's payloads. the mixer can split/delay/ relay/loop payments arbitrarily thus sufficiently obfuscating the sender, receiver and quantity from taint analysis. layer- side-chains: since messages to/from arbitrary account can used message queue, possible construct layer protocols for managing side-chain monitoring messages the sidechain's validity/state governed the layer- protocol embedded within these layer- payloads. the owner serve authority mono-federated side-chain suitable for dapps. owner-free (or nonfederated) side-chains can constructed associating proof-of-burn key account. federated sidechains will possible when schnorr multisig implemented whereby members the federation will comprised the account signatories. example actual monetized api, and the first one ever created, getpasa.com works listening account for incoming transactions pasc more. when transaction sent containing pasc more, it's payload examined for the presence public key. nothing found, transaction discarded. public key found, the service then finds free account it's inventory and send the key found. this allows new users purchase account one-step process that sends single message containing the order and payment combined. leveraging pascalcoin's layer- architecture, possible achieve assets, sub-tokens and smart contracts the same way rootstock achieves ethereum over bitcoin. running ethereum virtual machine over pascalcoin would possible maintaining side-chain pinned account (as rootstock does). transactions this account would embed layer- protocol commands that govern the evm side-chain. interestingly, sharding could achieved easily since independent evm side-chains could run bound separate accounts. inter-shard communication would simply transactions between these accounts. the rest the network would not really impacted the large volume transactions since the natural process checkpointing discards these transactions after blocks. only side-chain users would bother record all account transactions order validate their side-chain. pascalcoin was fair launch without any premine, ico investment rounds. the pascalcoin developer community are independently wealthy, self-funded evangelists who develop and promote this game-changing pascalcoin whitepaper the pascalcoin value proposition page technology. the pascal programming language has evolved far beyond the days turbo pascal. free pascal modern object-oriented language with advanced features such generics. was originally designed alternative and with it's modern advances and upgrades, has become great language for writing highperformance, cross-platform native code. pascalcoin whitepaper pascalcoin architecture page opposed series blocks containing transactions records going from one address another, pascalcoin uses components: the safebox (containing all current account balances) and blocks linked together form blockchain. just with bitcoin, mining nodes are responsible for creating new block. all nodes update their copy the safebox independently each other when new blocks are announced. part this task, nodes need update the balances (and other fields) existing accounts based operations the block well create new account segment containing brand new pascalcoin accounts awarded the winning miner. pascalcoin whitepaper pascalcoin architecture page before the first block created, the very first safe box number (genesis safebox) created which does not have any account it. miners will seek new block for the block chain via the proof work where the hash genesis safebox used input. once this first block created, corresponding new version the safebox created along with account segment containing new accounts, where defined the protocol set the current pascalcoin version now the miners will start working the next block the blockchain order generate the next version the safebox which will include new pending operations circulated nodes. similarly bitcoin and other cryptocurrencies, blocks pascalcoin are containers for transactions called "operations". they are referred operations they are generalised transactions and perform more than simply transfer funds between accounts. for example, there are operations change account's key, change it's name mark for sale, etc. the most important and common operation the transaction operation which which transfers funds between accounts. accounts the safebox essentially list accounts. accounts contain funds, the public key the owner, unique name and type field. element name ata account number unsigned bits public key public key (type, and (between and bytes) balance unsigned bits pascalcoin whitepaper description ordinal number identifying the account, this never modified. the public key the pin the account. this value can changed any time but only the owner the corresponding private key the currently assigned public key. current account balance pascalcoin architecture page element name ata description updated block unsigned bits number the last block the block chain that modified this account. this value helps identify stale unused account. operation unsigned bits incremental value indicating how many transactions were made with this account and ensures that order operations are unique and therefore not duplicated. name rawbytes unique and public name for this account. default blank. the name encoded pascalcoin encoding. type word used differentiate accounts for different purposes. layer- protocols are established, this value will become useful. example, type= may reserved for 'chat channels' and type= reserved for 'online shop', etc. account segments the accounts the safebox are grouped segments form what called account segment. account segments are generated every time miner appends the safebox through mining. other words, the safebox extended atomically with new account segment each time new block being mined. the content each account segment are follows: element name ata description block number unsigned bits this equivalent the block number the block chain (see later section). pascalcoin whitepaper pascalcoin architecture page element name ata description accounts array accounts fixed array (size with account numbers that are generated this block. set the current pascalcoin protocol version but may increased and/or made dynamic future versions. timestamp unsigned bits unix timestamp when generated. this value unchanged forever. account segment hash bytes hash value this block. changes every time any the accounts this account segment changes (either balance adjustment, public key changed). this validates and secures the integrity this block. block header bytes this new this data allows node recompute the total work used construct the safebox without the need the blocks. addition, the safebox contains checksum created aggregate hash all account segment hashes. this value known the safebox hash and appended immediately after the last account segment the safebox. the next block must also reference this safebox hash order valid. just with bitcoin, the integrity the financial data secured proof work using series blocks chained together. also like bitcoin, these blocks contain list transactions used mutate the financial state. however, unlike bitcoin, block does not directly reference the previous block. pascalcoin whitepaper pascalcoin architecture page instead references the previous safebox hash, which transitively links the previous block via the account segment for that safebox hash. described before, when miner wins the proof work, will publish its block resulting updated safebox that will contain new account segment with new accounts it. the miner awarded these new account being assigned the miner's public key. the block structure contains the following fields: element name ata block number unsigned bits account key public key (type, and (between and bytes) the miner list its public key which will assigned the new accounts created the block account. fee unsigned bits some all transaction fees the miner collecting mining this block the block chain and its corresponding account segment. protocol version unsigned bits protocol version protocol available unsigned bits protocol number that can apply the miner owner this block (for future compatibility purpose protocol upgrades) timestamp unsigned bits unix timestamp this block was created compact target unsigned bits this the difficulty level the miners must obtain the proof work. nonce unsigned bits the nonce used miners get the required result with the proof work. (ie: with the hash having number leading bits just with bitcoin) previous safebox hash bytes value the previous safebox hash from which the next safebox version created from. operations hash bytes merkle pascalcoin whitepaper description block number generated the miner. tree hash (see below) pascalcoin architecture page element name ata description proof work bytes the hash this block, used for the proof work. pascalcoin whitepaper protocol version limitations page tat pascalcoin, every time block updates the safebox new accounts are appended the end the safebox. these accounts are awarded the miner "secondary reward" alongside the usual block reward. these newly generated accounts are then distributed ordinary users via market mechanisms. actual ownership exchange account occurs updating the key associated that account, via blockchain operation. the bearer the private key which corresponds accounts public key the authorized owner that account. since the introduction pascalcoin, this distribution workflow has proven impediment adoption due to: exchange-pasa problem: most users acquire their pasc from exchanges, not through mining. typically, after user buys pasc exchange they then attempt withdraw from that exchange into their wallet only find out they need pasa. since pasa assets are not traded established exchanges, users resort otc markets chat rooms/forums prone human error and fraud. exchanges are reticent trade pasa due their indivisible and non-fungible properties. pasa assets mirror numismatic gold markets more than bullion. result, pasa are better suited for auction-style markets (such pascwallet.com placing them beyond the reach exchange users this point time. protocol addresses this facilitating provably safe pasa exchanging directly within the protocol. first time users can also easily acquire account via monetized api's like getpasa.com miner hoarding: due the competitiveness mining, most mining now pooled collectively into mining pools. typically, individual pool workers are awarded their yield proportion their hashing power contributions. the case pasa, this has proven burdensome for pool operators since pasa are indivisible and non-fungible assets. the additional effort required pool operators fairly distribute pasa has actually prevented distribution entirely and resulted significant hoarding. protocol now provides effective inprotocol means distribute pasa. pascalcoin protocol addresses this shortcoming implementing decentralised account sale, settlement and exchange operations within the protocol-itself. combination with pasa exchanges such pascwallet.com and getpasa.com the account distribution problems version are resolved. pascalcoin whitepaper protocol version limitations page even though version allowed nodes delete blocks after they've processed them, new nodes had download from block order prove they were the most-work-chain. result, the major promise deletable blockchain was merely the equivalent pruning. version solves this issue now making safebox selfverifiable terms proof-of-work. pascalcoin whitepaper protocol version limitations page tat lty- lat due the volatile nature cryptocurrency valuations, miners will tend migrate between coins masse based the yield-rates coins. miners change coins, time required for the difficulty adjust. cloud-mining has exacerbated this issue requiring consideration difficulty calculation. pascalcoin has enhanced the difficulty calculation algorithm better adjust with near-term sinusoidal volatility resulting from rapid increases and/or decreases hashpower. result, the blockchain will more stable, block time and daily supply will more accurate. accounts have been updated include names and type. account name case insensitive and must less characters length. account name must unique that other account has registered that name, there are pending operation which register that name. block can contain name registration for the same name, for already registered name. order avoid spoofing account numbers, account names must never start with digit. the character set permitted for account names called "pascalcoin". accounts also now contain -byte type field used distinguish accounts for various layer- applications and monetized apis. the range values for account type are between and account type reserved the default type for standard "user accounts". this new operation allows user change account name and type. the account name encoded pascalcoin and must unique empty. change account info operation registers name that's already registered, the operation invalid. there another pending operation for the same name, the operation discarded and not propagated nodes. block contains two valid operations registering the same name, the block invalid. empty account names are exempt and any account permitted nameless. this operation contains the following properties: account number the account who's name will changed account name the pascalcoin encoded name for the the account. account type word value depicting the type account network fee the fee paid for this operation pascalcoin whitepaper protocol version limitations page fee paying account the account which will paying the fee, this account must have the same public key the account being changed signature the encoding allows case-insensitive, whitespace-free names names capable supporting emails, domain names, slack channels/users such herman@sphere.com, #pascalcoindevelopment coffeetables.com, @myslackstylename, anythingwithoutspaces!!%. the character set defined as: abcdefghijklmnopqrstuvwxyz!@#$%^&*()-+{}[]\_:"|<>,.?/~ checkpointing version introduces the concept checkpointing. since all (honest) nodes will always have the same safebox after every block, possible snapshot the safebox certain intervals. these snapshots are called "checkpoints" and they are created every blocks. the key innovation that the safebox now contains the block header information every account segment sub-structure. this makes possible for node independently compute and verify the cumulative work required construct the safebox structure. does this by: verifying that all block headers link transitively chain via the safebox recalculating the total work used build the safebox using the proof-of-work payloads now present the account segment sub-structures. verifying that the total work the safebox the largest known the network. the consequence this that checkpoints can now distributed safely between nodes without the need for blocks verify them coming releases, vastly improved checkpoint distribution infrastructure will softforked called checkpoint torrenting the full process will work follows. the checkpoint persisted multiple same-sized chunks raw data. when new node comes up, will query from multiple nodes for the latest checkpoint information consisting of: the checkpoint block number safebox hash the checkpoint total work the checkpoint merkle-tree the checkpoint chunks the new node can then determine the correct checkpoint download simply selecting the one advertised with the most total work. the node then downloads the checkpoint chunks simultaneously from many nodes. during transmission, chunks are significantly compressed which greatly improves synchronization speed and reduces network traffic. chunks are then independently validated using the provided merkle-tree (see diagram below). once pascalcoin whitepaper protocol version limitations page all chunks are downloaded, the checkpoint reconstructed and verified for structural integrity. the total work then recalculated and compared the advertised total work from the beginning the synchronization process. the checkpoint turns out invalid for any reason, discarded and the advertising nodes blacklisted. the synchronization process then repeats infinitum until valid checkpoint downloaded. the checkpoint valid, adopted the safebox and the usual block synchronization process resumes. most, new node will only ever need download blocks order fully synchronized. pascalcoin whitepaper in-protocol pasa exchange page protocol provides the following new operation types facilitate the secure sale, purchase, settlement and exchange pasa assets between users: list account for sale delist account buy account change info and amends the following operations transaction (this the standard operation used transfer pasc) the purpose this new operation allow owner account designate account "for sale" much the same way owner house may place "for sale" sign outside their house. accounts can marked for public sale for private sale for public sale anyone can purchase the account executing corresponding buy account operation containing the correct funding. the first user execute valid buy account operation will become the owner that account. multiple buy account operations arrive simultaneously, the miner selects one and discards the rest. any excess funds remaining after buy account operation are credited the purchased account. buy account operation fails for any reason, those funds are never debited from the purchases account. for private sale the seller designates the buyer's public key within the listing and includes timeout period allow the buyer settle the purchase. the buyer may settle the purchase executing single buy account operation, within the timeout period, with the correct funds. optionally, the buyer may send one (or many) standard transactions into the account until the funding met, which point the purchase settled. the properties for this operation type include: pascalcoin whitepaper in-protocol pasa exchange page the account number sold the sale price the sellers account number receiving payment flag indicating whether private public sale timeout period private sale only) this value block number which the purchase must completed before on. during this period, the account frozen and only able receive funds, order protect the buyer. after this period, the account owner can delist this account and consume funds. buyers public key (private sale only) seller's signature this new operation allows account previously listed for sale delisted. account listed for public sale and settled prior the execution delist account operation, then the delist account operation discarded. account marked for private sale then cannot delisted during the timeout period, only after the timeout period. account's timeout period has elapsed and purchaser has not settled the purchase, the account will continue listed for sale until either purchased delisted. the properties this operation type include: the account number delisted seller's signature this new operation allows user purchase and settle account listed for public private sale. for public sale, the operation must include the funding equal greater than the listing sale price. the funding less than the listing price, the operation considered invalid and discarded. the funding greater than the listing price, the excess funding will credited the purchased account after settlement. pascalcoin whitepaper in-protocol pasa exchange page this operation contains the following properties: buyer's account number that will fund the purchase account number being purchased funding must equal greater than the selling price, not less. funds already present the account are deducted from the sale price. excess funds are credited purchased account new public key for account for private sale, this must match the public key the listing, otherwise will discarded buyer's signature users can optionally settle private account sale issuing standard transactions into the account being purchased. the existing transaction operation type modified follows. transaction crediting account listed for private sale and the resulting balance greater than equal the sale price, the account purchased buy account operation were executed. the account's resulting public key will change per the buyer's key specified the listing irrespective the origin the transaction. also, amount equalling the sale price specified the listing transferred the seller's account specified the listing. this update allows new users with account but with coins exchange withdraw their funds into account they've negotiated for. accounting rules the following accounting rules govern how all the interacting account's balances are mutated pre and post account purchase/settlement. let account balance pre-settlement (of account being purchased) let buyer's account balance pre-settlement (the account funding the purchase) let seller's account balance pre-settlement (the account receiving the funds) let funding amount (the pasc used purchase account) let listed sale price account pascalcoin whitepaper in-protocol pasa exchange page funding required settle purchase account balance post-settlement buyer's account balance post-settlement seller's account balance post-settlement this section illustrates common use-cases addressed protocol updates. new pascalcoin user bob new pascalcoin user and wishes hold his coins his own wallet. bob buys pasc exchange bob installs the pascalcoin wallet and creates his key (private/public pair) bob finds monetized api provider provide account bob withdraws from exchange monetized api using his public key, and receives account with funds. user wants special account bob wants specific account number. bob doesn't like his account number and wants new account with his birthday, bob finds alice selling account exchange and agrees buy from her. alice executes list account for sale operation specifying bob's public key, the agreed price and settlement/timeout period. bob's wallet recognizes alice's private listing and prompts bob settle within the timeout period. bob withdraws funds from the exchange directly into the listed account this transaction does not require payload once the account receives bob's funds the public key changed bob's key and the funds transferred alice's account. pascalcoin whitepaper in-protocol pasa exchange page miner selling accounts bob pascalcoin miner with many accounts intends sell. bob executes bulk list account for sale operation containing all said accounts sets common price, applied each account all selected accounts are now listed for public sale over time, users purchase these accounts without further interaction from bob bob then decides keep unsold accounts and executes bulk "delist account" operation account speculator selling rare accounts moby pascalcoin account collector who has acquired many rare account (e.g. and and intends sell them individually high-prices. moby lists his unique accounts party pasa auction exchange bob does not transfer account ownership the exchange alice bids for and wins moby's account action for alice does not deposit funds the exchange moby executes "list account for sale" operation for account specifying alice's public key, day settlement period and the agreed price pasc alice's wallet detects account listed for sale exclusively her for pasc alice executes "buy account" for containing pasc alice becomes the owner which now contains pasc pascalcoin whitepaper road map page road map in-protocol pasa exchange deletable blockchain checkpointing pascalcoin improvement proposal process implementation (pip) wallet ios android wallet (native) checkpoint torrenting ultra-high throughput fine-tuning optimization v-alpha testnet txn/sec fixed storage) multisig (n-n schnorr aggregate signatures) full implementation (community driven) monetized api infrastructure for service providers (community driven) pascal chat (community driven) double-spend-detection-service (for highly-reliable -confirmation transactions) pascalcoin whitepaper acknowledgements page acknowledgements the authors appreciate the suggestions and editing this whitepaper from phil champagne bookofsatoshi@gmail.com author book satoshi. pascalcoin whitepaper references page references satoshi nakamoto, "bitcoin: peer-to-peer electronic cash system" https://bitcoin.org/bitcoin.pdf albert molina, "pascal coin: crypto currency without need historical operations" https://github.com/pascalcoin/pascalcoin/raw/master/pascalcoin%white%paper%-%en.pdf copyright pascalcoin whitepaper