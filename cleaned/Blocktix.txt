blocktix: decentralized event hosting and ticket distribution network florian mathieu and ryno mathee july abstract blocktix trustless, decentralized platform for ticket sales and event promotion. the system operates through smart contracts the ethereum blockchain, enabling users verify the validity tickets for given event, ending counterfeit tickets. introduction the core purpose blocktix provide decentralized ticket distribution network. companies and individuals can buy and sell tickets through unforgeable cryptographic signatures stored the blockchain. with this approach, have simplified the process buying and selling tickets and removed the infrastructure centralized servers. both parties can therefore enjoy the lowest fees and downtime due the decentralized nature anyone who possesses enough tokens can create events and sell tickets online without worrying about any the additional complexities that are typically encountered. blocktix provides user-friendly interface for the execution smart contracts, bringing its advanced capabilities the masses with intuitive application. this approach reduces the complexity the interaction with smart contracts and provides additional layer security minimizing the possibility fraud malicious third party interference with the application due the standardization contracts. background according meeting professionals international, "the american meetings and events industry directly and indirectly supports million jobs and generates almost trillion year direct, indirect and induced spending..."[][], thus there market for events systems. with current systems, event hosting and specifically the distribution tickets costly and cumbersome procedure. simplify the process, event promoters use companies such ticketmaster. distribution services add surcharge much the ticket value. promoters must advertise the event through variety mediums fill the venue too. the advertising costs event can regularly exceed the total event budget. ticket fraud and counterfeiting losses over billion[] per year have caused the need for trusted third party intermediaries the peer-to-peer transfer aftermarket. these intermediaries charge additional %-% the transferred value. concept blockchain the blockchain the heart our application and tasked secure wide range features such payments, tickets, and the event registry. blocktix will built ethereum[] because it's one the few figure mock the event page with the ability purchase tickets and vouchers. blockchains that provides efficient and practical toolset for smart contracts. the default payment gateway our application, meaning tickets have purchased with the eth cryptocurrency. certainly possible add other payment gateways such credit cards and bank transfers through third party integrations. the application will constructed such way that certainly possible add other payment processors, but this outside the scope this whitepaper. token token creation blocktix rewards all participants the crowdfunding with tokens (tix) return for the amount ethereum they sourced blocktix. tix will coupled set usd rate, with tiers available: ,$, and per tix. each tier will have total tix available. token details total tix will created during the crowdsale, which (.. tix) will sold publicly. the remainder will accredited to: the blocktix foundation(%), early investors and founders (%), and promotions/promoters (%). funding needs the minimum funding for blocktix will ..$. the maximum cap will ..$. the desired capital sourced then the tokens will issued. these will remain locked for two weeks after the end the crowdsale. the target not met, then all the ethereum and bitcoin that was previously raised will return their respective owners, minus transaction fees. token reward model ticket fees anyone that owns blocktix tokens token holder and granted several benefits over non-token holders. participating the event verification process, the token holder will receive reward for the work being done. the initial reward will the tix that used back the event. advertising anyone will able purchase advertising rights for event. these funds will distributed all tokens holders who took part the event verification process, proportional the amount tokens they own. the event feed always starts with two "promoted events". when event being promoted, has chance appear one these spots. let sequence transactions sent advertising contract for event first you would calculate the total amount the advertising contract for given event has received summation all transactions for given event percentage wise, the amount views for given event should equal roughly every time the event feed updates new number generated pseudorandom number generator (prng) ranging between and sum. sum figure when user starts the application will load all the events proximity event feed the system keeps track all the ongoing events and displays these the event feed. variables such distance between the event and the user, starting date, category tags, and advertising fees determine the hierarchy within the list. location based events happening near the user are shown first, these are more likely attended. the distance between event and user increases, the location factor becomes less influential, and the categories start matter more. category based events can also tagged with multiple categories their creator. user can 'like' categories such that these are more likely show the event feed. optionally could track the behavior the user offline and build the list categories without visible user input. advertising there will always two advertised events every page the event feed. there guarantee that the advertised events take place near the user that they share any relevance categories liked the user. mandatory tix the creator event must pay mandatory tix for show the event feed. this measure prevent spammers from overtaking the event feed with bogus events. the mandatory amount subject change. also worth noting that technically possible for someone other than the event creator pay the mandatory amount, allowing the event show the feed form charity. user interface the user interface will created html and javascript. currently, have created the designs the basic pages get clear idea how would look. the main key ingredients are beauty and intuitiveness. one look the application and should immediately clear how works. event page you can see preview the design for the event page, figure two page figure ethereum contracts store the hashed references files stored ipfs. ipfs ipfs public peer-to-peer distributed file system. anyone can upload files free cost. you can even turn off your computer, and will still available everyone due its network topology (given that the file pinned another computer). over the past few years, has accumulated broad support for many programming languages, javascript being one them. this makes ideal candidate build our infrastructure upon. the reason need adopt ipfs because most blockchains, ethereum included, not support sharded databases, rendering them unsuitable for the storage larger data. this integration will enable event administrators customize their event pages with images and videos without losing the decentralized topology. contracts the blocktix smart contract programming language will solidity[] currently the flagship language ethereum and the most popular language for smart contracts. blocktixregistration the registration contract tasked store the latest addresses the blocktix and eventtemplate contracts. acts update mechanism and can only changed the blocktix administrators through voting the token holders. the voting long term goal and expected added near the end the development process such that the system can sustain itself. blocktix updates when development complete, token holders will tasked take responsibility for updates blocktix contracts. they will have regulate the system approving declining proposed changes contracts. wide range variables are subject change the token holders that apply for every new event contract. blocktix the blocktix contract houses array with all event addresses and stores global variables that are enforced the events and tickets. these include but are not limited ticket fees, required tix enlist figure the blocktix structure can updated the token holders who update the blocktixregistration contract which essentially acts update contract event the feed, and most elements related the advertisement. blocktixevent event creation the blocktixevent contract what houses everything related one specific event. brought into existence the blocktix contract when creating event and the creator address given administrator privileges. only that address granted the permission change settings such name, location, description, photos, etc. nevertheless, possible add extra administrators the event. anyone will able create event, but will only show the event feed the event backed minimum tix. the required value for listing will voted for the token holders every three months. non-token holders can still ask token holders back the event, willing token holder could allow anyone make use the event feed. security there chain contracts when creating new event the system. this ensures the sanity the contracts being loaded and thus essentially disallowing attackers from launching their own malicious contracts and inserting them into the blocktix system. event creators call the blocktix contracts (retrieved blocktixregistration) which turn create the blocktixevent enforcing the usage the eventtemplate, thereby removing the possibility tampering. ticket creation the contract also the entry point for anything related tickets the particular event. the event creator has the possibility adding multiple "ticket types" their event contract such that they can differentiate better and offer multiple types tickets. for example, they could offer early bird entry tickets, day pass tickets the event for multiple days. each tickettype maintains array with all the valid tickets addresses, allowing the autonomous sale tickets the blocktixevent contract itself and allowing event administrators manually insert tickets. the latter opens the gap for third parties that wish integrate with the blocktix network. figure flowchart user creating event high level overview the event contract stores array ticketcategory objects, which turn stores array tickettype objects. the ticketcategory object merely used optimize the category system. the tickettype objects store most the information, including array the ticket addresses all previously sold tickets that specific tickettype. ticketcategory tickets are not limited entry tickets. they can also utilized vouchers for food and drinks. that's why blocktix provides categories allow clean separation tickets and consumables. name (name category examples: tickets, food, drinks, ..) types (array tickettypes. examples: entry ticket, hamburger, beer,...) tickettype here overview for all the properties tickettype would offer which are all customizable the event creator. name (name ticket type) description (description ticket type) quota (maximum amount tickets per type) price (price ticket sale) startvendingtime (start date time ticket type sales) endvendingtime (end date time ticket type sales) startentrytime (start date time ticket type entry) endentrytime (end date time ticket type entry) owners (amount tickets sold) paid (mapping paid prices addresses) refundable (is the ticket refundable) ticket trade the tickets can freely traded directly between users without risk counterfeit. sending ticket friend easy since you just need the friend's ethereum address. selling tickets for eth can arranged such way that both the transfer the ticket and the payment only happen together. this means that the ticket only transferred the money transferred too, and the other way around. this removes the risk getting scammed due the other party not upholding their end. ticket auction the event creator can also auction tickets maximize revenue case scarce ticket supply allow the market mechanism find equilibrium. ticketbids within the blocktixevent array ticketbid objects. tracks the bids users and has the following properties: owner (address the bidder) buy (boolean bid buy) price (bid price) ticketid (id ticket type) the buy variable place such that can extended allow sell bids well. this essentially extends the structure enable both the ticket auctions the official event creator and the free ticket market where people can trade peer peer. whenever bid placed, the array updated. it's the only bid the array, then time interval starts (set the event creator) which expiration automatically sells the ticket the highest bid the array. the highest bid then removed, and all others remain untouched. new interval then starts, and this loop continues until the array empty. ticket verification ticket verification easy verifying digital signature and making sure the public key listed valid ticket for the specified event. there need for event organizers hire purchase specialized equipment verify the validity tickets. smartphone with camera and internet connection can used scan the ticket code the entrance the event and subsequently execute the smart contract that deactivates the ticket. the contract then executed the ethereum network prevent anyone re-using the code gain entrance. possible attack vectors fake events although tickets are cryptographically secure, there risk that they are for the wrong event. this can happen users could get tricked into believing they are buying tickets for real event, not realizing malicious seller has created fake, duplicate event. there are few ways minimize this attack from occurring, but most them rely user awareness. several indicators will placed the event page that make more obvious spot fake events. one them the amount tickets that are already sold. big events most likely will already have sold decent amount tickets. another precaution include other events happening the same location. fake event picks the same location, then will more visible both the real event and the visitors. additionally, the event has website, could host hidden confirmation identifier proving that the event you are browsing has control the mentioned website. events will verified blocktix token holders, requiring them approve events. event reporting features will allow users who notice fake events report them, kicking off new vote for verification. invalid events will removed from the system this will the easiest, most reliable and fastest method for getting rid them. third party scanners could also created compare and red flag events they are too similar. references kristi casey sanders. the true value the u.s. meetings and events industry. url http: //planyourmeetings.com/the-true-value-of-the-u-s-meetings-and-events-industry/. pwc. the economic significance meetings the u.s. economy, internet fraud n.d. wikipedia, the free encyclopedia. url https://en.wikipedia.org/wiki/ internet_fraud#internet_ticket_fraud. richard cascarino. corporate fraud and internal control. vitalik buterin. ethereum: next-generation smart contract and decentralized application platform. url https://github.com/ethereum/wiki/wiki/white-paper. christian reitwiessner and gavin wood. solidity. url http://solidity.readthedocs.org/.