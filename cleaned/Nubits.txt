jordan lee (jlee@vistomail.com) september www.nubits.com contents the problems being solved overview voting parking unparking interest rates custodial grants custodians buy side liquidity liquidity pool tracking trading bot use case for dual side liquidity provider custodian use case for sell side specific purpose custodian when lower and raise interest rates additional currencies usd becomes unstable when obsolete the problems being solved bitcoin was phenomenal innovation. for the first time individuals could hold asset without counterparty risk and transfer anyone else the network quickly and privately, desired. had some flaws, which include high cost maintaining the network and the disassociation control the network (given miners) and ownership its assets (bitcoin holders). peercoin improved upon bitcoin dramatically reducing the cost network maintenance and giving control the network the owners network assets. both these networks contain critical flaw which resolves. these networks permit the purchase scarce units used the networks which function much like shares. the value the network rises, the value these "shares" rise. this dynamic has been critical the success these networks allows anyone purchase stake and benefit from promoting the network. these networks have simultaneously been promoted currencies but have not functioned well such. currencies must have stable value effective, while peercoin and bitcoin have exhibited exceptional volatility. many argue volatility will end with the high liquidity that will accompany widespread adoption. while volatility will decrease with greater adoption, unlikely volatility will ever less than occurs with large cap stocks such google microsoft. this still unacceptable level volatility for currency. let suppose wrong and that volatility will eliminated these networks. that case they would serve well currencies but poorly shares, because they would not appreciate, nor give dividends. this would likely cause selloff these "shares", thereby introducing volatility once again. the critical flaw that peercoin and bitcoin use the same fungible unit for share and currency functions. shares must have the capacity appreciate and reflect changes the perceived value the network while currency must remain stable regardless effective. impossible accommodate these diverse pricing needs single unit. overview the solution network with two types units which are not fungible: shares and currency. shares represent ownership the network and their quantity should not change accommodate changes the level demand for them. demand increases, the price should rise proportionately. they should also provide dividends from network revenues. the supply currency, however, should dynamically adjust and down response changes the level demand for the currency that the price always stable. network with these characteristics can most easily implemented fork extension peershares. just like any peershares implementation, controlled shareholders who own nushares and mint blocks with them using proof stake. unlike other peershares networks, also verifies and transmits transactions currency units called nubits. permits holders nushares manage the quantity nubits without dependence any off blockchain mechanisms. additional nubits can created when shareholders vote and will placed the custody recipient chosen shareholders called custodian. there can many custodians the shareholders elect have and they can changed the whim shareholders. custodians may adopt pseudonym they choose so. because custodians can pseudonymous, many number and abandoned the will shareholders, third parties cannot gain control the network leveling threats against custodians. being custodian doesn't impart any control over the network, only over finite quantity network revenues. nubits created and sold are network revenues that can used custodians for operating expenses and dividends. dividends will paid only peercoins, which means custodians must purchase peercoins preparation distributing them. therefore, demand for peercoins will increase proportionate the amount dividends paid nu. conversely, the system can reduce the available supply nubits through separate mechanism called parking, where holders nubits volunteer take their currency out circulation for user configurable period time exchange for monetary incentive. this similar extending loan interest. shareholders can dynamically adjust the level interest offered parked nubits (which varies the duration) voting for whatever yield curve they think appropriate when they mint block. when organic nubit demand decline, shareholders will create synthetic demand for them offering interest parked nubits. some entities that would have interest nubits currency will purchase them simply park them interest, thereby compensating for the decline organic demand. shareholders will raise the interest offered whatever level required that organic and synthetic demand combined will not decline. organic demand increases once again, the interest offered will reduced until organic demand reaches its previous peak, which time interest will offered for parking. the nubit price will suppressed one usd from custodians maintaining huge sell walls one usd and supported one usd shareholders offering interest parked nubits create synthetic demand when there are market signals that demand decline. while early the network's life minute minute nubit demand could decline suddenly and cause the price momentarily drop below one usd, shareholders will quickly push the price back into the custodial one usd sell wall increasing the parking interest rate. this will punish anyone who sold below one usd and reward anyone who purchased below one usd. soon will become clear that selling nubits below one usd always losing trade and buying them below one usd always winning trade, which will prevent its decline. special type custodian can compensated provide deep liquidity sellers nubits one usd, preventing the price from falling even the case sudden drop demand that too quick allow for interest rates raised. voting shareholders have the privilege voting when they mint block. the client and user interface will permit shareholder configure their votes manually. optimal voting values may change quickly shareholders may elect use automated data feed from source they have decided trust with their vote. variety entities will provide data feeds their recommended votes, providing diversity and competition this automated voting advice. when they mint block, their votes (manual from data feed) will placed the coinstake transaction the blockchain. each three types votes should user configurable manual from data feed individually. user may choose data feed for interest rates votes but manually enter other votes, for instance. votes are weighted the share days (known coin days peercoin) consumed minting the block and the case motions and custodial grants, must also receive votes out blocks order pass. more will said about vote counting the interest rates and custodial grant sections this document. shareholders may place three different types votes: custodial custodial grants grants nubits nubits: vote grant custodian nubits, shareholder will simply place the currency type (only nubit for now but later may add currency units pegged eur, gbp, etc), public address and grant amount their user interface, which will accept multiple entries once. shareholder could simultaneously vote grant one custodian million nubits who promising dividends shareholders while voting grant another custodian nubits for core software development. custodians are identified only nubit address the protocol. when shareholder mints block, his vote will placed the pos coinstake transaction series currency type values, ripemd- values version public address that bytes length) and uint values indicating the number satoshis grant. pay-to-script-hash address may substituted for the ripemd multisignature transactions are being used. understand how grants custodians will created and how votes are counted, read the custodial grant section. yield yield curve curve for for parked parked nubits nubits: rather than voting for single interest rate, shareholders should cast separate interest rate votes for variety durations. durations voted will begin with block. other durations voted will successive doublings: blocks, blocks, blocks, etc. uint will used represent the block count. value will mean block, will mean blocks, will mean blocks, will mean blocks, etc. the interest rate vote will expressed uint the number hundredths satoshi pay per nubit parked. therefore, the interest rate vote placed the coinstake transaction will come from two dimensional array where the first dimension consists uint and uint shareholders can effectively set minimum and maximum parking interval the block counts that they omit from their vote. consider this sample interest rate vote which uses decimal notation: duration duration code code interest interest rate rate (satoshis (satoshis for for entire entire duration duration per per nubit) nubit) duration value will interpreted blocks, blocks, blocks etc. with meaning blocks. this shareholder voting for the premium zero for (duration code and fewer blocks. likewise, the shareholder voting for premium zero for (duration code and greater blocks. user can park nubits for any duration for which the premium not zero, such blocks blocks. these cases weighted average the adjacent premium votes will used calculate the exact premium. the client user interface will feature interface that allows the user add manually configured interest rate votes for each doubling interval time. duration code will converted block count and then interval time (presented days for instance). instead entering number satoshis, the user will asked for annual interest rate which can converted hundredths satoshis the client. duration duration code code number number blocks blocks approximate approximate time time minute minutes minutes minutes minutes minutes duration duration code code number number blocks blocks approximate approximate time time hour hours hours hours hours day, hours days, hours days, hours days, hours days, hours days, hours days days year years ... ... ... the park rate vote interface should feature button add shorter duration and another add longer duration. when either one these buttons clicked the first time, the block duration appears grid. additional rows representing adjacent durations appear the grid appear above below depending which the two buttons clicked. all other durations will implicitly zero when value entered. the amount time each block count will consist should calculated and put that time value the and interpret block counts the code. next each duration text box enter the interest rate the user would like for that particular duration. bear mind that while will have minute block spacing initially, expect this change try write the code that doesn't have changed the pos block target spacing changes later. motions motions: because motions can take any form whatsoever, they cannot enforced protocol. attempt made so. rather, the protocol can only record votes for motions and which can then examined verify whether particular motion has been passed. will left shareholders ensure that motion which passed implemented. motion may proposed literally anyone. though will likely composed text, can take the form any electronic document file. ripemd- hash the motion should constructed hexadecimal chars length) and distributed with the motion. vote for motion, the hexadecimal characters should entered the user interface acquired from data feed which will require bytes space when placed the pos coinstake transaction the blockchain. motion which receives vote out any consecutive blocks and the majority share days (coin days) those consecutive blocks considered passed. blockchain explorer (which will fund the development before initial release) will find and display links motions passed. the pos coinstake transaction will limited bytes length the protocol, although typically will around bytes. addition votes and coinstake will contain the actual interest rates that apply parked transactions the block (in addition the minter's votes). parking parking many ways comparable lending interest, where holder nubits volunteers have all the outputs associated with particular address placed parking transaction exchange for promise from the network that when the funds are unparked they will receive premium, which certain quantity nubits. when nubits are parked, the user will select duration that they will parked for. the protocol permits nubits parked for any number blocks. they will unspendable for the duration selected via op_return transaction. this has the effect reducing the monetary base for the duration that funds are parked. said another way, increases demand for nubits some entities will desire have them for the sole purpose parking them. this mechanism can used increase demand for nubits ensure the price does not fall below one usd when organic demand decline. the blockchain, parking transactions will marked such and include the duration the parking number blocks. the number blocks output parked can any non-zero positive integer. unparking when parked nubits mature (the duration their parking passes), the client will automatically create coinbase transaction that pays them the interest and they will automatically restored user configurable address using the information the op_return transaction they were parked in. the client will track all parked outputs contained the local wallet including how many blocks they have until maturity. this will updated with each new block received created. when parked output the wallet becomes mature, this interest coinbase transaction will generated. clients that receive this coinbase transaction will examine ensure that corresponds interest payment owed but not yet paid (since the blockchain shows what interest should paid and what has been paid). bitcoin and peercoin, coinbase transactions are mechanism used create new coins that are proof work block reward. will adapt coinbase transactions create nubits interest payments. interest rates offer pay interest the mechanism used provide incentive nubit holders park their funds. when nubit demand growing beyond all previous peaks demand, anticipated that shareholders will offer interest parked nubits. when demand for nubits decline, shareholders will vote offer interest for parked nubits. shareholders will offer enough interest create enough demand for nubits support the price one usd. shareholders don't need offer single interest rate for all durations. they can set different interest rates for different durations, creating dynamic yield curve. the way shareholders will vote for this discussed the voting section. custodial grants when shareholders vote grant custodian certain amount currency, called custodial grant. these are created using coinbase transaction create new currency the custodial address voted for. when clients check whether custodial grant sent them valid, they will check the expansion coinbase ensure matches the custodial address for which they will have already received votes for and that matches the custodial address for which the majority coin days out the last blocks (including the transmitted expansion block) have voted for. custodial grants are evaluated currency type, address and quantity currency. any one these three elements vary, considered different vote. nubits will only created particular address once. shareholders wish make multiple grants single custodian the custodian must use different address for each grant. custodians custodians will behave somewhat like politicians running for office. they will say: vote give quantity nubits address bdsddnermedksmesmkdggu. when receive them will and with them. some custodians will use their nubit grants fund development the core protocol. others will use the funds fund other software development that will benefit nu. possible custodian could use grant start nubit lending institution. another custodian may compensated provide deep buy side nubit liquidity. most importantly, some custodians will use revenues buy peercoins and distribute them dividends. all custodians will sell the nubits granted them the price one usd. likely custodians will demonstrate they hold substantial quantity nushares that shareholders know custodians' interests align with their own. likely that some point custodian will disappoint shareholders, but the damage they can cause limited the value the grant they have already received. custodian can collection individuals entities utilizing multisignature transactions custodial grant addresses. custodians receive grants from shareholder voting. refer the voting section for more details. buy side liquidity important that deep nubit liquidity exist one usd, both the sell side and buy side. custodians provide the sell side liquidity they place nubits granted them for sale. this leaves the buy side, the side where liquidity supports the price one usd. while the market will naturally have buy side, may thin, particularly when demand for nubits decline. pool liquidity needed stabilize the price, assure holders nubits that they can exit large position will and also needed provide the signal raise interest rates before the price has chance drop below one usd. for instance, there total pool buy side liquidity million dollars, and demand for nubits declines, the buy side liquidity will begin consumed holders nubits sell. shareholders need gain awareness this pool decreasing, will their signal raise interest rates increase nubit demand and replenish the buy side liquidity pool. important that shareholders increase interest rates enough before this buy side liquidity consumed, because that occurred, the price could drop below one usd briefly. liquidity pool tracking provide maximum decentralization, each person organization providing liquidity should custodian. the nubit address they receive grant will used sign messages. new rpc called liquidityinfo will implemented. the purpose calling the method have the client propagate the order information through the entire network clients. the goal have all clients completely aware the size the buy and sell liquidity pool all times way that doesn't rely any centralized infrastructure. this info must accurately propagated that shareholders know whether new custodial grants are needed (to expand the sell side pool) whether interest rates must raised (to expand the buy side pool). similarly, interest rates are higher than the sell side pool can also expanded lowering interest rates. begins become unbalanced, shareholders must know they can adjust interest rates make custodial grants. either liquidity pool completely depleted, the peg will lost until the pool replenished. temporarily losing peg will harm the value the network. while the early days the network this may occur, expect able make the peg extremely reliable increasing the liquidity pool size and shortening shareholder reaction times changes the pool sizes. single supporting rpc called will employed whose signature will be: value liquidityinfo(const array& params, bool fhelp) the parameter array will have the following four elements converted the following types: char currency int buyamount int sellamount string grantaddress the second parameter needed because designed support multiple currencies (for example units pegged eur, cad etc). for now just supports nubits, pegged usd. the char value for this 'b'. the buyamount and sellamount parameters are the number satoshis the currency. satoshis nubit. the info passed into liquidityinfo should transmitted all connected peers, similar transactions. liquidity info should never recorded the blockchain, but should handled manner similar the memory pool that manages unconfirmed transactions some ways. when client started up, should receive the complete liquidity pool information from connected peer. thereafter, will listen for messages containing liquidity info that are signed custodial address (an address that has been the subject custodial grant within the last blocks (about six months)). the memory pool dedicated liquidity will maintain record for each unique combination grantaddress and currency. here are sample contents the memory pool: grant grant address address currency currency sell sell amount amount buy buy amount amount bqfqqmudzvpjejztakcsqmjltjkjvj fyefmcyzdjtbhlauegdxekxenjj pfwuxdfgaxfrubcgexghwyzaawejcx whenever the trading bot placing order, cancels order, order filled, will make call the liquidityinfo rpc, sending out updated information about its specific portion the liquidity pool all peers. when client receives valid and signed liquidity info message, examines the liquidity memory pool see there record with matching grant address and currency. there is, the new message will replace that record. the grant address and currency does not yet exist the liquidity memory pool, should added. the aggregate liquidity pool info should displayed the client user interface. might look like this: currency currency sell sell total total buy buy total total nubits shareholders can use this info make decisions about custodial grants and interest rates. most shareholders will prefer these decisions automated, and have talked about doing this allowing them subscribe data feeds. data feed providers will use this information determine the contents their data feed. additional rpc called getliquidityinfo should have currency parameter and return the grant address, sell amount and buy amount, similar the table depicted above. trading bot only custodians will use the trading bot (nubot) and relay liquidity data other clients. within this subsystem there are two types custodians: sell side and dual side custodians. dual side custodians are custodians whose specific function provide liquidity for compensation, and they will initially only provide buy side price support. once their buy order for nbt partially filled, the bot should then create sell order for that nbt. the case sell side custodians, the liquidity they provide secondary another goal such funding core development, marketing nbt distributing peercoin dividends. they want spend the proceeds their nbt, under circumstance will they provide buy side liquidity. such custodians may also directly spend nubits fund operations, which case they would not use nubot all. the trading bot must permit user indicate they are either sell side dual side custodian. this will affect the trading bot's behavior detailed the use cases below. use case for dual side liquidity provider custodian first someone who wishes fulfill this role must seek shareholder approval via the custodial grant mechanism. say particular liquidity provider custodian has million usd wishes use provide nubit liquidity. would expect compensation for lost opportunity cost (he could otherwise invest those funds rental property, stocks bonds) and for the risk loss via exchange default, such have seen with mt. gox and others. while the market will continually reprice this, let's say our case the prospective custodian decides return every six months fair compensation for lost opportunity cost and risk exchange default. so, promises shareholders provide million usd/nbt worth liquidity for one year exchange for nbt. shareholders approve this using the grant mechanism and granted nbt. now must provide million liquidity constantly over the next year. alternatively, once shareholders have sufficient credibility, lpcs may compensated after providing liquidity services. lquidity may provided through single exchange multiple exchanges. let's say does this with single exchange. opens account with the exchange, then deposits million worth btc. exchanges the btc for usd. now ready make use the trading bot. appropriate exchange will expose trading api and nubot must implement the api for that specific exchange. each implementation specific exchange api should implement interface called iexchange standardize the way the trading bot interacts with these diverse exchange apis. doing this will allow the custodian enter authentication information into the trading bot for his exchange account. will then use the user interface our trading bot place buy order for nbt the exchange. the price will not exactly one usd. will one usd minus the exchange transaction fee. the exchange charges transaction fee, will place buy order for nbt price usd. let suppose his order partially filled the amount nbt. now his exchange account will contain usd used fund order for nbt. there will also nbt the account. the trading bot should automatically and immediately place these nbt for sale price usd (one usd transaction fee). this order fills, then the bot should use the usd proceeds immediately place buy order for nbt usd. all funds should continually order and the custodian's funds should not depleted transaction fees. when order placed, canceled filled (even partially), the liquidityinfo rpc must called the client, which will detailed below. use case for sell side specific purpose custodian some cases custodians will spend the nubits directly and not use the trading bot all. for instance, core developers accept nubits compensation then jordan lee will simply distribute nubits granted him directly without the need for any exchange. let's examine the case where nbt custodial grant given for the purpose distributing shareholder dividend peercoin. such custodian will deposit nbt single multiple exchanges. our use case will use single exchange. once the nbt deposit credited, the custodian will start the trading bot, indicate they are sell side custodian and indicate that orders should created, although nothing specific about the order should entered the user. the trading bot should offer the entire balance nbt for sale using the formula one usd transaction fee one pricing increment. let's say our exchange has transaction fee .%. some exchanges allow the fee discovered through their api, while others not. the fee can found through the api, should. not, the user should asked specify the transaction fee. let's say this exchange supports decimal places its order book the nbt/usd pair. using our formula above, the trading bot would place sell order for nbt price the reason should instead that want dual side sell orders executed first, their funds can returned providing buy side liquidity. each time order placed, cancelled filled (even partially), the liquidityinfo client rpc method should called. details about this method can found the liquidity pool tracking section. calling liquidityinfo will have the effect transmitting the size the buy and sell liquidity pool the local trading bot managing all known peers. when lower and raise interest rates have described the mechanisms which pools buy and sell side liquidity will created and maintained. when the sell side pool decreasing relative the buy side pool, interest rates should lowered decrease demand. when the buy side pool decreasing relative the sell side interest rates should raised increase demand. how much raise lower interests cannot determined with perfect accuracy, but can constantly readjusted maintain the liquidity pools within certain range proportions one another. history will also provide useful information about how much adjust interest rates for given change the liquidity pools. when the sell side pool decreasing and interest rates are already zero, this the ideal state the network necessitates the creation additional nubits (to enable continued suppression the price) giving revenue the network. additional currencies after the initial release nu, possible that additional currencies will added. designed permit this with very few code changes. for instance, new currency pegged one euro per unit could added. currency where the peg rate altered adjust for inflation deflation also possible, creating stable currency that retains purchasing power over the long term. the protocol enforces that each currency not fungible with any other, meaning inputs and outputs must the same type and cannot mixed. the same mechanisms used with nubits (custodial grants and parking) will used stabilize the price other currencies. voting for custodial grants and parking yield curves will completely independent nubits. shareholders can simultaneously place votes for many currencies they like. usd becomes unstable regarding the scenario usd becoming worth nothing otherwise becoming unstable and unsuitable target peg: while not think this likely the near medium term, possible. would like note that hope this will not occur while usd used its present role the world's reserve currency, the global instability would cause would devastating humanity. nubits will not cause usd hyperinflation. successful will induce the federal reserve more efficient and compete better, which will benefit nearly everyone and make our world much more peaceful. the edge case that usd hyperinflation does occur, shareholders may that time pass motion peg nubits another currency, commodity basket goods. when obsolete while bitcoin first generation cryptoasset, peercoin was the beginning the second generation defined proof stake. heralds third generation cryptoassets featuring stable value managed shareholders. will there fourth generation? likely. not yet know what will its defining characteristics, when will arrive whether will make obsolete. more adaptable than bitcoin peercoin with its voting mechanisms and shareholders are likely devote considerable revenues updating well research and development. while believe the system can likely sustained for very long time, would foolish believe could last forever, century after century. someday will replaced superior system based technology not foreseeable today. when this occurs, nubit demand will decline permanently. the end the currency will marked interest rates rising unprecedented highs and then going still higher until the vast majority nubits are parked. when market participants reach unanimous consensus that nubits are worthless, then they will suddenly drop zero value from one usd. long small group speculators believe there even small chance nubit demand will reach new all time high the price will remain one usd. the currency shows signs stress and serious decline levels use nubits will pass from ordinary businesses and people speculators willing take large risks for large rewards. ownership nubits will centralize somewhat the currency shows signs stress. failure the currency not synonymous with failure the network. there are other currencies offered nu, they will continue unaffected. the space between now and obsolescence, there much that can benefit shareholders and its users. finally, should noted that experimental software this point. may not work intended. however, shareholders will tenacious repairing any defects that are found.