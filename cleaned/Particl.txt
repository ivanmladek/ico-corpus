decentralized private marketplace: draft ido kaiser abstract-- the online services use are increasingly demanding more our personal data, disturbing trend that threatens the privacy users global scale. entities such google, facebook and yahoo have grown into colossal, seemingly unaccountable corporations monetizing their users' personal data. these entities are charged with keeping said data secure and, the case social and economic interactions, safeguarding the privacy their users. centralized security models are not applicable the new generation technologies such bitcoin. this paper discusses system which combines bitmessage-style network with anonymous payment schemes create privacy-centric marketplace. furthermore apply multi-signature escrow technique involving insurance deposits should which deter fraudulent actors from participating trades, given that their incentive make profit. introduction satoshi nakamoto, the visionary and creator bitcoin[], originally intended that bitcoin paired with marketplace, evidenced beginnings market framework included early snapshots the bitcoin codebase.[] the market related code was eventually stripped out however, presumably decided focus first creating his worldchanging currency. the concept decentralized marketplace itself not novel, there have been small set academic constructions and even serious attempts creating them.[], [], [], they either propose solutions that scale extremely well and neglect the privacy implications, they propose very privacy conscious solutions that not scale well. privacy and efficiency are often odds with each other, "to hide the signal there must noise". tor exemplifies this well, the traffic pushed through various nodes with several layers encryption before arriving its destination, deliberately inefficient but the privacy provided the trade-off well worth it. bitcoin understanding the high level architecture bitcoin's blockchain prerequisite, more specifically the structure (multi-signature) transactions and some degree the accompanied script signature language. bitcoin marvelous invention but nonetheless the link-ability transactions worrisome for maintaining privacy completely public ledger. re-iterate, the transactions and data they carry public and one has more careful comparison the traditional model where only one more entities are control. more generalized approach used this document utilizing the word blockchain, what follows built the kaiser with the particl project, department research and development code particl.org structure provided the bitcoin blockchain but equally applicable any derivatives, meaning the marketplace indifferent about the underlying cryptocurrency used for payments. ii. high level overview the overview consists two main components: blockchain and data storage network. technically speaking these networks can operate over the same set nodes. but for clarity separate them highlight that does not have the same set. blockchain the blockchain typically tasked with processing payments but for our purpose will also storing the marketplace index and the identities. new privacy enhancing techniques have spurred the wake recent revelations surrounding corporate blockchain analysis firms and government surveillance. the most notable inventions obscure the origins, destiny and the amount transaction. signature schemes like snarks and ringct prove ownership output without conveying which specific output was spend yet without infringing double spend prevention. data storage network the data storage network (dsn) tasked with storing market listings well messages between sender and receiver and all other accompanied data (such but not limited images and videos). sensu stricto the market listing references, stored the blockchain, are also protocolagnostic, simply meaning can handle different dsn protocols such bitmessage, ipfs, https... however advisable use one main protocol prevent segmentation from occurring, which can potentially create interoperability issues between clients and may negatively impact privacy due smaller sized network. bitmessage protocol[] used example because the message mixnet simple understand yet theoretically offers resilience against powerful attackers who aim undermine privacy analyzing traffic. message traveling across bitmessage network does not explicitly reveal any metadata whom might the sender receiver. other protocols such bittorrent, ipfs, kademlia and other dhts always leak some information about which node requesting which data. the bitmessage approach snarks are technically not just signature scheme, but for the sake simplicity and the light transaction signing reduced merely that. table ormat the deletion listing "everyone stores copy everything" not viable method for markets with storage requirements that exceed the performance average computer. return dellist item listing protocol iii. blockchain market index the blockchain stores references market listings, the actual data delegated the dsn. the 'protocol id' specifies which dsn protocol has used gather the data. the 'listing id' unique identifier used retrieve the content from the dsn. more specifically the hash the data retrieved, serving authentication mechanism against the dsn, ensuring the integrity. the hash must abide the multihash format, such that multitude hash functions can used.[] public key 'item pk' attached and used sign the listing registration transactions, this allows for multiple listings grouped one item and creates window opportunity for future integrations such reputation reviews[]. worth noting that the term 'data' this paragraph refers encrypted(content), where encryption handled the software interacting with the dsn. technically encryption not required for public marketplace, since anyone can decrypt the message rendered obsolete. note that the registration transaction must signed for 'item pk', this provides authentication and prevents adversaries from adding listings 'item pk' without having the corresponding private key. see 'index constant reference' the appendix. protocol specified then only the protocol for that respective listing will removed. note that reglist and dellist are 'virtual' opcodes, they are always after return, meaning there requirement implement new opcodes into the scripting language the blockchain operating on. this draft does not yet include information pertaining the details how categories should work. ideally this also stored the registration transaction, allowing categorize listings without putting unnecessary stress the dsn network. performing searches, especially full text ones, over decentralized networks remains hard problem. table ormat the registration listing the current system does not support linking items identity. other words, buyers have way see what items one specific merchant has for sale. the primary reason disable wide category passive analysis techniques that this could enable. the time which listings are registered the blockchain for example can reveal the timezone the merchant given they have posted enough items the network. identities also aggregate data about the possible funds the merchant when registering listings. more nuanced vision required balance this issue. insinuating that the listings can not linked each other breeds false sense security the merchants. time, image and linguistic analysis can provide crucial trophy information passive adversary, generating fairly unique fingerprint that hard reduce through software design. these are issues related the input humans and only can only dealt with certain degree. the defacto removal image metadata for example can greatly reduce the fingerprint, auto correcting words can provide improvements linguistic analysis. branding and name awareness are common practice todays world and are vital good working the market. improves the overall level trust quality merchants can build long term relationships with their customers. therefore having identity system trade-off worth having, the economic benefits outweigh the seemingly small negative consequences privacy, given that you take the analysis techniques into account. return reglist item listing protocol transaction using the above mentioned script signature unspendable therefore the output also not added the utxo database due return. the fee however available the actors that ensure consensus, miners the case bitcoin. the fee determines the duration for which listing active, serving mechanism expire and automatically garbage collect references. the inputs the listing registration transactions would reveal the financial history whoever initiated the market listing thus payment scheme which obfuscates the origin required maintain privacy. another optional approach could require short pow phase instead fee, including adjustable difficulty arguably like mining blocks, this prevents network spam yet has the additional benefit that eliminates any potential trace the financial history whoever created the listing. maintain interoperability with bitcoin derivatives, did not make this the primary option. see 'input correlation attack' the appendix. only the item public key present the deletion transaction then all the listing id's for that respective item public key will deleted. additionally listing specified only that instance will removed. additionally private payment scheme the transparent nature the bitcoin blockchain can potentially give away trophy information about the finances the transaction creator. therefore payment scheme such ringct required shield the privacy all users. worth noting that the payment scheme must provide hidden amounts prevent blockchain analysis technique that described the appendix this document. identities when listing registered the blockchain should actually follow the format described table iii. the reason for being excluded from the table the previous section was due bad formatting. gains. the net result that we've lost that value, whether was previously our wallet expected given us. table iii ormat the registration listing with identity both merchant and buyer deposit insurance amount into the multi signature escrow address. the insurance deposit percentage the sale price, throughout this paper will assume that this ratio (%). this concept ...more easily explained example: painting listed for the insurance ratio the merchant would make insurance deposit the buyer would deposit (payment) and (insurance). both actors are honest and the sale went through, then both will agree each return the insurance deposit ($) and the merchant receives payment. the insurance put the merchant introduces risk being dishonest. this concept was first used bitmarkets, this paper however proposes small modification. splitting the payment and the insurance deposit into two outputs, only time locking the output for insurances. fraudulent merchant who has not shipped item has leverage over the buyer, since the merchant has less money the escrow and thus has more lose. the segregation payment and insurance allows the buyer punish the merchant, both losing the insurance deposit. any the actors can punish the other party without making any decision about the payment output just yet. this has the potential benefit that actor has more incentive punish the other they act fraudulent since the stakes seem smaller. more specifically the amount the buyer loses that moment smaller (in comparison also losing the payment output) and thus may promote faster punishment. return reglist identity flag identity item identities are required unique values, therefore implementation can follow format similar how dns systems operate. the first alternative cryptocurrency was namecoin, decentralized open source information registration and transfer system based the bitcoin cryptocurrency. the blockchain used store all dns records, this feature can leveraged store the identities our users decentralized manner, but only they wish use the identity system. implementing dns system also offers use wide range capabilities that not available through simpler nickname system. iv. mad escrow the 'mutually assured destruction (mad) escrow' consists multi-signature transaction combined with checklocktimeverify such way that will destroy access all funds within the transaction after certain interval. the script signature the outputs from the mad escrow transaction will drop all the public keys beyond certain blockheight. both merchant and buyer lose access their funds, motivating both find equilibrium before doomsday. insurance deposits data storage network: bitmessage ultimatum game the ultimatum game, first studied werner gth, rolf schmittberger, and bernd schwarze (), the proposer proposes how split pie between herself and responder. then the responder decides whether accept reject this proposal. the responder accepts, then the proposal implemented; otherwise, both players receive nothing. ultimatum game differences unlike traditional ultimatum games, there room for repetition offers creating more complex interaction and negotiation procedure. another difference that this model the money sourced the players, this adds extra psychological factors the decision making. people are likely more emotionally attached money that they have worked for, and will value more than money they get being lucky and for free. they will thus react differently than the traditional game. you'd react different about losing from your wallet than someone coming you and saying was going give you but did not". under the assumption that the players approach the problem purely rational sense then they not make distinction between loss their own money and loss potential introduction bitmessage decentralized messaging network which can leverage host listings and perform the communication between merchant and buyer. all nodes participating the network store all messages the past hours, this means anyone the network could have been the sender receiver. the benefit the decentralized topology that there are direct ties between the messages and any addresses. nodes must try decrypt all incoming messages check was destined for them. feature called 'streams' was proposed the bitmessage protocol, aimed increasing scalability but will conveniently leave this out our scope. metadata message traveling the bitmessage network does not include metadata that can reveal who the receiver sender is. only the encrypted payload, iv, hmac and temporary public key are public, the receiver message the only able decrypt the message and only for them the hmac will properly verify. weaknesses the cryptography behind bitmessage simplistic, there only one key for decryption meaning adversary can read all future and past messages once possession said key. the protocol itself does not provide perfect forward secrecy, nor perfect future secrecy. these two features should not lack from end-to-end encrypted messaging solution with completely decentralized topology, mainly because adversaries can collect all messages and store them indefinitely. can't erase the encrypted messages from third parties therefore least should use proper key ratchet and delete the private keys decrypt the messages when they're being deleted. another issue that the curve secpk hard properly constant time. bitmessage solely relies openssl the cryptographic lifting for them. recent years bitcoin core has developed their own faster and potentially more secure library libsecpk, removing the dependency openssl for the most part. another concern the fact that bitmessage (at the time writing) still uses sha checksums with their ecdsa signature. sha hash function for which the first collision has been found.[] the author this paper has disclosed this but the maintainer the pybitmessage implementation was already aware and quickly replied with upgrade plan, move sha seems planned the near future.[] improvements dual-key stealth address the bitmessage protocol can extended work with dual-key stealth addresses, the scan key can used authenticate the hmac while the spend key used generate the shared secret for encryption and decryption. this would allow for simple message verification (smv) clients, where scan private key shared trusted party, which then able scan for messages belonging the user, but the untrusted party will not able read the contents. this approach does partially reveal the dual key stealth address, full address can pieced together given that public. the chance that two stealth addresses share the same private key negligent. uniqueness scan keys not property that enforced, thus decoy addresses can created, sharing the same scan key. future and forward secrecy necessary improvement would provide perfect forward secrecy (pfs) and future secrecy for private messaging. this would possible treating bitmessage's encryption solely transport layer and instead relying encryption libraries such libsignal and noise encrypt private messages. another option implement the signal key ratchet into the core the bitmessage protocol, essentially creating more optimal solution. blockchain key distribution the blockchain can store and link public keys identity (such nickname), providing tremendous improvement over traditional key distribution servers. ad- versary would have perform eclipse attacks consensus attacks mining power for example) have chance spoofing public key for given identity. the blockchain traditionally stored locally, preventing information leakage key look ups. the act requesting key from key distribution server itself reveals that you're interested communicating with individual. improving efficiency with rmids increasing the efficiency the bitmessage protocol possible including 'ratchet message id' (rmid) the encrypted message. alice includes rmid (hidden) the message she sends bob, when bob wants reply then will publicly include rmid the header the message. this allows nodes scan all messages for known rmid's (without performing any decryption) and those matching known rmid's will the only ones they will attempt decrypting. this improvement can potentially integrated onto the existing bitmessage infrastructure prefixing the hmac hash, therefore allowing backwards compatibility. rmid's can also used, instead scan keys provide smv functionality. vi. market protocol the actual protocol falls outside the scope this whitepaper. the protocol specifications however are available gitbooks. https://public.etherpad-mozilla.org/p/wlhuapowxo vii. conclusions the marketplace proposed this paper provides extensible framework that will operate any bitcoin-based blockchain and allows for multitude data storage network solutions utilized. the field decentralized data storage constantly expanding, seems wise not commit one protocol when there are many new innovations spurring everywhere, hence generic approach was adopted. future research: data storage networks one dsn was discussed, namely 'bitmessage' because does not leak details about lookups (what listings you're viewing) other nodes. extended research will the comparison different solutions for data storage such bitmessage, kademlia, ipfs, maidsafe etc. chose discuss bitmessage this paper because the system design intuitively seems like the most privacy protective. formal academic backing this claim planned future research. scaleability however does remain concern hence the reason why dhts are necessity. private messaging any dht does remain challenge, the receiver needs made aware the hash the message able retrieve it. bitmessage and rmids can help solve this issue linking rmids hashes that can retrieved dht. future research: private payment schemes wide range academic research into payment schemes that provide privacy guarantees have been released and none them have yet achieved the holy trinity providing (a) anonymity set that every previous transaction the blockchain, (b) trustless setup and (c) highly scaleable network. appendix way mitigate spam, pow proof for example, eliminating any traces the finances merchant. amount correlation attack the amounts transactions (type see previous section) were public then would easy for passive adversary performing blockchain analysis link these transactions their corresponding listing simply matching the amount the active listings the network. input correlation attack index constant reference due obvious structure mad escrow transaction possible divide all transactions two categories: (a) normal transactions and (b) transactions that purchase item the marketplace. the second category possesses interesting characteristic for blockchain analysis, more specifically merchants are more likely use these outputs for creating new listings. this not odd perspective operate the assumption that the venture profitable and the they minimize the cashflow going and out from the cryptocurrency. for example ring signature with multiple potential spenders used fund new listing, more likely that merchants will using outputs coming from transactions type simple terms, the funds from previous sales are more likely used create new listings. naive coin input selection could aid blockchain analysis tools link financial transactions identities, given that have aggregation listings that know belong one identity. this can avoided using different this paper proposes using the index the inputs determine which the transaction signers the item key favor the more simple and static approach 'input number always the item key' the even more inefficient approach duplicating all bytes the public key the return. this allows more room for future developments surrounding the idea reputation and review. further improvement for example could have multi signature inputs for registration transaction where third party involved acting extra insurance for reputation. this would essentially allow for 'network trust'. eferences nakamoto, bitcoin: peer-to-peer electronic cash system, https://bitcoin.org/bitcoin.pdf nakamoto, strip out unfinished product, review and market stuff, https://github.com/bitcoin/bitcoin/commit/ccbdffffaceebb openbazaar, https://openbazaar.org/ dekorte, bitmarkets, https://voluntary.net/bitmarkets/whitepaper/ soska, kwon, christin and devadas, beaver: decentralized anonymous marketplace with secure reputation, iacr, https://eprint.iacr.org//.pdf max, dropzone, https://github.com/qmxhmktmpuukhfuormsmfbxpbhod/dropzonelib/blob/master/drop%zone%-%whitepaper.pdf quote made up, inspired maxwell warren, bitmessage, https://bitmessage.org/bitmessage%technical multihash, https://github.com/multiformats/multihash, andersen, erta, gneezy, hoffman, and list, stakes matter ultimatum games, http://rady.ucsd.edu/faculty/directory/gneezy/pub/docs/ultimatum aer published.pdf google, announcing first sha collision, https://security.googleblog.com///announcing-first-shacollision.html peter surda, bitmessage: move from sha sha, https://github.com/bitmessage/pybitmessage/issues/ namecoin, https://namecoin.org/docs/faq/