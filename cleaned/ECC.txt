ecc: peer-to-peer electronic cash with trustless network services greg griffith october (griffith@cryptounited.io) https://www.ecc.network ecc: peer-to-peer electronic cash with trustless network services abstract common network services are typically managed single entity with which user must request information from using the client-server model. single entity management can lead heavy censorship the entity charge decides that wants restrict the flow information the users. propose solution the issue censorship using peer-to-peer network which information publicly declared and verified everyone the network. under this design, services and information are provided based consensus valid events witnessed the entire peer-to-peer node network and are only altered added through network-wide consensus. the state networks consensus recorded hash-based proof-of-work coin age based proof-of-stake unique that service. each service's sequence events validated through different consensus network. given node not required connect all services available and will accept the longest chain when joining service proof what happened while said node was disconnected from said service. any given node required, minimum, connect the electronic cash transaction network that operates the core all other service networks their monetary exchange network. introduction since the creation bitcoin has been realized that trustless global networks can more than replace current electronic payment systems. peer-topeer global network providing information and services designed around trustless electronic cash protocol derived from satoshi nakamoto's bitcoin utilizing proof-ofstake derived from sunny king and scott nadal's peercoin can used the foundation which operate trustless common network services. using multiple consensus mechanisms built around single peer-to-peer electronic cash system, can expand transaction and network functionality create mesh network with multiple network services that are capable replacing their centralized counterparts. the project created complete this task has been given the name ecc. ecc: peer-to-peer electronic cash with trustless network services peer-to-peer electronic cash before creating trustless network services, must first define the electronic cash protocol the core the network that used monetary system every service. our basis the peer-to-peer electronic cash protocol bitcoin written satoshi nakamoto with the addition the concept proof-of-stake written sunny kind and scott nadal []. have, however, included few minor changes the proof-of-stake system and proof-of-work hashing algorithm used. the proof-ofstake system now multiplies the coin age with the value the input the coinstake transaction calculate reduction value for the coinstake transactions proof-of-stake hash. this reduction used check the hash meets difficulty constraint similar the difficulty constraint with proof-of-work mining. only the hash below the target difficulty the block considered valid. the proof-of-work hashing algorithm has been changed from sha- scrypt. network services having defined the core transaction network that will used within the ecc project, can begin address how can use additional consensus mechanisms combination with the core transaction network provide trustless common network services. all services would require their own consensus mechanism and should operate independently one another. for our purposes, will use hash-based proof-of-work coin age based proof-of-stake chain consensus mechanism for each network service. separate chains will allow for easier data pruning and enable given node only keep track data that needs. any node trying perform action chain that not the transaction chain, where payment peer needed complete said action, should include reference hash transaction made the payment transaction network. ecc: peer-to-peer electronic cash with trustless network services figure visual example multiple service networks working with payment network depending the number services user chooses subscribe to, the amount storage space disk can vary significant amount. important note that for the transaction chain, the added fields the transaction will add more than bits transaction size that references service action. not all transactions will reference service action the average size increase transaction the transaction network will much less than this. expanding transaction functionality given that our system uses electronic transactions without relying trust, can prove that any additional information provided with transaction must also have originated from the same owner the signature used sign the transaction. given node can use this property broadcast transaction containing service data service network while simultaneously proving the authenticity and origin the transaction. transactions service networks will use the same hashing function the transactions the payment network. new fields non-payment network transactions include: service identifier operation code instruction data payment reference hash ecc: peer-to-peer electronic cash with trustless network services figure service network transaction new fields payment network transaction include: service reference hash figure payment network transaction ecc: peer-to-peer electronic cash with trustless network services service identifier the service identifier -byte unsigned field that holds the number the service being used. this can expanded larger number bits more than numbers are needed forking larger number bytes field. operation code the operation code -byte unsigned field that holds the operation code the instruction being performed. this can expanded larger number bits more than operation codes are needed forking larger number bytes field. instruction data the instruction data optional variable length field that contains additional data that the operation code might need. this data should raw byte form. the more information that added this field, the more expensive the operation becomes. best not add more than needed. payment reference hash the payment reference hash optional field that used reference payment the transaction network that pays for the action specified this transaction. this hash -bit unsigned integer that should the exact value the transaction the service network that referencing. service reference hash the service reference hash optional field that used reference service action network that not the transaction network. this signifies that this transaction should pay for that action specified the referenced service action. this hash -bit unsigned integer that should the exact value the transaction the payment transaction network that paying for this operation. ecc: peer-to-peer electronic cash with trustless network services cross chain agreements and contracts cannot ensure that agreements across the different network chains are honored the node the receiving end the payment the service involves action that not stored chain. all payments for services should only redeemable once the state change the service being utilized has changed include the agreed upon operation. the payment for service must include the service transaction's the service reference hash field and the service transaction must include payment transaction's the payment reference hash field. figure payment network (top) transacting with service network (bottom) payments for service should redeemable for set time predetermined the sender before expiring. once expired, the transaction can abandoned the sender and the containing funds returned their original address. this expiration payment validity can embedded any transactions script code prevent redemption after the valid period time has come and gone. ecc: peer-to-peer electronic cash with trustless network services conclusion have proposed system for common network services without relying trust. started with core peer-to-peer electronic cash network defined satoshi nakamoto, implemented customized proof-of-stake originally defined sunny king and scott nadal, and added additional chains used consensus mechanisms for common network services. cross chain service contracts can completed canceled without the need for party centralized regulator. nodes can subscribe the services they want use prevent storing extra data. nodes can leave and join any service network will, accepting the longest chain for given service proof what happened while they were gone. all states the network can enforced with their chain consensus mechanism. references nakamoto, october bitcoin: peer-to-peer electronic cash system. retrieved from https://bitcoin.org/bitcoin.pdf king, nadal. august ppcoin: peer-to-peer crypto-currency with proof-of-stake. retrieved from https://peercoin.net/assets/paper/peercoin-paper.pdf ecc: peer-to-peer electronic cash with trustless network services