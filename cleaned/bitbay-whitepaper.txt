two party double deposit trustless escrow cryptographic networks and bitbay david zimbeck abstract--crypto-currency form decentralized digital currency that has changed the world finance over the past several years. bitbay lacks central authority and protects anonymity, while allowing relatively low-cost alternative fiat. opens the doors for international exchange commodities and has the potential change how business conducted. the signature and scripting system that bitbay uses allows for the creation smart contracts. also using signatures, possible create accounts that require multiple signatures (multisig accounts) well transactions with multiple inputs and outputs. there has been discussion some the current weaknesses with smart contracts. address these weaknesses make smart contracts immediately accessible the bitbay network. proposed, this protocol offers system commitment schemes and business protocols that greatly reduces the issues extortion and malleability from two-party escrow. introduction according the bitcoin wiki page for smart contracts [], there are some drawbacks the current protocol. weaknesses with transaction replacement can jeopardize commitment schemes. some the proposals discussed such "secure multiparty computations bitbay" atomic trading suffer from set weaknesses which has prevented the early arrival bitbay first, transaction replacement has been disabled the bitbay protocol. second, transaction malleability can completely interfere with "future" transactions mutating the transaction (txid). bitbays scripting system relies series inputs and outputs. each input certain position, has value and address, and has unique identifying txid number. the outputs can one many, and they are list addresses and values respectively. signing done using public and private key encryption thanks satoshi nakamoto's brilliant solution the "two generals problem" []. the scripting system has variety script hashes which were supposed allow for myriad different contracts []. our protocol does not actually rely those although worth mentioning. each input needs signed any associated party and, the case multisig accounts, each party will sign their portion each input. the problem not being able replace transactions gives rise many different extortion and double spend attacks. additionally smart contracts suffers from problem called "transaction malleability." before transaction broadcasted the cryptographic network, one the parties will possession the raw transaction. although the signature itself can not forged, can, however, mutated. changing small bits information, the transaction can changed sufficiently result entirely different txid. although this does not jeopardize the security the network does make future commitments base that useless. also raw transaction data exchanged before broadcasting, then one the parties can attempt submit early, invalidating some transactions. multisig accounts can traditionally used escrow requiring signatures confirm the spending any input. two party escrow multisig) can suffer from the problem extortion well. normal escrow multisig) can result collusion, bad judgment, and the usual problems which arise when entrusting third parties with your assets. this protocol system solves these problems very simple and discrete manner which will greatly reduce the risk loss, allow for trustless smart contracts, and allow trade between perfect strangers even the parties themselves can not trusted. its implications and significance the world are even beyond the scope smart contracts and cryptographic networks. this paper forms ideology and foundation for commitment schemes based risk/reward combined with naive protocols. for the first time ever, untrustworthy parties will actually compelled perform good faith. ii. the protocol the agreement for this example shall assume two parties namely bob and alice wish enter into escrow perform any type contract. perhaps bob wishes purchase bitbays using cash from alice, they decide form trustless two-party escrow. first alice generates public (p) and private key (pv) pair for the prospective escrow. alice sends request sell the bitbays bob over the cryptographic network sending, for example, the smallest possible payment she can bitbays using cipher that open the public. this cipher decodes fake address attached additional output which was actually encrypted personal message that reveals her bitmessage[] address, and result, secure communication channel can established while the same time circumventing spam. now the parties are free exchange the contract details without interference. please note, bob and alice are not limited communicating this way: they can employ any communication protocol they find suits them best. they may choose use custom public/private key protocol, bitmessage e-mail. the spirit things, choose keep communication encrypted under bitmessage for security purposes and avoid "eavesdropping." bob creates the hand shake with alice sending his new public key (p) from key pair and pv), and the same transaction details along with his first txid which will call tx. does not broadcast nor does reveal the raw transaction details. instead sends the encoded hex which results the first txid. spends inputs his choosing into normal multisig account which holds the keys. this "temporary funding account." the reason for the funding account that bob and alice want perform the transactions streamlined simultaneous fashion. they want create series future transactions. ironically, order create future transaction, you must have signed transaction. therefore, would impossible generate the future txids without the uncertainty that the second party receive signed would not sign and submit early. thus, temporary account circumvents the "early broadcast problem". since the temporary account not funded yet and alice does not have the raw version tx, would impossible submit anything the network without bobs approval. the creation process using the public key that bob sent, alice generates the new multisig account (escrow). she creates tx, which spends funds into her temporary funding account. she does not broadcast this either. she then writes that spends the inputs and into the escrow. she signs this. she then creates transaction that spends fees the bitbay miners use penalty case she breaks the commitment (timeouttx). this penalty one which both bob and alice will suffer they try play fowl cheat the deal. there are reservations about collusion with miners the case "proof stake" networks, then the funds can also sent verifiable unspendable address such bitbayeateraddressdontsendfkue. alice signs timeouttx. malleability refund for this example alice and bob agreed that the risk the party broadcasting the transactions was high risk and could perhaps mutate extort from the counter-party. thus, created alice. alice decided send larger amount destined for the escrow. she does not plan keeping this deposit. instead she writes which spends one the inputs from tx. this scenario, pays the escrow two separate denominations scripted separate outputs the same addressone for her refund and the remainder for the escrow. spends said input from back herself reward for good behavior. now, alice tries mutate the txid tx, she also invalidates her refund. this creates risk/reward scenario which can make the price extortion unbearable. one thing also note here: very common escrow will where bob and alice have equal deposit with the addition alice's bitbay that was being sold per their original agreement. so, they may escrow initial ratio this means standard. they may also choose perform micro-trading (sending many small payments instead one large one) any other form contracting. however, alice going escrow for more than bob, would make sense for her broadcast anyway. therefore that situation alice and bob may agree forego altogether. finalizing the escrow deposits now that alice has composed all the transactions, she signs them all and sends them bob. first she takes and uses cipher for encrypted message. this message she will send all the raw transaction data with the exception tx. she can know that the message secure since uses conceal the data. this communication not limited the bitbay network, although that may good way mitigate spam and automate the process. rather, communication can equally sent any medium since the only person capable decrypting bob. the case bitmessage this may redundant since bitmessage theoretically secure. bob receives this message and confirms from alice. then uses decrypt the message. now can freely review and sign everything. bob happy with the agreement, can use encrypt message for alice. now that everything signed, there are two copies timeouttx. thus, both parties can secure during escrow negotiations since the risk spread and structured according their level trust for each other. now bob sends every back alice including tx. now the transactions are all potentially valid. broadcasting and managing intercepted transactions alice now uses decrypt the final message and she then broadcasts all the transactions with the exception timeouttx. there the remote possibility that miner will able intercept the transactions and randomly mutate one the txids. the protocol includes two applications mitigate problems which could arise from this. firstly, multisig accounts also deemed psh" accounts have been described more resistant and expensive mutate []. although believe this will require lot scrutiny, nonetheless protocol uses psh accounts for every step the transaction. secondly, bob and alice will most likely using client that will automatically attempt re-sign any the broken transactions. gets broken, bob and alice could take their coins back and attempt sign everything again. timeouttx broken, they will most likely re-sign them out good faith. furthermore and more importantly, the clients themselves are naive and will plan deleting the escrow keys regardless whether destruction exists not. neither party can sure that the counter-parties client will not automatically honor the protocol violated. naive multi-party protocols will cause whole new wave thinking about decentralized computing the near future for this reason. will the basis for decentralized companies and software. finalizing escrow this juncture, the funds are now escrow. one the variables the contract was the time limit timeouttx. this time limit agreed upon advance. can measured hours, days, quite possibly the blockchain itself. (the blockchain the shared/public ledger all bitbay transactions.) bob and alice can write any transaction from here. they most likely will try cancel confirm upon the receipt the commodity completion the agreement. taking extra precautions against extortion both parties can take their own security one step further. they can choose use ambiguous funding information such western union, bank deposit, gift cards, cash prepaid debit cards. the exchange coins commodities, there are several ways conduct business without revealing the identity the parties. one simple way use public bulletin board bitmessage channel post their contract the world. this especially useful for cash deals. even the case certain outsourced employment contracts, reasonable communicate filtered manner using encrypted channel. mentioned briefly section naive clients can communicate filtered manner with expectations only certain types information and commands thus completely obliterating theft and extortion. this revolutionary style decentralized/filtered communication can the basis for unlimited types contracts and even decentralized python programming and decentralized autonomous companies. another way reduce risk greatly the point being almost non-existent making contract with small deposits ratio that roughly then the contract completed series micro-payments milestones. this way, very large deals can take place with relatively small initial deposits. special type deal refer "micro-funding" would perform potentially unlimited maneuvers under this contract and can easily fund million dollar deals trustworthy riskfree manner. "contract bridge" can created the same way for virtually any application. try think form self-insurance. regardless, the proposal here mitigate risk further either filtering eliminating extraneous information partially entirely. bob and alice have nothing else discuss but the raw contract data itself, makes threats impossible. fig. illustrating the proposed protocol. refund and timeout are signed using bob's and alice's escrow private key. everything signed advance. alice sends all her raw transactions bob broadcast. iii. implementation being open source, should easy review, audit and expand the various different permutations and methods implementation the protocol. this only the foundation and new more advanced protocols will undoubtedly proposed result this paper. there technically limit the ways "smart contracts" with two deposits can applied. the wallet addresses for bitbay can reviewed looking the associated wallets addresses over the bitbay blockchain explorer blockchain.info []. open source software gaining ground, and believe that these concepts will evolve and expand ever increasing rate. iv. conclusions the protocol has been described the simplest terms. believe the result will creation new paradigm finance where people will longer have depend untrustworthy third parties. there was example bitcoin exchange that "lost" the equivalent hundreds millions dollars. this behavior unacceptable, and costs the consumers dearly. furthermore escrows real estate transactions have been known south and complete disappear. banks have been known disappear throughout history well. fact, almost every sector economy that involves third parties runs the risk loss the consumer. this protocol brings whole new set solutions back into the hands the individual where they now have full control who they decide trust and how they decide structure that trust. additionally this brings confidence into the hands young businesses that want find way earn the trust their clientele. very attractive proposition any employment contract knowing that both parties employee/employer made advanced commitment. this also allows the creation bartering system that insured the deposits themselves. under the bridge trustless contracts, two parties can perform potentially unlimited maneuvers under the same contract. two complete strangers who were originally untrustworthy are now capable building trust despite their background, however dubious may may not be. our society relies trust conduct business, form relationships, and exchange commodities. finally after all these years and millennia waiting proposal has finally come fruition. hope this helps evolve ever evolving economy into one that more secure from uncertainty. references bithalo. http://www.bithalo.org. bitmessage. https://bitmessage.org/wiki/main page. bitcoin contracts. https://en.bitcoin.it/wiki/contracts. daniel malinowski, lukasz mazurek, marcin andrychowicz, stefan dziembowski. secure multiparty computations bitcoin. iacr cryptology eprint archive, page bitcoin miners. https://en.bitcoin.it/wiki/mining. satoshi nakamoto. bitcoin: peer-to-peer electronic cash system, salvaging refund protocols from malleability attacks using psh. http://www.likelyanswer.com//salvaging-refund-protocolsfrommalleability- attacks-with-psh. script. https://en.bitcoin.it/wiki/script. atomic trading. https://en.bitcoin.it/wiki/atomic cross-chain trading. david zimbeck. bithalo tests blockchain.info: https://blockchain.info/address/hfhbuixduvaxklxfjchfgovxat.