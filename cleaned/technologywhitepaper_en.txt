hnb technical white paper next generation blockchain based decentralized economic entity (c) hnb foundation email: service@hnb.eco table contents summary ......................................................................................................................................................... terminology description ...................................................................................................................... design principles ...................................................................................................................................... hnb architecture design ...................................................................................................................... hnb ecosystem architecture ...................................................................................................................... hnb blockchain core technology architecture ................................................................................... identity management ............................................................................................................................... identification .................................................................................................................................................... identification registration ......................................................................................................................... trust model .................................................................................................................................................... consensus mechanism .......................................................................................................................... blockchain impossible trinity .................................................................................................................... hnb consensus algorithm ......................................................................................................................... consensus incentive mechanism ................................................................................................................ data storage ............................................................................................................................................. distributed storage ..................................................................................................................................... data sharding ................................................................................................................................................. pluggable storage ....................................................................................................................................... data encryption ............................................................................................................................................. multi-asset ledger ................................................................................................................................. multi-asset ledger architecture ............................................................................................................. ledger model ................................................................................................................................................. transaction management ................................................................................................................... transaction verification ............................................................................................................................. transaction pool .......................................................................................................................................... sorting strategy .......................................................................................................................................... smart contract ....................................................................................................................................... hnb smart contract design ...................................................................................................................... smart contract management ..................................................................................................................... smart contract running environment .................................................................................................... formal verification ....................................................................................................................................... node management ................................................................................................................................... node type ........................................................................................................................................................ full node ......................................................................................................................................................... accouting node ............................................................................................................................................. (c) hnb foundation email: service@hnb.eco spv node ......................................................................................................................................................... node authorization management............................................................................................................... node summary ................................................................................................................................................ network communication ..................................................................................................................... services interface ........................................................................................................................................ network .................................................................................................................................................. node communication ..................................................................................................................................... cryptographic algorithm .................................................................................................................. signature algorithm ..................................................................................................................................... digest algorithm ........................................................................................................................................... switch cryptographic algorithm ........................................................................................................ zero-knowledge proof ............................................................................................................................... blind signature .............................................................................................................................................. ring signature ............................................................................................................................................... homomorphic encryption ............................................................................................................................ application real economy ............................................................................................................. dapp decentralized application ............................................................................................................. business privacy protection ...................................................................................................................... cross chain interaction .............................................................................................................................. off chain lighting network ....................................................................................................................... archive ledger ......................................................................................................................................... parallel accounting ..................................................................................................................................... algorithm bank .............................................................................................................................................. reference ................................................................................................................................................... (c) hnb foundation email: service@hnb.eco summary hnb next generation blockchain-based decentralized economic entity. its goal build sustainable business model serve and support real business scenarios. from technology point view, hnb blockchain system supporting multi-chains architecture and the circulation multiple digital assets, can used build decentralized economic ecosystem founded public blockchain. aligning with hnb business vision and development plan, hnb team has formulated the technical solution implement hnb economic model after overhaul current blockchain projects the market. this technical white paper, there are detailed descriptions design principles hnb public chain, overall architecture design and how core technologies are implemented. the core technologies elaborated the white paper include identity management, consensus mechanism, data store, multiple asset accounting, transaction management, smart contract, node management, network communication and cryptography. other content such introduction hnb dapp structure, algorithm bank for application scenario for supporting real business applications are also included. terminology description terminology description hnb hnb token the digital asset representing the ownership hnb economic entity. its total supply fixed one billion. hgs the payment medium pegged dollar, issued "hnb reserve committee" and only circulated hnb community. candidates for delegates through consensus process, elected dpos members participating byzantine agreement process reach consensus. the node selected consensus. delegated proof stake. the mechanism vote for committee members based proofing the stake/voting weight. verifiable random function. for random sortition delegates. its output unpredictable. method that the prover can prove the verifier that something true without disclosing any information. special form digital signature guarantee the data signed confidentiality and un-traceability protect data privacy. type signature ensure unconditional anonymity signers. one can trace the identity the signer. form encryption that allows computation encrypted data had been performed the plain text. hgs committee member delegate dpos vrf zero-knowledge proof blind signature ring signature homomorphic encryption (c) hnb foundation email: service@hnb.eco design principles hnb system designed enable the founding sustainable economic model serve real business entities. the goal use hnb system build next generation blockchain-based decentralized economic entity serving economic ecosystem comprised over million consumers and merchants. the hnb economy scale and its members are ever-increasing the ecosystem grows. therefore allowing for growth drives how hnb blockchain designed and defines hnb blockchain design principles following. scalability *support ever-increasing size hnb community, e.g the number nodes increase hnb blockchain, more and more merchants join, user growth high performance *support millions users concurrent transcations. gracefully handle bursting concurrent transactions the peak. reduce the latency transcation confirmation, achieving the speed consensus the level second. security *robust security application and infrastructure levels, protecting the privacy business and invidivitual data. interoperability *support speedy integration existing systems and ongoing iterative developement, easy interfacing with other blockchain systems and applications. based above design considerations, hnb blockchain embodies the following characteristics. (c) hnb foundation email: service@hnb.eco innovative consensus mechanism support multiple nodes reach consensus speedily. dual-chain and dual-token assets hnb and hgs; hgs pegged fiat algorithm bank regulate the stability hgs exchange rate fiat. robust and vital dapp collection and agile lightweight sdk support easy integration with merchant applications. support smart contract and multiple side chains high performance and great scalability support off-chain liquidity network technologies. strong security and powerful cryptographic capability hnb architecture design hnb ecosystem architecture hnb ecosystem design follows layered and modular architecture philosophy with the emphasis system scalability, interoperability, performance and security. hnb ecosystem architecture collection the foundational blockchain building blocks and their related components. structured multiple layers user layer, hnb business layer, blockchain layer, infrastructure layer and common service layer. (c) hnb foundation email: service@hnb.eco figure user layer hnb business layer blockchain core layer infrastructure layer common hnb blockchain ecosystem architecture layer end user access point. users access hnb blockchain services through this layer. from technical perspective, hnb end user service enabled dapp which are described chapter including digital wallet, digital asset management etc. user layer also includes user management function described chapter hnb business layer implements all the core business logics hnb decentralized economic community. from technical perspective, supported dapp which are described chapter blockchain layer which served hnb blockchain foundation, fulfills core functions consensus, ledger management, multi-assets management, asset trading, smart contract. the technical solutions are described respectively from chapter addition, unique innovations are applied hnb blockchain the areas privacy protection, cross-chain interaction, off-chain liquidity network, concurrent ledgering. details are seen chapter infrastructure layer provides distributed foundational components such distributed database, distributed storage, and distributed networking. database and storage service support plugin capability, providing greater choices the users and comprehensive business enablement. pluggable storage elaborated chapter common service layer provides services above four layers including (c) hnb foundation email: service@hnb.eco service layer security, audit and operation. solutions cryptographic algorithms are described chapter hnb blockchain core technology architecture hnb blockchain technology architecture further granular design hnb blockchain core layer, infrastructure layer and common service layer. hnb blockchain technology architecture also based layered and modular approach. made top-down layers contract, consensus, incentive, data, network, security and foundation. figure hnb blockchain core technical architecture contract layer consensus layer contract layer provides the services life cycle management, operation cost management, run-time environment, formal verification for smart contracts. hnb smart contracts are developed advanced programming languages such golang and javascript which not only meet turing completeness but also ensure smart contracts executed smoothly and safely their mature run-time environments. consensus layer adopts hybrid consensus mechanism blending dpos and algorand, encouraging the nodes making great contributions hnb community (c) hnb foundation email: service@hnb.eco incentive layer data layer network layer security layer infrastructure layer participate accounting, ensuring fair voting consensus delegates based encrypted sortition, ultimately achieving efficiency and consistency consensus process through consensus algorithms. incentive layer provides open, transparent, unified incentive strategy management based the design algorithm bank hnb ecosystem. hgs digital assets are rewarded the nodes making great contributions the community. details about algorithm bank are described chapter data layer the granularity decentralized database and decentralized storage hnb infrastructure layer, described blockchain technology architecture. provides storage service for decentralized database and decentralized filesystem, supporting hnb dual-token asset ledge management. the details are described chapter and network layer the infrastructure module providing network communication. its functions include providing interfaces for blockchain infrastructure layer access applications, providing network for blockchain nodes and broadcast among blockchain nodes. details are described chapter security layer the hnb solution address demanding security requirements blockchain through the analysis four security pillars communication, data, contract and key. details can referenced chapter ,,,. infrastructure layer provides foundational services for blockchain including cryptographic algorithm library, node management, multi-asset chain management, account management, transaction and event management. identity management identification decentralized identifier conventional identification tied individual identity document. identification includes id, residence document and driver license. with technology advancement, new identification approaches such fingerprint and dna are gradually accepted. internet world, things are not always tangible and many are virtual the network identifiers are needed map them real entities. hnb-id obtained computation based mathematic algorithm hnb public key. unnecessary generate hnb-id nor conduct conflict detection through centralized computation. hnb-id produced and managed user directly decentralized way. (c) hnb foundation email: service@hnb.eco privacy protection hnb-id generation algorithm determines impossibility hacking public key information based hnbid, nor can user attributes hnb-id correlated public key. therefore user privacy surely protected. identity authentication hnb-id and user public key maintains one-to-one relationship. users can prove their identities belonging certain business entity through identity authentication maintain the integrity their business activities. identification registration hnb supports acceptance mechanism configurable nodes into hnb community. authorization required accept nodes into hnb community. the authorization obtained through certificate issued hnb ca(certificate authority) allow hnb-id join hnb community. hnb-id related attributes are not sent hnb public blockchain protect privacy. when the node starts and joins blockchain network, its certificate signed distributed other nodes declare the authorization its identity. trust model security key generation key generated offline wallet the private key not exposed network whatsoever any form which ensure hackers are unable steal user private key and rule out the possibility hnb security breach. security storing the key hnb provides the service storing key upon user requirement. user can defer its key management decentralized private key servers who encrypt user's private key through symmetric-key encryption algorithm before storing it. symmetric key kept user directly apart from private key servers. even the servers get hacked, the attackers are unable restore user private key. security identity registration the process user identity registration, user attributes combined with hnb-id, are sent and will issue certificate upon verification user identity. the user attributes are encrypted through asymmetric-key encryption algorithm hnb system the information must not tampered (c) hnb foundation email: service@hnb.eco middleman and data privacy protected maximum degree. shown the following diagram, when alice registers her identity, the user information packaging with the public key are encrypted public key ensure safety data transmission. addition, https used for data transfer impose double encryption mechanisms protect data integrity and user privacy. figure registration process consensus mechanism for any decentralized autonomous systems, the consensus mechanism the foundation community trust. consensus process reaching agreement between distrusting nodes regarding the final state the data the entire blockchain system. achieve consensus, different approaches could used. consensus mechanism set steps taken most all nodes blockchain agree proposed state value. the researches consensus mechanism have been conducted computer scientists industry and academy over decades. despite its long history, only recently until the advent blockchain, bitcoin, ethereum etc., has been placed the limelight and gained considerable popularity. consensus algorithm can also used reaching agreement proposal. the proposal can refer any information that can agreed upon, such basic block generation and verification, the rules/policies community operations and governance. blockchain impossible trinity cap theorem, also known brewer's theorem, was introduced eric brewer conjecture. (c) hnb foundation email: service@hnb.eco was proven theorem seth gilbert and nancy lynch. states that any distributed system cannot have consistency, availability, and partition tolerance simultaneously: consistency property which ensures that all nodes distributed system have single, current, and identical copy the data. availability means that the nodes the system are up, accessible for use, and are accepting incoming requests and responding with data without any failures and when required. other words, data available each node and the nodes are responding requests. partition tolerance ensures that group nodes unable communicate with other nodes due network failures, the distributed system continues operate correctly. this can occur due network and node failures. has been proven that any distributed system cannot have consistency, availability, and partition tolerance simultaneously. figure cap theorem based hnb project team's research, the current consensus algorithm focuses three core characteristics security, decentralization, and efficiency. figure blockchain impossible trinity (c) hnb foundation email: service@hnb.eco according cap principle distributed computing, security, decentralization, and efficiency are impossible achieved simultaneously. trade-off has made for the design consensus mechanism. hnb team analyzed the current mainstream consensus mechanisms including pow/pos/dpos/pbft. consensus brief description concerns mechanism proof this type consensus mechanism relies proof that pow meets the security and adequate computational resources have been spent decentralization work before proposing value for acceptance the requirements, but the (pow): network. this scheme used bitcoin, litecoin, and efficiency relatively low other cryptocurrency blockchain's. currently, the only algorithm that has proven astonishingly successful against any collusion attacks blockchain network proof this algorithm works the idea that node user pos satisfies decentralization has adequate stake the system; that is, the user and efficiency, but lacks stake has invested enough the system that any security; pos validates (pos) malicious attempt that user would outweigh the transactions based kind benefits performing such attack the network. probability calculation, this idea was first introduced peercoin, and vulnerable attack. going used the ethereum blockchain version pos also fails avoid called serenity. another important concept pos nothing-at-the-stake attack coin age, which criterion derived from the amount time and number coins that have not been spent. this model, the chances proposing and signing the next block increase with the coin age. delegated this innovation over standard pos, whereby dpos satisfies the efficiency, each node that has stake the system can but not decentralization. the stake delegate the validation transaction other nodes consensus result could (dpos) voting. used the bitshares blockchain easily controlled/influenced proof the nodes specific interest groups, resulting the high possibility the attack malicious single node. practical this mechanism achieves state machine replication, pbft satisfies byzantine which provides tolerance against byzantine nodes. decentralization and security, various other protocols including pbft, paxos, and when the number raft, and federated byzantine agreement (fba) nodes increases, the network are also being used have been proposed for use overhead becomes heavy many different implementations distributed systems and it's difficult reach and blockchain. consensus efficiently; not fault tolerance (pbft) suitable for large network (c) hnb foundation email: service@hnb.eco the key consideration factors comparison listed the following table. pow pos dpos bft/pbft raft dpos+algorand high medium low low low low tps (transactions per second) resource consumption table comparison main consensus algorithm under current hnb application scenario and economic model, efficiency the priority that hnb platform will able support the large numbers concurrent transactions. massive real-time transactions cannot tolerate long confirmation time. the same time, the system operating around payments, while the low latency emphasized, shall not cause double-spending problems, the reliability crucial. security another critical for systems that operate around financial payments and data. the trades-off, decentralization requirement takes the back seat. based the above analysis and assumptions, hnb architecture embraces innovative consensus algorithm based dpos algorand for hnb decentralized economic community blockchain. summary hnb consensus mechanism advantages: dpos based delegate election takes full account interests distribution and fairness, and avoid attackers; using dpos run for delegate nodes will more stable and relatively high performance than using algorand select users with verifiable random functions (vrfs) fast reach consensus algorand's cryptographic sortition ensured that the accounting node completely random and secretive and specific attacks will not work scalable support large number nodes without performance degrade ensure security without heavy computation overhead and energy-saving never hard fork high fault-tolerant (c) hnb foundation email: service@hnb.eco hnb consensus algorithm consensus algorithm overview figure# dpos algorand consensus algorithm process hnb adopts consensus algorithm based dpos algorand for hnb decentralized economic community blockchain. delegate election process based dpos election accounting delegates from entire hnb community delegates are divided evenly into groups, which represents different interest groups, consumer, producer (or merchant) and contributor. the constitution delegates ensures single interest group can have overwhelming advantage over and impact the normal operations the entire community hnb community users vote for candidate based the weight their currency and holding time token age) block validation process based algorand hnb architecture adopts algorand its core consensus algorithm for transaction validation process. (c) hnb foundation email: service@hnb.eco using algorand algorithm's cryptographic sortition select accounting nodes including master notes among selected delegates during the current accounting cycle cryptographic sortition algorithm for choosing random subset users according peruser weights; that is, given set weights and the weight all users. sortition implemented using verifiable random functions (vrfs) verifiable random functions (vrfs) ensures randomly select users private and noninteractive way. this prevents adversary from forecasting, modifying and attacking accounting node selection the selected master node proposes new block. then use new byzantine agreement (ba) protocol called vrf (seed||role) while hash hashlen not b(k; *+, )-. *+, b(k; j++ return user performs sortition computing vrfsk(seed||role),where the user's secret key. the pseudo-random hash determines how many sub-users are selected, follows. the probability that exactly out the (the user's weight) sub-users are selected follows the binomial distribution. since b(k;n,p)+b(k p)= b(k p), splitting user's weight (currency) among sybils does not affect the number selected sub-users under his/her control. determine how many user's sub-users are selected, the sortition algorithm divides the interval [,)into consecutive intervals the form ij= *+, )-. *+, for ,,, .if hash hashlen (where hashlen the bit-length hash) falls the interval j,then the user has exactly selected sub-users. the number selected sub-users publicly verifiable using the proof (from the vrf output). (c) hnb foundation email: service@hnb.eco procedure verifysort (pk, hash, seed, role, w): verifyvrfpk(hash, seed||role) then return while hash hashlen not b(k; *+, )-. *+, b(k; j++ return sortition provides two important properties. first, given random seed, the vrf outputs pseudo-random hash value, which essentially uniformly distributed between and hashlen result, users are selected random based their weights. second, adversary that does not know cannot guess how many times user chosen, was chosen all (more precisely, the adversary cannot guess any better than just randomly guessing based the weights). the pseudocode for verifying sortition proof, shown verifysort algorithm, follows the same structure check that user was selected (the weight the user's public key obtained from the ledger). the function returns the number selected sub-users (or zero the user was not selected all). (c) hnb foundation email: service@hnb.eco synchrony process figure synchrony process steps determine you can synchronize quickly, you can step otherwise step traverse all unprocessed consensus information memory. construct proposal information based the current block number. construct the final proposal information based the current block number. pack the block and update the status. (c) hnb foundation email: service@hnb.eco send block request the other node and wait for the response block received, verify the block and generate the block. implementation details synchrony assumption allows algorand select the users' public keys (and associated weights) before the adversary knows the selection seed, ensuring random sampling users for the expected numbers for and are and respectively. for fixed round and step, apply the formula equation find the probability that random seed gives ;-b)ca,.,, e.,, ?,,, a,, check seed value satisfies the adversary has least one cryptographic hash vrf operation. each round has committees for most maxsteps steps. for each round, only those (i.e., committees can create certificate (only those that vote the first second step the binaryba loop). union bound, the probability that seed value gives for specific round (and any step that round) infeasible for the adversary find such seed. notice that our argument above does not exclude the possibility that more than single pair round final committee has malicious members and targeted binaryba committee has (c) hnb foundation email: service@hnb.eco malicious members, where intuitively, however, the adversary concentrates all his computational power finding round (with highly malicious final committee finalize block and targeted step within that round (with highly malicious committee certify block such that then for all other rounds and steps, the number malicious committee members random, which makes the probability that the attacker succeeds one those round/step pairs negligible then both those pairs will have approximately .*-, while the probability that approximately .*-, the probability that both events happen for two specific round-step pairs less than .*-. since for specific selection seed there are rounds with steps each, there are .,f ..,h (/) possible pairs round/step. the probability that the attacker manages target more than one round/step where i+j therefore, union bound, less than .*-*.* .*- this because the probability targeting one round/step pair where most .*-, the probability target three such pairs (.*-) which case for both will have else return the countvotes() procedure reads messages that belong the current round and step from the incomingmsgs buffer. (for simplicity, our pseudocode assumes that background procedure takes incoming votes and stores them into that buffer, indexed the messages' round and step.) processes the votes calling the processmsg() procedure for every message, which ensures that the vote valid. note that private state required process these messages. procedure countvotes(ctx, round, step, l): start time() counts //hash table, new keys mapped (c) hnb foundation email: service@hnb.eco voters msgs incomingmsgs[round, step].iterator() while true msgs.next() null then time() start then return timeout; else processmsg(ctx, voters votes then continue; voters.add(pk) counts[value] votes got enough votes, then output value counts[value] then return value processmsg(): validates incoming vote message procedure processmsg(ctx, m): verifysignature(pk, signed_m) then return signed_m discard msg that not extend this chain hprev h(ctx, last_block) then return votes verifysort(pk, sorthash, ctx.seed, ctx.weight[pk], ctx.w) return processmsg() returns not just the value contained the message, but also the number votes associated with that value. the message was not from chosen committee member, processmsg() returns zero votes. the committee member was chosen several times, the number votes returned processmsg() reflects that well. processmsg() also returns the sortition hash. the reduction() procedure, converts the problem reaching consensus arbitrary value (the hash block) reaching consensus one two values: either specific proposed block hash, the hash empty block. our reduction inspired turpin and coan's twostep technique. this reduction important ensure liveness. procedure reduction(ctx, round, hblock): step gossip the block hash committeevote(ctx, round, reduction_one, tstep, hblock) other users might still waiting for block proposals, set timeout for lblock lstep (c) hnb foundation email: service@hnb.eco hblock countvotes(ctx, round, reduction_one, tstep, tstep, lblock lstep) step re-gossip the popular block hash empty_hash h(empty(round, h(ctx, last_block))) hblock timeout then committeevote(ctx, round, reduction_two, tstep, empty_hash) else committeevote(ctx, round, reduction_two, tstep, hblock) hblock countvotes(ctx, round, reduction_two, tstep, tstep, lstep) hblock timeout then return empty_hash; else return hblock; binaryba(), which reaches consensus one two values: either the hash passed binaryba() the hash the empty block. binaryba() relies reduction() ensure that most one non-empty block hash passed binaryba() all honest users. procedure binaryba(ctx, round, block_hash): step block_hash empty_hash h(empty(round, h(ctx, round, block_hash))) while step maxsteps committeevote(ctx, round, step, tstep, countvotes(ctx, round, step, tstep, tstep, lstep) timeout then block_hash else empty_hash then for step s'<= step+ committeevote(ctx, round, s', tstep, step then committeevote(ctx, round, final, tfinal, return step++ committeevote(ctx, round, step, tstep, countvotes(ctx, round, step, tstep, tstep, lstep) timeout then empty_hash else empty_hash then for step s'<= step+ committeevote(ctx, round, s', tstep, return step++ committeevote(ctx, round, step, tstep, countvotes(ctx, round, step, tstep, tstep, lstep) timeout then commoncoin(ctx, round, step, tstep) then (c) hnb foundation email: service@hnb.eco block_hash else empty_hash step++ consensus after maxsteps; assume network problem hangforever() consensus incentive mechanism the sustainable development the virtual currency ecosystem inseparable from the welldesigned ecosystem model, and also inseparable from the rationally optimized consensus incentive mechanism. the new economic incentive mechanism created satoshi nakamoto guarantees the long-term stability bitcoin for years, has strong supporter community, and thus establishes new industry ecosystem. can seen that the consensus incentive model plays important role the development digital currency ecology. the hnb incentive algorithm based the economic model, which greatly enhances the enthusiasm the participating users ecological construction and maintains the ecological sustainable development. hnb provides hgs rewards for each round consensus-successful accounting nodes. hnb community certain percentage hgs will deducted for disciplinary action. the incentives for hnb economies follow the following guidelines: hnb calculates the weight according the age the coin and the number coins held, and the probability being selected the consensus group positively correlated with the value after the consensus successfully reached, identify the proponents this consensus and the proponents who participate ba. the number hgs rewards will distributed the relevant members this consensus. the number hgs rewards positively correlated with the sum transaction complexity within the block, and there correlation coefficient hnb supports graded penalty, distinguishing between malicious node and node failure. the proposer sends false incorrect proposal, the proponent who participates the sends abnormal consensus agreement, will determined malicious node. the node doesn't respond network interaction during the consensus process, determined node failure. the correlation coefficient the hgs reward negatively correlated according the total number blocks. (whether reward attenuation not) (c) hnb foundation email: service@hnb.eco data storage distributed storage distributed database google published the spanner paper and implemented the spanner database based the paper. provides distributed read and write transactions (strict two-stage lock two-phase commit), and implements global indexing. with the era distributed htap (hybrid transactional and analytical processing) databases, htap new database technology that combines the best features traditional rdbms and nosql. the distributed htap database supports unlimited horizontal scaling with strong consistency and high availability. the goal provide one-stop solution for oltp (online transactional processing) and olap (online analytical processing) scenarios. for blockchain ledger storage, the distributed database provides good support for ledger storage, access, and expansion, and suitable for the underlying blockchain system the commercial environment. hnb blockchain's ledger storage, not only supports rdbms and nosql databases, but also supports distributed htap databases provide better data management support for hnb's business operations. hnb's htap database technology will based the latest newsql open source database tidb (htap database for tidb), supporting both online transaction processing (oltp) and online analytical processing (olap) business types distributed database products; also supports strong consistency distributed transactions, online elastic expansion, remote and automatic failure recovery; compatible with mysql database. (c) hnb foundation email: service@hnb.eco for light nodes (see spv nodes for details), the hnb blockchain uses level db. leveldb very efficient key-value database implemented google. the key values are binary and currently support billion-level data volume. leveldb uses the lsm (log structured merge) algorithm maintain very high performance large data volumes. log-structured merge-tree (lsm-tree) disk-based data structure that provides efficient indexing files that require high-speed record insertion (and deletion) for lower system resource overhead. lsm_tree delays and batches index changes and efficiently migrates updates disk manner similar merge sorting, reducing index insertion overhead. distributed file storage ipfs (inter-planetary file system) protocol that defines: content-addressed file system; coordinated content distribution; combined with kademlia bittorrent git. ipfs file system, each file and all blocks are given unique fingerprint the encrypted hash. ipfs deletes files with the same hash value through the network. can used determine which files are redundant and duplicated. and keep track the version history each file. each network node only stores the content interested in, well some index information, which helps figure out who storing what. when looking for file, the hash value the file can used find the node where the file stored the network and find the desired file. the hnb blockchain system serves the real business activities, and the community should provide high-availability and high-security file storage services for the community merchants. the ipfs file system features multiple copies and automatic redundancy management, making ideal for autonomous organizations provide file services. hnb's underlying file storage will integrated with the ipfs file system provide file management services community merchants. data sharding sharding process used extensively databases for enhancing their efficiency. shard represents horizontal section database, and separate servers store each shard. the result uniform spread the load, which turn, increases database efficiency. the data access efficiency and scalability blockchain are important considerations for data storage solutions. hnb's data storage solutions use data sharding meet efficiency and scalability requirements. the distributed htap database provides the capability support data sharding. for data write operations, the htap database automatically fragments the underlying (c) hnb foundation email: service@hnb.eco data according the range key (sharded data), with each shard being interval. the keyvalue trigger rule setting the shard (for example, the amount data exceeds certain threshold) will automatically fragmented support horizontal expansion data. for the data read operation, the htap database uses the load balancer schedule the load the cluster according the state the storage cluster. the scheduling based the shard, and the strategy configured the load balancer the scheduling logic, and all the processes are automatically completed ensure that the data reading can completed efficiently. pluggable storage the storage the blockchain should designed with different storage tools and storage schemes according different application scenarios. therefore, the blockchain storage should not strongly bound the storage media. hnb's data storage supports different types databases for rdbms, nosql, htap, and ipfs file systems. for blockchain data storage, recommended use the database for the storage solution, which can selected between the rdbms, nosql and htap according the specific requirements. hnb will also provide pluggable storage media, and community participants can switch data storage media based actual operating conditions. data encryption the blockchain can tamper-proof, decentralized, and run untrusted network environment, but the user's accounting book including transaction information transparent the participating nodes, and any participants can have access these data. the user and business privacy data are all put the chain, this will increase the risk data privacy breaches. currently the public chain system such bitcoin, all transaction element information public (such transaction amount). the real business activities, the transaction element information sensitive data, and non- related parties cannot have access it. hnb blockchain's data encryption solution: ledge data encryption: digital asset transaction information encrypted and stored the blockchain account masking: the account masked, and only the hnb-id info stored the chain. the actual identity information corresponding the hnb-id managed offchain and stored with encryption commercial data storage: the merchant's transaction data contains business sensitive information, these commercial data stored independently the chain with (c) hnb foundation email: service@hnb.eco encryption and access control multi-asset ledger multi-asset ledger architecture multi-chain approach multi-chain, that is, abandoning the traditional scheme "one chain and all", adopts the "one chain one contract" scheme ensure that each contract can operate independently. this innovation greatly simplifies the architecture, reduces the pressure data processing, and ensures that the surge traffic one chain does not affect the efficiency the other chain. any business carried out the chain not interfered other services, effectively implementing resource isolation. figure hnb multi-chain structure hnb's core blockchain operation adopts the "one chain and one token" architecture approach. hgs and hnb operate parallel based the double-chain architecture, without affecting each other. the multi-chain architecture ensures improved performance, isolation, scalability, and ecosystem integration support hnb community's dual-token economic growth. (c) hnb foundation email: service@hnb.eco terms performance, the multi-chain architecture ensures that the consensus model state machines are independent each other during the operation the dual native digital token (hgs and hnb). the time-consuming operations, such transaction checking, voting waiting, and database access, are converted from serial execution parallel execution, expanding the technical resources. system latency can greatly optimized, blocking and execution time can reduced, and system throughput can increased. terms isolation, the multi-chain architecture will share the channel and transaction processing between hnb and hgs. hnb and hgs chains cannot obtain transaction-related information, nor can they read modify the other party's ledger data. physically separate the isolation dual native token ensure the isolation hnb and hgs, and protect the privacy users and transactions. for scalability, when the hnb underlying chain needs upgraded hnb hgs, the multi-chain architecture will allow single chain upgraded separately without affecting other chain service execution. when the hnb underlying chain has increased chain requirements, the multi-chain architecture will easily add new chains, use cross-chain interaction technology communicate with the original asset chain, realize the flow between digital assets, and ensure the high scalability hnb. heterogeneous ledger architecture hnb blockchain supports the heterogeneous ledger architecture, and designs unique dual-token ledger structure based the currency characteristics hnb and hgs. the heterogeneous ledger architecture greatly improves the availability the ledger module and provides various ledger query services. hnb token digital asset token that exchange with the outside world, needs record information about transactions with external digital assets the ledger, such as: source digital asset identification, target digital asset identification, and exchange identification. stable token hnb community, hgs token ledger needs record relevant information within the community, such transaction side chain identification, derivative digital asset identification, merchant identification, and commodity order summary, etc merkle tree hnb block header contains the merkle tree root value for quick verification intra-block transactions. (c) hnb foundation email: service@hnb.eco figure merkle tree hash value calculate for each transaction the blockchain. merkle tree constructed hashing paired data (the leaves), then pairing and hashing the results until single hash remains, the merkle root. each leaf node hash block data, and each non-leaf node hash its children. typically, merkle trees have branching factor meaning that each node has children. the key advantage the merkel tree transaction verification algorithm that each transaction can deleted directly, leaving only the hash value the transaction. for the entire block, does not change his cryptographic security and integrity, but the amount data can greatly reduced. the light node only saves the block header ensure that the transaction cannot falsified forged. for example: need prove that the "f" exists and has not been tampered with, just need provide "e", "gh", "abcd", merkel root can prove that the "f" transaction has not been forged and falsified. ledger model utxo model the full name utxo unspent transaction output. the utxo model organizes the input and output all transactions chained manner, and the input each transaction must the output transaction. the utxo model was originally created and cited nakamoto the bitcoin model, but not unique bitcoin and not necessarily related the blockchain. advantages the utxo model: scalability: multiple utxos can processed simultaneously, parallel transactions can implemented and scalability innovations can encouraged. (c) hnb foundation email: service@hnb.eco privacy: bitcoin not completely anonymous system, but utxo can provide higher level privacy long the user uses new address for each transaction. double-spending prevention: each transaction input utxo must unsuccessful transaction output with the ability naturally prevent double-spending. balance model the balance model the traditional accounting model, which requires account system support and the balance associated with the account. each transaction only needs verify that the sending account has sufficient balance pay for the transaction. one disadvantage the balance model exposure double spending attacks. incremental random numbers can implemented counteract this type attack. ethereum, each account has publicly visible random number, and each time transaction made, the random number incremented one. this prevents the same transaction from being committed multiple times. advantages the balance model: simplicity: utxo's stateless model forces transactions contain state information, which unnecessarily complicates contract design. efficiency: besides simplicity, the account/balance model more efficient because each transaction only needs verify that the sending account has sufficient balance pay for the transaction. hnb hybrid ledger model the hnb underlying chain adopts hybrid ledger model strategy. hgs and hnb native token use the utxo model improve the underlying concurrency. the digital assets generated through smart contracts adopt the balance mode, which simple develop, reduces the difficulty developing smart contracts, and reduces the resulting security problems. (c) hnb foundation email: service@hnb.eco transaction management transaction verification hnb public blockchain system that supports the business the hnb economic community, the effectiveness the transaction verification the top priority. the verification the transaction mainly divided into two parts: transaction integrity verification and transaction validity verification. transaction integrity verification refers the verification transaction signature, ensuring that the transaction message has not been tampered. transaction validity verification, including the validation the transaction field format and the legitimacy the transaction content. among them, the transaction field format check used verify that the format length all fields must correct; the legitimacy check the transaction content (including but not limited the amount, double-spending). different check processes are applied for different hnb node types. for full node, the blockchain can independently established and verified, from the first block (genesis block) the latest block the network. the full node can independently verify any transaction information without resorting any other nodes other sources information. the node maintains utxo pool verify the validity the transaction. for spv node, there need store complete blockchain ledger, simplified payment verification (spv) approach adopted. this type client called spv client lightweight client. the spv node only needs download the block header instead downloading the transaction information contained each block. the resulting blockchain without transaction information only the full blockchain. since the spv node does not have the ability construct all the ledger information, its approach different. the main steps are follows: determine the block number where the transaction located. generally, the screening the ange carried out the time the transaction, and then the specific positioning determine the merkel tree path for the requested transaction and perform verification (c) hnb foundation email: service@hnb.eco figure merkle tree verification path shown the figure above, verify the existence h(e) transactions, only h(f) transactions, h(gh) merkel nodes, h(abcd) merkel nodes, and h(abcdefgh) merck are required. the root node the tree can construct audit path, and then calculate the root hash and the root hash the spv node verify the validity the transaction. transaction pool after completing the transaction verification, the system will broadcast the transaction the whole blockchain, and put the transaction into the transaction pool management for next step processing. the transaction volume large, the memory may become the bottleneck the transaction pool management. hnb will expand and maintain extended transaction pool, which greater than the transaction volume the memory transaction pool. hnb will choose persist the transaction and use file for storage. when transaction confirmed packaged into block, the system will delete the transaction from the transaction pool. and the transactions the extended trading pool will moved into the in-memory transaction pool. sorting strategy after the transaction put into the transaction pool, hnb system will use the preset policy determine which transactions are taken out the pool and packaged into the block. the traditional transaction fee-based sorting strategy has the disadvantage that the transaction fee for submitted transaction too low, and the transaction can never confirmed. this will cause the effect "freezing" transaction due double-spending (c) hnb foundation email: service@hnb.eco verification. for scenario the hnb services for real economic activities, the fifo mode adopted for transaction queuing without transaction fee charge. hnb's fifo sorting strategy fully reflects the fairness first come first served, the earlier the transaction submitted, the easier packaged into blocks. smart contract hnb smart contract design the smart contract the hnb blockchain system supports: golang and javascript languages. that developers smart contracts not need learn new languages and lower the barriers for merchant access. using golang the execution environment for smart contracts, smart control logic can implemented for the hnb application layer framework. the golang virtual machine has turing completeness, can implement arbitrary logic, and highly deterministic, which very suitable for commercial business scenarios with high deterministic requirements. smart contract layer, the programming languages support contract parsing and conversion, and flexibly supports the basic application the virtual machine. the external interface the virtual machine realized through customized api operations, which can flexibly interact with the ledger account data and external data. smart contract management smart contract release hnb smart contract development platform can used hnb community users develop customized smart contracts and complete testing. hnb smart contract development platform provides complete tool set, including development, testing, debugging, api description, etc., efficiently locates smart contract bugs, detects contract write exceptions, and effectively reduces security issues caused vulnerabilities smart contracts. the contract development platform makes easy publish contracts for one-click deployment. smart contract access public chain, the query operation hnb smart contract does not need authorized. the write operation the smart contract can only executed after the (c) hnb foundation email: service@hnb.eco verification process via cryptographic algorithm. hnb provides two smart contract access methods: external access, inter-contract access. external access: hnb supports sending transaction information through wallet, and querying block information and transaction information through wallet and browser. also supports for accessing contract related information via grpc restful interfaces. inter-contract access: hnb fully considers the interaction and collaboration between various business domains, thus supports data interaction between smart contracts, opening industry barriers and achieving data interconnection. smart contract running environment hnb adopts the self-developed hnb-vm virtual machine platform. hnb-vm performs deep optimization the execution instruction code parsing, which improves the execution efficiency instructions while ensuring security. hnb-vm features are follows: high speed cache access: hnb-vm creates multi-layer cache and designs cache structure according the probability occurrence the instruction code, which improves the cache hit probability and reduces the number times calculating and reading the object address data. instant compilation: the traditional virtual machine platform interpreted series operations such stacking, popping, reading and writing variable areas, and reading method areas. these operations could seriously affect the efficiency virtual machine interpretation. hnb will compile the contract hotspot program real time, reducing the operation steps the registers. storage structure optimization: optimize the object storage structure, establish the mapping relationship between the object identifier and the storage address, and realize efficient retrieval the object storage address. the same time, optimize the attribute information the object structure improve the memory resource utilization. formal verification hackers successfully exploited million ethereums through the dao, exploiting vulnerabilities smart contracts. after the dao incident, ethereum founder vitalik buterin proposed modify the ethereum code, implement hard fork the ethereum blockchain, and roll back the transaction record hacking funds, while also receiving support from most miners the community. the strong opposition from few people eventually led the split the ethereum community. strengthening smart contract audit important guarantee for improving the security (c) hnb foundation email: service@hnb.eco blockchain. formal verification effective method for smart contract audit. formal verification hnb based the established formal specifications, and the relevant characteristics the specified system are analyzed and verified judge whether the system meets the desired characteristics. formal verification does not completely ensure that the performance the system correct, but can maximize the understanding and analysis the system, and try find errors such inconsistency, ambiguity, incompleteness and on. node management node type hnb nodes are classified into full-node, spv nodes, and accounting nodes according their functionality. hnb users can choose different types nodes participate the hnb ecosystem according their own conditions (hardware resources, participation identities). full node has full ledger accounting data and provides external query information and block information services spv node can determine whether transaction exists the blockchain system accounting node implements consensus process with other nodes, generates and broadcasts the ledger data full node full node the node with the complete hnb ledger information. full node needs synchronize the accounting data with the accounting node, can independently verify the block data validity and broadcast the transaction, and provide the block query service for the spv node. hnb full node records all the ledger information. very convenient verify the transaction balance, double-spending, transaction signature, etc., and can also determine the validity the transaction without relying other node data. however, the node storage request shall addressed. with the increasing volume transaction and data, the database read and write operations will key concern. hnb supports scalable data storage such data sharing support efficient storage full nodes. accouting node accounting node the blockchain node participating the consensus process via (c) hnb foundation email: service@hnb.eco running the algorand consensus protocol ensure the stable operation the hnb blockchain system. accounting node writes the block information after consensus process into the hnb ledger, and broadcasts the entire chain. accounting node performs the algorand consensus, the validity the transaction will verified. accounting node selected from validated full nodes the community based dpos algorithm, and accounting node subset full node. accounting node has the same function the full node. based the hnb consensus algorithm mechanism, there will incumbent accounting nodes the community any moment. the new accounting cycle, the entire network will select nodes accounting nodes through dpos algorithm. the accounting cycle based the number generated blocks batch. one batch blocks (approximately months period).a new election will triggered for each new batch. spv node spv stands for "simplified payment verification". spv node only stores the header information the ledger, and determines whether transaction exists with the blockchain system based the stored block header information and the merkel tree the transaction structure. spv node can verify the existence the transaction but cannot verify the validity the transaction. spv node requests transaction information from full node and verifies whether the transaction information returned the full node has been tampered not. however, the spv node has other transaction information, and impossible determine whether the transaction output double-spending, the transaction validity cannot verified. node authorization management since the hnb blockchain system serves the hnb ecosystem, non-community members are not allowed use the hnb ecosystem service. therefore, the hnb blockchain system designed with strict node admission mechanism perform strict identity verification nodes joining the hnb blockchain network. the committee members selected from the hnb community will participate the dpos algorand consensus process. committee members will required apply the community hnb accounting nodes, and the community will issue corresponding authorization certificates the committee members. when the node joins the blockchain network, actively presents the authorization certificate the neighbor node, indicating the identity its accounting node. (c) hnb foundation email: service@hnb.eco the members the committee are elected full nodes the community. the community members who intend become the full node initiate the application the community. the community management committee checks whether the hardware resources and network conditions provided the representative meet the basic requirements the full node. the community issues full-node authorization certificate the node that meets the requirements. any community members can apply for spv node. the community management committee will verify the application and issue the corresponding certification node summary based the introduction the above three types nodes, the following table summarizes the nodes follows: node consensus ledger type process booking full node accounting node spv node transaction transaction smart verification query contract synchronization table node type function summary network communication services interface there are two main types hnb services: command line and api interface. the command line interface based urfave. can provide rich command parameters and provide enough default parameters. you can complete all operations simply entering simple commands the console interface. hnb also supports interactive command line for more friendly experience when entering commands. hnb's api interface adopts grpc and restful, which provide user friendly access experience: grpc high-performance, open source, and general-purpose rpc framework based (c) hnb foundation email: service@hnb.eco the http/ standard. provides features such bidirectional flow, flow control, header compression, multiplexing over single tcp connection, and request waiting. the efficiency has been greatly improved. restful api also supports http/, which provides powerful routing and reflection capabilities. optimizes the transmission key-value pairs when processing url get parameters, thus reduces the transmission network packets existing blocks, and provides user-friendly access blockchain systems network hnb network adopts kademlia algorithm, which suitable for the networking distributed massive node networks. its node relationship management mechanism can effectively resist ddos attacks. the algorithm based the distance between two nodes, which the exclusive the numbers the two network nodes, and the result the calculation finally returned integer value (eg then, the network grouped according the distance, and the grouping based the fact that all the previous digits are the same, starting from the nth digit the countdown (for example, group, and which are different groups). based the grouping, the node can quickly find node that has not connected to, facilitating resource discovery and fast access and exit the node. the communication between the nodes uses the grpc communication protocol. node communication communication between nodes through grpc. the communication protocol between nodes uses the protobuf code base. the protobuf code base supports high performance transcoding and supports multiple development languages. there are four ways exchange data between various nodes hnb: one-way communication (full synchronization) streaming server streaming client bidirectional flow (completely asynchronous) hnb also supports encrypted transmission between nodes, and uses tls protocol ensure the security communication between nodes. there are inadequacies general tls communication, such as: before tls started, has been attacked, and tls protection invalid. the hnb blockchain also provides hardware-based solution that ensures end-to-end communication security between blockchain nodes. (c) hnb foundation email: service@hnb.eco cryptographic algorithm signature algorithm signature algorithm also referred digital signature algorithm. digital signature non-forgeable digital string generated only sender through mathematic scheme sender's digital messages documents. also valid proof sender's authenticity and nonrepudiation messages. digital signature digital string generated through one-way function process the sending messages for authenticating the sender and validating any alters the messages during transit. hnb has taken the signature algorithm secpk elliptic curve. secpk the parameter ecdsa(elliptic curve digital signature algorithm) used bitcoin, defined the standard high efficient cryptography. secpk forms elliptic curve based over finite field. given the peculiarity its structure, the post-optimization its implementation produces better performance than other curves main distinctive advantage points are fewer bandwidth and storage resources needed, short private key. same field operation all users. digest algorithm the main characteristics message digest algorithm are encrypt the messages without keys and the encrypted messages can not decrypted. the same encrypted message can only obtained applying the same algorithm exact the same original messages. key management and distribution are not needed therefore fits for use decentralized network. hnb supports hash, hash various hash algorithms. users can select the optimal hash algorithm accordance their business scenario. switch cryptographic algorithm with technological evolution, more and more cryptographic algorithms get decoded. algorithms like md, sha, des became obsolete over time. the emergence the new technologies high computing area such quantum computing, are crushing those once invincible cryptographic algorithms. order safeguard from the attacks quantum computing, hnb security layer supports switch among multiple algorithms such ecdsa, ecdsa, ecdsa. the longer length the keys cryptographic algorithm deploys, the stronger defending capability has and higher level security produces. (c) hnb foundation email: service@hnb.eco zero-knowledge proof zero-knowledge proof was put forward s.goldwasser, s.micali and c.rackoff early eighties century. early zero-knowledge proof was required have message interaction between prover and verifier validate the proof which called "interactive zero-knowledge proof". late eighties century, the use short random string proposed mr. blum and others, was adopted fulfill zero-knowledge proof. this approach called "non-interactive zero-knowledge proof" which only one time message sending from prover required for verifier validate the proof without two-ways interactions between prover and verifier. hnb blockchain provides zero-knowledge proof capability and protect data privacy for user and merchant reduce the risk merchant data privacy breach. hnb optimizes and upgrades zk-snark library for zero-knowledge proof and encapsulate highly reusable interfaces with rich functionalities. zk-snark stands for zero-knowledge succinct noninteractive arguments knowledge and one non-interactive zero-knowledge proof methods who embodies features short proof message and fast validation. zero-knowledge proof key process mint procedure mint(pp, addrpk): parse addrpk (apk, pkenc) randomly sample prfsn seed randomly sample two comm trapdoors compute commr(apk compute comms(v set (addrpk, cm) set txmint (cm, *), where (k, return and txmint zero-knowledge proof key process verifytx procedure verifytx(pp, tx, l): txmint then parse txmint (cm, and and (k, set cm' comms(v cm' then return else return else txpour then parse txpour (rt, snold, snold, cmnew, cmnew, vpub, info, *), and (pksig, ppour, snold snold (or snold snold) then return not then return hsig crh(pksig) (c) hnb foundation email: service@hnb.eco (rt, snold, snold, cmnew, cmnew, vpub, hsig, (x, ppour, info, vsig(pksig, verify(vkpour, ppour) return blind signature conventional digital signature approach the signer signs the clear text data. when the signer and data owner belong different entities, the data privacy not protected from the signer. hnb implemented blind signature algorithm realize the following privacy protectioin: blindness: the content message signed unkown the signer. unlinkability: the final signature s(m) cannot linked blinded message the signer keeps. unforgeability: anybody who doesn't know the private key the signer not able effectively generate the digital signature that certified the digital signature validation formula. only the signer itself can generate the effective digital signature its name. figure blind signature process blind signature mathematic formula proof: signature and message pair: ((s(m), m)) encryption process the content blind-signed message:u(s(b(m,r)), s(m) verification process: v(s(m), true blind signature process following: the signer only knows the identity signature requester without seeing the content (c) hnb foundation email: service@hnb.eco document when signed. the signer put the signature against document black box. the digital signature value can printed the document through carbon paper the black box and become effective. when the signer links the content document and the respective signature, the signer cannot validate the signature belonged self. ring signature ring signature realizes unconditional anonymity the signer and the identity the signer cannot traced. ring signature performed the signer selecting group members including the potential signer and generating digital signature the signer's private key and the public keys the members. the group members called ring and signature result ring signature. the recipient the signature can prove the signer comes from member the ring and does not know the identity the signer. the theory ring signature members and each has pair public and private keys. signer uses public keys and his private key sign the clear text message. verifier uses public keys validate the digital signature. private key the signer belongs one the members, the validation succeeds. the validation fails. the chance hitting the identity the signer the process signature validation verifier. the goal hiding the identity signer attained. ring signature process randomly generate initial parameter, (,)b,e.g: (...). generate number (,)b for number users. number users are generated randomly. not randomly generated. use y=gi(x) solve respective yi. temporarily empty because still empty. given number users, rsa encryption algorithm applied. each user has key pair (pi,si). rsa encryption algorithm has two functions: y=gi(x)----gi function must use x=gi-(y)----gi-function must use use z=ck,v=v,quickly calculate ys. (c) hnb foundation email: service@hnb.eco the initial parameter generated step one, h(m),e symmetric encryption: ck,v(y, y,..., yr) ek(yr ek(yr- ek(yr- ek(... ek(y ...)))) given known ys, based x=gi-(y),to solve xs. this step the core, only owns the private key ss,only can compute out xs. the security ring signature founded the security asymmetric encryption algorithm. ring has been created. only number users can create complete ring. attacker can calculate out ys,but will never get xs. homomorphic encryption many data exchanging scenarios, data provider only provides the right use data opposed data ownership transfer the seller. provide privacy protection merchant data the essential security requirement which the homomorphic encryption sound solution. the merchant first uses its public key encrypt data through homomorphic encryption algorithm. the encrypted data then provided algorithm provider conduct arithmetic computation, the result sent back the merchant. the merchant can use its private key restore clear text result f(m). hnb supports homomorphic encryption addition. homomorphic encryption also called privacy homomorphism. homomorphic encryption allow computation encrypted data were plain text data. homomorphic encryption multiplication supports multiplication operation encrypted data. homomorphic encryption addition supports plus operation encrypted data. the encrypted data homomorphic algorithm can performed addition multiplication operation without decryption the data. the computing results encrypted data and clear text data are identical. assume clear text space p,encrypted text space isc,homomorphic algorithm enc, decryption algorithm dec.to use present computation clear text space, present computation encrypted text space. for two clear text messages p,two encrypted messages enc(m. enc homomorphic encryption can satisfy the formula:c. #c?. enc(m. (c) hnb foundation email: service@hnb.eco application real economy dapp decentralized application dapp architecture hnb hnb blockchain layer supports dapp (decentralized application) one the key features hnb decentralized economic community. daapp backend codes run hnb decentralized network. hnb blockchain layer, dapp backend codes are implemented smart contracts. the frontend can any user interface applications such html, mobile app, and communicated with backend smart contracts via api realize specific business functions. hnb dapp can viewed the combination user api and smart contract. figure hnb dapp strcuture two methods can taken for dapp integration: api/sdk integration ---- lightweight sdk integration allows participants hnb ecosystem quickly translate the existing business applications dapp and release assets and payments that matter hnb blockchain. (c) hnb foundation email: service@hnb.eco hnb frontend integration ---- integration into hnb ecosystem through hnb predefined protocols such as: grpc, restful etc. dapp functionality hnb dapp includes the follow feature: open source: source codes make available public for anyone and are governed participants other communities. decentralization: run hnb blockchain network, collective participation, maintenance and governance. incentive: hgs incentive for node/user helpful dapp execution. consensus algorithm: based hnb blockchain consensus mechanism, dapp ensures single input and output its logic execution and the consisten execution result across entire network. dapp architecture description further the level granularity, hnb dapp can viewed two layers architecture frontend api and backend smart contract. figure ... hnb dapp architecture dapp frontend hnb provides series organic and robust dapp the community. dapp frontend services include, not limited to, community governance, auction system, merchant promotion, (c) hnb foundation email: service@hnb.eco otc/cc transaction, decentralized token trading, community events, bulletin board, asset management. above some functionalities described user layer and business layer are fulfilled the embedded business logics dapps and backend smart contracts. ... dapp backend dapp backend services include lightweight spv (simplified payment verification) nodes, wallet service and payment sdk. the goal sdk provide api interface for party application facilitate easy integration reorientation hnb system payment process. business privacy protection hnb provides privacy protection solution business data based encryption algorithm and data segregation. firstly, any purchase orders and confidential information related hnb merchants are encrypted symmetric encryption algorithm ensure data are stored and transmitted nonclear text fashion. key managed hnb community. secondly, core confidential user data encrypted asymmetric algorithm. users encrypt the data with public key and store them hnb community only visible the owners. when requestor needs access the data, must submit access application. upon approval from the data owner, the owner will negotiate the conversational key with the requestor. after the negotiation completed, the owner will decrypt the data with private key and send requestor protected conversational key ensure interactively oriented data transmission and leakage confidential data the process. thirdly, due general ledge shared blockchain, hnb segregates ledge data and business data. ledge data used for storing transaction information, mainly digital asset transfer functions, with user identifier hnb-id excluding order and merchandise information such ordering, merchandise items, identification, ensure the privacy business data strongly protected. cross chain interaction ethereum founder vitalik buterin published report for bank union chain interoperability. there are three categories strategies proposed the report. they are notary schemes, sidechains/relays and hash-locking. conjunction with hnb application scenario, hnb blockchain layer adopts notary schemes, sidechains/relays and extensible party protocol, three types cross chain (c) hnb foundation email: service@hnb.eco interaction methods. notary schemes: support cross chain transactions between hnb dual token digital assets. notary mechanism leaning toward centralized process mechanism. the notary respectively detects cross chain transaction request one asset type and submits respective process another digital asset. hnb and hgs two digital assets are managed hnb community and cross chain transactions are conducted notary mechanism. hnb community playing the role notary and effectively managing exchange trading between two digital assets. meanwhile, this approach can support high throughput cross chain transaction. sidechains/relays: used cross chain interaction between hgs digital asset and side chain. hgs and sidechain hgs initiate cross chain interaction requests which are routed counterparts through relay gateway the form events achieve cross chain transaction integrity between two chains. hnb foundational platform provides relay gateway module for connecting hgs chain and side chain. extensible protocol: used asset trading transactions between hnb digital asset and party blockchain assets. future blockchain architecture the chain network structure composed multiple blockchains. cross chain interaction inevitable trend. therefore, hnb blockchain layer reserves protocol interface for party cross chain allow for future integration with other blockchains. off chain lighting network has been while that blockchain community sparked debates and experiments the solutions blockchain scalability. now the main solutions include block size expansion, consensus algorithm enhancement, security hardware assistance, segregated witness, lighting network, transaction sharding, state sharding, multiple subchains. but none can concurrently meet three critical requirements decentralization, expandability and security. blockchain correlated specific application thus the key strike the balance among many requirements according the specific scenario. the goal hnb serve real economy. massive scale dapp applications, small payment requests make majority transactions. yet small payment does not need the timely confirmation from main chain. for example such small payment scenario that widely existing real economy hnb, massive volumes high frequent transactions small amount are taken off chain lighting network for processing without real time interaction with main chain except when the transactions are closed exited, they connect main chain record final state, this will greatly ease off processing pressure from main chain. this the design philosophy off chain micro payment for which the typical applications are lighting network under bitcoin and raiden network under ethereum. (c) hnb foundation email: service@hnb.eco archive ledger data business environment required continuous availability thus data storage for period time needed. for storage requirements blockchain general ledger, the transaction history data will less frequently visited with time moving costly store them actively ledger. therefore, solution archive historic ledger necessary ensure the integrity ledger yet reduce resource consumption ledger management. hnb deploys ledger archiving technology. defines the ledger based database hot ledger hnb and the one based other storage media cold ledger. archives the historic ledger and moves cold ledger according predefined rules. latest transaction data remain hot ledger. ledger archiving function conducted full node. when completes archiving operation, the cold ledger stored locally. transaction history data are needed, the client node must access the full node. for spv and consensus nodes, majority the transactions and validations are done through hot ledger there need store cold ledger. there demand related dormant accounts that are needed from cold ledger, can done accessing full node retrieve transaction history data ledger archiving high level operations: the rules full node trigger archiving operation. the starting point hot ledger chosen. (all transaction data before the starting point need moved cold ledger) all transaction data before the starting point are packaged the format filesystem and stored cold ledger; the index created for cold ledger for the sake convenient search; the block size hot ledger remains unchanged and new block added when existing one full. parallel accounting hnb adopts multi-chain architecture. each chain has independent network for its own consensus ensure cross impact from consensus operation each chain. the bursting concurrent peak transaction volumes one chain will not affect others. meanwhile, consensus parallel execution multiple chains make sure high efficiency consensus for entire network. algorithm bank hgs digital asset pegged fiat currency. hgs token supply determined the number users/currency circulation/consumption scale/real world inflation. algorithm bank used issue reclaim hgs ensure hgs value pegged fiat currency and maintain (c) hnb foundation email: service@hnb.eco stable currency value. hgs stable currency hgs stable currency different from conventional currencies like usdt, tusd backed assets, accepted centralized platform which proved either high audit costs non-transparent. hgs unlike bitcny and dai guaranteed encrypted assets which proved very volatile result constant black swan events. also unlike basis, carbon totally dependent algorithm and financial derivatives which proved difficult avoid trust crisis that spawn downward spiral value collapse. hgs more meaningful and vigorous stable mechanism backed real economy hnb basic regulation approach based currency quantitative theory and implanted algorithm bank through machine learning. based many factors hnb ecosystem such the number user/currency supply/currency circulation rate, model created through enhanced learning. when abnormal result detected, currency supply will regulated issuing reclaiming. addition, hnb also designs mechanism stabilize hgs through backing the acceptance community merchants. first all, goods and services hnb community are leveraged support hgs value. due hnb closed tied real economy, merchants hnb community could selling popular products. let say, merchant sets the price $usd for its rice product the store and tags hgs hnb community. for some reasons hgs drops usd, the rice product becomes cheaper hnb ecosystem more hgs will bought purchase it. the increasing buy demands hgs will push its price and get closer usd. hgs actually backed all the merchandises hnb ecosystem. another mechanism auction. dao will periodically auction hnb tokens and users can only buy hnb hgs. theoretically the auction price hnb token lower than secondary market hgs more valuable than fiat. result, hgs value naturally pegged fiat currency. (c) hnb foundation email: service@hnb.eco reference nakamoto, "bitcoin: peer-to-peer electronic cash system", http://bitcoin.org/bitcoin.pdf gilad, hemo, micali, vlachos, and zeldovich. "algorand: scaling byzantine agreements for cryptocurrencies." cryptology eprint archive, report version sept. http: //eprint.iacr.org/. silvio micali. algorand: the efficient and democratic ledger. corr, abs/., vitalik buterin. long-range attacks: the serious problem with adaptive proof work. https://blog.ethereum.org////long-range-attacks-the-seriousproblem-withadaptive-proof-of-work/, zerocoin electric coin company. zcash: all coins are created equal, https://z.cash. ian miers, christina garman, matthew green, aviel rubin. zerocoin: anonymous distributed e-cash from bitcoin, ieee symposium security and privacy. eli ben-sasson_, alessandro chiesay, christina garmanz, matthew greenz, ian miersz, eran tromerx, madars virza. zerocash: decentralized anonymous payments from bitcoin, ieee symposium security and privacy. turpin and coan. extending binary byzantine agreement multivalued byzantine agreement. information processing letters, ():-, feb. bentov, lee, mizrahi, and rosenfeld. proof activity: extending bitcoin's proof work via proof stake. proceedings the joint workshop pricing and incentives networks and systems, austin, tx, june bentov, gabizon, and mizrahi. cryptocurrencies without proof work. proceedings the financial cryptography and data security conference, bernstein. curve: new diffie-hellman speed records. proceedings the international conference theory and practice public-key cryptography (pkc), pages new york, ny, apr. vitalik buterin. proof stake faq. https://github.com/ethereum/wiki/wiki/proof-ofstake-faq, noam nisan, tim roughgarden, eva tardos, and vijay vazirani. algorithmic game theory. cambridge university press, new york, ny, usa, rafael pass. cryptography and game theory. securty and cryptography for networks, invited talk., sunoo park, krzysztof pietrzak, albert kwon, jo"el alwen, georg fuchsbauer, and peter gazi. spacemint: cryptocurrency based proofs space. iacr cryptology eprint archive, yonatan aumann and yehuda lindell. security against covert adversaries: efficient protocols for realistic adversaries. cryptology, ():-, james corbett, jeffrey dean, michael epstein, andrew fikes, christopher frost, (c) hnb foundation email: service@hnb.eco furman, sanjay ghemawat, andrey gubarev, christopher heiser, peter hochschild, wilson hsieh, sebastian kanthak, eugene kogan, hongyi li, alexander lloyd, sergey melnik, david mwaura, david nagle, sean quinlan, rajesh rao, lindsay rolig, yasushi saito, michal szymaniak, christopher taylor, ruth wang, dale woodford. spanner: google's globally-distributed database. proceedings osdi, jeff shute, chad whipkey, david menestrina, radek vingralek, eric rollins, stephan ellner, bart samwel, mircea oancea, john cieslewicz, ben handy, kyle littlefield, ian rae*, traian stancescu, himani apte. distributed sql database that scales. bitcoin wiki. confirmation. https://en.bitcoin. it/wiki/confirmation, bitcoinwiki. mining hardware comparison, https://en.bitcoin.it/wiki/mining_ hardware_comparison. bitcoinwiki. bitcoin scalability. https://en. bitcoin.it/wiki/scalability, bitcoinwiki. proof stake. https://en.bitcoin. it/wiki/proof_of_stake, ethereum foundation. ethereum, https://www. ethereum.org/. ethereum foundation. create democracy contract ethereum, https://www.ethereum.org/dao. (c) hnb foundation email: service@hnb.eco