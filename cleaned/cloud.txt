cloud ico white paper disclaimer important notice please read the following notice carefully before proceeding read this white paper document prepared the company (the white paper "). this notice applies all persons who read this document. please note this notice may altered updated. the white paper has been prepared solely respect the company's crowdsale the cloud tokens ico "). shares other securities the company are being offered for subscription sale any jurisdiction pursuant the white paper. the white paper being made publicly available for information purposes only and does not require any action taken the general public shareholders the company. the white paper does not constitute offer invitation any person subscribe for purchase shares, rights any other securities the company. the shares the company are not being presently offered be, registered under the securities act any country, under any securities laws any state. company reserves the right price the tokens its sole discretion and sell them any discount premium relation the tokens ico prices any market price. the company reserves the right sell its reserve tokens any eligible buyers, including but not limited to, buyers company's on-boarding cloud services, cryptocurrency buyers, company's shareholders and any affiliates the above. the company reserves the right to, its sole discretion, create and/or activate the maximum amount tokens (specified the white paper), including the reserve tokens, and make them commercially available the general public either directly any via eligible agents, including cryptocurrency exchanges and trading facilitators worldwide. the company states that all token market capitalization and inventory calculations and valuations will performed independently parties and shall not assume any responsibility whatsoever for such calculations and valuations.the tokens referred this white paper have not been registered, approved, disapproved the securities and exchange commission, any state securities commission the united states any other regulatory authority nor have any the foregoing authorities examined approved the characteristics the economic realities this token sale the accuracy the adequacy the information contained this white paper under, the u.s. securities act amended, under the securities laws any state the united states america any other jurisdiction. purchasers the tokens referred this white paper should aware that they bear any risks involved the purchase tokens, any, for indefinite period time. forward-looking statements some the statements the white paper include forward-looking statements that reflect the company's and/or the management current views with respect product development, execution roadmap, financial performance, business strategy and future plans, both with respect the company and the sectors and industries which the company operates. statements that include the words ''expects'', ''intends'', ''plans'', ''believes'', ''projects'', ''anticipates'', ''will'', ''targets'', ''aims'', ''may'', ''would'', ''could'', ''continue'' and similar statements are future forward-looking nature. all forward-looking statements address matters that involve risks and uncertainties. accordingly, there are will important factors that could cause the group's actual results differ materially from those indicated these statements. these factors include but are not limited those described the part the white paper entitled risk factors '', which should read conjunction with the other cautionary statements that are included the white paper. any forward-looking statements the white paper reflect the group's current views with respect future events and are subject these and other risks, uncertainties and assumptions relating the group's operations, results operations and growth strategy. these forward-looking statements speak only the date the white paper. subject industry-acceptable disclosure and transparency rules and common practices, the company undertakes obligation publicly update review any forward-looking statement, whether result new information, future developments otherwise. all subsequent written and oral forward-looking statements attributable the company individuals acting behalf the company are expressly qualified their entirety this paragraph. prospective buyers the cloud token should specifically consider the factors identified the white paper that could cause actual results differ before making purchase decision. statement the white paper intended profit forecast and statement the white paper should interpreted mean that the earnings the company for the current future years would may implied this white paper. purchasing the cloud token hereby acknowledge that have read and understand the notices and disclaimers set out above. ico passport token name cloud (the "token") token ticker cld token symbol token owner cloudwith.me, northumberland road, ballsbridge, dublin hf, ireland financial auditors baker tilly and hughes blake, joyce house, holles street, dublin legal advisors sean wallace and alan ryan, wallace corporate counsel, northumberland rd, ballsbridge, dublin token type ethereum erc total tokens issued tokens max. final number tokens created will calculated according contributions demand, will fixed and publicized the end the ico day. mining mining any other means tokens amount increase will apply the cloud token post ico use proceeds funds from token sale will predominately used for the global deployment gridnodes infrastructure for migrating the web into decentralized cloud. see "use proceeds" section this document. bonus the pre-order period cloud tokens will available with bonus structure publicized the official token ico site (token.cloudwith.me) tokens distribution public (of all tokens created) company's reserve management employees ("employee tokens") lockup period management and employees undertake -month lockup period. sale, transfer pledge employee tokens will permitted tokens transfer tokens will transferred buyers upon payment confirmation. purchased tokens will not active during the pre-order period (i.e. sale transfer tokens will not possible until the ico complete the end ico closing date. tokens will become activated automatically upon ico completion date and can freely transferred exchanged) ico timeline pre-order period july august token generation redeem pre-order buyers august aug discounted cloud services payable cloud tokens august official sale tokens company begins august first day tokens trading september table contents ico passport table content executive summary centralized cloud services overview -what blockchain? complementary cloud decentralization solutions storj golem cloudwith.me solutions abstract cloudwith.me solutions in-depth technical overview decentralized cloud hosting environment centralized vs. decentralized cloud platforms the blocks cloud computing services benefits decentralization cost reduction increased resiliency better network performance privacy and security operational transparency more choice grid growth expectations centralized cloud application use case analysis decentralized cloud how things are done today supporting the relationship between gridnode owner and application owner cloud hosting contracts smart contracts the trust issue blockchain-based reputation mechanism dispute resolution performance-monitoring agents ensuring integrity code and data compliance considerations uniform terms service for application owners regulatory compliance deploying application instances cloudwith.me existing interface for traditional cloud providers deployment parameters additional resources roadmap and bootstrapping phase (codename: 'ringo') seeding phase (codename: 'mccartney') dependable grid phase (codename: 'harrison') open playground phase (codename: 'lennon') expansion market opportunity cloud token ico use proceeds risk factors references executive summary cloudwith.me (the "company") has three main objectives: decentralize the provisioning cloud services, migrating from global infrastructure operated small group hyperscale service providers blockchain-based peer-to-peer infrastructure operated millions small individual providers and contributors cloud resources. simplify the use professional cloud services for all levels web users turning such services into commodity product that universally accessible and utilized the general public. monetize the new decentralized cloud services ecosystem with dedicated cryptocurrency governed smart contract enabling automated and trusted reconciliation payments between all peer-to-peer cloud services providers. the company has already achieved the first milestone establishing its simplified provisioning and setup cloud services that can easily operated even the most novice web users. second phase, cloudwith.me intends facilitate the creation globally decentralized cloud hosting grid, allowing cloud-based applications automatically scale across millions cloud service providers who are fact individuals contributing small portions their redundant home/office computer resources become part the blockchain cloud grid (thus effectively creating the new crowd cloud) and benefiting from continuous provider income. the blockchain ethereum-based cloud token intended become the standard currency for the emergent decentralized cloud services ecosystem, governing contribution-based pro-rata payments, clearing and distribution financial benefits the new role players the crowd cloud. naive schematic level, each cloud service comprised the following building blocks: storage computing/processing bandwidth cloud applications payments and billing high-level schematic the building blocks average cloud service encapsulating the basic building blocks the cloud service (namely "gridnode") and creating smart contract that considers the key aspects the relationship between cloud-service provider and application providers, the company intends make possible for virtually anyone join the hosting grid service provider/contributor, thereby establishing virtual infrastructure that operated millions cloud-service providers across the globe, and making possible for each cloud-based application elastically scale nodes that meet its own technical, geographic, regulatory and business requirements. the newly issued cloud cryptocoin will used automatically distribute payments the gridnode owners and other crowd cloud participating parties well provide important grid admin facilitation such entity description, performance metrics, etc. the company intends use the proceeds from the ico deploy critical mass gridnodes global scale and actively promote the recruitment gridnode service providers/contributors thus effectively decentralizing cloud services. the key benefits expected from achieving cloud decentralization are: reduction cloud services costs (expected circa cost reduction average service criteria) unparalleled data security and privacy with tamper-proof gridnode network components near fail-safe operation with significantly higher integrity and service availability high degree cloud services automation enabling deal with the "what" instead the "how" taking pro-cloud services out the expertise zone making fully accessible for the "rest us" utilizing the company's blockchain dap technology the dap, decentralized application protocol, blockchain application threading layer. based the ethereum infrastructure, the dap will facilitate easy design and launch decentralized peer-to-peer cloud applications such media services (music film), social peer-to-peer insurance, decentralized banking, financial services and other applications without limitations central governance--all monetised single uniform currency--the cloud token. the protocol will allow seamless setup self-governing smart contracts for unlimited range social applications. the cloud token key component governing the financial ecosystem surrounding the new crowd cloud. the company believes cloud token expected gain significant liquidity due its immediate implementation the company's services. centralized cloud services overview the century has seen massive surge data and cloud applications economy. the demand for both storing and processing data exponential rise the cost cloud services for small and medium-sized businesses (smbs soho) become significant the need develop and deploy cloud applications becomes essential commodity. software applications that offer remote storage have been made accessible compensate for the limitations on-premises computer storage. however, the real players this industry--the 'hyperscale' cloud services providers--go well beyond the scope mere storage. centralized cloud service providers offer wide array services including storage, backup, web hosting, remote computing power, content delivery, database management and remote software applications. over businesses utilize cloud services some form, benefiting from range cloud applications management and analytics without the upfront investments necessary infrastructure, specialty staffing, server equipment and maintenance. the rise cloud services has been one the strongest influencers five-year low capital expenditure budgets while capital expenditures businesses are being significantly reduced, intel security predicts that mid-, operational expenditure for cloud services will account for budgets and idc forecasts global public cloud services reach over billion revenues more than doubling last year's figure fig: adapted from spending infrastructure for public cloud deployments will return double-digit growth according idc [press release] international data corporation, april available at: http://www.idc.com/getdoc.jsp?containerid=prus for smaller businesses scalability key. investment virtual servers via cloud services endows clients with scalable server capacity, that high number server instances can utilized during peak demand, and lower amount during quiet periods. this way, wasted server capacity doesn't drain company resources and server time can costed pay-per-use schema. centralized cloud services rely number large data centers serve their customer base. these data centers are physically segregated avoid total service failure wherever possible. while providers offer services that enable customers run instances multiple server systems balance traffic, these ultimately come additional cost insurance case system failure one data center. the reliance physically connected local server systems precisely what's meant when said that their services are 'centralized'. users centralized cloud services must place significant amount trust their providers secure, accessible and reliable. the synergy research group reported that the top hyperscale companies currently operate over data centers around the world. they also report that hyperscale providers account for the global market share for cloud infrastructure services and cloud-hosted software services for these hyperscale providers, cloud services are accounting for increasing percentage their revenue. cisco reported that hyperscale data center traffic accounted for total internet traffic, figure expected rise it's surprise that the only competition the cloud service industry between well-established corporations the cost setting viable centralized cloud service simply too much for newcomers. many individuals and small businesses struggle with the necessary steps understand and maintain the cloud service infrastructure. for businesses particular, setting cloud servers can take months work trained professionals. some managed hosting solutions like cloudwith.me offer automated solutions cloud service setup and management removing barriers cloud services setup and allowing such businesses remain focused their core operations. study idc found that smbs worldwide made use cloud storage, with the main disincentive being privacy and security concerns security concerns have been ghly discussed issue for potential users cloud services (especially cloud storage) since their popularization rightfully so, would seem. nearly smbs out business within six months hack -what blockchain? bitcoin presented elegant solution the problems posed centralized administration the finance sector: distributed databases using peer-to-peer architecture, this blockchain technology allows users send transactions without central authority accommodate them. this paradigm, every user the service holds copy all the transactions sent through the network. this eliminates any need trust third party maintain services verify transactions. transaction blockchain service takes place immensely fast and securely. blockchain-based system makes use blockchain link 'block' transactions the set all past transactions the system. every user--or node --in the network given full copy the blockchain. this enforces transparency between users, each new block the chain synchronized among all nodes. each transaction must verified number users. verifications are usually performed nodes randomly guessing inputs cryptographic hash algorithm until the result matches the hash the last block the chain. despite the transparency transactions blockchain, users are awarded privacy because their identity the system simply public key long number hash). corresponding private key used sign off transactions. users must keep the private key private; the only means for the system prove authenticity. confidential information users held the blockchain except those details they decide send out (which not recommended). users who opt try verify transactions make automated verifications. add incentive so, those that succeed are given monetary reward. therefore blockchain technologies allow transactions executed incredibly quickly. the fees for sending transactions through the distributed network are driven down compared with those centralized services due the ease processing transactions and the absence third party oversee the validity contract. transaction breaks the terms agreement, the contract isn't valid and cannot passed down the chain. since the advent bitcoin, many other cryptocurrencies have been conceived with the same basic framework. the most notable these ethereum, which generalizes the idea blockchain currency contract token that could represent any hard-coded agreement between parties. these 'smart contracts' have been utilized platforms for crowdfunding, prediction markets (gnosis), music licensing and distribution (ujo), social media (akasha), and even cloud services (storj, golem), all discount similar, centralized services. they are flexible enough for developers add wide range conditions and functions based which conditions are met deployment. yet deployment, this flexibility vanishes, their properties become strict terms that must met users decide whether the contract valid and precisely what will used for. bitcoin and ethereum are examples public blockchains. anyone can access public blockchain view, send, validate transactions. private blockchain platforms, the other hand, require explicit approval from administrator gain access these actions this equips private blockchains with more functionality for localized use, e.g. database management within business part the power the ethereum platform that allows developers create private blockchains that still retain the increased security, privacy, and distributed self-governance that the public platform permits. complementary cloud decentralization solutions there are few cases decentralized cloud initiatives entering the market right now, most notably storj and golem these stand prove the strength peer-to-peer networking delegate utilities. both projects are equipped with ethereum-based smart contracts commodify the services provided from one user another the lowest possible cost. storj storj concentrates its efforts cloud storage. essence, the service allows users rent out unused storage space their devices and rent such space from others. with this service, users can encrypt and fragment their files and then distribute them among its network, thus protecting their content from access storage providers. copies the file fragments can also distributed among the network guarantee the availability data case failure one the hosting servers. dealing with file fragments instead whole files centralized cloud storage, the need for trust between users minimized. cloud storage this manner dissuades targeted attacks file stores anonymizing user's data and distributing them across the network. contrast, attackers will find relatively simpler locate the data centers that specific businesses employ centralized cloud service. course, whole-network attacks still prove issue for distributed cloud service providers. increasing the scale the network effective defense against most types attack. cloud storage can protect against data loss ways other than just sending redundant copies file fragments across the network. erasure coding algorithms allow data owners recover file even few fragments are corrupted lost. this way, storage provider terminates its node, becomes much easier recover the file from the remaining fragments. keeping track the number remaining file fragments necessary guarantee that erasure coding recovery successful; across all files stored can prove difficult for user who doesn't have the time technological knowledge required understand this. storj, smart contracts decided upon user contain all the information describing the relationship between data owner and the storage provider. once accepted potential partner, both parties need only sign the contract access the service immediately. this contract method drives the cost renting storage space putting users competitive marketplace. users can alternatively utilize services provided storj themselves. their own storage service offered discount from the major centralized services, ranging between and the cost hyperscale providers services are paid storj's token cryptocurrency, costs for the service their currency fluctuate based the value the token. this protects users from volatility their costs profits the market. data owners can specify their bandwidth demands the smart contract, which keeps the storj algorithms aware whole-network demands and allows bandwidth evenly distributed. slow download speeds are less likely such network, especially with the addition redundant file distribution and erasure coding. for users who would struggle with the administration that comes along with the service, storj provides the option use dedicated 'bridge' server undertake negotiation, issuing, and verification contracts; payments for services; and recording the state the file fragments across the network. course these servers reintroduce the issue placing trust third party guarantee file protection. the bridge servers allow developers utilize the storj network host and run their applications. they also allow public file sharing hosting encryption keys for public files. disadvantage this distributed service the lengths that users must order maintain availability data the network. eliminating the need for trust central authority with bridge servers, users still must manage the file states and preprocess data themselves. for businesses that need store lot data this means time, knowledge, and money. golem golem allows users rent out cpu their devices pay use others' hardware for computationally exhaustive tasks. the project's ultimate goal become the world's first decentralized supercomputer. any cloud service, the distributed network offers parallel processing that allows time-consuming tasks completed quickly when users need it. this means that the lull periods that golem's service affords its users, users can rent out their own idle cpu the network and recoup great deal the service's cost. golem also allows software developers place their own applications its application registry. this gives developers direct payment for their services use-by-use basis. issue with their open application registry that malicious software can uploaded and utilized the network. the registry offers whitelist and blacklist feature give users the option run only validated applications and aware the malicious ones. with storj, golem users can set their own contracts the blockchain form agreement the terms the service. users can therefore negotiate their own payment schemes for cpu application rental the smart contracts that accommodate fluctuations golem's currency. payment for the service automatically executed the contracts the blockchain that users have agreed use. with distributed network, large-scale outages such centralized cloud service users have experienced the past are longer issue. one server goes down the middle task completion, resources can pooled from elsewhere the network accommodate for it. the event server failure, the contract between requestor and provider will not validated and payment transfer will not initiated. this acts insurance against providers who don't deliver the service they agreed to. both these factors highlight that business's downtime limited the blockchain and the costs any downtime are automatically minimized. cloudwith.me solutions abstract can take months for businesses implement cloud services they stand. breaking the cloud package into independent networks, each with their own interface and currency, means businesses will have dedicate even more resources get trained staff maintain their cloud servers than they would for centralized cloud hosting. cloudwith.me ("cwm") already offers its clients managed hosting solution for hyperscale cloud services. this allows business owners adapt their server needs without being weighed down the technology and time that goes into setting and maintaining their cloud server instances. bringing the cloud down earth, services can made accessible businesses big small, tech-savvy not. managed hosting eliminates much the need for in-house staff and administration business, and lets these departments focus mission-critical tasks. advancing cloud service instances with peer-to-peer decentralization has already proven popular, can seen from the remarkable outcome the storj and golem solutions the cost such decentralized services irrefutably lower than similar services from centralized providers. now cloudwith.me steps provide fully functional, complete cloud service that equips its clients with all the benefits hyperscale vendors' packages discount. introducing peer-to-peer cloud services their managed platform, clients can focus understanding the benefits decentralization instead its inner workings. even though the security and privacy benefits inherent blockchain eliminate lot the trust and pricing concerns businesses express for centralized cloud service providers, decentralization can't provide strong service without wide active network. indeed, for peer-to-peer networks it's case 'strength numbers'. cloudwith.me has already established secure client base managed hosting for cloud services. this makes cloudwith.me the ideal platform transition decentralized cloud service, both the major public cloud services can still used where various aspects the cloudwith.me platform are unavailable development. decentralized services that are ready for market can then provided discounted price. the platforms offers both options, clients can see the difference price and performance between peer-to-peer and centralized systems directly. the cloudwith.me solution endow clients with their own private blockchain application the distributed network. given private blockchain, the cloud package owner can choose add devices and users the network they please, making possible have blockchain acting within the business between affiliates. smart contracts the blockchain can personally tailored the needs the business, the business. private networks can employed automatically manage databases, enable peer-to-peer file sharing within business even adopt cloud computing application utilize the idle cpu across all business's devices. from the start, cloudwith.me platform will enable users benefit from the largest cloud service provider services the cost. this automatically keeps running receipt the services used the cloud. the cloud token grants cloudwith.me clients the security ethereum payments and minimizes transaction fees for cloud service applications. this way, clients are incentivised join cloudwith.me's decentralized cloud. adoption the cloud token increases the scale and therefore the strength the cloud network. cloudwith.me ultimately aims create global marketplace where blockchain-based cloud applications can presented and traded with ether-based payments. the introduction the cloud token the sole currency for cloud services allows all applications experienced the same ecosystem. customers cloudwith.me can offer their services and receive payment cloud, which they can then use request the services they need. cloudwith.me solutions in-depth technical overview decentralized cloud hosting environment the blocks cloud computing services distributed cloud-hosting grid must address the same needs those are answered today's centralized cloud hosting platform solutions. facilitate meaningful discussion this topic, let's consider the following breakdown cloud service environment: the physical infrastructure consists everything that has with the hardware and the physical space which the hardware located. today, cloud providers operate data centers which they run thousands servers, routers and switches, power them with enough electricity, connect them the internet backbone, take care cooling requirements, and secure access them with tons concrete, barbed wire, steel doors, alarm systems and armed guards. the back-office includes software services and user interfaces that allow customers the cloud hosting provider (i.e., cloud application owners) create accounts, get permission access services, receive bills, pay for cloud services usage and receive support. the cloud application runtime environment consists all the software components that enable and support the runtime cloud applications. the elements this block provide the core functionality that differentiates today's modern cloud platforms from legacy hosting providers. the following table further details the above breaking each the service blocks into layers: centralized vs. decentralized cloud platforms the following figure illustrates how centralized cloud platforms operate over number data centers (ranging from handful data centers the case small providers, several dozen the case large providers)--where those data centers are roughly exposed blocks and using the concept zone similar (e.g., "aws us-west"). key things note here: every single component illustrated this diagram owned and operated the same entity--i.e., the cloud service provider. when application owner deploys application centralized cloud platform, that application owner must several things: establish legal relationship with the cloud provider (i.e., open account, provide payment information, etc.) develop expertise the cloud provider's proprietary implementation block (cloud application runtime environment) architect and code the application make optimal use the cloud provider's geographical deployment and service orchestration mechanisms. decentralized cloud platform would transform the relationship between the application owner and the cloud service providers. understand how, let's examine the structure decentralized cloud platform illustrated below: there are several key differences from the previous topology: the basic building block the decentralized cloud platform gridnode component, providing the basic cloud platform service blocks. the gridnodes are interconnected form mesh network for service management and request routing. each gridnode connected the blockchain.. gridnodes are operated variety different service providers the gridnodes expose uniform application runtime environment, thereby allowing seamless migration application code between service providers. the application owner creates blockchain-based accounting relationship with the decentralized platform, not with the providers. gridnodes are intended installed and operated gridnode owners, who can independent operators well cloud service providers. this flexibility allows the grid evolve from the current state and expand global scale. this is, course, long-term vision that extremely flexible and supports wide variety use cases. but explained later sections this document, the evolution gridnodes can start today supporting limited set scenarios and gradually evolving fulfill the open grid vision. benefits decentralization cost reduction one the realities our economy that new technologies eventually become commoditized, and the market moves from differentiated undifferentiated price competition, and from monopolistic perfect competition link quote columbia business school professor bruce greenwald: "in the long run, everything toaster" link but until new technologies and services become commoditized, their prices are kept well above what they become when the market opens price-based competition. the cloud-hosting space currently very far from perfect competition. has been described some oligopoly [link]: market dominated handful major players, where new player any meaningful size can enter. oligopoly has natural tendency drive prices way above what they might truly competitive market. the company believes that the decentralization process will drive commoditization cloud services commodity rates low below current market prices. essentially, the goal have cloud services equal status running water electricity developed countries--a utility, removed from price gaps unnecessary markups. demonstrated most recently uber and lyft the ridesharing domain, enabling almost anyone become service provider can transform that market and bring prices down link privacy and security the distribution application data and logic across millions nodes, each one secured independently and located different place, makes difficult for attacker obtain access hoard sensitive information items. similarly, with the right protections and isolations place, the gridnode owner unaware the data and computations performed the gridnode. akin "double blind" clinical trial protocols, data secured from both malicious end-users and gridnode owners. increased resiliency another important benefit decentralizing the cloud improved resiliency. today, the vast majority cloud services are being provisioned from more than few hundred data centers, located strategic locations around the world. result, failure single data center can have catastrophic effects significant number internet users that rely applications that run those data centers. recently last march, aws storage services amazon's us-east- region northern virginia had outage, affecting, reported the register link "docker's registry hub, trello, travis ci, github and gitlab, quora, medium, signal, slack, imgur, twitch.tv, razer, heaps publications that stored images and other media adobe's cloud, zendesk, heroku, coursera, bitbucket, autodesk's cloud, twilio, mailchimp, citrix, expedia, flipboard" and more. decentralization cloud hosting would exponentially increase the number locations that serve cloud applications, turning the effect failure any one those locations into much less painful event. operational transparency the knowledge have today, society, about the overall use computational resources across the globe filled with uncertainty: neither application owners nor cloud service providers are under any obligation whatsoever release accurate and complete information about how many servers are being used, where they are located geographically, what type cloud services are being consumed and forth. the decentralized grid can include mechanisms that contribute valuable knowledge about usage statistics without revealing sensitive business details, and allow all better research and understand computational usage patterns and trends across the globe. better network performance one the exciting benefits the decentralized grid that could eventually provide better performance for users that are not located near high-bandwidth trunks, such underdeveloped regions countries. application used extensively certain geographic area the globe, and the grid architected facilitate such behavior through appropriate transparency and bidding mechanisms, then the application would tend migrate that region, thereby reducing distances between server and end-user, improving performance and reducing traffic costs. more choice today the large cloud providers offer large menu platform and application services, yet limited set, fully controlled the provider. subscribers cloud services benefit from services such managed databases, but they are locked in, with little incentive migrate different provider, use multiple providers. the open gridnode platform will built accommodate third parties building blocks from any layer. choices are expected significantly outnumber existing offerings single cloud-service provider. addition, decentralized cloud operating blockchain currency payment method lowers the barrier entry and creates accessibility pro cloud services developing countries where credit cards, which are the standard modus operandi for the current cloud services, are scarce. the cloud token becomes equalizer and helps bring services every country equal grounds. grid growth expectations the project put into motion, the community should able track progress and understand whether the entire grid, decentralized hosting entity, making significant impact and indeed transforming the way cloud services are consumed globally. one the things would like compare the total computing power (in flops) the decentralized grid with the total computing power offered the major cloud service providers. unfortunately, there reliable data about how much computing power made available the major cloud providers. however, some data exists the total electrical power consumed those providers, and can also make some educated guesses about the performance per watt the machines hosted them and the critical power loads their data centers. suggest that those metrics--of total power consumption and total computing power--could also useful for understanding the growth the grid computational entity. those metrics also help understand efficiencies and thereby the environmental impact. open community, would like see the grid not only create more transparency, resiliency and cost reduction, but also have positive environmental effect. let examine the total set servers operated cloud hosting provider defined ...} let the maximal computing power (in flops) afforded server the total computational power potentially provided cloud service would then computed calculate the effective computing power made available applications that operate the hosting provider's infrastructure must also take into account any computational overhead that expended operational aspects the hosting provider itself, such the overhead running virtual machines, deploying applications new servers, etc. the effective computational power would then calculated 'th where the computational overhead quotient the system whole. let the power consumption watts know the performance per watt flops/watt for can infer that its computational power would calculate the total computational power provider can now use the formula oth where oth the average looking various sources (e.g., link and link can probably assume that for today's servers the value would the range around gflops/watt. should also assume that data centers have mix newer and older servers, where the older servers have lower energy efficiency. examine the power consumption (and from that infer the computational power) must take into consideration, not just the power consumed the servers themselves critical power but also the power consumed ancillary systems the data center--most notably cooling (but also lighting systems and others). since not all data centers have the same power efficiency, let eth the weighted average power consumption overhead all data centers which the servers are stored. let ...} the cloud provider's set data centers, and ...} the set servers data center and the power consumption server sdi |dd the total critical power consumption data center but the total power consumed the data center its entirety (including overhead the non-critical systems such cooling, etc.) would where the power overhead quotient for data center (based link can assume that reasonable value for most data centers would around |d| the total power consumption the provider across all data centers since eth know that eth due the heterogeneous nature the decentralized grid, will not able assume that eth for any given when considering our own decentralized grid, but the case traditional data centers can probably overlook this and also assume that eth and assume that for cloud provider running typical data centers, wth from various public sources, can tell the major cloud providers. for example, according link amazon's virginia us-east data center almost watts. assuming amazon has put lot effort into improving their data center's power efficiency, would guess that their eth likely better than the common using eth puts lower bound our calculation. such, can suppose that better than watts, i.e., gigawatts. estimate the computational power the data center can now use our earlier formula oth place range the value oth can guess that amazon's us-east data center probably has compute power the range gflops and gflops--i.e., between .-. peta flops (where peta flops flops). these numbers and formulas give sense desired scale and way monitor the growth the decentralized grid, while also providing some baseline energy efficiency targets. effort calculate the cost bootstrapping decentralized grid that comparable just the effective computing power aws data center (as example), while the actual computations are beyond the scope this paper, calculate estimate that will guide the level funds needed achieve critical mass the path decentralization. for that matter, assume average cost $k/server. this cost also factors estimated operational costs for three years well the cost the networking equipment, etc. (i.e. the effective computing power get this cost should not assumed high). then assume each such compute unit, which for simplicity purposes runs single gridnode and has effective computing power gigaflops average which means that get effective computing power petaflops total would need gridnodes. with one gridnode per server, and server price $k, the total cost for the gridnodes critical mass bootstrap would approximately $m. that might seem like high number, but it's just the $.b spent capital expenses and leases the top three cloud service providers alone, google's overall cloud spending. application use case analysis let's examine the common use case web/mobile application back-end, and compare the behavior the centralized vs. decentralized approaches. this sort scenario, have the following entities: end-users: interacting with the hosted application via personal front-end application the application owner: requiring physical and logical infrastructure host and operate the application the cloud services provider: furnishing the application owner with the means run the application. centralized cloud the following drawing describes the trivial case single user accessing the cloud-hosted app: the end-user operates the personal computing device (mobile phone, laptop, gaming console other). the front-end application (e.g., browser mobile app) runs the user's device, and interacts with single instance the cloud-application logic achieve tasks such getting the contents web pages, storing progress game, sending email message, initiating online purchase, any other applicative operation. referring our service blocks layers (in the above table), let's describe common configuration using the layers terminology. this configuration, our cloud application logic (layer written typescript using bootstrap.js (layer and transpiled into javascript code running node.js (layer implement the rest apis and the back-end algorithms required for the applicative system function correctly. the code leverages mongodb (layer and object store provided the cloud service provider (layer .), and runs virtual machine (layer that executes physical server (layer secure data center (layers operated the cloud service provider. addition consuming services provided the cloud service provider, also leverages set services that receives from external sources (e.g., payment processing service). the application owner pays the hosting provider have this entire stack execute the provider's infrastructure. the responsibility the hosting provider ensure that the infrastructure operates seamlessly and supports the needs the applications. this application consumes services from external providers, the application owner establish relationship and settle payments with those other providers. support the high load generated multitude users, applications need scale. this requires that more than one compute engines available execute multiple instances the application logic. requests from different external users are routed different instances the application, based factors such resource availability, application context, geographic location, and forth. support such scaling, the cloud-hosting provider also allows the application owner rent load balancing and content delivery services order route front-end requests available instances the application that are the general geographic area the request origin. addition deploying the application logic multiple compute engines, the cloud services consumed the application logic must also scale support the high load generated having multiple application instances access them: the implementation and operation highly scalable cloud-hosting infrastructure requires considerable amount resources (data centers, computers, networking equipment, electricity, cooling, physical security, etc.). only small number very large companies are able provide such infrastructure global scale. decentralized cloud returning the trivial case single user accessing the web/mobile backend cloud-hosted app, let's examine how this would work the decentralized topology, where gridnode executes single instance cloud application via sandboxed environment such virtual machine container (i.e., element layer .). before, have three primary participating entities (end-user, application-owner and cloud services provider), only now there direct relationship between the application-owner and the cloud services provider (i.e., the gridnode owner), the relationship established using smart contract between the application owner and the grid. the gridnode owner responsible for setting the gridnode, connecting the decentralized grid via the internet and ensuring its ongoing operation. blockchain (initially ethereum-based cloud token, but other blockchains will also supported) used send payments the gridnode owner and other participating parties--but also for additional purposes, such entity description, performance metrics, etc. the fundamental interaction between the front-end software and single application instance that hosted gridnode quite similar that traditional cloud hosting, with one important exception: routing the request from the front-end device the gridnode achieved through grid-based load balancing system, rather than through load balancer operated single cloud services provider. the load-balancing logic embedded into the gridnode, that every gridnode can optionally participate the routing network requests. the gridnode provides the application with full runtime environment (block many aspects the application's architecture would similar the previous case, but some aspects might differ. for example, while the app's layer elements might still typescript and bootstrap.js, and the layer app server still node.js, the underlying storage service (layer might based storj similar decentralized storage system. conversely, application running gridnode might choose leverage amazon google cloud storage, while running some its compute functionality decentralized supercomputer such golem. put this more general terms, layer and (see table p.) services such storage, analytics, message queuing, etc. are provided the application logic using three different means: some services are provided directly software components the gridnode. other services are provided entities that are external the gridnode, but through standardized api that provided the gridnode the application through 'cloud services gateway' component. those external services can run other gridnodes, hosted other environments such classic cloud hosting. the cloud services gateway component enables the grid provide blockchain-based token conversion mechanism for those external services. application owners can also pay external providers for consumption additional cloud services the application, just like they can the traditional cloud hosting approach. such payments would not necessarily via blockchain-based currency. the big difference between the traditional cloud hosting approach and the open grid becomes apparent when examine how the grid supports scaling applications. the traditional approach, see multiple instances the cloud application logic being executed multiple compute engines that are operated the same cloud services provider. the decentralized cloud, still see multiple instances the application logic--only now they are served compute engines that are operated many different gridnode owners. cloud-hosting contracts when designing the smart contracts for the decentralized service, must consider the needs and expectations both the gridnode owners and the application owners. the objective the cloudwith.me open grid provide service that comparable traditional cloud hosting, let's first examine how contracts between application owners and cloud service providers are built today, and see how that would translated the decentralized cloud. how things are done today most cloud-hosting contracts include least the following elements: the cloud-hosting provider commits provide the application owner with certain predefined package services return for payments that are calculated take into account number factors. factors may include such things the amount and type allocated resources, expected availability the resources, expected response time case faults, and forth. the application owner commits pay for the services, and use them only according certain terms set the hosting provider. almost always, the hosting provider would require that the application owner will only use the service for lawful purposes (including such things avoidance copyright infringement, using only software that the application owner allowed use, not supporting any illegal immoral activities, and forth), and that the application owner will not abuse any apis provided the hosting provider disrupt the services the hosting provider any way. hosting providers almost always commit service level agreement (sla) that defines what level performance the customer can expect from the hosted environment, and what would the compensation case the hosting provider unable live that promise (many cloud-hosting providers give 'service credits'-i.e., they provide limited discount future services--to make for downtime slow performance suffered the customer). the type service question (e.g., compute, network, data backup, etc.) determines which measurements are possible that service. the specific definition metrics and service levels varies across cloud service providers, but they usually refer uptime (often measured monthly percentage), and some cases the response time well. smart contracts supporting the relationship between gridnode owner and application owner the relationship between gridnode owner and application owner very similar--in terms mutual commitment and expectations--to the relationship between application owner and cloud services provider: the gridnode owner would commit provide the application owner with predefined package services and capabilities, and expect receive appropriate payments return for providing those services promised. the application owner would commit pay for the services, and use those services way that does not disrupt the operation the gridnode for any unlawful immoral purposes. however, key conceptual problem that open grid service needs deal with trust between gridnode owners and application owners. unlike classic cloud hosting, the application owner not interacting with well-known brand, and cannot simply rely the name the gridnode owner decide whether trust that entity live those commitments. similarly, the gridnode owner might not have the required financial resources deal with application owners who not live their commitments. the trust issue gridnode owners not inherently trust the application owners, but they want sure those application owners will pay them for the resources they consume and will not misuse the service. the other hand, application owners not inherently trust the gridnode owners, but want sure that they pay (or commit pay) for grid resources, then they will actually get those resources from the gridnode owners. many cases, blockchain smart contracts aim remove the need for trust completely automating the conclusion contract through objectively verifiable means. unfortunately, the cloud services domain, the reliable and accurate provisioning computational services cannot verified automated means link this situation creates evident conundrum: the application owners commit pay before getting access the resources: there fully-automated way verify that the cloud resources behaved promised, how can application owners know that the gridnode owners won't just take the payment and then not provide the promised resources? the gridnode owners commit provide the resources before getting paid: there fully-automated way prove that they actually provided the correct resources, how can gridnode owners know that the application owners won't use the resources and then refuse approve payment (even placed escrow), claiming that the resources provided were not promised? blockchain-based reputation mechanism the established mechanism for overcoming this problem--of enabling trust-based transaction between anonymous buyers and sellers the internet--is reputation system. this mechanism used companies like ebay and amazon facilitate trust-building for the sale physical goods. companies like ebay and amazon serve trusted intermediary, managing central database the reputation both buyers and sellers, and providing dispute resolution service overcome disagreements when those arise. cloudwith.me intends create blockchain-based reputation system that based smart contract for subscribing cloud resources (cloud tokens). primary concept cloud tokens gridreputation. gridreputation stored (both for gridnode owners and for application owners) the blockchain (initially the ethereum blockchain, but mechanism will developed transfer gridreputation other blockchains the future). gridreputation measure how trustworthy the participant has been far: application owners gain gridreputation when they demonstrate that they are well-behaved systems the grid and quickly pay for services they have used, and lose gridreputation they use grid resources and then fail pay for them, otherwise fail abide the terms service. gridnode owners gain gridreputation providing reliable hosting services, and lose gridreputation the hosting services they provide prove unreliable (e.g., the environment crashes, network bandwidth too low, etc.). reputation elements for gridnode owners: uptime, consistent performance promised (compute, network, data r/w access), data storage reliability, trustworthiness (i.e., they only charge for services rendered), data security. there are two modes whereby the grid grants access gridnode resources: option pay now, use later (like buying prepaid sim amazon gift card) option use now, pay later (like giving your credit card number hosting provider) pay-now-use-later will favored when the application owner does not yet have strong reputation. use-now-pay-later will favored situations where gridnode owner does not yet have strong reputation. performance-monitoring agents performance-monitoring agents can introduced into the grid for the purpose allowing gridnode owners have third party periodically assess their level service, publicize the results, and objectively influence their gridreputation over range service metric dimensions. trivial example performance-monitoring agent could "uptime tracker", paid periodically check the uptime nodes the grid. other performance monitors could assess aspects such compute engine performance, bandwidth reliability, firewall setup, hardware configuration reliability, and forth. such performance monitors would send compute jobs selected gridnodes and assess the performance those nodes running benchmark jobs and comparing the actual result what expected, given the platform attributes published the gridnode owner. entities that run such performance monitoring tasks have could incentivized through smart contracts maintain their objectivity, either acting oracles (where multiple independent monitors would perform independent assessments the same gridnode, and monitor who deviates significantly from the majority finding would risk losing deposit), creating mechanism whereby the payment for publishing the results the investigations would come from the gridnode owner the results were positive, and from the application owner the results were negative. dispute resolution with any reputation-based mechanism, disputes are bound arise. facilitate dispute resolution, the infrastructure and smart contract for the decentralized grid will take into account the need transfer payments arbitrators (possibly oracles the blockchain), and expose them operational logs that can help them make decisions. ensuring integrity code and data naive design hosting grid would vulnerable malicious parties who join the grid gridnode owners--with the intent steal modify sensitive data that processed cloud applications. traditional cloud providers not have incentive steal customer data: organizations, their reputation depends their ability increase confidence that applications are not tampered with, and they are also potentially liable legal action should they cause the leak sensitive information that they are supposed protect. however, some employees (or partners) those organizations might potentially abuse the access they have data. such, providers advertise the use physical security mechanisms prevent access the machines, and they fire employees who are found tamper with data. while this approach essentially trust-based and not entirely foolproof, does make difficult for attackers reach the data,. anyone can join the grid gridnode owner, the grid cannot assume that all gridnode operators are trustworthy custodians data. malicious gridnode owner might attack the grid using various means. two prominent examples include: operating modified gridnode that steals information from the applications executes, modifies data some way that benefits the malicious party. installing shadow (raid) drive the machine that runs the gridnode, and physically removing from the machine order copy sensitive information from it. application owner, you cannot any means deploy the ssl certificate with your tls secret key web server hosted unknown machine that you cannot reasonably trust. while there are means that cloud application might employ obtain some level confidence that not running modified gridnode, software mechanism can self-verify with certainty that running uncompromised operating system. even worse, there means whatsoever which software application could detect the existence shadow hard drive that installed the computer. the conclusion from the above that there need for external means increase confidence the trustworthiness the computing environment operated the gridnode owner. there are essentially three approaches that the grid could combine provide such means: cryptographically assure the real-world identity any gridnode operator. application owners will able whitelist blacklist specific operators based their identity. perform spot inspections the gridnode operator's physical infrastructure gridnode owners who wish increase their 'data safety' reputation will sign for surprise inspections independent inspectors. the smart contract for data safety will assure that such owners will escrow fraction their cloud tokens revenue pay the inspectors who inspect their site. reduce the likelihood the independent inspectors colluding with malicious gridnode owners, some gridnode owners will rewarded for running honeypot sting operations uncover unreliable inspectors. this reward will come from escrow portion the fees paid the inspectors--also assured the smart contract. support trusted execution technology with cryptographic signatures for attestation the authenticity the gridnode application and the underlying operating system, well the physical architecture the computer. envision that the number gridnode owners increases, the availability such platforms will increase, and intend work directly with partners who wish create 'trusted data-center-in-a-box' appliances. gridnode operators that wish maintain very high data-safety reputation level would combine least two not all three the above. compliance considerations regulatory compliance another important aspect the decentralized grid regulatory compliance. there are two primary dimensions take into consideration: geographic regulations, and domain-specific regulations. two prominent examples geographical regulation include the upcoming european general data protection regulation (gdpr) and the recently imposed chinese regulations cloud service providers. gridnode owners who fall under the jurisdiction such regulation must comply with risk being subjected very high fines. (note that the gdpr applies any entity that handles personal information--including addresses--of european citizens, regardless where the servers are physically located link ]). this means that the gridnode component must include mechanisms for data security and privacy assure such compliance. domain-specific regulations--for example hipaa (for health link pci-dss (for credit card information link ])--impose even higher security requirements both the application owner and the operator the infrastructure running the application. regardless whether the regulation comes from governments from industry associations, applications that fall into categories covered such regulation will not able run infrastructure (i.e., gridnode) that doesn't comply with those regulations. uniform terms service for application owners since gridnodes are intended hosted wide variety locations--including multitude cloud-hosting providers--each such hosting provider requires that application owners using the hosting provider's services comply with the hosting provider's legal terms service. this means that application owners who run their applications multiple gridnodes distributed across several hosting provider facilities need abide the terms service each and every one those hosting providers. one the goals the open grid define uniform terms service that all hosting providers see sufficient, that once application owners agree those uniform terms service, they will free have their applications operate gridnodes that are hosted the facilities any cloud-hosting provider. deploying application instances deployment parameters create instances application, the application owner needs deploy application the decentralized grid. there are several important aspects consider here: the grid will contain mix many variants gridnodes from many different providers. when deploying application instance the grid, the application owner will specify certain criteria, and only gridnodes that meet those requirements will eligible bid the right deploy copy this application. the following non-exhaustive list that illustrates the types parameters that the application owner might choose specify. note that some parameters are optional, and since are dealing with highly heterogeneous grid environment, the parameter values need not exact and might range acceptable values from the point view the application: layer geographical location, physical security requirements from the machine (e.g., required hosted secure data center, expected employe trusted computing technologies for tamper-proofing, etc.) layer hosting location bandwidth layer hardware configuration (cpu speed, memory, max vms per bare metal machine) layer type os, allocated memory for the vm/container, network bandwidth assigned the vm/container, amount local storage available, type local filesystem layers list cloud apis (and api versions) that are expected supported directly the gridnode, firewall requirements layer platform components installation requirements (does the application owner expect certain packages (e.g., ruby-on-rails wordpress) preinstalled the machine, does the owner already include the entire set platform components the application bundle for deployment?) layer the application expected stay the machine even after the execution period over, can the application removed from local storage once execution completed? addition technical requirements from the gridnode, the application owner can specify business criteria, including: minimal reputation for the gridnode owner integrity requirements (e.g., frequency audits) historical results from performance monitors regulatory compliance requirements payment mode ratio use-now-pay-later pay-now-use-later) resource allocation duration--i.e., for how long are the computing resources going reserved? agreed dispute resolution mechanisms black-listed and/or white-listed gridnode operators pricing. when application instance deployed the grid, the application owner specifies the maximum price paid for every type service that the application consumes. this might specified for the entire application, but might also specified per-component basis, the case where the application consumes multiple resources. user experience. important allow people who are not cloud experts able deploy applications the grid. such, the user experience for performing all the above specifications should made clear and intuitive. decentralization assurance. order ensure that the grid does not become controlled small number large gridnode owners, the grid will incorporate mechanisms incentivize (or even require) that when large number instances application are deployed, they will distributed between multiple gridnode owners. cloudwith.me's existing interface for traditional cloud providers today's cloud hosting providers offer very wide range execution environment types and configurations, and the selection the right configuration highly technical task that requires unique knowledge and expertise. cloudwith.me's existing product already simplifies this task providing friendly user interface that makes breeze set compute environments aws, azure and google support common application use cases. the two screenshots below are taken from cloudwith.me's existing interface, and demonstrate how easy use our existing product provision such environments the classic cloud. our intention bring the same level simplicity and friendliness the process deploying applications the decentralized grid. additional resources regulation and compliance: https://www.cloudindustryforum.org/content/cloud-and-eu-gdpr-six-steps-compliance (outlines steps take cloud consumer who serves european customers, ensure your compliance with the eu's pending gdpr) http://www.computerweekly.com/feature/eu-data-protection-regulation-what-the-ec-l egislation-means-for-cloud-providers https://iapp.org/resources/article/eu-data-protection-law-and-the-cloud/ http://searchcloudprovider.techtarget.com/essentialguide/navigating-cloud-computing-re gulations-and-compliance-requirements https://uk.practicallaw.thomsonreuters.com/w--?originationcontext=document &transitiontype=documentitem&contextdata=(sc.default)&firstpage=true&bhcp= https://www.dlapiper.com/en/australia/insights/publications///stepping-up-regulat ion-of-cloud-services-in-china/ using blockchain create reputation system: https://medium.com/mit-media-lab/certificates-reputation-and-the-blockchain-aee https://cointelegraph.com/news/digital-word-of-mouth-how-blockchain-reputation-system -would-work https://medium.com/topl-blog/divine-a-blockchain-reputation-system-for-determining-go od-market-actors-caae trusted computing: https://en.wikipedia.org/wiki/trusted_computing https://en.wikipedia.org/wiki/trusted_execution_technology https://invisiblethingslab.com/resources/bhdc/attacking%intel%txt%-%pa per.pdf about data centers and reputation http://www.tia-.org/ http://www.opusinteractive.com/request-a-tour/ vulnerability data held traditional hosting providers: https://techcrunch.com////google-needs-to-do-a-lot-more-than-fire-employees-w ho-abuse-user-data/ https://security.stackexchange.com/questions//can-personnel-who-manage-aws-d atacenters-access-my-ec-instances-and-monitor-dat cloud hosting sla examples: https://cloud.google.com/compute/sla https://aws.amazon.com/ec/sla/ https://azure.microsoft.com/en-us/support/legal/sla/ https://azure.microsoft.com/en-us/support/legal/sla/storage/v_/ roadmap and bootstrapping the development the open grid expected take place four major phases. each phase, evolve the gridnode technology and the associated smart contracts provide more functionality, support more use cases, increase the number deployed gridnodes, and improve the dependability the grid itself. the following describes our anticipated progress through those phases. phase (codename: 'ringo') seeding objectives this phase: provide immediate value allowing the use cloud coins tokens access selected aws, azure and gcs cloud services (and possibly also services from other cloud platforms, such ibm bluemix) kick start the development open gridnode software component explore the viability various technological approaches bootstrap community processes define phase components primary activities: develop the initial gridnode software component and smart contract. adapt existing cloudwith.me functionality work gridnodes. orchestrate community process for developing the detailed requirements reputation and trust building the open grid. initiate work uniform terms service collaboration with hosting providers. grid deployment: only cloudwith.me will serve gridnode owners. hosting will over amazon, azure and gcs infrastructure, and possibly additional platforms. cloud platform service blocks: layer applications leveraging the predefined platforms provided layer layer limited subset the applications currently supported cloudwith.me (currently supported applications are drupal, wordpress, laravel, roundcube, php, magento, joomla) layer service management and account management capabilities support deployment across major cloud providers usage reporting and blockchain token billing reports layer relying the physical infrastructure major cloud service providers gridnode functionality: gridnodes can only run predefined applications. load balancing and elasticity are achieved using the infrastructure the major cloud-service providers (traditional load balancers, cdns). phase (codename: 'harrison') open playground objectives this phase: anyone can become gridnode owner and receive compensation over blockchain. owners experimental applications can deploy them the open grid. first launch all services that are critical supporting open grid (i.e., reputation over blockchain, gridnode capability advertisement, application deployment the grid, grid-based load balancing, cryptographic assurance gridnode owner identity, etc.) establish initial relationships with providers trusted computing hardware platforms. allow software that runs gridnodes leverage other distributed services for storage, compute, etc. primary activities: develop the grid protocols, algorithms and smart contracts provide the capability operate gridnode and deploy applications the open grid orchestrate community process for developing the trusted computing certification and grid interoperability requirements recruit additional hosting providers for participation the project and the uniform terms service initiative grid deployment: most infrastructure still provided the large cloud hosting companies some infrastructure provided independent providers cloud platform service blocks: layer open experimental applications beyond the predefined 'aardvark' set layer add support for additional application platforms based the layer set application services layer application servers: candidates include node.js, jvm-based servers, ruby-based, python-based, others. integration with decentralized services such storj, golem, others. integration with common cloud services such object storage (e.g., s), etc. layer grid load balancing elastic application deployment content delivery layer application deployment services gridnode management service usage and blockchain token reporting layer relying the physical infrastructure major cloud-service providers gridnode functionality: gridnode owners join the grid downloading the gridnode software and running their computers. initial implementations load balancing and elasticity functions added the gridnode software gridnodes evolve provide more types services and support additional use cases. initial prototypes tamperproof gridnode appliances phase (codename: 'mccartney') dependable grid objectives this phase: application owners can safely deploy the grid applications that include sensitive information (such personal information and their ssl/tls certificate secret key). the grid's high performance mechanisms (elastic compute, request routing, content delivery) allow applications scale globally. some gridnodes are deployed tamperproof appliances that leverage trusted computing technologies. primary activities: security audit the gridnode code and grid algorithms performance optimizations the algorithms and the code implement mechanisms enable compliance with privacy regulations (such gdpr) onboarding new partners all types (hosting provides, decentralized service providers, cloud service providers, trusted computing platform manufacturers, grid agents such performance monitors) grid deployment: over nodes are operated independent providers. cloud platform service blocks: layer supports custom production-grade applications layer continuously growing catalog application platforms layer continue add more application services and application platforms layer improved security and performance layer service provisioning and orchestration, accounting for partner services layer customer support, detailed billing information layer trusted computing nodes provide reliable security outside high security data centers phase (codename: 'lennon') expansion objectives this phase: the decentralized grid becomes mainstream cloud hosting platform large number gridnodes are deployed tamperproof appliances that leverage trusted computing technologies improved performance enabling compliance with selected domain-specific regulations (possibly pci-dss, hipaa, etc.) gridnodes provide wide range services, addressing significant portion cloud computing use cases. primary activities: work bring the decentralized grid into the mainstream onboard enterprise customers continue activities the previous phase larger scale market opportunity idc and gartner have forecast that the global public cloud service industry will reach over billion revenues doubling figures from last year within this industry, the cloud-managed service market expected grow expected cagr more businesses and individuals take the leap into the cloud, the providers they're drawn will decided by: cost, range services, availability, ease integration with their existing computer framework, transparency the service, and risk mitigation. the combination blockchain technology with automated managed solution addresses all these concerns. fig: plotted using data from adoption public cloud services smbs has been rising rapidly over the past years. this reflected cloudwith.me's success with its current managed hosting platform. study idc found that smbs worldwide made use cloud storage their report cloud adoption summarizes that then, over small businesses and over medium-sized businesses had adopted cloud services despite this, nearly smbs still experience cyber attacks cloud token ico the ethereum-based cloud token ico intended create the first block the vision decentralized applications internet providing standard currency used all cloud services and service providers. from the start, the cloudwith.me platform will enable users benefit from the largest cloud service provider services cost reduction. already making difference, the company determined change the way people use and consume cloud services. the cloud token will evolve during its lifetime into several instances where new version cloud with smarter contracts and more efficient cloud services payments governance will match the growth and expansion the gridnodes both volume and sophistication. generation cloud will enable trusted payments for cloud servers, storage, bandwidth and processing power. generation ii, cloud aims become the token governing exchange decentralized peer-to-peer cloud services cloud token holder has the inherent right replace (by choice) each existing coin previous generation into new one cost. periodically, new clouds will announced and offered existing holders who can choose send their old tokens back the company exchange for the new ones. all legacy generation tokens will destroyed and annulled once replaced. all generation tokens will retain their attributes independence from the company itself and will bear rights relation the company itself its activities. use proceeds the use proceeds will predominately for the global deployment the gridnode infrastructure per the model shown the above "grid growth expectations" section. the company believes that this amount sufficient order bootstrap the decentralized cloud nodes infrastructure growth. self-deployment gridnodes planned globally from the first successful run the cwm blockchain gridnode module. this quantity, the company believes critical mass nodes can reached within circa months from which point the growth the decentralized web will become viral-positive and the adoption the gridnodes new peer-to-peer providers will accelerate reasonable rate for gaining momentum, leading into complete cloud migration blockchain within circa five years from the initial ringo seeding stage. effort calculate the cost bootstrapping decentralized grid that comparable just the effective computing power aws data center (as example), while the actual computations are beyond the scope this paper, calculate estimate that will guide the level funds needed achieve critical mass the path decentralization. for that matter, assume average cost $k/server. this cost also factors estimated operational costs for three years well the cost the networking equipment, etc. (i.e., the effective computing power get this cost should not assumed high). then assume each such compute unit, which for simplicity purposes runs single gridnode and has effective computing power gigaflops average, which means that get effective computing power petaflops total would need gridnodes. with one gridnode per server, and server price $k, the total cost for the gridnodes critical mass bootstrap would approximately $m. that might seem like high number, but it's just the $.b spent capital expenses and leases the top three cloud service providers alone, google's overall cloud spending. addition the main use funds, the company will financing the active promotion gridnodes contributions via "become provider" campaign and ongoing development its gridnodes and dap technologies. the overall amount raised has acceptance flexibility lower amounts simply dictate longer adoption cycles and slower deployment rates, leading longer lead times full migration cloud services blockchain decentralization. risk factors the following are the risk factors relation cloudwith.me ("cwm") business general and the token sale event particular: cwm token may not ever become crypto currency there assurance that any time the future the cwm token (i) may exchanged for goods services, (ii) may have any known uses outside the cwm platform, (iii) may traded any known exchanges. risk failure reach target sale amounts risk insufficient funds cwm may not reach the target sale amount and may not have the sufficient funds execute its business plan. risk market trends the cwm token may significantly influenced digital currency market trends and cloud value may severely depreciated due non-cloud-related events the digital currency markets. risk regulation/legislation the cloud services market and/or the token market may may coming under global local regulation/legislation that may render the cloud trade impossible and/or may limit the use tokens payment method and/or limit, prevent and/or sanction the sale and re-sale tokens. coi and relevant technologies have been the subject scrutiny various regulatory bodies around the world. the functioning cwm and token could impacted one more regulatory inquiries actions, including but not limited restrictions the use possession digital tokens like token, which could impede limit the development cwm. risk software not meeting expectations the gridnodes and dap are presently under development and may undergo significant changes before release. any expectations regarding the form and functionality token the gridnodes and dap may not met upon release, for any number reasons including change the design and implementation plans and execution the gridnodes and dap. gridnodes and dap are complex software platforms and their launch may significantly delayed due unforeseen development barriers. risk alternate technology there guarantee that there are other solutions technology, whether being developed developed the future, that will severely depreciate the value cwm well its products and services. competition may introduce same better solutions and cause cwm lose market share and eventually fail deliver its business goals. risk high volatility digital currencies are extremely volatile and cloud token may suffer from said volatility. risk taxation the ownership cloud tokens may fall under existing and/or new and unpredicted taxation laws that will erode cloud benefits. risk low liquidity cloud may not succeed creating the necessary momentum and acceptance, which may result low liquidity and depletion trades. risk theft and hacking token sales and icos have been known come under malicious attacks from hackers and criminal parties, resulting theft tokens, and massive losses token may inflicted buyers and the company. hackers other groups organizations may attempt interfere with the cwm activity the availability cwm token any number ways, including, without limitation denial service attacks, sybil attacks, spoofing, smurfing, malware attacks, consensus-based attacks. risk security weaknesses the cwm network core infrastructure software there risk that the cwm team, other third parties may intentionally unintentionally introduce weaknesses bugs into the core infrastructural elements the cwm software network, interfering with the use causing the loss cwm tokens. risk weaknesses exploitable breakthroughs the field cryptography advances cryptography, technical advances such the development quantum computers, could present risks cryptocurrencies and the cwm platform, which could result the theft loss tokens. token sales and icos have been known come under malicious attacks from hackers and criminal parties resulting theft tokens and massive losses may inflicted buyers and the company high-risk purchase there guarantee that the cwm token you purchase will increase value. may--and probably will some point--decrease value. the activity cwm highly speculative, cwm private and growing company with regulatory approvals and there assurance such approvals, they will required, will obtained that any income shall generated any products shall successfully developed. risk insufficient interest the cwm activity possible that the cwm software will not used large number businesses, individuals, and other organizations and that there will limited public interest its creation and development. such lack interest could impact the development cwm software and services and therefore the potential uses value tokens. risk uninsured losses unlike bank accounts accounts some other financial institutions, funds held using the cwm network are generally uninsured. the event loss loss value, there public insurer private insurer offer recourse the purchaser. risk dissolution cwm possible that, due any number reasons, including without limitation, the failure business relationships the emergence competing intellectual property claims, cwm may longer viable business and may dissolve fail launch. risk malfunction the gridnodes and dap possible that the gridnodes and dap malfunction unfavorable way, including but not limited one that results the loss data and information. unanticipated risks cryptocurrency and cryptographic tokens are new and untested technology. addition the risks set forth here, there are risks that the cwm team cannot anticipate. risks may further materialize the form unanticipated combinations variations the risks set forth here. references cukier, "data, data everywhere," the economist feb-. [online]. available: http://www.economist.com/node/ "it spending and staffing benchmarks: budget/cost metrics and other key performance indicators industry and organization size," computer economics, "building trust cloudy sky," intel security, jan. "worldwide public cloud services spending forecast reach billion according idc," international data corporation, aug. synergy research group, reno, and nv, "hyperscale operators continue ramping share cloud markets [press release]," apr-. [online]. available: https://www.srgresearch.com/articles/hyperscale-operators-continue-ramping-share-cloud-markets "cisco global cloud index: forecast and methodology, -," cisco, nov. international data corporation, "new research finds that companies are using cloud-based storage for remote location disaster recovery," jun-. [online]. available: https://www.acronis.com/en-us/pr///--.html giannakouris and smihily, "cloud computing statistics the use enterprises statistics explained," eurostat dec-. [online]. available: http://ec.europa.eu/eurostat/statistics-explained/index.php/cloud_computing_-_statistics_on_the_use _by_enterprises sbm group, "smb group's top smb technology trends," [online]. available: http://www.smb-gr.com/wp-content/uploads///_top__final.pdf "cost data center outages," ponemon institute llc, jan. "summary the amazon service disruption the northern virginia (us-east-) region," amazon web services, inc. [online]. available: https://aws.amazon.com/message// smith and redrup, "amazon's storm outages serve warning businesses," financial review jun-. zander, "update azure storage service interruption," microsoft azure nov-. [online]. available: https://azure.microsoft.com/en-us/blog/update-on-azure-storage-service-interruption/ infosys, "businesses willing trust mission-critical apps the cloud: infosys study [press release]," nov-. [online]. available: https://www.infosys.com/newsroom/press-releases/pages/mission-critical-applications-cloud.aspx tomkiw, "amazon web services experiences outages sunday morning, causing disruptions netflix, tinder, airbnb and more," international business times sep-. o'brien, "crash academic cloud service dedoose may wipe out weeks research," los angeles times may-. o'sullivan, "the rnc files: inside the largest voter data leak," upguard jul-. [online]. available: https://www.upguard.com/breaches/the-rnc-files cameron, "top defense contractor left sensitive pentagon files amazon server with password [updated]," gizmodo may-. [online]. available: http://gizmodo.com/top-defense-contractor-left-sensitive-pentagon-files-on- nichols, "aws's outage was bad amazon couldn't get into its own dashboard warn the world," the register mar-. [online]. available: https://www.theregister.co.uk////aws_s_outage/ gartner, "gartner says worldwide public cloud services market grow percent [press release]," feb-. [online]. available: http://www.gartner.com/newsroom/id/ nakamoto, "bitcoin: peer-to-peer electronic cash system," bitcoin oct-. [online]. available: https://bitcoin.org/bitcoin.pdf buterin, "on public and private blockchains," ethereum blog aug-. [online]. available: https://blog.ethereum.org////on-public-and-private-blockchains/ greenspan, "ending the bitcoin blockchain debate," multichain jul-. [online]. available: https://www.multichain.com/blog///bitcoin-vs-blockchain-debate gartner, "gartner says the internet things installed base will grow billion units [press release]," dec-. [online]. available: http://www.gartner.com/newsroom/id/ gartner, "gartner says consumers mature markets will use and own three four devices [press release]," dec-. "cisco visual networking index: forecast and methodology, -," cisco, jun. blockcdn, "blockcdn white paper." [online]. available: http://www.blockcdn.org/en/file/blockcdn%whitepaper%..pdf kerpez, luo, and effenberger, "bandwidth reduction via localized peer-to-peer (pp) video," international journal digital multimedia broadcasting vol. jan. ross, kangasharju, and turner, "optimizing file availability peer-to-peer content distribution," presented the ieee international conference computer communications, and gouda, "sources and monitors: trust model for peer-to-peer networks," presented the international conference computer communications and networks, "storj: peer-to-peer cloud storage network," dec-. [online]. available: https://storj.io/storj.pdf project, "the golem project crowdfunding whitepaper," nov-. [online]. available: https://golem.network/doc/golemwhitepaper.pdf wagner, "storj crowdsale conclusion," bitcoin magazine oct-. smith+crown research team, "golem token sale (ico): the world supercomputer," smith crown -sep-. [online]. available: https://www.smithandcrown.com/sale/golem/ synergy research group, reno, and nv, "cloud hyperscale growth forecast presents both opportunity and major challenges [press release]," jul-. "cloud managed services market service type (managed infrastructure, managed network, managed security, managed data center, and managed mobility services), deployment type, organization size, industry vertical, and region global forecast marketsandmarkets, may acronis, "new research finds that companies are using cloud-based storage for remote location disaster recovery [press release]," jul-. [online]. available: https://www.acronis.com/en-us/pr///--.html "state the smb cloud: u.s. small and medium-sized business cloud adoption survey," international data corporation, jan. storj, "token migration plan pt.," -may-. [online]. available: http://blog.storj.io/post//token-migration-plan-pt azar, "golem building the world's most powerful supercomputer... blockchain," the golem project oct-. [online]. available: https://blog.golemproject.net/golem-building-the-worlds-most-powerful-supercomputer-on-blockcha in-ccbca "cryptocurrency and blockchain market trends -," infoholic research. "global blockchain technology market -," technavio, feb. "blockchain technology market global industry analysis, size, share, growth, trends, and forecast transparency market research, jan. dubey and tokekar, "ppcs pure peer-to-peer computing system for large scale computation problems," presented the international conference computational intelligence and communication networks (cicn), babaoglu and marzolla, "the people's cloud," ieee spectrum oct.