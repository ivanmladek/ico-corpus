er- con kevin hobbs k@etherparty.io lisa cheng l@etherparty.io jeffery walsh jeffery@etherparty.io brian onn brian@etherparty.io abstract: user-friendly system for the creation, use, and management smart contracts may dramatically expand the rate commercial and consumer adoption blockchain technology. while blockchain (or distributed ledger technology) has the potential recast the foundations electronic commerce and data storage, the technology's use non-computer professionals has been limited lack user-friendly applications. etherparty unleashes the speed, cost-reduction and security benefits smart contracts for individuals and businesses. represents the next generation software service. etherparty promises for smart contracts what content management systems, like wordpress and wix, did for web development. moreover, much like legalzoom and docusign before it, etherparty goes further make otherwise complicated contractual agreements and processes simple and accessible, while enabling infrastructure for authentication and automation. this document contains proprietary information. written consent required for distribution duplication any portion contained therein. this not prospectus any sort this document does not constitute nor implies prospectus any sort. wording contained herein should construed solicitation for investment and this whitepaper does not pertain any way offering securities any jurisdiction worldwide whatsoever. this whitepaper constitutes technical description the functionality the etherparty smart contract and the creation and issuance fuel tokens etherparty. etherparty user-friendly smart contract compiler introduction our approach next evolution adoption security arbitration use cases the fuel token the fuel wallet the ico roadmap disclaimer believe the demand for smart contracts will continue grow applications that automate peer interactions facilitate coordinated group actions become more prevalent everyday society. meet this demand, etherparty intends create platform and value-add services that allow any user access smart contract and blockchain technology, without requiring specific technical knowledge either." etherparty founder etherparty user-friendly smart contract compiler what are smart contracts? although becoming more commonly known, the idea smart contract still relatively unknown the general public. this concept was originally coined computer scientist nick szabo sometime the mid-s. used this term illustrate the potential for corralling highly evolved aspects contract law and related business applications the design electronic commerce transactions between strangers the internet. szabo wrote: smart contract computerized transaction protocol that executes the terms contract. the general objectives are satisfy common contractual conditions (such payment terms, liens, confidentiality, and even enforcement), minimize exceptions both malicious and accidental, and minimize the need for trusted intermediaries. related economic goals include lowering fraud loss, arbitrations and enforcement costs, and other transaction costs." vitalik buterin introduced iteration this concept with the ethereum whitepaper, which was later implemented gavin wood the ethereum yellow paper. it, ethereum smart contracts would executed through the ethereum virtual machine (evm), environment designed calculate arbitrary algorithmic complex instructions. these instructions take the form function calls messages, which allow contracts interact with each other the network. there are currently over basic function calls that currently exist and they will continue expand the ethereum network switches proof stake. believe the demand for smart contracts will continue grow applications that automate peer interactions facilitate coordinated group actions become more prevalent everyday society. meet this demand, etherparty intends create platform and value-add services that allow any user access smart contract and blockchain technology, without requiring specific technical knowledge either. kevin hobbs lisa cheng jeffery walsh brian onn ceo founder chief architect k@etherparty.io l@etherparty.io solidity full stack developer jeffery@etherparty.io brian@etherparty.io tapscott, don; tapscott, alex (may the blockchain revolution: how the technology behind bitcoin changing money, business, and the world. pp. isbn ethereum core types: https://godoc.org/github.com/ethereum/go-ethereum/core/types 'globalrandao' and 'dunkle' are new terms outlined vitalik's mauve paper: https://cdn.hackaday.io/files//mauve%paper%vitalik.pdf what ethereum: http://ethdocs.org/en/latest/introduction/what-is-ethereum.html etherparty user-friendly smart contract compiler oac the mainstream use smart contracts will require inventing new architectural solutions that combine blockchain with more traditional technologies (web applications, public apis, and on). one example this will web application through which the user will sign through our server and create smart contracts that will testable and deployable the blockchain. our current implementation this product allows for the creation and crowdfund erc erc compliant tokens, well sports bets professional baseball placed between two users. the application uses two hosted ethereum nodes, one for the actual main ethereum network, and the other for the testnet. this will allow the contracts fully tested the users before deploying them. our production environment, will deploy with multiple, load-balanced ethereum nodes handle the expected network traffic, well provide high availability for etherparty users. future development this web application will include ever increasing library smart contracts for the user choose from, and marketplace for user-created contract templates. this would enable non-technical users create blockchain transactions the form smart contracts that can reflect any type agreement legal and business contexts. traditional technologies will continue provide the means track versions smart contracts, usernames the platform, and corresponding email addresses for the purpose logging in. the evm will used process the escrow and instructions the smart contracts itself. brief explanation what erc tokens are https://www.coindesk.com/ethereums-erc--tokens-rage-anyway/ etherparty user-friendly smart contract compiler platform overview etherparty platform that removes the complexities and management creating and executing smart contracts. what sets etherparty apart from the other code-based solution includes: other tools required using etherparty means you won't need install anything else like geth, meteor, mist run smart contracts. smart contract templates your contract drafts are always available and ready execute. log from anywhere and deploy. sync required etherparty works directly with the ethereum network there's delay for software sync quickly execute contract. user-created contracts users can create custom contracts suit their needs. legally binding contracts users can access simple legal agreements, add conditionality and deploy and the contract will legally binding under the law placed the contract. enterprise solution etherparty's enterprise solution allows companies integrate and upload their own documents and turn them into smart contract. need change their current infrastructure. flexibility parties the contract can create access for third-party mediator arbitrator for contract disputes when necessary. etherparty user-friendly smart contract compiler subscription model the application structured tiered subscription service that starts off with limited access the platform features and ability execute one-to-two contracts per month. the second tier will set with higher contract limit, while the third tier will increase upon the previous tier, with even higher limits, functions, processes, and integrations. contracts will require fuel, the platform's native validation token. because the price fuel may fluctuate, will peg contracts fixed amount usd, and adjust the amount fuel required execute the smart contract based this fixed price. although the current application works through filling out web forms, have plans implement api, drag and drop interface for users, well creation smart contracts through natural language processing. the public api will initially aimed enterprise customers. the api will allow businesses keep their existing contracts and processes place but transform them into smart contracts, enabling these processes backed blockchain technology. our long term goal blockchain agnostic. although ethereum has the most developed ecosystem with smart contract technology, will working with rootstock enable smart contract creation with bitcoin. the future, will look integrating other blockchains into the etherparty ecosystem. what these services offer way saving our users lot time and money. using solidity, the programming language that these smart contracts are built upon, development time consuming and costly. finding good solidity developers difficult. building the infrastructure test your code for bugs expensive. allow you outsource this. give users the ability test their contracts test environment and provide quick updates redeployment for any buggy contracts, without requiring additional development resources. smart contract creation will easy filling out form. http://www.rsk.co/ etherparty user-friendly smart contract compiler vol order have mass adoption global scale, products and applications must accessible non-technical and non-industry users. etherparty plans the trailblazer when comes providing such tools that the next wave users can take advantage blockchain and smartcontract technology. just about everyone knows how use email, for example, but the vast majority became acquainted with the technology through service providers--gmail, hotmail, yahoo, and on. though possible so, only fraction users access email technology the developer level. there's countless other examples across the industry from website development document signing. similar case should made for smartphone and smart contract technology. etherparty well positioned take blockchain and smart-contract technology the next level. etherparty user-friendly smart contract compiler just about everyone knows how use email, for example, but the vast majority became acquainted with the technology through service providers--gmail, hotmail, yahoo, and on. though possible so, only fraction users access email technology the developer level. there's countless other examples across the industry from website development document signing. similar case should made for smartphone and smart contract technology." etherparty user-friendly smart contract compiler the main concern the smart contract ecosystem security. the wake many high-profile programming errors that lead malicious theft funds, concern about security pushed the forefront every day. etherparty stays abreast these issues and creates templates that mitigate the possibility these problems. common issues that have led loss funds, like the short address attack that plagues most standard erc tokens, are delegated from being your concern ours. etherparty defines modular architecture with separated storage contracts that allow the functionality your deployed contracts upgraded the smart contracts evolve, keeping your data preserved. all contracts start with our base, secure templates. private keys for your ethereum addresses the etherparty platform are stored locked vault that only you have access to. state management follows modern best practice hashing standards. the same standards for smart contract security are applied the platform itself, which continually monitored. the current implementation, our ethereum smart contracts are built solidity using the most recent version the compiler available. solidity provides the most secure and robust interface for programming the ethereum network, opposed serpent. the next iteration, plan deploy monitoring tools detect contracts that need patched, and begin automation process for streamlining updates. this will accompanied automated testing service that will continually stress test the contracts before deployment. http://vessenes.com/the-erc-short-address-attack-explained/ https://blog.zeppelin.solutions/augur-rep-token-critical-vulnerability-disclosure-dbdffdd etherparty user-friendly smart contract compiler before users can deploy our smart contracts, they have through diligence process etherparty itself. this will prevent the misuse our platform. are particularly concerned about users launching crowdfunding contracts, and will take extra steps ensure crowdfunding contracts etherparty follow acceptable standards. contract deployment sequence user etherparty test net test runner blockchain request contract contact form filled form contract creation completed contract accepted loop deploy contract creation execute automatic tests filled form pass fail pass fail apply corrections final accept send blockchain contact address contact address and details send blockchain user etherparty test net test runner blockchain etherparty user-friendly smart contract compiler platform security etherparty will launch with user authentication provided entirely keycloak server. this open source and well known identity and access management (iam) platform. keycloak provides our etherparty users with the safety and security knowing that their personal data protected current and up-to-date security protocols. keycloak peer-reviewed and uses the established best practices user identity and access control and constantly being upgraded the open-source community stay top any known security issues. keycloak has built-in support for two-factor authentication (fa), enabling launch with the highest levels security built into the product (not afterthought some future date). will also require authentication via keycloak before during any transactions the platform where there the possibility for value change hands. this means that users can trust that merely having access the platform not enough transfer value--you must also re-authenticate, thus protecting any value you have stored the platform. authentication sequence user etherparty keycloak server database login request redirect check database issues jwt jwt saved sends jwt user etherparty keycloak server database the etherparty platform will log the last time and place login, and show this the user each time. detect any unusual activity, such new device login, new login from another location, will send email sms notification with action item lock down the account desired. during this critical time, the ability lock-down the account provided the owner the account, thereby not requiring etherparty support personnel the event attempted breach. etherparty user-friendly smart contract compiler the platform will also attempt automatically lockdown account with any unusual activity outside specified parameters, while accommodating legitimate use. this building security profile and can then make automatic decisions about when lockdown account, for investigation. etherparty personnel will also notified unusual activity such login from suspicious geolocation. also log all failed login attempts and notify the user via email the attempt. the user then well informed and can take appropriate steps protect their account. the etherparty platform will always use the current best practices identifying attacks and account takeover attempts (ato) and lockdown the account before can taken over. etherparty network architecture internet keycloak identity and authentication cluster firewall keyclock server nginx proxy postgresql database cluster read database write replication write database etherparty application cluster firewall firewall app server nginx proxy etherparty api cluster api server nginx proxy hashicorp vault secrets server cluster postgresql database cluster read database write database write replication vault server hashicorp consul key-value database cluster read database firewall ethereum node cluster nginx proxy write replication geth node server write database etherparty user-friendly smart contract compiler for settlement contracts, users may require information from third party data source. this currently addressed connected arbitrary third party api. the use smart contracts extends the enterprise and everyday use cases, third party data sources will required for automating contract processes. on-chain approach that currently exists involves creating proof system for third party data sources this approach valuable when are working with trusted sources. our approach must address the plausible outcome that trusted source may act malicious future point time. therefore will require on-chain verification against data that would directly injected into the blockchain. this information will need mapped the input functions available the contract but still does not address whether the information can trusted. hope address this problem with further research. oraclize.it https://ethereum.stackexchange.com/questions//how-do-oracle-services-work-under-the-hood etherparty user-friendly smart contract compiler smart contracts offer substantial benefits automating contractual agreements that reduce transactional friction, cuts costs, while boosting data security." etherparty user-friendly smart contract compiler cas applications smart contracts are widespread. the etherparty platform will create library smart contracts aimed variety industries, including banking and finance, trade, healthcare, supply chain management, insurance, foreign exchange trading, real estate, digital identity, and more. adoption these industries will happen because smart contracts offer substantial benefits automating contractual agreements that reduce transactional friction, cuts costs, while boosting data security. any type contract can improved using smart contract technology. outline how etherparty smart contracts are able address different real world problems, have compiled the following industry studies: financial services milestone-based payments escrow problem: managing payment process with another party can lead discrepancies, error, and confusion. whether personal agreement business contract, there room for mistakes, disagreement, and lost paperwork. solution: smart contract binds both parties steadfast rules that function exactly written, eliminating the possibility disagreement. etherparty handles the security make sure your contracts aren't vulnerable tampering, providing completely trustful payment process. manufacturing supply chain management trade finance problem: tracking goods and information can hassle and lengthy process given complex amount conditions value chain and the reliance paper based systems. this problem becomes worse tracking needs done across international lines. solution: with etherparty's enterprise api, integrating any information system into the platform will simple and streamlined. writing smart contract will bring all parties onto single shared ledger (the blockchain), which faster, more secure, and more transparent all parties involved. etherparty user-friendly smart contract compiler cross-industry peer-to-peer transactions contractor agreements contracts with executable conditions (e.g. smart probate smart wills) record keeping problem: from simple wager between two private citizens maintaining record data, the internet has turned commercial interactions into digital arrangement. solution: smart contracts and blockchain technology can alleviate concern over breach contract the veracity digital record. establishing appropriate terms, etherparty makes easy create smart contract which will auto-enforce the agreements outlined each party. further, smart contract can hash record the blockchain, which removes any degree ambiguity over the digital upload. legal forming business corporate filing dividends chain custody problem: lost paperwork, uncertainty over whether something has been filed, missing information over handling sensitive documents. solution: business formation and corporate filings stored shared ledger, information immutable and indisputable, and authorizations and access documents are recorded. ico creation crowdfunding token creation watching the progress problem: errors security tests, deployment requires ethereum server and familiarity with command line. solution: etherparty provides hosted solution for deploying and gui for interacting with the contract. all contracts are security tested and conform the latest security standards. etherparty user-friendly smart contract compiler tok fuel tokens are the key using etherparty, they manage the contract library, security testing, network fees, monitoring, and management the entire smart contract process. fuel transferable erc- compliant digital token deployed the ethereum network, and the in-app currency that powers the etherparty platform. the fuel token serves method validating the user's interactions with etherparty and will allow users buy, execute, barter for other smart contracts the platform. the future, fuel will serve access for smart contracts multiple blockchains, integrating these disparate blockchains into one unified view within the etherparty platform. the total supply will one billion fuel tokens and will never increased beyond this cap. the smallest unit fuel one wei. tokens that are used the platform will back into the platform supply. will provide service for users purchase fuel from this supply. fuel tokens holders will need sign for account registering the etherparty platform after release. tokens sent the platform from ico participants will automatically verified, token holders who purchase fuel from secondary sources such exchanges will restricted until verification. fuel network currency create smart contracts across multiple industries and platforms." one wei etherparty user-friendly smart contract compiler wal the etherparty wallet platform wallet that holds all fuel for use the etherparty platform. custodial wallet with private keys held the etherparty vault. the etherparty platform designed powered with fuel tokens only from the etherparty wallet, and cannot powered directly with tokens from external wallets. this means that all tokens used the platform must first transferred into the etherparty wallet. tokens can transferred into the etherparty wallet from any erc- compatible wallet such myetherwallet, metamask, mist, and others. tokens cannot transferred into the etherparty wallet directly from exchanges. etherparty user-friendly smart contract compiler ico the ico will allow hire new talent, pay for marketing, well for business and product development that can the first market with smart contract platform that anyone can use. allocation only one billion fuel tokens will ever created. the fuel tokens are intended allocated follows: (,,) sold the company pre-crowdsale purchasers pursuant saft offering through company approved affiliates. all pre sale tokens get sold the highest bonus then there will total million fuel tokens sold. (,,) sold the company crowdsale purchasers. the pre sale sells out full the highest bonus level there would only tokens available the public sale (,,) reserved the company incentivize community, beta testers, and strategic partners. (,,) sold directly the platform (,,) distributed the company the etherparty team. etherparty platform and company staff tokens will locked for months after the end the crowdsale. any unsold tokens the pre sale will into the public sale. all unsold tokens from the public sale will stay the etherparty platform held the company for sale only the platform https://coinlist.co/about/help/saft etherparty user-friendly smart contract compiler pre-crowdsale ending september th, when sold out whichever comes first (dates are subject change). the company pre-selling tokens (prior the crowdsale) discount wholesale basis for larger volume purchasers through authorized affiliates: usd receives bonus usd receives bonus for information the terms the pre sale please contact k@etherparty.io. public crowdsale fuel tokens are intended sold the following rates: week fuel tokens for eth week fuel tokens for eth week fuel tokens for eth week fuel tokens for eth *note eth exchange rates are subject change without notice prior the start the public crowdsale. once the public crowdsale starts the exchange rate will locked. **note the prices for the pre sale are not subject change and will remain the same and have effect the public crowdsale. etherparty user-friendly smart contract compiler roa etherparty future enhancements and expected release timeline* release (end backend systems frontend systems move from firebase database backend postgresql web single sign-on (sso) integration creating no-click web sign-on the platform build out secure representational state transfer (rest) application programming interface (api) the contract platform sold platform service (paas) for ongoing subscription income additional rest api features will included support supply chain management improve ease deployment and scalability via docker containers metamask integration two factor authentication (fa) with proper identity and access management solution (iam) last place and time sign-on authentication and authorization utilization established and publicly vetted open source iam server like keycloak, one the verified cloud based iam services like forgerock, stormpath okta additional sign-on security with user account takeover (ato) fraud prevention solutions require additional security checks when doing anything that transfers value microservice architecture with json web tokens throughout the application servers inclusion web server proxy with server affinity fully managed dapp model the blockchain with contract factories for deployment *note all release dates and enhancement groupings are estimates and subject change http://vessenes.com/the-erc-short-address-attack-explained/ https://kubernetes.io/ https://mist.io/ http://openshift.com/ network organization multi-tiered load balancing and monitoring distributed cache layer between the backend service and the database using either ehcache memcached products cloud google container engine with kubernetes mist.io for docker container management, red hat openshift, similar kubernetes supporting cloud platform. integration with elasticsearch, graphite, prometheus for alerting operational data that out specified boundaries integration with slack, skype, bigpanda, and/ pagerduty for notifications etherparty user-friendly smart contract compiler release (end mobile app notifications push notifications transaction history logging full mobile device support for android and ios desktop notifications while the platform contract templates and library expand library include: legally binding contracts notifications via sms while off the platform voting and ballot box contracts notification integrations with messaging apps notary services multi-person escrow contracts family trusts money manager corporate stock virtual democracy crowdfunding timesharing time-locked vault (multisignature) escrow (multisignature) vault real estate sales supply chain management needs *note all release dates and enhancement groupings are estimates and subject change oracle system server integrate third party apis marketplace apis for selection etherparty user-friendly smart contract compiler release (end frontend systems mobile app enterprise solution drag-and-drop contract building capabilities integration with google assistant android etherparty advanced user interface additional features that are necessary for enterprise customers call interactive voice response (ivr) enterprise integration features additional features rest api for enterprise customers add users their team, create contract templates, test contracts our test networks, submit contracts the main blockchain, and get results those contracts *note all release dates and enhancement groupings are estimates and subject change user created templates team and team features add team members, share and annotate contracts, and collaborate new contract templates etherparty user-friendly smart contract compiler company disclaimer statement all purchasers fuel tokens this reminder all fuel token purchasers. you are purchasing already purchased fuel tokens solely for the purpose receiving services, participating the etherparty ecosystem, and supporting the development, testing, deployment and operation the etherparty ecosystem. set forth the etherparty smart contracts inc. (etherparty) crowdsale terms and conditions (the terms and conditions) that you will required agree bound (or have already agreed bound virtue your previous purchase(s) fuel tokens), you have acknowledged and agreed with etherparty that you aware the commercial risks associated with etherparty, the purchase fuel tokens and the etherparty ecosystem, and you have acknowledged and agreed with etherparty that you are not purchasing fuel tokens for any other purposes other than use and consumption the etherparty ecosystem, including, but not limited to, any investment, speculative financial purpose. fuel tokens are not intended for the purpose secondary market trading. they are solely used utility token, which means the fuel tokens use only for access and use for, and within, the etherparty ecosystem. you purchased your fuel tokens for investment, speculative secondary market purposes, etherparty wishes take this opportunity remind you the terms conditions whereby you, purchaser fuel tokens, made representations etherparty that you would not purchasing the fuel tokens for such purposes. thank you everyone who participated the fuel token crowdsale. are humbled your support, and excited begin the next phase our journey. there are any inquiries regarding the above statement, please contact kevin hobbs k@vanbex.com kevin hobbs lisa cheng jeffery walsh brian onn ceo founder chief architect k@etherparty.io l@etherparty.io solidity full stack developer jeffery@etherparty.io etherparty pender, vancouver, bc, (c) copyright etherparty all rights reserved www.etherparty.io brian@etherparty.io