whitepaper dean van dugteren public release published september latest update: october items this whitepaper are subject change https://nos.io contact@nos.io table contents table contents................................................................................................... problem ................................................................................................................. nos blockchain-powered operating system ....................................................... introduction .............................................................................................................. abstract ............................................................................................................. summary ........................................................................................................... features .................................................................................................................... isolated dapp environment .............................................................................. decentralized distribution applications ...................................................... universal smart contracts (usc) .................................................................... automatic token conversion ........................................................................... nos client and developer solutions ..................................................................... client menu .................................................................................................... client screenshots .......................................................................................... nos-local.......................................................................................................... create-nos-dapp ............................................................................................... nosnet ........................................................................................................... nos utility token (nos) ..................................................................................... incentive model: selective supply increase (ssi) ................................................ introduction .................................................................................................... ssi reward factors ........................................................................................ ssi diagram ................................................................................................... decentralized authority ......................................................................................... introduction .................................................................................................... benefits ........................................................................................................... tiered voting system ..................................................................................... ranking cycle ................................................................................................ decentralized filesystem ....................................................................................... name service ......................................................................................................... introduction .................................................................................................... vickrey auction ............................................................................................. domain ownership cycle .............................................................................. partial token release ..................................................................................... domain auction/ownership flowchart.......................................................... token generation event (tge) ............................................................................. progress and roadmap ......................................................................................... development progress ........................................................................................... development roadmap .......................................................................................... disclaimer ........................................................................................................... references ........................................................................................................... problem there inherent problem with applications that are hosted the traditional internet. usually, modern applications require closed-source server-side backends order maintain security, privacy, and functional efficiency. this leads inherent lack transparency. end-users have insight into what happens their personal data nor any control over how used. this situation being taken advantage corporations and applications all sizes, who can implement intrusive data tracking methods for purposes e.g. unauthorized monetization user data influencing political campaigns []. blockchain technology introduces new ability for projects make key elements their applications' server-side backend code truly transparent, giving end-users complete insight into what happens their data. applications can also take advantage new technologies that are provided blockchain, such smart contracts, verification data legitimacy, self-sovereign digital identity, and tokenized digital assets. applications that deeply integrate with blockchain technology are often referred decentralized applications, dapps. modern public blockchain platforms (such neo and ethereum) are currently witnessing sharp increase development and distribution new, ambitious dapps. facilitate the anticipated growth consumer-level adoption, dapps need user-friendly "traditional" internet services that regular consumers are familiar with. currently this not the case: dapps may introduce their own crypto-currency token (e.g. based the neo nep- standard the ethereum erc- standard []) which often play essential role application functionalities. therefore, users who wish interact with multiple dapps must acquire different tokens through means trading crypto-currency exchanges. the activities required purchase and manage these tokens are far too complicated for consumer-level end-users, and therefore act roadblock mainstream adoption decentralized applications. many consumers are not aware the various security considerations when using dapps. many applications require interaction with user-owned crypto-currency wallets, which are secured private key. typical phishing approach hackers hijack the domain names such applications. these instances, user may unknowingly give bad actors access their crypto-currency wallet, leading loss funds. browser plug-ins such metamask provide far more secure methods interacting with web-based decentralized applications. however, the etherdelta and myetherwallet domain hijackings have shown [], substantial amount dapp users remain sensitive unknowingly authorizing malicious transactions, even when using such browser plug-ins. discoverability remains limited for dapps, creating barrier widespread adoption []. the existing high difficulty dapp development withholds many projects from achieving production-readiness []. nos blockchain-powered operating system introduction below you will find abstract summary nos along with its associated benefit. abstract nos virtual operating system that introduces new, decentralized internet. this new internet user data safe, and only goes where the user wants go. nos solves key issues surrounding dapp development, deployment, discovery, and interaction, allowing for true adoption decentralized applications and blockchain technology. because applications can choose make their back-ends fully open-source and transparent, this new implementation the world wide web defined the open internet. summary nos, applications and websites can deployed completely open and decentralized manner integrating smart contracts, client-side code, and public-key cryptography. unlike server-side backend code, smart contracts can open for all read, allowing users review how their data will transmitted before any final commitments action. client-side code and other frontend materials can distributed via nos filesystem, decentralized file sharing protocol that allows for secure and transparent distribution static files. serving both backend logic and frontend material open-source, decentralized manner, true transparency between user and application can achieved. dapps that are deployed nos can accessed through nos client [nos client] [], software solution for desktop and mobile that (among other features) introduces nos browser. nos browser functions web browser, with the added benefit that integrates with the nos protocol, blockchain-powered web protocol that facilitates secure and open accessibility nos dapps. the nos protocol resolves domain names that exist nos name service, blockchain-powered decentralized implementation domain name service, and allows for dapps register domain names which are discoverable nos (e.g. mydapp.neo my-dapp.eth) [name service]. the dapp gateway [nos client: dapp gateway] user-friendly dapp discovery platform (or "app store" []) where rankings are decided completely decentralized manner via decentralized authority [decentralized authority]. order achieve the features such the ones described above, nos powered the nos utility token [nos utility token]. the nos utility token employs various staking and reward utilities which are intended for developers who wish deploy and maintain dapps nos, and for end-users who wish practice governance decentralized authority. nos eliminates the need for end-users manually exchange crypto-currencies order make use various dapps. integrating crypto-currency exchange apis, nos client automatically converts primary blockchain platform currencies (e.g. neo/gas for neo, eth for ethereum) into the required amount application tokens that are needed make specific transactions invocations [automatic token conversion]. features isolated dapp environment dapps can choose run inside isolated environment within nos client [nos dapp infrastructure diagram]. such dapps can send requests the host (end-user client) make transactions and smart contract invocations various blockchain platforms all the while never requiring the user expose their private keys the dapp (or any third party for that matter). upon emission transaction/invocation request, authorization prompt appears for the end-user, allowing them review, and approve decline the request. transaction authorization prompt currently the nos dapp api supports interactions with the neo blockchain. support for the ethereum blockchain development. support for other various blockchain platforms may also integrated the future. example request code snippet from nos api documentation []: decentralized distribution applications for the nos client mvp, dapps can serve their frontend material (e.g. client-side code, static files, and data) the end-user via github repositories. the future, content will served via nos filesystem [decentralized filesystem]. nos filesystem peer-to-peer protocol that allows for content distributed secure and decentralized manner. this content gains increased availability, transparency, and longevity compared traditional data hosting solutions. content integrity can validated looking file's hash within nos filesystem, therefore increasing file verifiability. content that resides nos filesystem served via the nos protocol, which also adopts nos name service [name service] and the dapp gateway [nos client: dapp gateway] [nos dapp hosting diagram]. ... nos dapp infrastructure diagram universal smart contracts (usc) universal smart contracts (or uscs) are smart contract templates that contain common behaviors for managing identity, tokens, and storage. these smart contracts are built for various blockchain platforms and can utilized any nos application. apart from serving templates, uscs can also serve master smart contracts. master usc already deployed its blockchain platform. dapps can set their storage structure with the master usc, allowing for the hosting and manipulation dapp storage items calling the smart contract's exposed functions. this eliminates the requirement for dapps build and deploy their own smart contract. nos uscs greatly simplify dapp development and deployment costs, and introduce the ability for larger spectrum dapps various scales built, prototyped, and deployed. automatic token conversion ... description automatic token conversion addresses the sharp increase deployments various virtual tokens, phenomenon that causes severe inconvenience users who wish regularly engage with decentralized applications. with nos, the primary crypto-currency the dapp's back-end blockchain platform (e.g. gas for neo eth for ethereum) can used for token-specific interactions, while still providing exchange liquidity the dapp's own virtual token. users also have the option configure their trading pair preferences (e.g. neo/gas for ethereum dapps). the nos automatic token conversion process, for example using gas the primary exchange currency and neo nep- token the desired dapp token, follows: dapp makes invocation request that requires certain amount specific nep- token ("desired nep- token"). the "gas desired nep- token" trading pair has enough liquidity across integrated exchanges safely make purchase market price, the user will receive "buy run" prompt instantly exchange gas for the required number desired nep- tokens. the user approves the "buy run" prompt, nos will utilize integrated exchange apis exchange the user's gas for the desired nep- tokens. when the desired tokens are purchased and settled the users' wallet, nos will execute the requested smart contract invocation. the user has successfully made the invocation with gas nep- token the required amount the desired nep- tokens. conversion modal ... automatic token conversion flowchart nos client and developer solutions client menu the nos client mvp for developers live and can used build nos decentralized applications. technical specifications nos client can found the nos client documentation []. users can log the client using their encrypted private key their ledger device. upon authorization, users are presented user interface. nos client's user interface includes: open internet browser web browser that supports both http and the nos protocol (nos://). unlike http, files served via the nos protocol are first obtained from nos filesystem, then stored local sandboxed environment the end-user's hard drive, finally served the end-user from the client-side. this grants users complete control and insight over their interactions with nos decentralized applications. dapp gateway decentralized application discovery gateway, similar app stores found popular (mobile and desktop) operating systems (such the google play store []). the primary difference between the dapp gateway and traditional app stores that the rankings applications the dapp gateway are controlled open, decentralized, and democratic manner, employing decentralized authority [decentralized authority]. crypto-currency token wallet wallet application for managing crypto-currency tokens and digital assets. exchange crypto-currency exchange application, powered existing high volume exchange platforms. the exchange application supports both simple and advanced trading crypto-currencies. account settings allows for management different blockchain platform accounts, wallets, and digital identities. client settings allows for management blockchain network settings, client theme management, developer tools, and user preferences. client screenshots screenshots the nos client mvp: login screen not representative final product design ui. client login screen not representative final product design ui. dapp gateway not representative final product design ui. dapp view (vdt.network) and open internet browser not representative final product design ui. wallet not representative final product design ui. settings not representative final product design ui. mobile dapp gateway not representative final product design ui. mobile dapp view (vdt.network) not representative final product design ui. nos-local nos introduces nos-local [], neo-based development stack which serves oneclick solution for: installing the latest development version the nos developer client. setting neo private network. establishing bridge for easy interaction between nos client and the neo private network. create-nos-dapp create-nos-dapp command-line interface (cli) tool that allows for easy bootstrapping nos dapps, using popular javascript frameworks (react, vue, angular) starting points for dapp development. nosnet nosnet live and public neo testnet powered nos, that allows for developers publish dapps public testing environment. anyone able interact with these published nosnet applications using nos client. nos utility token individual topics below are each detailed their respective documentation. the nos utility token, also titled nos token, nos, nos, forms the backbone key platform functionalities. its utilities include native integration with nos filesystem [decentralized filesystem], nos name service [name service], dapp gateway, and decentralized authority [decentralized authority]. all described utilities the nos token are powered staking mechanisms and selective supply increase. incentive model: selective supply increase (ssi) introduction common incentive model for network services (such file hosting) directly transact value (e.g. currency) from consumer (application) supplier (host). example this cloud-based web hosting, where project owners pay web hosting providers periodically for online storage and computing power. this can defined transactional (business) model. dapps, which due their decentralized nature are often open-source, mit licensed, and not for-profit, may not always implement business models that rely direct relationship between consumer (user) and supplier (application). therefore, transactional model for dapp hosting inefficient periodic hosting costs are directly correlated application popularity. instead adopting transactional model, nos implements model that beneficial all quality participants the ecosystem; including contributors, application owners, and end-users. this model selective supply increase. selective supply increase (or ssi) introduces periodic increase the circulating supply the nos utility token. tokens that are added the circulating supply are only distributed contributors the ecosystem (applications, voters, and network/hosting nodes) means incentivize qualitative participation the network. ssi reward factors the number tokens received any contributor collectively decided four factors: contributions the network practicing decentralized authority, participating filesystem/network node, and maintaining good reputation are all factors that influence projected rewards via selective supply increase. amount nos tokens staked network participants must stake nos tokens order maintain eligibility for receiving tokens via selective supply increase. the greater the number staked tokens, the higher potential for ssi rewards. staking duration predefining longer period stake nos tokens will increase the projected number tokens received via selective supply increase. reputation acquiring high reputation measured performance and decentralized authority [decentralized authority] will increase the potential for rewards selective supply increase. while entities that have made valuable contributions and attained good reputations are rewarded with selective supply increase, entities that established bad reputation may receive tokens from the supply increase. therefore, the means incentives are longer based exchange goods for services (e.g. currency for hosting), but rather active and valuable participation the ecosystem. all mechanics that would label entity contributor the network (thus eligible receive tokens selective supply increase) require the staking tokens. periodic token supply increase amounts and timeframe remain decided. the increase circulating supply via ssi can never exceed per year. staking the action making amount tokens non-transferrable. staked tokens are released back the owner when certain predefined conditions are met (such the passing amount time). ssi diagram decentralized authority introduction end-users can stake nos tokens granted decentralized authority. decentralized authority allows for users rate applications based quality and other relevant factors. the established ratings are then used for ranking applications the dapp gateway. users are incentivized vote responsibly distribution nos tokens via selective supply increase (ssi); those who vote more truthfully (in accordance the eventual outcome) receive relatively more nos tokens via ssi than those who don't. truthful voters also gain voting power, factor that defines the user's voting weight. additionally, applications themselves are also rewarded via ssi for establishing positive reputation. benefits decentralized authority allows for number benefits, including: application revenue applications can generate tokens form revenue, simply virtue quality and establishing and maintaining positive reputation. application exposure applications with positive reputation will gain increased discoverability the dapp gateway. protection from bad reputation applications applications that earn bad reputation are made less discoverable the dapp gateway, and users may receive warning before accessing such applications. this increases user protection from potentially dangerous applications. tiered voting system nos implements tiered voting system which assures truthful and realistic establishment dapp reputations. after dapp receives certain number votes and committed voting power, rated randomly selected council consisting uneven number truthful voters (voters who established high voting power). the application's eventual reputation then decided reaching specific majority outcome amongst these voters, combined with the processed ratings both the public vote and council vote. end-users with decentralized authority vote application randomly selected council truthful voters vote application application rating established ranking cycle the tiered voting system the first step the application ranking cycle. applications are rated and ranked using factors such relative reputation and popularity. nos employs cyclical voting system continuously re-evaluate applications based current ecosystem sentiment. the cycle follows: new voting period average ranking calculation result ssi distribution new voting period new period for voting applications initialized. decentralized authorities are able rate applications using nos client's open internet browser. previously established ratings are taken into account prevent drastic changes application rankings. average ranking calculation after the voting period, number nos nodes calculate the final rankings offchain. upon consensus, the final calculations are stored the blockchain. result and s.s.i. distribution the final application rankings that resulted from the calculation are applied the dapp gateway for end-user discovery purposes, and for distributing tokens network contributors via selective supply increase (ssi). decentralized filesystem applications built nos can serve frontend materials (such data, web pages, media, javascript, other static files) decentralized manner with nos filesystem. with that, client-side applications that utilize smart contracts for their back-end infrastructure are completely decentralized. deploy files nos filesystem, dapp owners must stake nos tokens. the amount filesystem resources available the dapp determined by: the quantity nos tokens staked the dapp owner compared against the collective amount all nos tokens staked exchange for use nos filesystem resources. the amount nos filesystem resources utilized collectively. tokens staked exchange for use resources are not consumed and may returned the application owner any point time. this model allows for applications easily scale their resource requirements, and forms the essence economic model that beneficial all valuable participants the network. key that nos filesystem maintains level performance that equal (or exceeds) traditional cloud-based hosting solutions. ipfs and other distributed file sharing protocols are their early stages development, research and development into these technologies will performed indicated the roadmap [development roadmap]. filesystem nodes that contribute nos filesystem are rewarded via selective supply increase (ssi). good reputation applications are also rewarded via ssi. the earned nos tokens can assist with scaling applications they gain popularity. with this, both consumer (application) and supplier (host) are rewarded, instead solely the supplier (which the case with traditional cloud hosting services). name service introduction order for dapps utilize the nos protocol, the dapp owner must first obtain nos protocol domain name (domain for short) for their dapp. application owners can reserve domains where the tld (top level domain) indicates their dapp's utilized back-end blockchain platform (e.g. .neo for neo and .eth for ethereum). example: nos://my-dapp.neo uses the neo blockchain for its smart contract backend. nos name service employs decentralized auction system for domain name acquirement. additionally, instead consuming nos tokens (transactional model), domain ownership granted staking nos tokens. vickrey auction nos name service (inspired ethereum's eip- []) adopts the sealed-bid vickrey auction system and built smart contract the neo blockchain. vickrey auction type sealed-bid auction. bidders submit written bids without knowing the bid the other people the auction. the highest bidder wins but the price paid the second-highest bid. this type auction strategically similar english auction and gives bidders incentive bid their true value." wikipedia.org: vickrey auction domain ownership cycle upon conclusion nos domain auction, ownership the domain awarded the highest bidder (the winner). the winner stakes nos tokens, equal the highest bid made during the domain's auction, for pre-determined period into staking smart contract. this defined one ownership cycle. the winner becomes the domain's owner for the duration the ownership cycle. the end ownership cycle, the domain owner can choose to: retain the domain keeping nos tokens staked for another ownership cycle. release the domain and take back all staked nos tokens. propose partial release staked nos tokens while maintaining ownership the domain. partial token release partial token release proposed, period will begin where other parties may counter the proposal making contesting bid the domain. the contesting bid must larger than the number nos tokens that would remain staked after the partial token release. there contesting bid: the domain owner receives the number nos tokens that were proposed for release back into their account, while maintaining ownership the domain for another ownership cycle. there contesting bid, the domain owner can choose to: cancel the partial token release proposal and maintain ownership the domain for another ownership cycle. nos tokens are released from the staking contract. release ownership the domain name. all nos tokens are released from the staking contract, and the highest contesting bid serves the opening bid new auction. final pre-determined ownership cycle period remains decided. domain auction/ownership flowchart token generation event (tge) details below are subject change. the nos token based the neo nep- standard and deployed the neo blockchain. the tokens can held neo address, using any wallet software that supports the neo blockchain protocol and nep- tokens, including nos client [nos client]. note: due future technical requirements nos token utilities (selective supply increase), nos may hold "token swap" event the future. users may required undertake specific steps the future acquire new tokens during the "token swap" event. token supply valuations initial circulating supply initial price per token ($usd) usd value initial circulating supply $,, token allocations token allocation tokens availability directly available instant company token reserve directly available neo council ngc vested months private sale vested months ecosystem adoption reserve vested year vested company reserve vested year locked token incentive reserve vested years total public sale note: due selective supply increase (ssi), the total token supply may increase periodically the future. the ssi amounts and period may adapted over time; however, can never exceed per year. -month vesting schedule -year vesting schedule time after tge initialization distribution time after tge initialization distribution instant months months months months months months year -year vesting schedule time after tge initialization distribution year year days year days years the tge has soft cap. the public sale hard cap $,, usd. neo and eth are accepted during all stages the tge. further details regarding the public sale (such start date, accepted crypto-currencies, and kyc procedure) will announced the official website (https://nos.io) and the official channels listed the website. users can only participate the token generation event via nos client, which can downloaded https://github.com/nos/client/releases. after successfully minting nos tokens, the tokens will transferred the public neo address that the user logged nos client with. all participants the public sale and presale must complete kyc procedure https://my.nos.app. users who signed https://my.nos.app and have agreed receive the email newsletter will receive email with more information before the kyc procedure begins. this information will also published the other official channels listed the official website (https://nos.io). during the tge, individual participants the public sale and the presale can mint approximately nos tokens total. presale: before the public sale, exclusive presale will held for selected members the community. eligible participants include: users who have built qualified proof-of-concept nos dapps. users who have made qualified contributions the nos platform and its codebase. winners and qualified participants the nos user interface design competition. users who subscribed the vdt.network newsletter before april based contribution quality, users selected for the presale are assigned allocation tier, representing the number tokens one can mint during the presale phase. the presale allocation tiers are follows: tier nos tier nos tier nos due neo indivisibility, the number tokens allocated individuals the public sale and presale approximate and adjusted that they can acquired with round amount neo. the tokens distributed during the presale are deducted from the number tokens available the public sale. for example, nos are distributed the presale, then the number tokens remaining for the public sale nos. public sale: the public sale will held after the presale and will consist multiple contribution phases. all participants the presale will also have access the public sale. other participants for the public sale will selected means such valid kyc data after the kyc submission period. additional details are announced official channels. after the token generation event, any unsold tokens that remain will added the company token reserve. discounts/bonuses: bonuses discounts are applied any stages the nos token generation event with the exception the angel allocation (neo global capital). the angel allocation entails discount tokens purchased and vested bonus the amount paid pre-discount. the angel allocation vested following the private sale distribution model, and the bonus for the angel allocation vested following the locked token incentive reserve distribution model. progress and roadmap below you will find the current state nos development: development progress nos client available for download and dapp development []. developers can compile the source code, launch the client, and build compatible applications using the integrated nos javascript libraries []. consumers can download pre-compiled solution for using applications the nosnet and my.nos.app. my.nos.app available and under active development. my.nos.app web application exclusively available nos client that allows for the management dapps and codebase contributions for development rewards, well kyc/tge management for participants the nos token generation event. nos name service smart contract and api server (registrar-middleware) are under active development. its current specifications are made fit the requirements the nosnet release. nos-local live and undergoing active development. developers can use the solution easily deploy neo private net and launch the latest version nos client. create-nos-dapp live and can used easily set new bootstrap nos dapp and kickstart dapp development []. nosnet live and can used easily deploy and use applications live testnet environment. over dapps have been deployed nosnet the nos developer community. development roadmap q/q release nos client nos token generation event (tge). establishing initial technical and strategic partnerships with both blockchainbased and traditional projects and companies. cooperative application development with project partners and third parties. nos ecosystem adoption fund: nos will launch its ecosystem adoption fund, fund aimed towards improving adoption and development decentralized applications the nos platform. decentralized filesystem research: nos will initiate research development peer-to-peer data file sharing initiatives, with the goal building completely decentralized open internet. initial development nos mobile client. initial research development for supporting ethereum dapps and other platforms based their respective popularity and adoptability. nos nos plans release its client, officially launching the nos open internet disclaimer the author this whitepaper daan jan van dugteren, founder and ceo nos limited (malta company registration no. c). the token sale terms service are located https://my.nos.app/terms and are subject change before the launch the token generation event's presale phase. any participants the nos tge understand and agree that the tge terms may changed and adjusted, and pay attention the terms their own discretion and responsibility. references c-span facebook ceo mark zuckerberg hearing data privacy and protection: https://www.cspan.org/video/?-/facebook-ceo-mark-zuckerberg-testifies-data-protection telegraph twitter caught cambridge analytica data scandal: https://www.telegraph.co.uk/technology////twitter-caught-cambridge-analytica-data-scandal/ github (neo) neo nep- token standard: https://github.com/neoproject/proposals/blob/master/nep-.mediawiki the ethereum wiki ethereum erc- token standard: https://theethereum.wiki/w/index.php/erc_token_standard metamask: https://metamask.io/ ccn the etherdelta hack hurts, but could have been worse: https://www.ccn.com/the-etherdelta-hack-hurts-but-it-could-have-been-worse/ darknet.org.uk myetherwallet dns hack causes million usd user loss: https://www.darknet.org.uk///myetherwallet-dns-hack-causes--million-usd-user-loss/ cryptosonic youtube nos neo london presentation (:, dean van dugteren speaks about adoption): https://youtu.be/cfcnzinwg?t= neo news today meet asif raza creator smartt: nos dapp that utilizes the mct token: https://neonewstoday.com/general/meet-asif-raza-developer-of-smartt-a-nos-dapp-that-uses-mct/ github (nos) nos client: https://github.com/nos/client google play store: https://play.google.com/store/apps nos api documentation: https://docs.nos.io github (nos) nos-local https://github.com/nos/nos-local github (nos) create-nos-dapp: https://github.com/nos/create-nos-dapp medium (nos) announcing nosnet: https://medium.com/nos-io/announcing-the-nosnet-live-testnet-for-nos-dapps-ddba ipfs: interplanetary file system https://ipfs.io/ github (nos) nos name service: https://github.com/nos/name-service github (ethereum) eip-: initial ens registrar specification: https://github.com/ethereum/eips/issues/ wikipedia vickrey auction: https://en.wikipedia.org/wiki/vickrey_auction