eryllium: peer-to-peer crypto-currency with proof-ofstake jordan reynolds, marjorie (eryllium@gmail.com) decemberh, abstract peer-to-peer crypto-currency design derived from satoshi nakamoto's bitcoin. proof-of-stake replaces proof-of-work provide most the network security. under this hybrid design proof-of-work mainly provides initial minting and largely non-essential the long run. security level the network not dependent energy consumption the long term thus providing energyefficient and more cost-competitive peer-to-peer crypto-currency. proof-of-stake based coin age and generated each node via hashing scheme bearing similarity bitcoin's but over limited search space. block chain history and transaction settlement are further protected centrally broadcasted checkpoint mechanism. introduction since the creation bitcoin (nakamoto proof-of-work has been the predominant design peer-to-peer crypto currency. the concept proof-of-work has been the backbone minting and security model nakamoto's design. october have realized that, the concept coin age can facilitate alternative design known proof-of-stake, bitcoin's proof-of-work system. have since formalized design where proof-of-stake used build the security model peer-to-peer crypto currency and part its minting process, whereas proof-of-work mainly facilitates the initial part the minting process and gradually reduces its significance. this design attempts demonstrate the viability future peer-to-peer crypto-currencies with dependency energy consumption. have named the project eryllium. coin age the concept coin age was known nakamoto least early and used bitcoin help prioritize transactions, for example, although didn't play much critical role bitcoin's security model. coin age simply defined currency amount times holding period. simple understand example, bob received coins from alice and held for days, say that bob has accumulated coin-days coin age. additionally, when bob spent the coins received from alice, say the coin age bob accumulated with these coins had been consumed (or destroyed). order facilitate the computation coin age, introduced timestamp field into each transaction. block timestamp and transaction timestamp related protocols are strengthened secure the computation coin age. proof-of-stake proof-of-work helped give birth nakamoto's major breakthrough, however the nature proof-of-work means that the crypto-currency dependent energy consumption, thus introducing significant cost overhead the operation such networks, which borne the users via combination inflation and transaction fees. the mint rate slows bitcoin network, eventually could put pressure raising transaction fees sustain preferred level security. one naturally asks whether must maintain energy consumption order have decentralized crypto-currency. thus important milestone both theoretically and technologically, demonstrate that the security peer-to-peer crypto-currencies does not have depend energy consumption. concept termed proof-of-stake was discussed among bitcoin circles early roughly speaking, proof-of-stake means form proof ownership the currency. coin age consumed transaction can considered form proof-of-stake. independently discovered the concept proof-of-stake and the concept coin age october whereby realized that proof-of-stake can indeed replace most proof-ofwork's functions with careful redesign bitcoin's minting and security model. this mainly because, similar proof-of-work, proof-of-stake cannot easily forged. course, this one the critical requirements monetary systems difficulty counterfeit. philosophically speaking, money form 'proof-of-work' the past thus should able substitute proof-of-work all itself. block generation under proof-of-stake our hybrid design, blocks are separated into two different types, proof-of-work blocks and proof-of-stake blocks. kernel input stake input stake input stake output (pay stake owner himself) figure: structure proof-of-stake (coinstake) transaction the proof-of-stake the new type blocks special transaction called coinstake (named after bitcoin's special transaction coinbase). the coinstake transaction block owner pays himself thereby consuming his coin age, while gaining the privilege generating block for the network and minting for proof-of-stake. the first input coinstake called kernel and required meet certain hash target protocol, thus making the generation proof-of-stake blocks stochastic process similar proof-of- work blocks. however important difference that the hashing operation done over limited search space (more specifically one hash per unspent wallet-output per second) instead unlimited search space proof-of-work, thus significant consumption energy involved. the hash target that stake kernel must meet target per unit coin age (coin-day) consumed the kernel (in contrast bitcoin's proof-of-work target which fixed target value applying every node). thus the more coin age consumed the kernel, the easier meeting the hash target protocol. for example, bob has wallet-output which accumulated coin-years and expects generate kernel days, then alice can roughly expect her coin-year wallet-output generate kernel day. our design both proof-of-work hash target and proof-of-stake hash target are adjusted continuously rather than bitcoin's two-week adjustment interval, avoid sudden jump network generation rate. minting based proof-of-stake new minting process introduced for proof-of stake blocks addition bitcoin's proof-of-work minting. proof-of-stake block mints coins based the consumed coin age the coinstake transaction. mint rate cent per coin-year consumed chosen give rise low future inflation rate. even though kept proof-of-work part the minting process facilitate initial minting, conceivable that pure proof-of-stake system initial minting can seeded completely genesis block via process similar stock market initial public offer (ipo). main chain protocol the protocol for determining which competing block chain wins main chain has been switched over use consumed coin age. here every transaction block contributes its consumed coin age the score the block. the block chain with highest total consumed coin age chosen main chain. this contrast the use proof-of-work bitcoin's main chain protocol, whereas the total work the block chain used determine main chain. this design alleviates some the concerns bitcoin's assumption, where the system only considered secure when good nodes control least network mining power. first the cost controlling significant stake might higher than the cost acquiring significant mining power, thus raising the cost attack for such powerful entities. also attacker's coin age consumed during the attack, which may render more difficult for the attacker continue preventing transactions from entering main chain. checkpoint: protection history one the disadvantages using total consumed coin age determine main chain that lowers the cost attack the entire block chain history. even though bitcoin has relatively strong protection over the history nakamoto still introduced checkpoints mechanism solidify the block chain history, preventing any possible changes the part block chain earlier than the checkpoint. another concern that the cost double-spending attack may have been lowered well, attacker may just need accumulate certain amount coin age and force reorganization the block chain. make commerce practical under such system, decided introduce additional form checkpoints that are broadcasted centrally, much shorter intervals such few times daily, serve freeze block chain and finalize transactions. this new type checkpoint broadcasted similar bitcoin's alert system. laurie has argued that bitcoin has not completely solved the distributed concensus problem the mechanism for checkpointing not distributed. attempted design practical distributed checkpointing protocol but found difficult secure against network split attack. although the broadcasted checkpointing mechanism form centralization, consider acceptable before distributed solution available. another technical reason entails the use centrally broadcasted checkpointing. order defend against type denial-of-service attack coinstake kernel must verified before proof-of-stake block can accepted into the local database (block tree) each node. due bitcoin node's data model (transaction index specifically) deadline checkpointing needed ensure all nodes' capability verifying connection each coinstake kernel before accepting block into the block tree. because the above practical considerations decided not modify node's data model but use central checkpointing instead. our solution modify the coin age computation require minimum age, such one month, below which the coin age computed zero. then the central checkpointing used ensure all nodes can agree upon past transactions older than one month thus allowing the verification coinstake kernel connection kernel requires non-zero coin age thus must use output from more than one month ago. block signatures and duplicate stake protocol each block must signed its owner prevent the same proof-of-stake from being copied and used attackers. duplicate-stake protocol designed defend against attacker using single proofof-stake generate multitude blocks denial-of-service attack. each node collects the (kernel, timestamp) pair all coinstake transactions has seen. received block contains duplicate pair another previously received block, ignore such duplicate-stake block until successor block received orphan block. energy efficiency when the proof-of-work mint rate approaches zero, there less and less incentive mint proof-of-work blocks. under this long term scenario energy consumption the network may drop very low levels disinterested miners stop mining proof-of-work blocks. the bitcoin network faces such risk unless transaction volume/fee rises high enough levels sustain the energy consumption. under our design even energy consumption approaches zero the network still protected proof-of-stake. call cryptocurrency long-term energy-efficient energy consumption proof-of-work allowed approach zero. other considerations modified the proof-of-work mint rate not determined block height (time) but instead determined difficulty. when mining difficulty goes up, proof-of-work mint rate lowered. relatively smooth curve chosen opposed bitcoin's step functions, avoid artificially shocking the market. more specifically, continuous curve chosen such that each raise mining difficulty halves the block mint amount. over longer term the proof-of-work mint curve would not too dissimilar that bitcoin terms the inflationary behavior, given the continuation moore's law. consider wise follow the traditional observation that the market favors lowinflation currency over high-inflation one, despite significant criticism bitcoin from some mainstream economists due ideological reasons our opinion. babaioff al. studied the effect transaction fee and argued that transaction fee incentive not cooperate between miners. under our system this attack exacerbated longer give transaction fees block owner. decided destroy transaction fees instead. this removes the incentive not acknowledge other minter's blocks. also serves deflationary force counter the inflationary force from the proof-of-stake minting. also choose enforce transaction fees protocol level defend against block bloating attack. during our research have also discovered third possibility besides proof-of-work and proof-of-stake, which termed proof-of-excellence. under this system typically tournament held periodically mint coins based the performance the tournament participants, mimicking the prizes real-life tournaments. although this system tends consume energy well when artificial intelligence excels the game involved, still found the concept interesting even under such situation provides somewhat intelligent form energy consumption. conclusion upon validation our design the market, expect proof-of-stake designs become potentially more competitive form peer-to-peer crypto-currency proof-of-work designs due the elimination dependency energy consumption, thereby achieving lower inflation/lower transaction fees comparable network security levels. acknowledgement would like thank satoshi nakamoto and bitcoin developers whose brilliant pioneering work opened our minds and made project like this possible. references babaioff al. (): bitcoin and red balloons. laurie (): decentralised currencies are probably impossible (but let's least make them efficient). (http://www.links.org/files/decentralised-currencies.pdf) nakamoto (): bitcoin: peer-to-peer electronic cash system. (http://www.bitcoin.org/bitcoin.pdf)