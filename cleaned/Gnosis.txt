whitepaper contents executive summary problem overview mission statement core objectives build the world's most efficient forecasting tool create the "google" customized information searching become the standard for predictive assets token mechanism platform model gnosis layers layer one: gnosis core layer two: gnosis services layer three: gnosis applications gnosis applications financial instruments insurance hedging instruments information governance incentivization sports betting roadmap key activities partnerships competitive analysis finances use sale proceeds development roadmap current state future development ongoing research token auction leadership core team board advisors legal considerations legal implications token launches legal landscape for prediction markets gnosis architecture systems architecture core components contract architecture event factory market factory oracle architecture on-chain oracles centralized oracle decentralized oracle hybrid oracles oracle standard for event descriptions gnosis.js gnodex state channels off-chain order books gnosisdb indexing data query data executive summary prediction markets are poised become one the most disruptive innovations capital markets and data science since the beginning the information revolution. first proposed the early prediction markets have yet attract mass attention the realm forecasting and decision-making despite their documented efficacy for information aggregation. this largely due over-regulation many the world's leading financial sectors. with the invention powerful, peer-to-peer computing technologies such ethereum and bitcoin, the scientific exploration market-based forecasting can proceed uninhibited and rate and scale previously unimaginable. our team believes undoubtedly that prediction markets will disrupt some the largest existing industries the near term. looking forward, expect that the gnosis prediction market platform will form the basis for machine information economies global scale. order for prediction market platform become truly disruptive, must universal and draw from global liquidity pool. the platform must decentralized, permissionless, and trustless for such liquidity pool exist. with these requirements mind, the gnosis team has selected the ethereum network the core protocol upon which the platform will built. problem overview generally speaking, the information revolution has made easier for individuals quickly retrieve data about any topic. despite the ease access enjoy today, this form information aggregation still requires great deal coordination effective. more often than not, the data severely lacking context and objectivity and requires heavier lifting produce actionable information for use decision-making processes. the reason for this straightforward: written information inextricably linked the writer's individual biases and agenda, making difficult delineate useful information from opinions intentional misinformation. other words, it's easy find what people have said but hard ascertain what they actually believe. financial markets are particularly interesting this regard that the act speculation elicits highly effective form information aggregation that requires coordination (i.e. the "invisible hand") and more closely mirrors individual beliefs. principally, market speculators who believe they chapter executive summary have superior information buy shares when they believe company undervalued and sell shares when they believe the company overvalued. monetary incentive exists "update" common data point (i.e. share price) when there profit potential, and there disincentive misreport the form financial loss. the resulting equilibrium share price reflects the prevailing market-wide sentiment about company's value any given time. summary, information aggregation occurs with skin the game characteristic that: effectively glues individual's action their privately held beliefs and absent from other methods for information aggregation such polling. this vital for understanding the principal function prediction markets. prediction market, essence, vehicle for aggregating information about the expected outcome future event. unlike traditional financial market, prediction markets frame themselves questions about the future, typically with binary outcomes. for example: which presidential candidate will win the election? shares are divided among pre-defined options (e.g. hillary clinton, donald trump, other) with corresponding share prices equaling each option's share price reflects its probability occurrence. long individual believes they have superior information about the event question, s/he has incentive purchase shares that reflect his/her beliefs about the outcome, thereby updating information captured the prediction market. the market's conclusion, the winning option's shares become redeemable for while all other shares become worthless. individual actors who purchased the winning shares receive profit equal purchase price number shares. ex: which presidential candidate will win the election? (a) hillary clinton ($.) chance winning (b) donald trump ($.) chance winning (c) other ($.) chance winning (a) (b) (c) (%) over the last several decades, prediction markets have seen surge use due their superior ability effectively aggregate all available information relevant event's outcome. prediction markets have already been implemented with success for variety applications. initially, these markets were limited academic purposes, the first which being the foresight exchange. later, prediction markets were tested the intelligence industry through projects such darpa's futuremap, which was, "an experiment see whether market-generated predictions could improve upon conventional approaches forecasting." perhaps most straightforward and general was intrade's prediction market, which allowed for event futures the outcome decidable events such elections, current events, and sports. during its existence, intrade showed that such markets could garner significant volume and estimate the likelihood potential outcomes with greater accuracy than traditional polling methods. more recently, prediction markets have found use internal tools inform organizations, such large corporations and nonprofits. prediction markets have limited accessibility, liquidity, and market variety resulting from strict financial and gaming regulation the u.s. that extends well-beyond the country's borders. ireland-based intrade was sued the cftc violation its ban off-exchange options trading, leading the site's ultimate closure march per the u.s. commodity exchange act, illegal solicit u.s. based customers buy and sell commodity options unless classified exempt listed cftc-regulated exchange. intrade's sudden closure raised suspicions about market also known predictive markets, information markets, decision markets, idea futures, event derivatives, virtual markets http://www.cftc.gov/pressroom/pressreleases/pr- mission statement manipulation and around claims about its markets' liquidity. similarly, prediction markets have been met with resistance within corporate environments. despite evidence early successes for corporate decision making forward-thinking organizations such google, prediction markets have failed garner popular support from product/project managers for variety reasons, including manager bias, organizational friction, and lack well-established guidelines for facilitating successful internal markets. despite the aforementioned challenges, prediction markets have seen resurgence interest both academia and the private sector. more recently, new zealand-based prediction market predictit has been able operate under the benediction the cftc, albeit with severe limitations. predictit positions itself "an experimental research and educational facility victoria university wellington," rather than betting site. pursuant letter non-action received from the cftc october the platform's markets are restricted total traders per contract, with limit individual investment furthermore, use the platform illegal the states washington and nevada. must face hard truth that prediction markets, despite being rigorously tested, cuttingedge instruments for forecasting the future, will never reach their full potential built century database technologies. traditional prediction market applications that operate centralized platforms will tend towards proprietary designs, siloing data and reducing overall liquidity recipe for impotent markets that leave much desired terms accuracy and precision. furthermore, these databases lack the resilience necessary resist censorship and reach untapped liquidity pools across the globe, the effect which suffocates any prediction market's viability platform and stunts its growth means information exchange. because these efficient, flexible, and scalable markets for specialized information exchange not yet exist, investors and speculators are forced accept the high costs associated with constructing custom financial instruments highly regulated environments. mission statement "our mission build accessible prediction market platform enabling the free flow useful information." gnosis will disruptive force driving change number systemically important global markets, including finance, gambling, insurance, and information. gnosis prediction markets will also find applications new forms distributed, market-based governance protocols, and will provide unique incentivization opportunities for both local and global economies. gnosis well-positioned medium for long-term shift toward information arbitrage economies that will power the internet things, well more advanced forms artificial intelligence. believe that are the cusp cambrian explosion machine intelligence that will leverage global liquidity pool information for decision-making and will deeply interwoven shared blockchain fabric such ethereum. decentralized prediction markets seeded gnosis will the ideal medium exchange for these intelligent agents. http://www.newyorker.com/news/john-cassidy/what-killed-intrade https://www.predictit.org/home/termsandconditions chapter executive summary core objectives build the world's most efficient forecasting tool prediction markets can enable more efficient and informed world. prediction markets and oracles will bridge real world events the blockchain, thereby strengthening its value authoritative source truth about the world. create the "google" customized information searching gnosis enables anyone ask question and fund the search for answers. this creates new economic opportunities for subject matter experts and more efficient avenues for crowdsourcing and aggregating information. the power "search" decentralized and inclusive. become the standard for predictive assets gnosis seeks establish global, open prediction market platform with single liquidity pool. this limitless resource enables the simple creation custom prediction market applications and embodies flexible marketplace for blockchain oracle services. token mechanism the token sold during the token launch known the gnosis token, gno. this the only time that these tokens can created, and therefore the total supply gno fixed. fees, similar those trading market, will charged participants the gnosis services and applications layers (but reminder, not the bare bones core layer). these fees will initially denominated cryptocurrency, namely btc eth. gnosis seeks not only create interesting software, but also community those interested sharing their wisdom gnosis markets. this, needed create model that lowers the barrier entry for repeat users (e.g. having pay btc/eth repeatedly). therefore, addition paying this fee btc eth, gnosis ecosystem participants will able pay the fee wisdom, wiz, tokens. gnosis wisdom (wiz) can used pay platform fees the services layer, subsidize the fees other participants, provide initial subsidies for markets, for market trading. wiz will pegged usd worth fees. this way, wiz acts coupon for use within gnosis. gnosis tokens (gno) are the generator for wisdom token (wiz) creation. wiz can only created via activating the utility the gnosis (gno) tokens. this done via smart contract system. the smart contract works follows: gno token holders agree "lock" their tokens smart contract days). multiplier added for longer lock durations. the smart contract determines the user selected lock duration and applies that duration formula that designed regulate the supply wiz tokens currently use. prior locking their gno tokens the smart contract, users will able see exactly how much wiz they will receive result executing the smart contract. once users execute the contract, their wiz will distributed for immediate use, and the remaining will distributed proportionally over the locked duration. once the lock duration expires, the locked gno ceases generate wiz and the gno becomes freely transferable the holder. there limit (other than duration) for how many times gno tokens may used create wiz. how can gnosis remain viable participants choose not pay wiz? core value proposition gnosis (and decentralization) guarantee future characteristics platforms both users and developers without relying the trustworthiness operating company. order this, elements including fee rates, must codified into the software itself. chapter token mechanism expected that wiz will the overwhelmingly predominant method for paying fees the gnosis ecosystem. the unexpected event that this not true, and users are paying btc /eth, the platform may become vulnerable low-fee copycats potentially even illegal forks the gnosis codebase. these alternative platforms may logically cause erosion the gnosis userbase, subsequently triggering justified loss developer confidence that their created markets and applications will remain viable gnosis. order avoid this scenario, designed fee-reduction mechanism bolster competitiveness the gnosis platform. the result added confidence for developers and partners that gnosis the infrastructure they should building markets on. note: unlikely that this mechanism will used game theory and expectations point users predominantly paying fees wiz. the event this mechanism triggered, expect the occurrence extremely rare. two core requirements for the fee reduction mechanism that both decentralized and costly. the mechanism must costly order eliminate spam manipulation. the core functionality the mechanism follows: all fees paid btc/eth/tokens auction contract outside the control the gnosis team. fees exist the auction contract, any gno token holder can submit bid, bidding their held gno against some amount fees contained the auction contract. the bid accepted, the gno will then enter the auction contract and the user will receive the fees specified. when the user's gno enters the auction contract, the fee reduction mechanism will triggered causing reduction fees gnosis proportional the total amount gno held this auction contract. the auction contract one-way and gno cannot leave this wallet. figure examples gno and wiz utility platform model the gnosis platform will composed three primary layers: core, services, and application. figure primary layers the gnosis platform gnosis layers layer one: gnosis core the core layer provides the foundational smart contracts for gnosis use: event token creation and settlement, market mechanism, oracle, and management interface. this layer and always will free and open use. creating new markets near zero marginal cost, and remain competitive fees will have approach zero. instead grasping the maximum possible fees while remaining competitive, feel that prudent eliminate fees the most basic contract level. should chapter platform model every party's best interest use the existing open source and feeless contracts instead deploying their own version. layer two: gnosis services the gnosis services layer will offer additional services top gnosis core and will use trading fee model. these services will include state channel implementation new market mechanisms, stablecoin and payment processor integrations, open source template applications, application customization tools, and the oracle marketplace. more features may introduced deemed useful. these components are necessary for most consumer applications building gnosis. state channels are prerequisite for betting and financial applications requiring thousands more transactions per second. without stablecoins, market participants are subject the volatility the cryptocurrency which the market denominated and the event outcome that they are predicting. application templates, customization tools, and advanced oracle selection will allow execute our vision lowering the barrier entry for new prediction market based applications least two orders magnitude. while some applications and participants will interact with gnosis the core level, are confident that these services will provide compelling reason for services level use. layer three: gnosis applications top the services layer (or some cases, just gnosis core) the gnosis application layer. these applications are primarily front-ends that target particular prediction market use case and customer segment. some these applications may built gnosis, while others will built third parties. our vision for gnosis have wide variety prediction market applications built atop the same platform and liquidity pool. these applications will likely charge additional fees use alternative business models such market making, information selling, advertising. we'll see the next section tokens, many gnosis applications may include token holding core component their business model. https://media.consensys.net/state-channels-ethereum-is-open-for-business-bcddc# .djngh gnosis applications with the gnosis prediction market platform serving global liquidity hub, decentralized application developers will able create new classes predictive assets that can used any number simple complex applications. the following section will introduce set innovations that are readily implementable existing markets with the use gnosis prediction markets. will also attempt define entirely new verticals that are made possible through the use predictive assets. financial instruments prediction markets can enable the creation financial instruments that track stock price commodity value with greater specificity than existing derivatives. conceptualize traditional financial instruments expressions economic value, one could argue that the "expressiveness" current market offerings limited statements ownership asset (e.g. currencies, equities), financial relationships between economic entities (e.g. bonds), and meta-statements about value relative instrument (e.g. derivatives). prediction markets enable more nuanced and specific expressions about economic events, which turn signal value more explicitly (along with risk) both the macro and micro-economic level. for example, markets can created asking, "what will this corporation's gross revenue specified date?" one might imagine that information drawn from this and many adjacent markets could used input inform more advanced predictive/decision-making models finance, government, insurance, and beyond. such market could inform analysts' earnings per share (eps) estimates for the quarter; alternatively, markets can constructed predict eps itself, sidestepping the need for analyst forecasts altogether. more readily available and reliable information this area can lead better price discovery, minimizing both short-term volatility and long-term risk. alternatively, prediction markets can used create pegged and stable currencies. for example, etherusd currency can implemented creating scalar market which asks, "what will the ether/usd exchange rate future date?" liquidity from this market can then used offer etherusd tokens which are pegged the usd value. these tokens would sold small chapter gnosis applications figure financial instruments: predicting eps markup dependent the cost the market provide liquidity. another case, stable currencies (currencies designed have stable value) can constructed taking basket positions both sides many markets. while these synthetic instruments seem somewhat complex nature, they illustrate the diverse applicability prediction markets finance and represent tremendous economic opportunity for diverse set local experts truly global environment. insurance hedging instruments stated previously, highly liquid prediction markets are remarkably accurate assessing the likelihood future events and therefore signaling associated risks. the context insurance, prediction market could used estimate the likelihood insured event and may serve input even replace certain actuarial models. for example, home insurance policy could create market asking, "will this area flood the next year?" "will earthquake over magnitude occur within miles this location?" probabilities drawn from these markets can effectively approximate more sophisticated actuarial estimates that require highly specialized (i.e. expensive) training. our case, risk measurement becomes democratized, creating new economic opportunities for any participants with valuable localized knowledge. information figure hedging risks: travel insurance furthermore, insurance policy can automated creating smart contracts which buy "yes" positions each market affecting policy risk. theory, shares "yes" positions should pay out amount equal greater than the projected damage event occurs. the cost the consumer for these contracts should equal the cost all shares for their policy, plus some markup that the insurance decentralized autonomous organization (dao) may profit. the gnosis oracle market serves hub for claim inspectors offer their inspection services settle outstanding claims. this insurance method should result lower costs the consumer automates business and accounting functions and crowdsources the actuarial process, well claims inspection. information prediction market applications for information sales can broken into two major categories: sales insider information, and sales device data. the sale insider information has incredibly high utility but ethically and legally questionable. for example, market could created asking, "will corporation acquire corporation within set time frame?" anonymous prediction market, traders with insider information (e.g. high level executives corporation could participate this market for almost guaranteed profit. the benefit these types markets that they offer real-time access all information relevant corporation's value, leading more accurate pricing and strong-form efficient markets. the downside, however, that such markets can sidestep existing sec regulation that prevent insiders from individually profiting material, nonpublic information. the coming years, will observe the interplay between new information markets and the incumbent financial system. expect chapter gnosis applications regulators continue adapt its restrictive regime around insider information for prediction markets but with much difficulty given the decentralized nature competing, blockchain-based platforms. what may witness way response from the market stronger trend towards financial transparency default, which arguably shrinks the pool profitable insider information and introduces greater efficiency into global markets. figure information gathering: gauging the price piece art before the auction vital for auction houses. prediction markets can garner the expertise specialists. the latter example device data sales may result more efficient internet things (iot) optimizations, but requires prediction market scaling tools (e.g. state channels) achieve high frequency participation with low transaction cost. example this application could smart cars participating market asking, "what the traffic speed this location?" such market resembles something like waze, consumer gps navigation application, but for machine-to-machine interactions, providing profit opportunity for sensor devices reporting probability estimates used directly optimize iot operations. the prior example, markets traffic speed would used for driverless car routing third party maps services. governance governance decision making the core all governance models. organizations must make decisions which policies implement order maximize future welfare. for government, this could mean deciding how budget annual tax revenues among competing policy initiatives. take, for example, the following questions: "should portion the budget allocated for infrastructure projects for education? which option will result greater gdp?" within corporation, many decisions must made over the course fiscal year, with variations frequency, time sensitivity, and value the firm. disputes can arise within broad class decisions all levels company, many which can catastrophic poorly executed, such decision about whether not acquire competitor. most cases governance, such decisions are made using hybrid democratic and autocratic processes. the former involves voting process which members organization government cast votes (allocated through egalitarian proportional representation) where plurality, majority, supermajority required implement decision. the latter involves hierarchical model which designated individuals make absolute decisions over their domains control. metrics share price future revenue may the deciding factors for evaluating the resulting performance later date. both these models suffer from information and coordination inefficiencies, often resulting the implementation policies and actions that poorly optimize organizational welfare. futarchy, coined robin hanson george mason university, offers alternative, marketbased approach governance. futarchy, markets are used decide and implement policies. these markets follow general form of: "what will future welfare metric policy implemented?" for example, corporation could ask, "what will our revenue fire our ceo?" (market and conversely, "what will our revenue don't fire our ceo?" (market b). can refer these bi-directional markets decision markets. speculators who believe they hold unique insights into the outcome firing keeping the ceo are incentivized participate both markets. the speculator believes that revenue will maximized firing the ceo, then he/she will buy long shares the company's expected revenue [e(r)] the ceo fired and short shares the e(r) the ceo not fired. upon market closure, decision made corresponding the greater expected outcome. our ceo example, the market value for market e(r) greater than market e(r), then the organization fires the ceo. market participants are then rewarded depending their accuracy predicting future revenue. this model, governance both marketized and automated. policies are determined values found open market and implemented either through bonded delegates automated process. prediction markets have shown the most efficient information aggregation tool, lending credence the hypothesis that futarchy can more accurately identify policies that will optimize outcomes while also lowering bureaucratic overhead. incentivization apart from estimating event probabilities, prediction markets can used incentivize actions the real world. agent wishing incentivize action creates market asking "has particular event occurred?" "will this event occur particular date?" following the creation these markets, the creator aggressively buys shares the "no" outcome. assume participant observes chapter gnosis applications the prediction market and believes he/she can implement the action described. buying "yes" shares low cost the market, this participant effectively guaranteeing payment they can complete the action, resolving the market their favor. example this applied mechanism market for zero-day software security exploits. this case, company could ask, "will zero-day exploit discovered our software?" penetration tester would attempt discover exploits the software. exploit found, the tester would buy shares the market for "yes, exploit will discovered," and then reveal the exploit, either directly the company openly releasing the exploit using practice. for this particular application, the company would likely benefit from creating secondary smart contract which pays the tester additional amount for revealing the exploit privately them. this mechanism incentivizing actions extends similarly any event whose outcome can heavily influenced market participants. use case which find particularly interesting the automated political action committee (pac). pac raises money for the purpose influencing election legislation. through combination prediction markets and smart contracts, can automate this process. first, smart contract created which designated impact particular political outcome. actors may donate money this contract. following this, market created asking, "will this legislation pass?" the pac smart contract (smartpac) spends its funds buy shares "no" (this will not pass). this effectively creates incentive for actors buy shares "yes" with the intent impact the legislation positively and profit. the legislation passes, then the smartpac has achieved its purpose. the legislation does not pass, then the contract profits from its positions the market. this profit then retained used for future market created the next time similar legislation proposed. funds are rolled over similarly until the legislation passes. effectively, this creates ever increasing incentive pass the legislation. sports betting figure using prediction markets for sports betting sports betting global online sports gaming massive market, with least high billions wagered through regulated markets, and some estimate shows that times that volume goes through unregulated markets. companies such william hill make over revenue yearly. despite this massive opportunity, companies and governments have been slow innovate existing models. existing applications operate siloed data and liquidity pools, have limited accessibility, and are slow bring new products market. additionally, with centralized services, the user incurs additional risk such theft other failure, and unexpected issues with payment processors. two major impediments contribute this situation. the first that becoming new entrant the gaming market costly endeavor, with startup costs for new company being least the several millions. another major roadblock the aforementioned siloing and accessibility issues. without open, equitable, and transparent access markets, products can not offer platform model promoting innovation, and odds suffer. gnosis brings innovations that aim solve these problems. gnosis operates open platform, where access unbiased and transparent. thanks this, incumbents and new participants can safely reap the rewards operating the same platform, such added liquidity translating better odds. gnosis can accessed anywhere and provides the same markets all parties. additionally, our platform provides the majority back-end logic necessary for new application, lowering the barrier entry for new entrants least orders magnitude. roadmap key activities partnerships gnosis has been live the ethereum mainnet for over months. updated the next major software release august. gnosis was described vitalik most advanced dapp currently live main net early interview substantial work has been performed toward state channels and scaling. implementing state channels into our software architecture, gnosis pioneering one the most important tools for scaling dapps the blockchain ramping community engagement efforts. massive growth social media following. surpassed slack members and twitter followers. gnosis actively pursuing high profile partnerships within ethereum ecosystem, financial sector, and other fields. competitive analysis gnosis competes directly with blockchain-based prediction market platform, augur. table highlights the differences between the two platforms high level. the following section seeks expound the differences between the two offerings greater detail. also worth noting that gnosis competes indirectly with sports betting exchanges and option markets such william hill and nadex, respectively. gnosis differentiates itself from augur few important ways. first and foremost, gnosis positioned platform for building decentralized prediction market applications opposed simply being hub for market-making activity. the distinction subtle but represents wholly different strategic approach capturing the burgeoning predictive asset market; the value proposition the former centers itself the production actionable information, while the latter centers itself generating data. although gnosis invests heavily the development its trading engine, crucial gnosis' mission and thesis the transformation this large set prediction market data points into meaningful information that can utilized human and decision-making agents. order make this reality, gnosis plans focusing significant amount resources towards enabling the creation decentralized prediction market applications that make simpler and easier for users chapter roadmap gain insights into complex topics and make more well-informed decisions. the platforms also differ their mechanisms for resolving market outcomes. augur's design fully decentralized and requires reputation (rep) token holders allocate certain portion time per month for reporting event outcomes. the result resolution process that theoretically more difficult game but suffers from slow payouts. taking this cost significant point friction that may hamper the speed prediction market adoption, gnosis made important design decision create oracle solution that centralized default and features truly decentralized failsafe. this mechanism enables quicker resolutions via specialized, reputation-backed oracle services offered through gnosis' oracle marketplace without sacrificing the benefits decentralization. figure comparison between gnosis and augur the trajectories each platform also differ, least part, when considering the ongoing research that being conducted around long-term scalability and market-based governance. with respect scalability, blockchain-based prediction markets that aim serve data-hungry iot applications will suffer from prohibitive transaction costs due the high frequency requests. while protocol-level scaling solutions (i.e. sharding) are still development, gnosis has committed resources towards investigating off-chain scaling solutions such state channels, which enable verifiable, on-chain settlement large volume transactional events that cost-effective. gnosis identifies its active leadership state channel research significant competitive advantage the decentralized prediction market space precisely because enables decentralization scale. any first mover advantage captured augur the ethereum space will quickly outpaced once platform scaling becomes the primary concern. addition, gnosis was awarded grant the ethereum foundation conduct research market-based governance, known futarchy (detailed ongoing research below). selection leading scientists the blockchain field further signals the overall strength the gnosis leadership team. finances finances are raising approximately $.m usd denominated eth our token launch. fund usage will split approximately evenly between platform and application development. figure funding breakdown: use sale proceeds use sale proceeds platform development platform development will include building upon and securing core smart contracts, additional frameworks such comprehensive oracle market, trading and management interfaces, service level app templates and customization tools, and integrations with future ethereum infrastructure such state channels and stablecoins. legal costs legal requirements include corporate setups least locations for crowdsale, operations, and gaming licenses. work has been done prior token launch with law firm develop legal opinion the interpretation with law. ongoing resources will required for gaming and possible financial use case legal work. legal contingency fund will reserved case future issues. chapter roadmap marketing and business development business development efforts will focused identifying and forming relationships with new projects and existing partnerships which can built gnosis. marketing will focused marketing gnosis applications their potential customer segment. additional efforts will spent increasing awareness and knowledge the gnosis platform and what can built with it. development roadmap current state gnosis has been under development for over two years starting the beginning january since then there were multiple iterations over the core parts gnosis. this includes the smart contracts powering the framework well the general web interface and the gnosis.js library. several integrations gnosis with other projects like uport, metamask realitykeys have been tested. addition developing gnosis core infrastructure gnosis has been developing other products like the gnosis multisig wallet (https://wallet.gnosis.pm), which used several projects (golem, weifund, stable, ...) setting standard for secure fund management. gnosis also involved development developer tools and developed the first version program, which turned into the widely used testrpc. future development throughout the preparation the token auction, development core gnosis technology continued making sure that next iterations can published time. additional office berlin parts the team will join the vibrant ethereum community berlin, working out the ethdev office. gnosis.js beta smart contracts beta gnosis.js easy-to-use tool enable every website developer build applications top gnosis. gnosis.js will integrate with redesigned, more modular smart contracts and gnosisdb only backend. gnosis management interface beta new interface create and maintain markets the making, giving gnosis modern look and intuitive and productive user experience. the interface will offer light version providing all functionalities needed get started well advanced interface get the most out the functionalities offered gnosis. gnosisdb alpha storage data blockchain very expensive. the blockchain should only used verify the accuracy information. gnosisdb generic database layer combining cheap storage with the advantage fast document search and retrieval. gnosis hackathon gnosis will host hackathon support developers building apps top gnosis. realitykeys oracle integration realitykeys will the first external oracle provider integrated into gnosis. the realitykeys development roadmap service provides automated and human-verified data designed enable new generation automated information services. cryptoeconomic experiments thanks generous grant from the ethereum foundation, gnosis will running series experiments test the viability futarchy. oraclize integration oraclize will the second external oracle provider integrated into gnosis. oraclize aims the privileged data gateway between blockchain protocols and the world wide web. oraclize's main goal provide way for smart contracts break free their constraints and provide them with the ability access all the data they need from the web without compromising their trustless nature. gnosis ama dapp with twitter integration the first end user facing application will target the blockchain audience. gnosis ama (ask anything) dapp allows anyone ask the market for estimate: "when will ethereum switch proof stake", "will bitcoin hardfork?". twitter bot integration will make possible participate tweeting. gnowiz functionality together with the first end user facing application will enable the wiz functionality for paying fees. on-chain exchange price oracle part offering wiz functionality, newly designed market maker will deployed. this market maker can serve universal price oracle for tokens and will enable using wiz pay fees for markets traded any erc token. gnodex alpha gnodex will the decentralized, scalable state channel based exchange trade predictive assets. the development already started, however, due its complexity expected that mvp will take least year development. gnosis seeks combine forces with other teams build the basic layers required offer decentralized exchange, with gnosis adding layers required offer trading prediction market outcomes. futarchy dao alpha gnosis will build tool create daos that only use prediction markets make decisions. the concept was popularized under the name futarchy our advisor robin hanson. futarchy daos will measure the market reaction decision. the dao will only make decisions the market would react friendly it. gnosis trading interface alpha the generic gnosis interface does not meet the requirements for trading application. for this reason gnosis working additional interface dedicated traders. gnosis will combine the best parts existent trading interfaces from kraken, poloniex and other trading platforms provide seamless user experience. gnosis desktop standalone client alpha gnosis will offer standalone application based electron, which will come with ipfs chapter roadmap and ethereum light client integration. will allow fully decentralized prediction market service ensuring that gnosis prediction markets can used from anywhere the world. one other gnosis dapp the core concept gnosis enable third parties develop prediction market applications top gnosis. accelerate platform adoption, the gnosis team will develop dapps directly well. which application areas choose work will based our own business development research and coordinated with outside teams that decide build gnosis. gnosis mobile standalone client alpha mobile becomes the dominating platform for application users, gnosis seeks have dedicated applications for android and ios. based the popular status.im client, gnosis will provide fully decentralized prediction markets mobile. gnosis dapp store gnosis will integrate dapp store into the standalone apps for desktop and mobile promote apps. ongoing research thanks generous grant from the ethereum foundation, gnosis will running series experiments test the viability futarchy. over the next two months will running least three experiments that will test foundational assumptions toward the successful implementation futarchy. the first two experiments will test the ability actors manipulate the outcome markets when incentive provided. the first these experiments, market will created which resolved smart contract verified output particular time. the second experiment, the smart contract will resolve either dependent random seed. each these markets, incentive will provided manipulators they are able push market values away from their expected outcomes. providing this reward simulate market participants who have incentive (likely being shareholders organization) misinform futarchy market and will able provide quantitative information regarding the viability such schemes. the third market, will simulate futarchy more directly with markets determined ethereum blockchain difficulty time the future. through these experiments and general tools which plan create gnosis, aim forge solid platform for daos (and other types organizations) use futarchy inform and automate their decision making. token auction platform, "app" tokens decentralized networks can distributed variety ways. the bitcoin and altcoin model these tokens are distributed gradually via proof work proof stake mechanism. there are variations within these mechanisms which are primarily dependent the supply curve. this curve determines the rate dispersion the total coin supply. over the last two years, informal standard for the token purchase mechanism has emerged. this mechanism, cryptocurrency sent address exchange for some amount app tokens. these launches typically run for approximately thirty day period. the rate conversion between the sent cryptocurrency and the received app tokens decreases over this thirty day period (i.e. fewer tokens per unit cryptocurrency). for example, the rate during the first two weeks may remain eth for tokens and then decrease linearly eth for tokens and below over the open period. the amount tokens created often wholly dependent the amount cryptocurrency sent in. the rate eth for tokens and eth sent, tokens will created. this model causes friction for purchasers that they are compelled purchase app tokens earlier than they feel justified for fear price increases. the uncertainty token creation may also potentially lessen the utility the app tokens themselves. our innovations the gnosis launch, million gnosis tokens (gno) will created and percentage them will distributed through the token launch. the launch period will end when either the following ending criterion met: approximately $.m usd denominated eth worth gno sold, million gno tokens are sold. during the launch, participants will able send ether token launch address, committing buy gno below the current price the time their purchase. the price gno will determined falling, compared the current trend rising, price specification. the price gno will decrease every block that elapses during the launch. the price per gno sold the final block, when either ending criterion satisfied, the price that will applied all preceding sales during the launch period. therefore, token launch participants are committing maximum price per gnosis token and will receive tokens this rate lower. chapter token auction example user experience for example, gnosis creates tokens and begins the token launch. alice sends eth the token launch address while the rate gno for eth. the token launch process continues, with the price per gno lowering each block. approximately $.m usd denominated eth worth gno sold the day the launch. the ending block, tokens were sold rate gno for eth. the token launch concludes, and every participant gets tokens equal the amount ether that they sent, the rate gno for eth (the price when the ending criterion triggered). alice, who contributed eth day one, would therefore receive gno, applying the final sale price her eth purchase. again, participants declare the maximum price they are willing pay for gno, but ultimately receive the lowest price that any purchaser pays for gno the final sale price applied all purchasers. participation economic theory dictates that purchasers should participate only when gno tokens reach price they feel representative their utility the gnosis ecosystem. tokens will sell for very high price the initial blocks, representing high demand for the product. buyer believes the price fair, economic theory would encourage participation. not, economic theory dictates buyers should wait until gno reaches price they feel warranted gno's functionality the platform. important emphasize that our token launch model significantly different from previous models. participating early provides special benefits. origin this mechanism alex van sande, seeking out model that better enabled participation and eliminated some the aforementioned friction created existing mechanisms, originally proposed this auction mechanism. agreed with his suggestion and following the initial idea, worked with alex and vitalik buterin, who also supported this design, create the mechanism that have now settled on. code stefan george, technical co-founder gnosis has released our smart contract source code along with the code for our token launch mechanisms. additionally, his multisig wallet, recently used golem, also available for review. figure the gnosis token auction leadership core team martin koppelmann, ceo martin koppelmann has been entrepreneur and thought leader the blockchain space for more than years. the founder the biggest bitcoin prediction market, fairlay, but has shifted his focus ethereum and co-founded the decentralized gnosis prediction market the first bigger dapp that went live ethereum. closely related prediction markets his work decentralized market driven governance mechanisms: futarchy. beyond the entrepreneurial activity martin has done research the economic incentive structure different consensus mechanisms and scalability solutions via state channels. martin co-hosts the ethereum meetup groups the silicon valley and san francisco. finally, martin well known for his work and research "basic income the blockchain: circles" new currency built top ethereum that aims implement basic income monetary policy. stefan george, cto stefan entrepreneur and developer who became interested bitcoin started his own bitcoin startup fairlay, one the leading prediction markets using bitcoin today. previously stefan worked tech companies silicon valley and berlin-based startups. after finishing his master's decided travel asia for year and started gnosis afterwards working from berlin. the first alpha version gnosis was released just one week after the launch ethereum. stefan leads the development gnosis and implemented the smart contracts behind the prediction market platform. addition, stefan wrote the crowdfunding campaigns for gnosis and singulardtv and the multisig-wallet used gnosis and golem store their funds and tokens. matt liston, strategist matt dove into the cryptocurrency space after becoming fascinated the potential for smart contracts and blockchains revolutionize information economies. currently works strategy and communications for gnosis. prior joining consensys matt founded augur, consulted for ethdev, and designed iot blockchain solution for enlighted. when not dao-whispering chapter leadership composes algorithmic music and dreams future skynet-on-a-blockchain. dr. friederike ernst, coo friederike physicist training and after obtaining her phd from the free university berlin worked columbia university and stanford/ slac before becoming guest professor the university hamburg. friederike has been interested cryptotechnology for many years and has switched gears from basic science: she now structures, organizes and directs company operations. denis granha, full stack engineer denis software developer who started working with cryptocurrencies the end found ethereum the potential growth and freedom where creativity it's value. gnosis denis works both frontend and backend development. before joining gnosis, denis worked software consultant projects for important companies spain. besides his technology passion, denis musician and singer who loves play live shows with his band. giacomo licari, full stack engineer giacomo enthusiastic software developer. got touch with cryptocurrencies and blockchain late prior gnosis, worked software developer for international consulting firm and for company developing erp services. he's currently working gnosis services along with the development team. alan lu, mathematician, cryptographer alan was born shanghai, but grew dallas, texas, where really got into technical stuff. studied math dallas and worked programmer. enjoys gaming, training, and pursuing his interests physics. you may find him hanging out hackerspaces, reading bookstore, adventure somewhere. gnosis alan finds suitable models and algorithm implementations and works the distributed key generation used gnodex. rami khalil, information security rami developed interest decentralized currencies and infrastructure recently while currently pursuing master's information security the swiss federal institute technology zurich, rami researches payment channels part his studies and designs and implements core gnosis functionality. previously, interned silicon valley, and was acm icpc world finalist. board advisors joseph lubin (board member) co-founder ethereum and founder consensys. academic background electrical engineering and computer science from princeton university and research experience the field robotics learning. former technology goldman sachs the private wealth management division. jeremy millar (board member) chief staff consensys. chief staff, jeremy oversees many the enterprise activities and strategic initiatives the firm. previously, jeremy millar was founder and managing partner ledger partners. ledger partners developed out jeremy's increasing focus and passion for the blockchain and bitcoin ecosystem. this began with what was supposed blog post that board advisors became 'arguably the most comprehensive report date what happening the world bitcoin and blockchain startups' which you can see here: http://bit.ly/zqpvy. jeremy began his career one the first java architects oracle, before moving into sales management and strategy roles, both within oracle and number start-ups. went complete his mba oxford university before joining the m&a team goldman sachs. jeremy was founding partner magister advisors, advising fintech and saas companies across europe. also active angel investor and mentor with the barclays accelerator powered techstars. james slazas years capital markets experience, initially the futures' exchanges the cme and matif. managed proprietary derivative arbitrage and structured products book for lehman brothers. also, held emerging market credit risk for lehman's london, swiss and hong kong banks for hnw clients. james managed life settlement hedge fund uniquely acquiring longevity risk for limited partnership units. robin hanson robin hanson associate professor economics george mason university and research associate the future humanity institute oxford university. known expert idea futures and markets, and was involved the creation the foresight institute's foresight exchange and darpa's futuremap project. invented market scoring rules like lmsr (logarithmic market scoring rule) used prediction markets such gnosis, and has conducted research signaling. jason trost founder and ceo smarkets (>$.b betting exchange). prior founding smarkets, jason was application developer ubs's global asset management (new york) where focused innovative web technologies. jason founded internet startup descipher, consumer medical website and has also been equities trader great point capital (chicago). vitalik buterin founder ethereum, ethereum chief scientist. vitalik buterin russian born programmer and writer primarily known co-founder ethereum and co-founder bitcoin magazine. vitalik helped develop gnosis auction mechanism and involved the crypto-economic experiments conducted gnosis. legal considerations due our aspirations for what gnosis may one day become, the gnosis team exercised extreme legal diligence the lead-up our launch. this diligence includes significant expenditures several law firms around the globe evaluate the implications our structure, token launch, and operations. the united states, we've worked closely with perkins coie. our home jurisdiction gibraltar, we've worked closely with isolas. due the retrospective nature regulatory action, the gnosis team can make guarantees regarding the legality the platform launch any given jurisdiction. regardless, are confident in, and proud of, the work we've done shape gnosis into what hope model regulatory compliance for decentralized applications and token launches. will responsive and collaborative with any regulators necessary going forward. legal implications token launches gno tokens are functional utility tokens within the gnosis platform. gno tokens are not securities. gno tokens are non-refundable. gno tokens are not for speculative investment. promises future performance value are will made with respect gno, including promise inherent value, promise continuing payments, and guarantee that gno will hold any particular value. gno tokens are not participation the company and gno tokens hold rights said company. gno tokens are sold functional good and all proceeds received company may spent freely company absent any conditions. gno tokens are intended for experts dealing with cryptographic tokens and blockchain-based software systems. legal landscape for prediction markets discussed herein, prediction markets are area interest for many regulators around the globe, including those within the united states. though feel decentralization holds great promise, must, and intend to, operate our business accordance with the laws relevant jurisdictions. such, gnosis may not immediately available certain jurisdictions. the gnosis team and our advisors are aggressively pursuing strategies bring the benefits gnosis and the information chapter legal considerations sharing economy the globe quickly possible. first steps may include obtaining financial gaming licenses required law. gnosis architecture gnosis still under heavy development and will for while. parts this section are subject change. systems architecture gnosis aims fully decentralized, serverless prediction market application framework. gnosis achieves this goal utilizing existing technologies like ethereum and ipfs advancing their features with new solutions like state-channels for scalable applications. core components the gnosis core components consist mainly four technologies, which are combined easy-touse javascript library gnosis.js. used technologies include: ethereum allows run decentralized code with smart contracts, making transfer and settlement assets simple and censorship resistant. gnosis using ethereum for creation events and markets. every prediction market trade and every settlement ultimately done this layer. ipfs allows store static files distributed file system. using distributed hash tables distribute files. gnosis using ipfs store all static files gnosis.js any element. addition meta information events stored ipfs. gnosisdb tries compensate the shortcomings ethereum and ipfs, which come without search capabilities. gnosisdb offers distributed, scalable search combining on-chain with off-chain data and will used query event descriptions prediction markets. gnodex decentralized exchange trade predictive assets (prediction market outcome tokens) using state channels. state channels allow scaleout transaction capacity ethereum, which needed make gnosis prediction markets accessible large scale users. chapter gnosis architecture figure gnosis architecture contract architecture the gnosis smart contract design follows very modular contract structure making easy split functionalities upgrade reuse parts. the current gnosis implementation consists over smart contracts ranging from market makers different oracle solutions. all them have been written solidity. for every prediction market two objects have created: event object referencing real world event and market object, which connects the market maker with the event. once the event occurred, the event can resolved and winnings can redeemed. event factory the event factory contract allows create new event contracts, which can used resolve markets. every event contract has the following (main) properties: oracle outcome tokens collateral token oracle the event references oracle contract, which will resolve the event. gnosis agnostic towards oracles and allows use any contract oracle, which implementing the oracle interface. outcome tokens events can resolve number range (ranged event) outcome out list outcomes. example for ranged event the apple stock price date example for non-ranged event would the winner the world cup date which has list teams outcomes. for every outcome, erc compatible outcome token created. ranged events are represented with two outcome tokens for long and short positions. non-ranged events have outcome token for every defined outcome. every outcome has probability between and all outcomes together contract architecture figure contract architecture add the probability after event resolved the outcome known. the winning outcome has now the probability all other losing outcomes have the probability collateral token the erc compatible collateral token defines the currency which the event traded. possible generate and redeem full set outcome tokens for collateral token, because all outcomes together always have the same probability assuming there event with two outcomes and user invests collateral tokens will receive outcome tokens for every outcome. the user decides bet outcome and sells all outcome tokens for outcome the price can ask for outcome tokens, depends the market's estimate outcome will the winning outcome. assuming the market believes that outcome will happen with probability, outcome tokens can sold for collateral tokens. hence the user invested collateral tokens for outcome tokens. when the event occurred and outcome was the winning outcome, the outcome tokens can redeemed for collateral tokens and the user earned profit collateral tokens. common collateral tokens will ether tokens stable coins, which allow trade without additional currency fluctuation risk. outcome tokens collateral token conditional markets outcome tokens are erc compatible and can used collateral tokens for other events. the interesting feature outcome tokens is, that they only have value when the outcome they represent occurred. trading event using outcome token collateral implies that the event only relevant under the assumption that the outcome occurred. this allows create events with conditional probabilities. assuming want predict, how the potential change the microsoft ceo affects the microsoft stock price, create two events: will steve ballmer ceo microsoft end chapter gnosis architecture outcomes: yes, what microsoft stock price end outcome: any number the first event can use ether collateral token but for the second market, use the outcome token representing the outcome "steve ballmer not ceo microsoft end any market using the second event predicting the stock price microsoft end under the assumption that steve ballmer longer ceo end market factory the market factory allows create new market contracts, which allow trade outcome tokens markets with market maker. every market contract has the following (main) properties: event market maker market fee event market always associated event and has funded the event's denomination. the market maker buys and sells event outcome tokens via the event contract. market maker market maker contract like the lmsr market maker allows trading outcome tokens. the lmsr calculates prices for event outcome tokens based demand using logarithmic market scoring rule. the higher the demand the higher the price for the outcome token is. assuming event was resolved the demand for the winning outcome token will high that the price converges towards market fee market maker created the creator can define optional fee essentially spread between bid and ask. this collected fee can compensate the market creator for the the initial funding spent the market maker give the initial liquidity. oracle architecture while all other parts prediction market can automatically executed smart contracts the blockchain, the somehow need get the information about what happened the real world decide which outcome tokens have paid out. the gnosis platform oracle agnostic. any contract can serve oracle any oracle solution that will development ethereum might used gnosis. however, not only rely external oracles, developed few our self. different applications will have different oracle needs regarding resolution speed, decentralization trust needs and costs. anticipate categories oracles: chain oracles centralized oracles decentralized oracles hybrid oracles (centralized first dec. backstop) oracle architecture on-chain oracles can directly provide oracle about on-chain information. all that needed simple interface contract that makes sure that the data available the right format. few examples for this kind data: what will the difficulty block what will the price specific token decentralized exchange one month? futarchy will dao accept specific proposal? while the number those use cases limited today will only grow. can see gnosis markets complementing almost every dapp project ethereum. centralized oracle for some applications will just fine rely single data provider. some cases there just single source truth e.g. sensor measurement specific sensor, game results from the nfl. those data are available structured format only signature the issuer necessary make them smart contract compatible. know that more and more institutions are looking into making their data smart contract compatible. however the meantime trusted data signer might well for some applications the best solution. important note that the signer (oracle) does not need know about the prediction market even ethereum. once the right outcome signed anyone can submit this data the blockchain and the smart contract will evaluate the signature. centralised oracle providers that have already integrated are planning include https: //www.realitykeys.com/, http://www.oraclize.it/ and https://smartcontract.com/. decentralized oracle many proposal have been made for how implement decentralized oracles. the common scheme that the truth schelling point. different decentralized oracle mechanisms usually set various coordination games where participants are voting economically incentivised way. they vote along with the majority they gain some value, they vote against the majority they lose value. projects implementing those schemes include augur, aeternity, reality token. all these projects could (maybe slightly modified) used gnosis. tried use the essence those concepts and came with solution that does not have any operating costs. contrast the augur concept expects individuals actively and regularly report the outcome events. gnosis contrast will use concept called the "ultimate oracle" with the big advantage not having any operation costs. the concept anyone can make claim that specific event had specific outcome putting money the line. this claim can disputed anyone putting more money the line alternative outcome. the ultimate oracle will decide outcome continues the frontrunner (outcome with most money behind it) for specific period time (e.g. h). this case all money that put losing outcomes will distributed those putting money the winning outcome. avoid that people will put money the winning outcome shortly before confirmed the amount capped proportion the amount money the other outcomes. concrete implementation can found here: https://github.com/consensys/gnosis-contracts/blob/ master/contracts/solidity/oracles/ultimateoracle.sol. discussion about the game theoretical reasoning behind this concept can found here. chapter gnosis architecture figure the "ultimate oracle" hybrid oracles practice mainly combinations those models will used. for cost and resolution time reasons centralized oracle will used first. the oracle will publish result fast possible (could within seconds after event occurs). this will trigger dispute period. the length the dispute period could determined the latest trading prices the prediction market. the suggested outcome traded close the market already agreed this outcome and the dispute period can very short. during this period anyone can trigger dispute some costs and give the responsibility for the outcome more decentralized more secure oracle e.g. out oracle. the outcome this oracle will still disputed fully decentralized oracle like the "ultimate oracle" can used mechanism last resort. this approach combines the low cost, high speed advantages centralized oracles without compromising with the security that comes from fully decentralized oracle which used backstop. find implementation this hybrid model here: https://github.com/consensys/gnosis-contracts/tree/master/ contracts/solidity/oracles. oracle standard for event descriptions does not make sense store the full plain text event description the blockchain. for this reasons have coordination with other oracle providers defined standard format store event information json file together with deterministic process generate unique identifier for such event description. gnosis.js figure hybrid oracles gnosis.js gnosis.js free, easy-to-use javascript library, which can used anyone create applications top gnosis. gnosis.js combines the interfaces exposed all four core components adding wrapping functions allow for easy trading and creation events, markets and oracles. alpha version can found here. gnosis.js used the gnosis administration tool offering standard generic interface manage prediction markets. alpha version the admin interface can found here: https: //admin.gnosis.pm/ gnodex state channels state channels allow transactions occur without requiring them sent the blockchain immediately. transactions are exchanged the form signed messages which guarantee the transaction's future execution the blockchain. the speed for such transactions not limited the block time, but the speed the channel used exchange the signed messages. additionally, the number transactions are not limited the block size gas limit the blockchain, but the bandwidth the exchange channel. short, state channels allow almost unlimited number transactions with almost instant finality. the difference between regular blockchain transactions and state channels similar the difference between regular bank transaction and bank check. instead sending transaction via bank and waiting for their confirmation, one can sign check independently and exchange with someone else. however, unlike the bank check, which might not covered, state-channel transactions are cryptographically signed and can verified anyone. off-chain order books the use state channels crucial the development order book for decentralized exchange, the speed and volume transactions exchange factors critically into its usability and cost effectiveness. off-chain order book that operates with minimal trust and can audited chapter gnosis architecture disputed anyone through submitting cryptographically signed orders the blockchain, the order book misbehaves, the goal our implementation. the open order problem although cryptography renders the orders themselves tamperproof, does not resolve form market manipulation here referred the open order problem. market makers stand lose markets enough winning shares are bought from them, they are incentivized not include unfavorable orders come settlement. similarly, market participants may manipulate the market taking advantage better network access front run regular participants, degrading the user experience for those traders without the resources conduct high frequency trading. solve the open order problem, use blinded batch auctions. traders submit their orders encrypted with public encryption key, the orders are aggregated the exchange, and corresponding private key published after the batch resolved. the provider the key pair will group independent servers running distributed key generation protocol. that way, nobody able manipulate the market indicated unless they somehow corrupt the distributed key generation service past threshold servers. should noted that although orders may blinded the use hash submissions followed the submission the order after the batch period ends, that gives market participants the option failing submit the order turns out unfavorable them. this why have opted for full encryption this case. gnosisdb ethereum promises censorship resistant, decentralized applications. however, today some parts dapp stack are still served from some central services, which are controlled third party and can censored. one those services document search. searching larger amount data hardware intensive task, which benefits from centralized execution and thus most efficiently done remote service indexing data. the case gnosis thousands event descriptions for prediction markets have served dapps. present approach using smart contracts verify search results using smart contract judge decide censorship results and punishing bad behavior. ethereum allows run decentralized applications, saving their state the blockchain. however, changing the state applications and storing data very costly. according the yellow paper, the fee gas store bit word. storing data costs eth usd; eth .usd): (/) gwei ether. besides limited storage capabilities, searching for data the blockchain very difficult well. today, the only way query the blockchain via json rpc executing call predefined contract function. searching across different contracts very limited the same access controls apply for regular transactions. ipfs and swarm the other hand are protocols designed create permanent and decentralized method storing and sharing files. storing very cheap but both protocols come without search capabilities. our approach allows everyone add records public database, making all records searchable from any dapp. search results can verified and censorship can detected, resulting punishment the search provider. gnosisdb indexing data allow decentralized search, all indexed data should available everyone, anyone able start indexing service based the same data source. the indexed data too large saved the blockchain, alternative storage solutions like ipfs have used. everyone can easily add files ipfs but the hash used retrieve the data from ipfs only known the user adding the file. allow everyone discovering files included the index, the ipfs hash every file added the index should saved the blockchain reference. this can done adding the ipfs hash merkle tree maintained smart contract. doing so, additional information available transaction execution time, like the sender and timestamp can included the root hash: bytes roothash sha(roothash, documenthash, now, msg.sender); adding the ipfs hash the hash chain, can show anytime later, that ipfs document has been part index the time was added. merkle tree allows prove membership but not non-membership. indexing service could provide search results containing documents, which are not part the merkle tree and would impossible show that they are not part the tree. simple approach prove non-membership adding every ipfs hash solidity mapping: mapping (bytes uint) documents; the mapping maps ipfs hashes the block number the time the document was added. proof non-membership now very simple: any ipfs object, which not referenced this mapping, was never added the index. inform indexing services about new documents, ethereum event should triggered when new record added. every indexing service can listen the blockchain for events and retrieve the referenced files from ipfs add them their index. newly started indexing service can iterate over all events load all ipfs objects and restore the entire index. query data one option guarantee that searchresult was not manipulated indexing all data locally and perform the query against the local index. this won't feasible option for most dapps search indexes can become very large. another approach ensure that results are not manipulated make manipulation very costly. everyone, who offers indexing service, should put security deposit. the indexing service will lose the deposit manipulation can detected. detect manipulation search results should shared between clients receiving search results and other indexing services, which can validate results. discover indexing service before any query can answered, connection has established between the dapp and the indexing service. the dapp has perform handshake with the indexing service: dapp sends out whisper message asking for indexing services. the indexing service responds with signed connection information (protocol, host, port). the dapp waits for the first response and validates, that the indexing service address derived from the signature has put security deposit. two indicators can used determine the selected indexing service: (a) how big the security deposit. the larger the deposit, the more expensive manipulation. chapter gnosis architecture (b) the faster whisper response arrives, the faster future queries will responded, the indexer most likely closer the dapp user. this important, the communication solely done via whisper. direct connection can established with the given information. case the indexer the dapp user don't want reveal their have restricted access, queries can send via whisper connection. sending query make sure result cannot censored query object has define all conditions document has meet. this can include keywords, which should appear document well indication, which documents should included(e.g. all documents added block ,). the query object sent the user includes: query string defines required document properties and sorting. the query could defined sql like query language: contains(title, "gnosis") limit block number all documents added until this block number should included the search process. the indexing service processes the query and returns result object: result list ipfs hashes, sorted their ranking. indexing service signature indexing service sings its result together with the user defined query string and defined block number. the dapp receives the result object and validates the indexing service signature. validate the result the dapp can forward the result validation service. validation can done any other indexing service. the validator runs the query and validates that its result equal the result received the dapp. the result should differ, the validation service can challenge the result via the judge smart contract. the validation service has prove that there one document, which matches the query and has higher ranking score than document included the result with higher ranking. this can proven, the indexing service delivering the wrong result loses its security deposit, which could credited the validator. there are three ways indexing service can manipulate results: indexing service includes documents, which are not part the index. indexing service excludes documents, which are part the index. ranking score objects manipulated and they are returned false order. prove manipulation the judge contract has receive the following information for validation: query string block number result documents challenged document challenge document indexing service signature the judge contract validates: indexing service signature valid? the address derived from the signature doesn't match the address the security deposit holder, the validation process stopped. gnosisdb challenged document part result documents? the challenged document has part the result documents returned the indexing service. the validation process stops otherwise. challenged document not part index the defined block number? using the document mapping, the validator can easily prove that the challenged document was not part the index the defined block number. the indexing service would lose its security deposit this case. challenge document part index the defined block number. the challenge document provided the validator has part the index the time the block defined the query. this not the case, the validation process stops. has challenge document higher ranking score than challenged document but has lower ranking position result not included result all. prove manipulated ranking positions, the ranking algorithm itself has validated the smart contract. the ranking scores for the challenge and challenged document are calculated and compared. the challenged document has higher ranking but lower ranking score than the challenge document, the result was manipulated and the indexing service loses its deposit. exclude data ipfs has guarantee for data being available. unintentional loss data intentional not publishing ipfs data can occur. possible attack would add ipfs document hash the smart contract maintaining the index merkle tree but never publish the document. the attacker could reveal the missing document the validation process later and show that this document should have been included the search result. because impossible detect this smart contract, the validator would challenge the result successfully and receive the indexing service's security deposit. for this reason, indexing service should able exclude missing documents from its results explicitly. hash all missing docs should included the signed result. indexing service excluding available documents, won't punished but validator can respond the dapp that owns one the documents excluded the indexing service. the dapp detects multiple cases falsely declared missing docs, the dapp should consider switching the indexing service. addition, dapp receives results containing ipfs hashes objects, which are missing and cannot loaded, the dapp should consider switching the indexing service well.