mobius universal protocol suite for the blockchain ecosystem and real world data october (v.) info@mobius.network panchain, inc. abstract mobius integrates the old internet with the new decentralized internet value. just stripe integrates payment processing into apps, mobius (mobi) integrates the blockchain ecosystem into apps. our simple public apis abstract away the underlying complexity blockchain integration and development; any developer can build modular constructs the blockchain without specific domain expertise. result, mobius makes easy connect any application, device, data stream the blockchain ecosystem. the live dapp store allows every developer securely distribute and scale cross-blockchain applications for mass adoption. the mvp use-case our live dapp store that makes trivial for developers accept in-app cryptocurrency micro-payments. the mobius protocol encompasses standards for interoperable blockchain login, payment, smart contracts, governance, and oracles. the blockchain heart distributed transactions ledger where code law: this envisages the possibility fully autonomous decentralized markets. our goal allow market participants leverage mobius consume big data feeds and distill into mission critical insights. mobius makes this reality with the conception the blockchain smart markets protocol incentive compatible two-sided periodically clearing combinatorial auction. the mobius smart market brings the possibility distributed hyper-efficient marketplaces, unprecedented scale, that would coordinate trade data and micro-services between ever increasing number rational programmatic agents. evelope can easily design market mechanisms and implement cryptographically secure distributed markets over the blockchain, which until recently would have been unimaginable except under pure monopoly conditions. without the blockchain, there decentralized iot marketplace that provides the data fuel live applications. the simplest way implement the smart market through the mobius blockchain protocol. table contents introduction the token economy universal blockchain payment protocol universal token login protocol universal governance protocol decentralized app economy mobi commerce network effects growth with two sided network effects equilibria with network effects bb/c adoption dapp store hackathons for the best developers: enhancing network effects network effects the market participants network effects consumer adoption the dapp store ecosystem universal proof stake oracle protocol the market for lemons: quality uncertainty oracle data oracle and smart contract ecosystem blockchain smart markets blockchain smart markets protocol market design for proof stake oracle protocol background design implementation stated market design goals the forward auction how much sell smart markets use cases block button auction cloud services market real time intra-block bidding development progress roadmap mobi allocation summary mobi token sale details team supporting documents links introduction the blockchain comparable the early internet, with bps modems just entering the market ethereum running mere tps unscalable for real world applications. ethereum significantly encumbers future adoption with problematic high fees and major attack surface. the continual hard-forks portend future instability. blockchain developer tools and protocols are their infancy. they are comparable the primitive web developer tools the early era without stripe, who created standardized simple protocol accept credit card payments, the amazon aws cloud, which made easy for anyone deploy web application. there fundamental need abstract underlying implementations. mobius does this now with universal apis convert the myriad app developers into blockchain developers just stripe unleashed e-commerce through its suite apis integrate payment solutions. mobius apis will ease the integration the blockchain ecosystem within everyday applications. the token economy there are over tokens and growing, with many created this year. these organizations have collectively raised almost billion the first half the blockchain ecosystem has soared market capitalization greater than billion the number blockchain users continues grow. despite facebook -like growth, the number blockchain users minuscule compared the billion internet users billion iot devices this gap between the internet world and blockchain world represents multi-trillion dollar opportunity. the internet app economy alone predicted trillion while smart devices will grow over billion strong developer communities along with open apis are the key the success the internet and its ecosystem enterprises. this includes the likes facebook, salesforce, amazon, and alibaba similarly, the success the expanding the blockchain ecosystem requires both developers and robust api protocols. the open bidirectional mobius protocol apis turn the million software developers the world into blockchain developers through simple and standardized protocols. any developer can easily connect any application, device, data stream the blockchain ecosystem. mobius closing the gap between the internet and the blockchain world through multifaceted solution creating easy developer tools, consumer dapp store, and smart market allow hyper-efficient transactions processed real world data between autonomous agents with our universal proof stake oracle protocol. addition, the mobius protocols define universal cross-blockchain standards for payments, login, and oracles through simple apis, developer frameworks, and webhook callbacks. the payment space, mobius analogous stripe, which made easy for developers accept any credit card. mobius similarly makes easy for developers transact with any blockchain token and benefit from significantly lower transaction fees disintermediating legacy centralized institutions. the mobius dapp store works conjunction with the mobius api solve the consumer discovery problem and features fees that are over lower than the centralized apple and google analogs. the short intermediate aim progressively decentralize the entire global app economy. universal blockchain payment protocol the current global payment infrastructure centralized, convoluted, slow, and expensive. these legacy models are long overdue for overhaul more efficient, trustless, and dynamic digital alternative. accepting credit and debit cards involves three key steps: authorization, clearing, and settlement process. the process depends payment gateways, terminals, merchant banks, credit card associations, cardholder banks, and other stakeholders. result, this leaves participants with high fees and slow payment finalization. this why legacy payments are expensive, often costing approximately per transaction source: https://www.pathwaypayments.com/processing-diagram.html blockchain technology will revolutionize and simplify global payments disintermediating large financial institutions, significantly reducing transaction costs. however, current blockchain developer apis and frameworks are their infancy and are very hard use. developer technology for blockchain today similar payment developer frameworks before stripe. for example, below example the authorize.net merchant web services simple object access protocol (soap) createcustomerprofile request data structure api login here transaction key here merchant customer here profile description here customer profile email address here individual credit card number here credit card expiration date here livemode source: https://www.authorize.net/content/dam/authorize/documents/cim_soap_guide.pdf the authorize.net api verbose, cumbersome, and hard use. below are the equivalent stripe rest api calls: url https://api.stripe.com/v/tokens sk_test_bqokikjvbiihlwgholfq card [number] ... card [exp_month] card [exp_year] ................ card [cvc] https://stripe.com/docs/api/curl#create_card_token url https://api.stripe.com/v/tokens sk_test_bqokikjvbiihlwgholfq description "customer for anthony.white@example.com" ... ......... source= tok_gkezvkylocleblka https://stripe.com/docs/api/curl#create_customer the stripe api simple, elegant, and easy use. stripe leveraged the complicated payment developer infrastructure turn its developer-first, easy use api into company that has raised more than million and valued over billion today. mobius solving the same problem, except for the emerging blockchain economy. apple and google app store fees and credit card fees will take meaningful percent this revenue creating significant deadweight loss. mobius will make easy for developers transition the decentralized lower cost blockchain economy. mobius fees are over cheaper than existing centralized payment solutions. the mobius api provides universal interface accept any blockchain token. this analogous how stripe provides universal interface accept different credit cards such visa, mastercard, discover, and american express. currently, very complicated accept, manage, and secure tokens. for example, video game developer creates ethereum erc token that acts their in-game credits, complicated move tokens between the ethereum network and their backend accounting system. current token developer process: run full ethereum node create unique ethereum address for each user monitor every user ethereum address for incoming token transactions secure the private keys manage token accounting their backend the mobius api simplifies all this providing modern easy use rest api that returns json and uses secure webhooks alert developers incoming token transfers.the mobius api already works with any erc token such golem, augur, iconomi, bancor, storj, status, and credo. grow, will keep expanding the api support other blockchains and tokens besides ethereum erc. universal token login protocol tokens can used represent membership service and can used login mechanism. any service that uses tokens login mechanism will have similar technical infrastructure needs analogous token payment infrastructure. mobius provides simple rest api that abstracts low-level blockchain development required verify token ownership time login and facilitate verified login. using token represent subscription provides several benefits including increased anonymity, lower transaction fees, and the potential for independent secondary market develop providing greater value for subscribers and incentive for early subscription membership purchase. the secondary market will allow people anonymously buy and sell their membership without ever transacting over centralized financial institutions such credit cards, debit cards, bank accounts allowing for complete anonymity, assuming usage anonymous protocol tokens like zcash, monero, pivx. multiple tiers membership can also represented through tokens requiring different number tokens access different levels. for example, basic membership might only require one token login while the plus membership might require five tokens login. universal governance protocol many organizations that create token and plan use for platform governance will have similar use cases. for example, wikipedia and reddit each create token they are likely have similar governance and proof stake platform integration needs. the governance side, both organizations may allow token holders vote proposals that dictate how the communities develop. the platform integration side, both may require advanced users such editors moderators have some vested tokens stake reduce spam and harmful community behavior. both organizations may also want reward community members that improve the community and add value. these similar use cases can abstracted much web frameworks and databases, the building blocks web applications, have been abstracted. the vast majority developers not create their own web framework such ruby rails their own database server such postgresql. instead they use one the existing web frameworks database servers save time. blockchain based governance will follow the same model and offered developers mobius via standard protocols and apis that they can use facilitate token based voting and vested at-stake micro-actions that result token rewards penalties based community feedback. decentralized app economy one the biggest problems hindering mass adoption dapps and cryptocurrencies fiat replacement consumer discovery and adoption. currently, there widely used dapp store. mobius creating universal dapp store that will similar the apple app store and google play store. any app that accepts the mobius token will listed the dapp store. the dapp store will also integrate the mobius token for universal decentralized credit system that has significantly lower fees than the apple app store google play store. the dapp store fee will only .%. the fee only charged tokens are used through the dapp store credit system the developer uses the api receive tokens there only fee. these numbers are subject change overtime and the goal gradually decrease fees even more network adoption continues expand. dapps will incentivized accept the mobius token the dapp store because the network effects the dapp store and mobius token. the mobius token will experience similar network effects the internet which the token becomes more valuable more people use it. this parallel developer having its own token primarily for governance reasons. developer that has its own token will still want accept the easiest use and cheapest form payment from transient users they are not turned away. simultaneously, developer with its own token will want limit governance and at-stake based micro-actions users with vested stake their community and platform. the dapp store and mobius network provide platform easily support both use cases. mobi commerce network effects the past two decades, the developed world's economic vitality became progressively dependent widespread internet accessibility. likewise, blockchain adoption will prove equally indispensable nation's gdp: transforming centralized systems and inefficient legacy processes into more trustless, decentralized, vending-machine like transactions. well defined smart contracts public blockchains have the potential turn noisy big data into value-added insights via prediction markets, create immutable public records, power decisions autonomous agents, and much more the years ahead. the dapps tomorrow will differ substantially from today's apps, reflecting the coming wave decentralization the app economy. existing apps will need find easy way connect the blockchain ecosystem. our thesis that blockchain "content" the form apps will only come fruition the best developers are given economic incentive advance mass market adoption end users. such option only accessible major enterprises with significant funding. notable example paypal's referral program, which resulted daily growth the early the program had initial cac $., which triggered network effects since offered free money new users and their referrals. winner-takes-all marketplace, the dapp store requires similar strategy seed content and increase adoption; more dapps stimulates adoption, increasing the economic incentive create and deploy new dapp content and closing the feedback loop. there classic chicken and egg problem for marketplaces: for the dapp store, developers are more inclined add content only when users are present, and users will adopt such content depending its availability, unique value, and stickiness. result, developers are incentivised add content the platform, then early adopting end users will gradually adopt the platform well. persuade one group early adopting developers enlist advance strong market penetration, will offer economic incentive giving them mobius tokens seed initial growth the short intermediate term. this akin paypal's referral program strategy user acquisition and growth, which will drive positive feedback loop engagement and bolster network effects. growth with two sided network effects based the lotka volterra population equations can model the dynamics underlying the mobius token and the dapp store follows: dx/dt bxy dy/dt dxy where: the number market participants the dapp store, which represents the demand consumer side the number developers the dapp store represents time dx/dt the growth rate market participants with respect time dy/dt the growth rate developers with respect time are positive real parameters that describe the interactions the developers and market participants. essentially, the rate change market participants dependant number current market participants and number developers, similarly this true for developers. this leads virtuous cycle. more market participants start using the dapp, more developers are encouraged participate. this further incentivizes new market participants start using the dapp store. token buyers join the platform, resulting more demand side users. this encourages sellers (developers with dapps) participate (increases supply side users). result, this event encourages more buyers join (more demand side users), which brings more and better sellers the table (more supply side users). repeat loop. network effects the market participants let assume that fraction the potential population already using the dapp store. any individual pays price, measured units mobi, become market participant the dapp store. each individual will have maximum limit the price they are willing pay participate. call this the reserve price which measured mobi. the reserve price may represented follows: reserve price g(x)f (z) where: (x) before the desire some person becoming market participant (z) the measure the benefit that each new market participant derives from having fraction the total population already being market participants (z) increasing function terms tells how much more valuable the dapp store when more people are using it. (x)f (z) comes from the lotka volterra population equations. for the reserve price, the term (x)f (z) represents the fact that market participants who derive larger benefit, benefit more from increase the fraction the population becoming market participants than those market participants that have smaller values. elucidated the virtuous cycle, not only does the number market participants and developers increase, but the quality increases, too. that is, the market participants will spend more mobi and developers who list better quality apps. equilibria with network effects bb/c adoption dapp store individuals derive shared expectation that the fraction population that are market participants and each these individuals then makes decision become market participants purchasing mobi based the above expectation, then the fraction people who actually end purchasing mobi this the self-fulfilling expectations equilibrium for the quantity purchasers the community expects that percentage the population potential consumers will become market participants the dapp store and spend buy mobius, then this expectation turn fulfilled their behavior. network effects consumer adoption the dapp store ecosystem where the cost mobius that the individual must pay. hence, anyone wants participate, the set then replacing with its logarithmic value and distributing rewards proportionally. the goal optimize the incentivization structure for many developers make many quality apps possible; middle-ranks should get higher reward comparison what the zipfian power law distribution would recommend. essentially, the black curve describes original distribution reward, then the final distribution represented the red curve. the area under the curve represents total reward amount. universal proof stake oracle protocol blockchains exist the digital world and only have access data that fed into them. the blockchain ecosystem, oracles are specialized applications that provide access external data, essentially feeding the blockchain with information, which consumed well-defined smart contracts. oracles can set tunnels for data streams from any viable source, ranging from the bloomberg price feeds internet things (iot) devices. smart contracts are built consume information from oracles. smart contracts are designed triggered events, which are reported them oracles, performing pre-programmed tasks based data inputs. thus, one the primary tasks oracle provide information smart contracts. oracle data can consumed end users apart from smart contracts. most importantly, data provided any oracle must trustworthy, meaning that smart contracts must able trust the reliability the data source before executing. the blockchain world transaction rollbacks are not possible, and yet, the central issue data reliability not dealt with adequately the moment. furthermore, currently there standard secure oracle protocol that allows oracles operate cross-blockchain and feed their valuable data into multiple blockchain systems. mobius solves these fundamental architectural weaknesses creating standardized proof stake based protocol that enables developers easily create oracles that securely input data into the blockchain ecosystem, particularly into smart contracts. proof stake protocol used incentivise oracles provide correct data and penalize oracles that provide incorrect data. the mobius universal proof stake oracle protocol (psop) will require oracles vest and stake mobi before inputting data into the blockchain ecosystem. oracles that provide incorrect data will penalized, losing their vested mobi while oracles that provide correct data will compensated with mobi data consumers. any oracles found providing incorrect data will lose some portion their vested and staked mobi. market designs that incentivize authentication, validation, and ultimately successful aggregation information will implemented part the proof stake protocol. the broad adoption and deployment oracles will create additional blockchain monetization method through oracle devices. oracle pools analogous mining pools will also develop. these pools, people all around the world will combine their oracles provide more data the blockchain ecosystem and better monetize it. for example, farmers yuanyang county, yunnan, china could purchase and install temperature sensor oracles provide distributed and verified temperature data the blockchain ecosystem. the temperature readings will receive score based the number oracles that agree the reading. when the temperature data purchased through open marketplace the providers and verifiers the data will receive mobi compensation. any farmer providing single point temperature data may rarely compensated for their data they provide alone because much like successfully mining bitcoin, rare someone will want specific temperature data point. however, temperature oracle pool with world wide temperature coverage will become the standard temperature provider, thus even those that provide rarely used data can compensated based how they help complete the dataset instead just providing single datapoint. the market for lemons: quality uncertainty oracle data quality difficult ascertain due information asymmetry then lower quality oracles will seek masquerade higher quality oracles. smart contracts will take this adverse incentive into consideration and assume that the quality oracles whole uncertain. smart contracts would then only pay mobi considering the overall average quality oracles. thus case the market fails distinguish between higher and lower quality oracles, then this leads the higher quality oracles being underpaid and driven out the market. overcome this issue will have segmented markets where only oracles above predefined quality threshold would allowed participate. smart contracts had the ability tell wheat from chaff, then fair payment terms mobius could achieved. segmented markets for higher and lower quality data would naturally come into existence. smart contracts can not tell the quality differences, then single market would form where the smart contracts would willing pay only average prices. one way overcome quality issues devise rating mechanism like quality score. the forward auction, the smart contracts would provided with quality rating based the oracles past performance and mobius staked. quality scores are aggregated based past performance, staking mobi, and proof verification will design proof verification protocol allow audits oracles. prequalifying oracle's entry into the market helps set segmented market for oracle data. high fidelity oracles would participate separate market from low fidelity newly minted oracles. one format would run high fidelity auction where entry would require minimum quality score which could achieved from combination good past history and staking mobius. oracle and smart contract ecosystem software oracles provide access online data like oracle for trending twitter handles while hardware oracles provide access real world data like iot rfid data. further classification the direction the data flow with inbound oracles providing data the blockchain and outbound oracles providing data the real world from the blockchain. important subclass are the consensus oracles which the name suggests work consensus. with multiple oracles providing similar data, which may have reliability issues, consensus based rules are used parse and aggregate the data provided. for instance, multiple weather iot devices provide various humidity readings and consensus humidity reading calculated. consider game theoretic viewpoint: here are interested the private information that oracles hold and their actions self-interested rational agents while participating market sell their data. let .....n} denote list oracles mechanism for the sale data the blockchain. let vector the type profiles all the oracles. ......, includes type for each oracle. type represents all the value, information, beliefs, utility and preferences the oracle oracles with independent private values game theory parlance oracles whose valuations the data they supply only depends their own type and the types are statistically independent. further the valuations are privately held the oracles and not publicly known. they are not affected other competing oracles during participation the data smart market. this independence valuation leads strong dependence between the bids placed the reverse auction and the private valuations the oracle. oracles with interdependent values not know their own valuations themselves, they are prone mimic valuations competing oracles, more strongly the distribution types the oracles are statistically dependent. this leads weaker relationship between the bids placed and the actual valuations. oracles who want supply data may required sign contract with ancillary staker that verifies, validates, and authenticates the oracle's data and then stakes mobius behalf the oracle, participate the auction. case issues the data, the ancillary staker held responsible. concept ancillary stakers ancillary stakers are essentially kind smart contract with specialized role the proof stake oracle protocol. stakers are third parties: independent from the oracles, whose primary job validate oracle data and stake their own mobius and reputation the data, for which they can charge oracles percentage cut the proceeds from the sale the data. stakers are like reverse insurance agents. this the scenario where the oracle may not willing stake its own. some other situations and kinds smart contracts arise and are also part the proof stake oracle protocol. intermediary smart contracts who buy data from oracle(s), process and resell other smart contracts outbound oracles. this may take place under the intermediary's brand and represents kind white labeling. insurance smart contracts provide insurance other smart contracts with the underlying being the quality data they are buying. blockchain smart markets blockchain smart markets are auctions harnessing blockchain technology that clear periodically. transactions take place between distinct pools smart contracts other end users acting buyer and sellers rather than bilaterally. pools oracles may also participate but are restricted being sellers. decentralized smart contracts end users submit bids buy and offers sell data services commoditized manner. the whole process managed auction manager 'auctioneer'. clearing the market usually involves the auctioneer solving complex mathematical optimization problems with arbitrary constraints periodically maximize the gains from trade. smart markets are designed reduce transaction costs significantly and eliminate externalities while allowing for competition not possible more traditional settings. smart markets allow for coordination between diverse smart contracts other end users, which usually only possible under monopoly conditions. this coordination ability natural complement the blockchain world. the use cryptocurrencies and distributed ledgers allows for the implementation and operation complex smart markets with ever larger number participants. the time period smart markets the time between successive instances the market clearing. may range from few milliseconds few days. markets include one sided forward auctions (demand only), one sided reverse auctions (supply only) and two sided auctions with supply and demand components. currently, smart contracts are completely public and any data they consume becomes public. this precludes public blockchain smart contracts from participating blockchain data auctions requiring data kept private. private blockchain smart contracts with proprietary systems keep data private are the primary use case. the public blockchain, end users may consume data privately off chain. the actual transfer data ideally will take place through apps the dapp store. for example, autonomous car may buy contract for navigation data auction and consequent off-chain navigation alerts are obtained through app the dapp store. blockchain smart markets protocol mobius will implement the blockchain smart markets protocol, which will allow auctioneers, market designers and game theorist work in-sync with developers easily design and quickly deploy smart markets enable the trade commoditized data and services secure and transparent manner. smart market for the sale data will rely both the proof stake oracle protocol and the blockchain smart markets protocol. apart from the earlier discussed smart market for data, additional use cases for the blockchain smart markets protocol include smart market for decentralized cloud services including file storage and cloud computing. note that actual data may consumed real time, may stored off-blockchain, encrypted versions may stored the blockchain. this will depend the characteristics the data and the kind market functioning. since there are currently significant blockchain scaling issues, may not possible keep encrypted data the blockchain, and off chain solutions, hybrid solutions, will important. market design for proof stake oracle protocol background underlying theoretical construct: game theory game theory concerned with the mathematical modeling strategic behavior market participants under specified rules. the part economics concerned with the detailed rules and procedures economic institutions (like markets and auctions). auctions are games designed the auctioneer and played the bidders. given fixed rules study outcomes reverse game theory: market design economists not only analyze markets, but design engineer them. mechanism design, often called reverse game theory takes engineering viewpoint towards designing market that achieves desired objectives given strategic settings with rational players. engineering approach design markets towards desired objects strategic settings with rational players includes efficiency auction design, optimal and equilibrium bidding strategies, and revenue comparison. fairly accommodating all participants' needs critical. design market specify set rules govern the market given target objective design market achieve the predefined objective the standard decide goals need achieve and then design the market around it. stated market design goals seek design mechanism (i.e. market) for the trade exchange data using blockchain infrastructure, among oracles and end users. the exchange can facilitated smart contracts bidding agents for end users that consume the data. this market implemented using the proof stake oracle protocol and the blockchain smart markets protocol. noted elsewhere smart contracts may the end users private blockchains with proprietary methods that allow smart contracts consume data privately. public blockchains smart contracts are completely public and any data they consume becomes public, losing its value. public blockchains, end users would ideally consume the data privately off chain. this could implemented providing the data the winning user private blockchain off-chain. the purpose this section examine the market design that would support well functioning iot data marketplace using the blockchain ecosystem. per our market design methodology, first define the goals: facilitate efficient exchange information between oracles and end users through smart contracts minimize false, invalid data; only authentic and validated data exchanged simple understand and participate; transparent (or easy replicate outcomes) and with similar outcomes repeated trials all monetary transfers are settled mobius all data encrypted, added the blockchain kept off-blockchain and information exchange accomplished via the transfer encryption keys between oracles and end users incentivizes oracles get data; auctions are voluntary individually rational; bidders incentivized participate (participants are least better off taking part the auction) incentive-compatible: minimize strategic behavior, honesty the best dominant strategy for all participants; avoid windfalls for bidders and winner's curse problem simple understand and participate auction; transparent and easy replicate shapley-shubik core prices: prices are theoretically guaranteed close the actual optimum value the information (shapley shubik design implementation propose two sided auction determine prices with some contractual language that guarantees data authenticity. assuming that there are scaling issues, data supplied oracles would encrypted and added the blockchain. this would implemented using auction follows: note: this auction mechanism implemented public blockchain with data submitted private blockchain otherwise kept off-chain. conceptualization: data commodity from production view point, information data (like iot device data) 'produced' according predefined terms the auction contract. data integrity, authenticity and validity requirements are part the terms that govern the auction. this made available 'oracles', encrypted and added onto the blockchain. encryption keys are sold auction. rsa another form encryption used encrypt the data before added the blockchain. auction private and public key pair created. the public key declared and added the blockchain. oracles wanting take part the auction add data the blockchain and encrypt using the auctioneer's public key (in this case, the auctioneer the oracle). the winning bidders are then provided with private keys decrypt the data after the auction ends. this decryption takes place off chain keep the data private. any and all transfers part the auction are settled mobi. case the oracle sells multiple copies, then the data encrypted with the public key and the private key sold multiple times. encryption keys are transferred winning end users after payment mobi. the end users consume the data and have fixed time report any violations terms. oracles are paid after the expiry this time period. auction overall structure step forward auction incentive compatible direct mechanism for the sale information required and propose modified combinatorial vcg auction. the auction allows multiple keys for the same data set sold. bidders may bid additional amounts restrict sale additional keys step reverse auction run reverse auction (procurement auction) buy data from oracles. simultaneous descending (dutch) auction used select oracles which would selling the data end users. reserve price (opening price case the dutch auction) set according the closing price the forward auction plus markup. the initial price (or the effective reserve price) the clearing price the forward auction plus markup. step clearing price combine bids the reverse and forward auction determine how many and which combination keys sell. the forward auction encryption keys would sold forward auction using modified combinatorial auction version the weighted vickrey-clarke-groves mechanism. discuss game theoretical set-up for vcg auction oracle data bidders including end users smart contracts (on private blockchains) below. given the following: consider list bidders participating auction data. let .....n} denote the bidders taking part the auction, with denoting the auction operator. the auction operator type smart contract combination distributed demand and supply side platform. let vector the type profiles all the bidders. ......, includes type for each bidder. type represents all the value, information, beliefs, utility and preferences the bidder possible outcomes are (x, b): let denote the set all possible decisions the auction. outcome the auction denoted (x, where ........., denotes vector positive negative payments between bidders including the auctioneer and measured mobius. every smart contract values the outcome the auction and denote bidder value (x, the value dependant the outcome the auction and the type the smart contract. furthermore, the utility that the bidder derives from auction is: ((x, m), (x, given the assumptions and denotations above, and based our stated market design goals, must achieve allocative efficiency. allocative efficiency denoted the decision achieved the auction decision maximizes the total value the allocation. argmax (x, furthermore, for budget balance, the auction should not produce net loss. the limiting condition this case is: therefore, the auctioneer denoted bidder solves the following optimization problem determine the outcome the auction along with the constraints above: (x, max (x, clearing price the case unlimited supply, the keys sell for zero under vcg conditions. furthermore, the vcg mechanism implies that every key simply sold for the amount the highest bid can restrict the number keys being auctioned less than the number bidders. the first key may actually very expensive produce but oracles can produce additional keys zero marginal cost, hence there effectively unlimited supply encryption keys. the oracles not have any supply restrictions other than those they voluntarily impose themselves restrictions imposed the auctioneer. the oracles and the auctioneer actually will have artificially reduce supply order increase revenues. given truthful valuation reporting mechanism optimal single price and optimal quantity encryption keys for clearing the auction with maximum revenue solved follows: let there smart contracts with values arranged ordered set such that: argmax the optimal singleton price the highest bid which the vcg mechanism the value the highest bidding smart contract. approximate auction the absence truthful ordering values very large number smart contracts can done randomly sampling valuations. the random sampling optimal price auction game may played follows: step randomly partition the smart contracts into two sets and such that each smart contract has probability being randomly assigned one the sets and step using the above procedure find payments the optimal singleton prices for each set. step clearing prices and allocations are calculated follows: smart contract wins single key and pays similarly, smart contract wins single key and pays random sampling optimal price auctions are dominant-strategy truthful weakly budget balanced and post individually rational minimum two keys are sold auction then can shown that this random sampling optimal price auction game xpected otal revenue smart markets use cases block button auction button auctions are those where the only options for the bidder decide when withdraw from the auction. the block button auction demand side forward auction when static oracle data supply available. smart contracts end users are the participants and are assisted demand side distributed platforms. all transactions are settled mobius and are settled the next block created the end the auction. the block button auction, any participating smart contract has one choice make, whether participate the next block drop out. once smart contract drops out there re-entry. the last smart contract remaining wins the auction. each round the bids and demand tuples change. the start, all interested bidders are participants and the oracle data price its reserve price mobius. after each new block created the price increments fixed amount mobius. bidder willing pay the current block price must keep participating, otherwise the smart contract drops out the auction. re-entry strictly prohibited. any block there only one smart contract remaining, then that smart contract the winner. the accounts are settled the next block created with the exchange private encryption keys for final display price mobius. suppose bidder has private value for the data. then its dominant strategy participate till the block price exceeds this leads incentive compatible truthful mechanism: bidders will act their private true value, regardless other participating bidders. equilibrium all bidders play their dominant strategies, the outcome is: the winning bidder the buyer with the highest valuation. the final block price the second highest bidder's valuation. simultaneous descending auction situations may arise where different bidders have differing preferences the packaging oracle data sets where auction requirements lead intractable constraints the auction optimization problem. such scenarios package auction may lead better results like more participants, higher revenues and more efficient allocations. real time intra-block bidding applications in: iot data marketplace demand supply side distributed platforms real-time block bidding the buying and selling oracle data through real-time auctions that occur the time takes new block added the blockchain. all transactions are settled mobi and must complete before the next block created. the system may actually run real time and independent the blockchain adding new blocks. those auctions are facilitated supply-side distributed platforms, which are designed assist oracles sell their data. here, the entire trade must take place within the time takes create new block. cloud services market apart from long term contracts, simple order matching market suffices for long term contracts. these may termed look ahead markets for web services the cloud including cloud based file storage. consider day ahead market. the following setup for generalized system trade cloud based web services over the blockchain. example, let consider market rent and host storage space for the next calendar day minute blocks. closed double-sided anonymous auction for each minute blocks for the following day. timeline term ahead market provides for trade storage minutes after settlement time. this carried out for each minute block the term ahead the day ahead market. buy side interested buyers specify requested durations, level data redundancy and maximum buying price. sell side sellers specify the time blocks, capacity tb, minimum price mobius and bandwidth charges. all sellers are required provide stakes collateral against defaulting their potential contracts. the stake sizes are fixed the auctioneer and pro-rated according tb. market clearing the end the current trade/call period, the bid and ask orders are accumulated determine market clearing price and market clearing volume. orders are matched after each call period. equilibrium clearing price calculated and all orders are settled this clearing price. development progress mobius was entirely self-funded prior the pre-sale. the first version the mobius universal blockchain payment protocol beta. you are interested using please email beta@mobius.network. .roadmap mobi allocation summary the mobi smart contract token generation mobi will created. the majority mobi will sold the public reserved for the community incentivize network growth and reward contributors.the remaining tokens will held the company. prior the token sale, mobi out the community portion will distributed dapp store apps. the distribution process will take place giving users that sign-up for the dapp store prior the token sale credits the dapp store than can deposited into apps. after the token sale, any credits that developer has earned through their apps will converted into mobi basis. this distribution will bootstrap the dapp store and drive submission apps into the dapp store prior the token sale, demonstrating the store's real-world value and use. mobius token distribution mobi will sold pre-sale discounted rate the token sale. mobi will sold the token sale. mobi will reserved for the community grow the network and reward contributors. mobi will reserved the company for growth and r&d. mobi token sale details the token sale scheduled for november th, interested purchasing ahead time please emails tokens@mobius.network. team founders david gobaud stanford university b.s. computer science harvard law school, j.d. past: co-founder, yoshi white house combinator resume cyrus khajvandi stanford university b.s. biological sciences, with honors past: co-founder ceo, incentru advisor credo bitbounce.io early adopter btc, eth/c nsf hhmi researcher monis rahman stanford, ph.d. computational mathematical engineering (on leave) auction market design, deep learning, big data past: cto, next percent stanford university school medicine, researcher immunology purdue, b.s. computer engineering advisors jed mccaleb jackson palmer co-founder stellar.org co-founder ripple creator edonkey creator dogecoin daniel cawrey co-founder ceo pactum capital supporting documents links important information website: https://mobius.network dapp store: https://mobius.network/store dev api docs: https://mobius.network/docs/ node sdk: https://www.npmjs.com/package/@mobius-network/mobius-node email: http://eepurl.com/cwcydr blog: https://medium.com/mobius-network github: https://github.com/mobius-network/ community twitter: https://twitter.com/mobius_network rocket chat: https://mobius.rocket.chat