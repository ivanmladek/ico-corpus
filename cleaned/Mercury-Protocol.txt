mercury protocol radical app international revised: abstract modern communication outdated. centralized communication platforms built private servers are only secure their weakest defense, user privacy habitually violated service providers sell behavioral data advertisers [], and content restricted single platform. aim fix these issues the communication industry with the mercury protocol, open source project for communication platforms reap the benefits decentralized blockchain technology minimal cost. any existing future communication platform that integrates the mercury protocol will theoretically able exchange content across previously isolated privatized applications, increase user privacy creating monetization strategies that not depend upon their behavioral data, leverage tokens encourage user participation, and provide stronger network security than private system that has single point failure. the first application implement this protocol dust, soon followed broadcast. believe that the mercury protocol can solve the pervasive issues the current communication industry, and will the future standard communication platforms. introduction built the dust application with the goal giving ownership the conversation back the user. unlike other platforms that store data hard disk, dust stores all messages in-memory (ram). this makes several orders magnitude more difficult for malicious party gain access any message data, and renders the data forensically unrecoverable from the platform's servers once deleted. result, dust provides users with private platform that designed safe from prying eyes. similarly, blockchain technology also gives back more power the end user the form transparent information, privacy, security, and utility. all data the blockchain stored decentralized manner that public, transparent and auditable. yet because user's real identity not associated with the blockchain address, users benefit from privacy through pseudonymity while still generating behavioral data for large scale analysis. moreover, the decentralized consensus mechanism inherent blockchains eliminates the possibility single point failure within the network and helps guarantee the validity the events that occur it. are taking advantage these highly advantageous characteristics the blockchain technology order improve the communication industry building the mercury protocol. the protocol implements various communication features and will utilize global messaging token, erc based token built the ethereum blockchain, drive these features. this token will encourage user participation platforms that integrate the mercury protocol, allowing users with gmt transact with mercury protocol services the blockchain. additionally, the mercury protocol will enable platform agnostic communication network, where user one messaging platform could more securely send message through the blockchain another messaging platform those platforms integrated the mercury protocol. the mercury protocol will first integrated into dust proof concept and shipped market end shortly after, will integrate the protocol into broadcast, new platform designed tackle the issues endemic social media, including harassment ("trolling") and echo chambers, among others. broadcast will released end once both apps are market with mercury protocol integration, will conclude any remaining security audits and open source the project that others can join the decentralization the communication industry. current messaging ecosystem the current communication platform model vogue has not significantly evolved since the advent the radio. service providers offer "free" services that aggregate user behavioral data and attention, which they turn sell advertisers for profit. this system creates strong incumbent bias, newer platforms with smaller user bases struggle survive. facebook and google collected american spending digital marketing, and nearly half all global spending []. this system not only consistently impacts user privacy, but also bears all the technical problems associated with centralized platforms, including "single point failure" security and trust-based services (e.g. there method for unbiased verification that private server actually sent your message, deleted post, etc). how the mercury protocol helps the mercury protocol will designed combat these problems. will inherit the benefits blockchain technology, including the improved network security, user privacy, and data transparency previously discussed. moreover, will integrate global messaging token, new ethereum blockchain token, that can also leveraged encourage positive user behavior, rewarding the timeliness, quality, reach communications, among others. the protocol and token combined will provide scalable solution for smaller platforms combat the incumbent bias contributing the industry oligarchy. additionally, the protocol will enable decentralized and platform agnostic communication. this means becomes possible send communications from one mercury protocol integrated platform another, thus expanding the ecosystem include all users across all mercury protocol integrated platforms, opposed single platform's users. the mercury protocol applicable all communication platforms, and can render these benefits for all types messaging service providers. need for global messaging token previously mentioned, the mercury protocol will integrate new blockchain token called "global messaging token." tokens built the blockchain can represent any digital asset. for example, tokens can used represent voting power organization, paid credits within application, and almost anything imaginable. see the invention such blockchain token opportunity change how communication done. more specifically, token can used utility metric for communication platform participation. the token would completely run the blockchain, and create system that enables the creation decentralized communication platforms that give more power the end user the form more transparent information, privacy, security, and utility. user generates content value (as determined any given platform), they could awarded tokens that can exchanged for premium services within the platform. this access more services can leveraged encourage users participate the platform. this the core idea behind the global messaging token. while would possible use existing token like bitcoin ether into the mercury protocol, existing tokens are valued against their parent blockchains fluctuating value. this fluctuation can cause problems when trying balance platform's ecosystem. for example, user spends one bitcoin send premium message, and the value bitcoin spikes for reason unrelated the messaging platform, could argued that the user losing out that increase value. creating new global messaging token (gmt) that valued the utility mercury protocol integrated apps, the token more directly tied the applications it's built into. this stability makes possible properly calibrate the token cost platform's premium services, and consistently promote positive network behavior. our hope that more platforms recognize the benefits the mercury protocol and adopt it, the token will increasingly gain utility beyond the initial use cases outlined further down this whitepaper. overview the technology global messaging token "global messaging token" "gmt" erc standard token that built the ethereum blockchain. dust the first application use this token, followed the broadcast application. for more details the token, please refer section verview global messaging token why ethereum ethereum was designed with the explicit goal doing more than just creating and recording transfers blockchain network's native tokens. instead, can thought generalized blockchain technology with built-in turing-complete programming language. the language enables anyone write programs with custom transaction formats and state transition functions, essentially specifying whichever rules they want that can then uploaded the blockchain, and the blockchain will automatically interpret the rules for them. figure ethereum simply transaction-based state machine: begin with "genesis state" and incrementally execute transactions transform into some final state the generalized technology has enabled what are known "smart contracts", which are computer programs that directly control digital assets (e.g. tokens, domain names, ids, etc) and can used encode protocols the blockchain. contracts have their own addresses and own digital assets. contract that owns digital assets can only send the asset another party via the rules defined the contract's code, and this transfer digital assets visible every party the network. figure smart contract distributed contract that represented code that intended facilitate, verify, enforce the negotiation performance the contract. ethereum, smart contracts can accept and store ether and data, and can send that ether other accounts even other smart contracts. smart contracts can serve many different functions because they can encode and enforce complex issuance rules and automated incentive structures for cryptocurrencies, digital financial contracts, escrows, multi-party protocols (e.g. auctions), and more. result, using smart contracts the ethereum blockchain currently the industry standard for issuing custom digital assets. the advanced features and active ecosystem ethereum make natural fit for gmt and the mercury protocol. state channels the number transactions the ethereum network growing significant pace-- daily transactions increased from from [], which represents year-over-year growth. the daily transaction volume currently between and ethereum adoption grows, the transaction volume will continue grow. however, because the ethereum blockchain decentralized network that replicated every node, poses scalability problem. the blockchain replicated every node the network, which means every single node the network processes every transaction and maintains the entire state. while this offers strong benefits such auditability, fault tolerance, authenticity and political neutrality, limits the throughput transactions that can occur the network. under perfectly contrived conditions, ethereum's theoretical transaction processing capacity over transactions per second. however, due ethereum network's block gas limit, more realistic limit transactions per second for simple transactions, and transactions per second for complex ones []. the current throughput ethereum's network transactions per second, approximately transactions daily []. this leads three potential issues: the dust application acquires more users and adds more uses cases for the global messaging token, the number transactions will grow rapidly, which would lead severe scaling challenges the user experience would suffer because long transaction confirmation times would affect the responsiveness the dust app on-chain transactions, regardless size, are required pay fee. this likely cause users refrain from freely using global messaging tokens for large numbers micropayments, which would hinder the growth token usage the platform although the long term goal for ethereum and for the protocol able maintain blockchain capable processing visa-scale transaction levels via mechanisms such code pre-processing using precompiled contracts and webassembly [], blockchain sharding, and/or new initiatives such plasma.io, the mercury protocol will need use interim solution for scalable interactions with the gmt tokens: state channels state channels are essentially mechanism which blockchain interactions which could and would normally occur the blockchain instead get conducted off the blockchain, without significantly increasing the risk any participant while providing significant improvements cost and speed. state channels will critical part scaling blockchain technologies support higher levels use. they can applied payments, smart contracts, and many other scenarios. state channel designed implemented follows []: part the blockchain state locked via multi-signature some sort smart contract, where the only way update specific set participants agree completely participants make updates amongst themselves constructing and cryptographically signing transactions without submitting the blockchain. each new update overrides previous updates some later point, participants submit the state back the blockchain, which closes the state channel and unlocks the state again steps and involve blockchain operations which are published the network, pay fees and wait for confirmations. however, step does not involve the blockchain all. can contain unlimited number updates and can remain open indefinitely. this sense, the blockchain used purely settlement layer process the final transaction series interactions for the final settlement. ethereum enables easily encode the above mechanism into smart contract. figure any point during the process, any participant can send transaction into the contract close the channel and start settlement procedure. this starts time limit within which participants can submit transactions, and the transaction with the highest sequence number processed. one the participants leaves tries cheat, another one can any time publish the latest transaction the blockchain finalize the state, assuming all the participants completely agree the state. this regard, state channels enable any number transactions processed instantly without facing the throughput limitations explained above. also has potential reduce high per transaction fees for handling large numbers small digital transactions (i.e. micropayments) []. oracles smart contracts are like walled gardens that they cannot communicate with the external world. other words, smart contracts are unable fetch data from external apis and data sources, and are restricted the state maintained the blockchain. however, the mercury protocol will implement many features which will require the protocol communicate with the external world; for example, fetch content from external cdn that then needs served set end users, verify that piece content has been accepted and viewed user within application. facilitate such communication, will use oracles. the blockchain space, oracle party which relays information between smart contracts and external data sources. while plan integrate oracles into the protocol the future, the specific implementation yet determined. will publish the mercury protocol technical whitepaper that further delves into the underlying technical architecture, well detailed description features and functionality provided the protocol. use cases for global messaging token token flow mercury protocol integrated platforms will able integrate global messaging tokens (gmt) into their ecosystem. users can earn gmt performing platform specific incentivized actions (e.g., consuming posts day, reading message within seconds, etc), and then use these earned tokens receive premium services the platform. the app will keep small amount tokens payment for services rendered, and allocate the rest award users performing specific actions that add value the platform (e.g., generating content, achieving subscribers, etc). exchange gmt for services historically, there have been three main forms communication: -to-: "an exchange" back and forth dialogue between two parties, such written letters, traditional phone calls, one-on-one text messaging. -to-many: "an announcement" one directional broadcast, such radio, television, public speech. many-to-many: discussion" collection individual people entities, such town hall meeting, live digital chatroom, cocktail party. global messaging tokens can used obtain access numerous services all three types, and across variety platform types. whenever users use gmt obtain service, the majority gmt paid will the platform rendering service. for example, dust currently envisions many possible services for users utilize exchange for gmt, including but not limited to: the -to- private messenger portion dust extending the lifetime duration message beyond the standard twenty-four hours. allowing users send larger message payloads such .pdf, .mov, etc. sending special types messages, such "urgent" type that can repeatedly notify the recipient until answered. sending messages mercury protocol integrated platform outside the dust app. the -to-many "blast" portion dust increase in-app reach sending blast specified number users who not follow the content creator. send blast the followers specific account order target existing social group demographic. beyond the two forms communications within dust, there are several app-specific features plan implement enable further use gmt: featuring users the front page the discover tab help increase their following. third party apps trade gmt embed dust messenger client into their platform. receive gmt incentivize participation important note that gmt designed and intended obtained primarily from service provider when user performs one more various incentivized actions. when platform given gmt provide service, portion the gmt should allocated incentivize user behavior. given ecosystem might award gmt users for participating the following ways: the role content creator: generating quality content, determined content consumer feedback platform creating content often and/or consistently the role content consumer: generating de-identified behavioral data giving attention determining platform content quality providing feedback responding within certain timeframe notifications messages sharing/"reposting" content other possible incentivized actions: consistent logins rewarding users for inviting friends the platform. giving attention premium distributed content (ads) achieving milestones within the platform (e.g., number subscribers, messages sent, etc.) this incentive system allows users generate positive token balance simply being active the platform, and thus grant access the premium experience without having acquire resources from outside the ecosystem. while not all these gmt based features are guaranteed the first version dust available after the token sale, many will be, and will continuously working add more gmt integrated features both dust and broadcast. will communicate the progress make integrating these and new use cases via our blog. use cases the industry large beyond the above example use cases specific dust, there are many other ways integrate global messaging token. the -to- communication format, for example, encryption, archiving/storage, sending message user different mercury protocol integrated messaging platform. receiving premium message from user not user's contact book friends list could award gmt exchange for their attention. the -to-many broadcasting type communication, some premium use cases might include sending content other users who are not subscribed content creator scheduling the release content for later time date. positive feedback content (likes, comments, etc.) could award gmt user reward for quality content, promoting positive engagement between content creators and consumers. the higher the content quality, the more enjoyment consumers experience and the more gmt the creator receives. the more chaotic many-to-many open forum discussion type communication, use case could using gmt obtain the attention the collective, whether the form speaking time before audience visual flair real-time chatroom. another use case might paying gmt premium join shorter queue deliver one's message. the case chatroom where premium users are using gmt speak message without waiting queue, non-premium users should receive that gmt for having their queue time extended. each the communication types, gmt can leveraged encourage positive behavior the ecosystem for both content creators and consumers. additionally, providing opportunities obtain gmt through common participation within the ecosystem, any given communication platform can allow less affluent users partake the same premium environment the established users. when properly balanced, this system theoretically self-correcting, users who negatively contribute the platform (a.k.a. "trolls") will have significantly less access premium services. roadmap phase dust will build version the mercury protocol, conduct the token sale, and integrate gmt into dust. the mercury protocol will remain closed-source this stage. security audits for the protocol and token smart contracts will conducted before and after shipping gmt integrated product. some finances from the token sale will used expand the development team and increase throughput feature development move forward. phase broadcast the next step completing version broadcast and shipping market. the project currently pre-alpha, and are target have first version market end year. addition, will drive further development the mercury protocol and use cases for gmt within dust. phase beyond the platforms and later) once dust and broadcast are both market with gmt integrated features, will open source the mercury protocol. will continue the development value added services for dust and broadcast. security audits will conducted on-going manner more features and functionality added the protocol. throughout the above three phases, will continue evangelize the protocol and token model pursuit new global standard messaging ecosystem that designed decentralized, more secure, and auditable. adoption dust currently in-market, averaging least daily active users and over messages sent per day. the existing user base has proven loyal and consistently active, making dust ideal platform demonstrate the versatile potential global messaging token. moreover, having dust in-market with patent pending the in-memory solution demonstrates our team's ability tackle complex technical problems and deliver market-ready product. expect see the number daily active users and average actions per day rise significantly the near future. gain knowledge about the gmt integrated features dust, will look continue expand use cases both dust and broadcast. similar products decentralized token system status wechat toshi market participation incentive open source protocol strong focus privacy messenger signal dust broadcast status status decentralized messenger and browser that implements token based ethereum. the platform also contains dapp ecosystem, allowing developers publish their own ethereum based apps. this ambitious platform currently alpha, however, and their official roadmap shows intention hitting market until the earliest. wechat wechat the dominant communication platform china, providing services for everything from private messaging, publically sharing "moments" similar social media post, and even allowing users send money via smart-contract-esque microtransactions. while wechat provides similar features those proposed this paper, centralized, non-blockchain based system, which means has increased security risks and fails incentivize end-users participate. toshi toshi decentralized mobile app for ethereum apps with integrated private messaging and ethereum wallet. inspired wechat designed with the intention providing secure financial services everyone who has smartphone. toshi does not incentivize users participate. moreover, since the platform ether based, any future implementation user incentivization would either produce inconsistent incentives due ether market volatility, require significant resources transition token based system. messenger facebook messenger primarily private messenger, with the ability send multimedia messages, stickers, make video audio calls via internet, and recently added the ability send money. while high quality, established, and stable, messenger the epitome centralized communication platform. facebook rakes over billion usd annually [], most through advertising, and fails reward its users who generated providing their attention. this non-blockchain based platform has increased security risk for users relying the defenses single party, does not open source code for integration opportunities peer review, and routes financial transactions through centralized third-party that lacks the transparency and trustless consensus provided decentralization. signal signal private communication platform featuring end-to-end encrypted messaging, voip, and video calling built with the intention "dismantling the surveillance states globally" []. the underlying open-source signal protocol that encrypts communications widely considered one the more secure methods communication, ensuring message integrity and attribution. this protocol has been integrated into other major messaging platforms such whatsapp and messenger. signal funded through public grants and donations, does not conform the previously discussed advertising model. but signal decidedly centralized [], and, unlike dust, stores record messages exchanged. this puts conversation history risk malicious party manages copy the data and brute force crack their leisure. even third party cannot gain access the content the messages, still recorded that conversation occurred between two more parties. moreover, signal does not incentivize user participation, and lacks auditable token system. overview global messaging token the token sold during the token launch known the global messaging token, gmt. his token designed for various utilities messaging apps designed compatible with the mercury protocol. dust app the first app that proposed use this token, followed the broadcast app. erc token the gmt token implemented the public ethereum blockchain (using ethereum smart contract) erc token []. erc establishes standard contract abi for tokens the ethereum blockchain and has become the facto representation for all types digital assets. all erc tokens share the same core contract interface, simplifying integration with external contracts. core erc functions include: transfer(to, value) balanceof(owner) approve(spender, value) allowance(owner, spender) transferfrom(from, to, value) addition the core erc interface, the gmt token smart contract will have additional functionality create new gmt tokens, finalize the crowdsale and send money hardware wallet, and refund users the case failed crowdsale. the erc token smart contract written the solidity programming language and will publicly accessible and free use. hardware wallet both eth and gmt tokens available for sale will stored hardware wallets. hardware wallet another form cold storage which allows digital assets stored offline. they provide increased security because they remove the process having load the private key some software which exposed online vulnerabilities. hardware wallets have two parts connected device and disconnected device. the connected device stores the public keys, chooses which transactions sign, and essentially has the same functionality any paper wallet. the one main difference that cannot sign transaction because the offline device holds the private key. when you want sign transaction, you must connect the device via usb port qr-code. the transaction then sent the offline device, which then generates signed transaction using the private key stored the device and sends back the connected device, which finally fed into the blockchain network for the standard bitcoin/ethereum verification process required for included the blockchain. our hardware wallets will have backup keys split and distributed geographically. feel this ill provide the utmost safety guarantee against security attacks. liquidation gmt tokens that are purchased the public will delivered soon eth received. the gmt tokens will immediately usable after the token sale soon the relevant dust integrations are publically released. security the dust team takes security seriously and will take security precautions designed safeguard the funds. intend only launch the crowdsale once are assured that all security measures have been completed. this includes: thorough security audit open zeppelin for all smart contracts used for the crowdsale all gmt tokens stored will stored offline hardware wallets majority the reserve funds will also stored offline within hardware wallets the keys for hardware wallets will geographically distributed the future, plan launch bug bounty program for all smart contracts develop the smart contracts for gmt token sale are currently under review open zeppelin. once completed, the review will publicly available our blog. will address any and all severe critical vulnerabilities suggested open zeppelin the final implementation the smart contracts. the final implementation and code for the smart contracts will released publicly prior the token launch. governance the near future, will define and develop governance model around gmt such that participants who have certain amount stake the overall ecosystem will have voting power participate the decisions made around future innovation the mercury protocol, and defining community standards for platforms who integrate gmt, among other topics. will initially manage the protocol codebase until such time the governance model has been properly established. will distribute whitepaper that includes more detailed explanation the proposed governance model after the token sale. team core team ryan ozonian, chief executive officer rohit kotian chief technology officer igor shpitalnik lead backend engineer ian connelly project manager preethi kasireddy lead blockchain developer alex moir blockchain developer elliot sperling blockchain developer sameer khavanekar, ios team lead manju deshpande ios developer alex rupprecht android team lead brant kortman android developer evan albert lead web developer mayukh das software developer michael talarczyk lead systems engineer jon ikemura lead designer advisors mark cuban, dust investor, dallas mavericks nick tomaino, confirmation, previously coinbase, the control, runa capital references https://etherscan.io/chart/blocktime https://etherscan.io/chart/tx http://static.squarespace.com/static/febcfccbcf/t/fdaffbdecbc/ /ethereum_paper.pdf https://ethereum.stackexchange.com/questions//how-many-transactions-can-the-networkhandle jeff coleman. state channels. http://www.jeffcoleman.ca/state-channels/ erc the ethereum token standard. https://github.com/ethereum/eips/issues/ https://media.consensys.net/state-channels-ethereum-is-open-for-business-bcddc https://www.wsj.com/articles/the-race-is-on-to-challenge-google-facebook-duopoly-in-digital-adv ertising- https://investor.fb.com/investor-news/press-release-details//facebook-reports-fourth-quart er-and-full-year--results/default.aspx http://www.investopedia.com/ask/answers//how-does-facebook-fb-make-money.asp https://www.usatoday.com/story/tech/personal////techlicious-text-message-alternatives ttps://www.wired.com///time-to-ditch-texting/ https://www.emarketer.com/article/us-ad-blocking-jump-by-double-digits-this-year/ https://techcrunch.com////signal-app-maker-rebuts-criticism-of-dev-direction-by-callingfor-more-community-help/ https://hackernoon.com/blockchains-dont-scale-not-today-at-least-but-there-s-hope-cb