aryacoin peer-to-peer electronic cash system sales@aryacoin.io mrdigicoin.io aryacoin.io abstract purely peer-to-peer version electronic cash would allow payments sent and received directly from one party another allowing parties transfer funds across countries without any restrictions digital signatures prevent double spending low transfer fees allows moving huge amounts with very less fees. proof work allows each transaction verified and confirmed anonymity allows users use the coin anywhere and anytime introduction when bitcoin was launched was revolutionary allowing people transfer money anytime and anywhere with very low transaction fees was decentralized and their third party involved the transaction only the sender and receiver were involved. transactions that are computationally impractical reverse would protect sellers from fraud, and routine escrow mechanisms could easily implemented protect buyers. this paper, propose solution the double-spending problem using peer-to-peer distributed timestamp server generate computational proof the chronological order transactions. the system secure long honest nodes collectively control more cpu power than any cooperating group attacker nodes bitcoin was made that would not controlled regulated but now exchanges and governments are regulating bitcoin and other cryptocurrencies every step. aryacoin was developed overcome these restrictions free currency. restrictions the coin lot similar bitcoin and litecoin except the usage the real world and how will traded and exchanged the users the user's can buy/sell the coin without restrictions and without verifications there would sales platforms that will setup locations where people can just and trade the coins without restriction this enables the coin truly anonymous and gives usage real life transactions define electronic coin chain digital signatures. each owner transfers the coin the next digitally signing hash the previous transaction and the public key the next owner and adding these the end the coin. payee can verify the signatures verify the chain ownership. the problem course the payee can't verify that one the owners did not double-spend the coin. common solution introduce trusted central authority, mint, that checks every transaction for double spending. after each transaction, the coin must returned the mint issue new coin, and only coins issued directly from the mint are trusted not double-spent. the problem with this solution that the fate the entire money system depends the company running the mint, with every transaction having through them, just like bank. need way for the payee know that the previous owners did not sign any earlier transactions. for our purposes, the earliest transaction the one that counts, don't care about later attempts double-spend. the only way confirm the absence transaction aware all transactions. the mint based model, the mint was aware all transactions and decided which arrived first. accomplish this without trusted party, transactions must publicly announced [], and need system for participants agree single history the order which they were received. the payee needs proof that the time each transaction, the majority nodes agreed was the first received. timestamp server the solution propose begins with timestamp server. timestamp server works taking hash block items timestamped and widely publishing the hash, such newspaper usenet post [-]. the timestamp proves that the data must have existed the time, obviously, order get into the hash. each timestamp includes the previous timestamp its hash, forming chain, with each additional timestamp reinforcing the ones before it. proof-of-work implement distributed timestamp server peer-to-peer basis, will need use proof- of-work system similar adam back's hashcash [], rather than newspaper usenet posts. the proof-of-work involves scanning for value that when hashed, such with sha-, the hash begins with number zero bits. the average work required exponential the number zero bits required and can verified executing single hash. for our timestamp network, implement the proof-of-work incrementing nonce the block until value found that gives the block's hash the required zero bits. once the cpu effort has been expended make satisfy the proof-of-work, the block cannot changed without redoing the work. later blocks are chained after it, the work change the block would include redoing all the blocks after it. the proof-of-work also solves the problem determining representation majority decision making. the majority were based one-ip-address-one-vote, could subverted anyone able allocate many ips. proof-of-work essentially one-cpu-one-vote. the majority decision represented the longest chain, which has the greatest proof-of-work effort invested it. majority cpu power controlled honest nodes, the honest chain will grow the fastest and outpace any competing chains. modify past block, attacker would have redo the proof-of-work the block and all blocks after and then catch with and surpass the work the honest nodes. will show later that the probability slower attacker catching diminishes exponentially subsequent blocks are added. compensate for increasing hardware speed and varying interest running nodes over time, the proof-of-work difficulty determined moving average targeting average number blocks per hour. they're generated too fast, the difficulty increases. network the steps run the network are follows: new transactions are broadcast all nodes. each node collects new transactions into block. each node works finding difficult proof-of-work for its block. when node finds proof-of-work, broadcasts the block all nodes. nodes accept the block only all transactions are valid and not already spent. incentive convention, the first transaction block special transaction that starts new coin owned the creator the block. this adds incentive for nodes support the network, and provides way initially distribute coins into circulation, since there central authority issue them. the steady addition constant amount new coins analogous gold miners expending resources add gold circulation. our case, cpu time and electricity that expended. the incentive can also funded with transaction fees. the output value transaction less than its input value, the difference transaction fee that added the incentive value the block containing the transaction. once predetermined number coins have entered circulation, the incentive can transition entirely transaction fees and completely inflation free.the incentive may help encourage nodes stay honest. greedy attacker able assemble more cpu power than all the honest nodes would have choose between using defraud people stealing back his payments, using generate new coins. ought find more profitable play the rules, such rules that favour him with more new coins than everyone else combined, than undermine the system and the validity his own wealth. anonymity the coin provides decent level anonymity for all its users. the users can send their transactions any the public nodes broadcasted the transaction sent the nodes should signed the private key the sender address this allows the users use the coin anywhere any time sending transactions directly the node allows users from any place and country real life usage our team continuously developing new and innovative ways use the coins are currently developing exchanges where the users can exchange the coins without any fees and any restrictions the coins can also used our other platform mrdigicoin.io along with the exchange are currently developing other innovative technologies which would allow users spend our coins everywhere and anywhere offline exchanges are also working with different offline vendors which would enable buy and sell the coins directly our users fixed/variable price this would allow easy buy/sell directly using cash this would allow the coins accessible users without any restrictions which most the online exchanges have also increase the value and number users along with new ways spend the coin. this would increase anonymity level the coin and introduce new users into the cryptomarket and technology creating revolution which educates people about crypto and introduce them the crypto world which introduces whole new group people into crypto and move towards decentralized future! transactions transactions working close the transactions bitcoin transaction divided into inputs and outputs transaction can most contains outputs most one for payment and one return change the number inputs could more could one input with large value could many small inputs with small amounts. transactions can signed and sent directly the nodes keep anonymity and privacy transactions allow transferring huge amounts with very low fees and low difficulty allows faster confirmations. conclusion aryacoin coin which can used anyone looking use cryptocurrency which allows them keep their privacy even when buying/selling the coin along with while using the coin during transactions proof work and cryptographic hashes allows transactions verified along with using computing power for transaction verification and providing the miners reward exchanges and offline vendors allowing users use the coin without any restrictions cryptographic signatures allow users send transactions directly nodes allow user privacy along with keeping integrity the data passed during the transactions. references dai, "b-money," http://www.weidai.com/bmoney.txt, massias, x.s. avila, and j.-j. quisquater, "design secure timestamping service with minimal trust requirements," symposium information theory the benelux may haber, w.s. stornetta, "how time-stamp digital document," journal cryptology, vol pages bayer, haber, w.s. stornetta, "improving the efficiency and reliability digital time-stamping," sequences ii: methods communication, security and computer science, pages haber, w.s. stornetta, "secure names for bit-strings," proceedings the acm conference computer and communications security pages april back, "hashcash denial service counter-measure," http://www.hashcash.org/papers/hashcash.pdf, r.c. merkle, "protocols for public key cryptosystems," proc. symposium security and privacy ieee computer society, pages april feller, "an introduction probability theory and its applications,"