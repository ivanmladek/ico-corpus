the trust chain consensus coti: decentralized, high performance cryptocurrency ecosystem optimized for creating digital payment networks and stable coins technical white paper, v.., october abstract has been long anticipated for cryptocurrencies significantly alter the online payment landscape. accomplish this, necessary for cryptocurrencies user friendly, convenient and highly scalable. several blockchain based technologies have been created tackle the challenges posed attempting provide high transaction throughput while remaining inexpensive, but these have been met with little success. another challenge faced the lack trust between unknown parties, which leads countless chargebacks and transaction cancellations. moreover, merchants are often classified 'high-risk' 'low-risk' based their association with particular industry, rather than their actual behaviour. coti, currency the internet, solves these challenges using innovative base-layer protocol the form directed acyclic graph-based ledger, built from transactions connected through time, harnessing trust-based algorithms. trust should based combination the network participant's historical behaviour data and objective information about them. coti takes this into consideration, calculating trust using unique machine-learning algorithm. trust used the trustchain algorithm validate and confirm transactions faster. trust chains grow new transactions attach two prior transactions which have similar degrees trust themselves. this results innovative consensus-based confirmation mechanism, where every user incentivised have high level trust while engaging trust-building behaviour due the benefits associated with having high level trust (i.e. faster confirmation times). coti has built mechanisms monitor, detect and defend against possible attacks, ensuring network security. example such mechanism coti's double spend prevention (dsp) nodes. coti also introduces novel protocols address disputes that may arise when sending transactions, much required feature which not possible with other cryptocurrencies. dispute resolution achieved the use arbitration service. this service takes advantage the principles game theory ensure fair outcome the case dispute and votes determine which the two disputing parties right. our vision coti empower users freely exchange value simply information exchanged the internet. achieve this, are developing the trustchain protocol based directed acyclic graph (dag) distributed ledger, which creates scalable blockless protocol that can utilised any industry that needs high throughput and trust operate. coti uniquely positioned provide the infrastructure needed for industries requiring immense scalability, addition arbitration mechanism resolve disputes, fraud (e.g. double spending) and errors. coti also introduces multidag structure and high-performance smart contracts, which provide multitude tools for enterprises, merchants, governments, developers and stable coin issuers. keywords: arbitration, blockchain, coti, cryptocurrency, dag, distributed ledger, e-commerce introduction blockchain technologies and cryptocurrencies have become alternative mechanisms for managing payment transactions over the past years. digital currencies such bitcoin, ethereum, and many others have enjoyed exponential growth popular interest and adoption while other uses have included technological applications, ranging from supply chain management decentralised, verifiable health records []. indeed, many have likened cryptocurrencies the early internet, citing its enormous potential disrupt payment systems the same way the internet disrupted information access []. however, while first generation cryptocurrencies have been enormously successful, they have faced fundamental challenges that have prevented them from achieving universal adoption. linear blockchain based cryptocurrencies suffer from low transaction throughput cryptocurrencies that rely network miners perform increasingly complex proof-of-work (pow) computations incur prohibitively high transaction fees; and most existing cryptocurrencies are difficult manage and are subject mass speculation. addition, services like dispute resolution, which are commonplace for credit cards and other payment platforms, are rare within the frameworks most existing cryptocurrencies. these factors make difficult for individuals and merchants adopt them global currency digital dollar for day-to-day transactions. this paper introduces coti (currency the internet), next-generation cryptocurrency that achieves high transaction throughput and low fees, while being easy manage and providing decentralised structures for the services users have come expect from payment platforms, such dispute resolution. coti achieves high transaction throughput employing directed acyclic graph (dag) transactions known the cluster, opposed blockchain. this idea not new, and has been proven improve performance typically, dag based cryptocurrencies have been intended for large numbers low valued transactions, possibly between machines such iot devices. because coti designed support day-to-day transactions between merchants and consumers, new algorithms have been introduced drive the formation the cluster, and the approval transactions. fundamental the new approach the trust score, which assigned each user account based its historical behavior, and which governs the approval that account's transactions within the network well the amount any possible fees incurred. these algorithms will described detail section addition the new features mentioned above, coti introduces arbitration service for dispute resolution, consisting decentralised collective highly trusted network participants who vote dispute rulings. this allows the network offer decentralised human-input services its participants. the base layer protocol: dag-based distributed ledger technologies show signs being particularly adept overcoming the scalability limitations inherent blockchain-based payment networks. this because while blockchain-based networks, greater scale has undesirable effects network usability, dag-based networks the reverse generally true: greater network usage results improved network scalability. other words, there positive correlation between the number network users and the rate which transactions are confirmed. result the positive correlation between network usage and network scalability, the dag data structure ideally suited for the coti network's base layer protocol, and will enable achieve full decentralisation without compromising coti's commitment scalability, instantaneity and low (or zero) fees. building the foundations established the above-mentioned initiatives, coti introducing innovative dag-based distributed ledger technology its base layer protocol, which involves the use trust scores the key mechanism which new, unconfirmed transactions select prior transactions validate. furthermore, coti's dag-based distributed ledger technology, the cluster, reaches faster consensus when confirming transactions using coti's trustchain algorithm. eventually, the cluster will able validate and confirm maximum hundreds thousands transactions per second (tps) the number bitcoin transactions per day has grown from about over late []. bitcoin delivers maximum transactions per second []. e.g. iota arguments for this can found section proof trust (pot): coti's unique combination the trustchain algorithm and proof work. coti coin: coti introduces high-performance cryptocurrency built atop the base layer protocol. this cryptocurrency will used common means payment, including all fees and staking inside the coti ecosystem. multidag: coti not bounded one instance dag. the same infrastructure nodes permits the creation multiple dags that can used for various purposes and originators. there can voucher tokens, stable coins, dedicated tokens for global companies, scalability tokens speed settlements other blockchains. see more details "multidag" section below. smart contracts: coti introduces "on-chain" smart contracts for the dag, first its kind. see more details "multidag" section below. the arbitration service: coti offers ready-to-use service that users can appeal cases fraud any other dispute related deals settled through the coti payment system. the arbitration service creates rolling reserve for each merchant cover possible claims and system-wide reserve credit fund (rcf) guarantee it. both funds are maintained coti's native currency. the required size merchant's rolling reserve calculated based the merchant's trust score. please refer for details appendix "coti's arbitration system". fees: the coti network uses transparent and equitable fee model. all fees are collected full nodes (decentralised servers run ordinary users the coti network). the coti network receives portion fees collected full nodes support infrastructural technology such the double spend prevention nodes (see sections and and trust score servers (see section .). when the network first created, portion all generated cotis will set aside reserve fund pay for all transactions until the network matures. therefore, the network fee will set zero during the network's infancy. following this period, the fees will minor due the decentralised nature the network. each node charges fee that part determined the node itself. some nodes may set higher fee they believe they provide good service; other nodes may charge less possibly nothing. the price charged node for its services should equitable, publicly available and compliant with common network rules. network rules will define ceiling for fees, but there will minimum fee. all fees within the coti ecosystem are paid with the coti coin. possible for merchant run their own full node along with customised wallet they believe will provide better experience for their customers. glossary term meaning node specialised server run user for common network tasks transaction validation the process checking the transaction before attachment the cluster source transaction terminal transaction the cluster having inbound transactions. the mandatory validation two prior transactions has been fulfilled for these transactions confirmed transaction transaction for which the consensus algorithm has reached defined level total trust. trust score user metric that used for effective transaction processing and risk mitigation. proof trust (pot) coti's unique combination the trustchain algorithm and proof work attack malicious attempt compromise system's integrity. double-spending attack which the attacker tries process two transactions using the same account balance. this results negative balance and the attacker acquiring something without cost the trust chain algorithm coti has developed new approach achieving consensus between transacting parties operating dag based data structure. the cluster based completely decentralised dag, which not stored any central authority. ledger, record all transactions performed the network. the cluster achieves scalability through its use parallel source selection and confirmation transactions, well its use coti's trust scores. trust score transactions the cluster each transaction the cluster receives trust score equal the sending account's trust score (further information the trust score algorithm can found the trust score section). transaction's initial trust score used define: the unvalidated transactions (sources) which will validated and referenced the transaction (see source selection subsection). the amount proof-of-work (pow) that should performed prior transaction attachment. result, transactions from highly trusted senders are confirmed much faster (please refer the performance investigation section for further details). when attaching transaction, the full node required validate two prior transactions order for the new transaction added the ledger. the ledger therefore organised dag (directed acyclic graph), where the vertices are transactions and directed edges are drawn from each transaction two others that validates. schematic the cluster shown figure each white circle represents transaction that has been validated two subsequent transactions, while the darker circle represents new, unvalidated transaction i.e. 'source' graph-theoretic terminology. new transactions are added, they may validate the darker transaction. figure cluster schematic. the source transaction (dark circle) validates two previous transactions the cluster. source selection the process outlined above requires each new transaction pick two prior source transactions validate. coti, the algorithm for making this selection based each transaction's trust score. according this source selection algorithm, source will likely choose prior transactions which are close its current trust score. this results the formation trustchains the cluster. trustchain any reverse-oriented path the cluster. the cumulative trust score such chain the sum the trust scores all the transactions making the chain. the trustchain algorithm makes use the cumulative trust score achieve consensus whether transaction confirmed not. transaction considered confirmed the starting point trustchain that has cumulative trust score exceeding the pre-set global confirmation threshold. practice, consider the longest (highest trust) trustchain starting from each transaction and compare its cumulative trust score the threshold order determine the transaction has been confirmed. because the source selection algorithm tends connect transactions similar trust scores together, trust chains generated highly trusted users will mostly contain transactions with high trust scores. the cumulative trust score such trustchain will grow quickly past the threshold and achieve consensus, meaning that highly trusted users will enjoy fast confirmation times and high transaction throughput. another important consequence the source selection algorithm the soft segmentation the cluster based trust scores. other words, dag sections with different trust scores are processed parallel, while distant dag sections are essentially independent. foregoing any complications, every transaction the cluster will progress through the following life stages: the first stage, initiated new transaction; the second, attaches the cluster validating two other transactions with trust scores similar its own; the third, validated other transactions; finally, confirmed and permanently added the cluster once the cumulative trust score the heaviest path confirming surpasses the set threshold. this process illustrated figure figure the lifecycle transaction (bold circle) from initiation, attachment, validation, confirmation. the confirmation path blue, while the shaded transactions have been confirmed. for the purposes this illustration coti's trustchain algorithm designed such way that trusted users (i.e. those with high trust score) will experience faster confirmation times than those who are less trustworthy. this expectable people are more cautious when dealing with people they trust less and would like more certain that their transactions are confirmed before accepting them. this property illustrated figure and further discussed using simulations section figure the different trust chain lengths needed confirm moderately trusted transactions (left) and highly trusted transactions (right). shaded transactions are those that have reached the cumulative trust threshold, while the confirmation path blue. shaded transactions have been confirmed. for the purposes this illustration source selection algorithm the primary objective build cluster based the transaction sender's trust score. the cluster, every transaction attached two transactions most with trust scores that are sufficiently close its own. the dag, the trust score the transaction sender assigned each transaction with weight function let the upper bound for trust scores. according the trust score algorithm, this equal any good method for constructing such dag must based algorithm that chooses two transactions with some degree randomness. consider, for example, algorithm which chooses two transactions and based only having trust scores closest the trust score the source one can see that the use non-random algorithm such the one just described, increases the probability many sources being present that must wait long time attached transaction. coti's source selection algorithm works the following way: new transaction issued account, while the set all the sources. the algorithm chooses the optimal neighbourhood o(a). first, all the sources are partitioned with map function such that (i) and o(t i}, where the upper bound for the trust score. the initial subset (o(a)). iterations the algorithm generate new subsets ti- (o(a) (o(a) until sufficiently populated, then (o(a) i), (o(a) i), respectively, taken the empty set. there one further restriction that must applied subset sources the neighbourhood o(a), namely that transaction may attached transaction with the same transaction sender. probability function weighting all sources according the timestamp difference between and new transaction defined the algorithm. can then select any two sources with some degree randomness, but such that the older sources will chosen with higher probability than the newer sources. there zero probability selecting sources from the same transaction sender the java code algorithm shows how this done. algorithm java code showing how sources are selected. public sourcelist selectsources int trustscore int minsourcepercentage int totalsourcenum int maxneighbourhoodradius start taking the sources with the same trust score clone sourcelist sourcelist new sourcelist sourcesbytrustscore get trustscore calculate the neighbourhood radius minimal radius always look neighbours for int sourcelist add sourcesbytrustscore get trustscore trustscore double minsourcepercentage break randomly choose source weighted timestamp difference return chooseweightedbytimestamp sourcelist note that our algorithm can respond changes the flow new transactions since takes into account the number sources transaction's neighbourhood. the cluster's early stages, there will cases when transaction cannot attached any transaction (e.g. when all the source trust scores are accumulated too far from o(a), when all the sources the selected neighbourhood are from the same transaction sender a). these cases, zero spend server will create zero-value transaction with the same trust score transaction and will attached that transaction. another scenario, source waiting long time attached new transaction, then zero spend server will create transaction attach with the same trust score the waiting time before the zero spend server performs these tasks will determined according the trust score: high trust score sources will matched faster the zero spend servers. mentioned section over-activity zero spend servers will help identify problems the network the trust score algorithm. attachment process the following steps will performed when new transaction received from wallet: address validation balance check pre-balance check source selection source validation proof work (pow) dag attachment propagation other nodes first, the transaction validated. the addresses each base transaction and the entire transaction are checked. then the balance checked verify that each address has sufficient funds. the pre-balance then checked prevent double spending from the same wallet. then the process source selection, validation, pow and attachment the local dag are performed. after the transaction locally validated, tested and attached full node, propagated other nodes and receives trustchain consensus and dsp consensus (see double spend prevention and dsp consensus for further details). upon receiving the transaction, other nodes not perform any pow processing other consistency verifications for the transaction. the transaction checked when other nodes attach new transactions according the source selection algorithm. the transaction will declined the transaction fails these checks. transactions cannot approved other transactions which were initiated the same user(seed) created the same full node. trustchain consensus let dag transactions. assume that every transaction weighted with weight function defined o(v), the trust score transaction sender. let any transaction and the upper bound for the trust score. can say the transaction confirmed max(sv o(v) path ended and a)ld, (.) equation implies that highly trusted transactions will confirmed faster than less trusted transactions due the source selection algorithm. note that highly trusted transaction confirmed quickly largely because the length the heaviest directed path very small. notice also that less trusted transactions need longer path confirmed. the algorithm for the heaviest directed path which ends transaction linear time algorithm, namely o(|v |e(f )|) where directed acyclic subgraph defined the union all directed paths ending transaction the first step sort topologically. since dag, finding topological sort linear time (chapter []). let vn; topological sort notice that transaction should the last vertex the topological sort due the definition figure dag subgraph before topological sorting o(v o(a) o(v o(v o(v o(v figure dag subgraph after topological sorting o(a) o(v o(v o(v o(v o(v the following dynamic programming algorithm gives o(|v |e(f )|) time solution for the heaviest path from transaction algorithm heaviest path algorithm define function heaviest(v find topological sort for topological sort assign heaviest(v max (heaviest(w o(v such that )); end return heaviest(a); balance check order keep the consistency the payment system and double spend prevention, coti's full nodes and dsp nodes carry out balance checks. when full nodes and dsp nodes are running, all address balances are calculated. when node restarted, balances are recalculated from the last clusterstamp state. there are two types balances controlled full nodes and dsp nodes: current balance: consists both trust chain consensus and dsp-confirmed transactions with positive address balances pre-balance: consists all verified transactions. coti full nodes and dsp nodes check balances independently, providing dsp consensus. for details, please refer the double spend prevention and dsp consensus section. for different clusters the multidag, various balance check approaches can implemented. multidag additional dimension the protocol the dag model provides coti with the framework for exceptional performance and efficient transaction processing. there are multitudes token types and uses, which are worthwhile implement atop the dag. coti uses several independent clusters that each support one token, which makes the whole network efficient and adjustable. transaction cluster can attached transactions the same cluster because different clusters can implement various transaction confirmation rules. the coti multidag ecosystem similar that ethereum. common decentralized infrastructure the basis for many different tokens and smart contracts and one main coin for fee payments. per the terms defined above, coti has created several clusters for different uses. figure multiple clusters (dags) upon the same infrastructure the picture above, the trustchain structure the clusters omitted for simplicity. the coti multidag, different clusters are separable the transaction layer the clusterid. for simplicity, this paper use integer numbers clusterids. the cluster with clusterid= represents the coti coin. the difference between clusterid= and others important: the genesis transaction for clusterid= created when the network launched and cannot added after. genesis transactions for other clusters are created the cluster owner smart contracts according the particular cluster rules. transactions the clusterid= are confirmed, taking into account the balances all relevant users. transaction confirmations other clusters can implement other rules. all fee collection coti the responsibility full nodes. for this reason, full nodes must create fee paying transactions the main coin dag before transaction attachment. all clusters the coti multidag use the same identification and kyc procedures, which creates one common frictionless crypto universe that includes many tokens various types. smart contracts this section briefly introduces coti's smart contracts. please refer the coti public github repository for further details. coti's smart contract were inspired ethereum, industry standard de-facto and invaluable theoretical basis similar ethereum smart contracts, coti smart contracts provide turing-complete computational models. unlike most other high-performance projects, where smart contracts are executed off-chain using specialized servers nodes, quasi-decentralized manner, coti smart contracts are executed on-chain and decentralized. all steps smart contract execution are recorded the dedicated cluster the coti multidag and are verified several times various full nodes before receiving full confirmation (see "the trust chain algorithm" section above for details attachment and confirmation process). coti smart contracts are created and signed coti user from the wallet application. smart contracts are coded using specialized high-level program language (e.g. solidity) and translated https://github.com/ethereum/wiki/wiki/design-rationale low-level vm-executable language (byte code). smart contracts are stored transaction the smart contract cluster with address specifying the execution context. figure coti smart contract creation for simplicity, all fees are omitted above. re-enterable, created smart contracts are started execution trigger transaction, which defines the particular instance launched smart contract. trigger transactions also provide link (hash) the transaction depositing coti coins order for the smart contract fee paid. figure the start coti smart contract execution the coti smart contract virtual machine part the standard coti full node code (to implemented the advanced testnet). upon executing the smart contract bytecode, the changes smart contract context variables internal each full node and records the result new transaction the smart contract cluster. figure coti smart contract execution cycle smart contract bytecode executed parallel all full nodes. for new transaction attached the smart contract cluster, full nodes have verify two previous transactions. the same applies for all cluster transactions, smart contract execution transaction considered confirmed after the heaviest path from the transaction the cluster's fringe reaches the confirmation threshold (see "the trust chain algorithm" section above for details). the transaction for the bytecode instruction already attached, the full node checks the results and adds its signature. full node smart contract transaction verifications affect the full node's trust score. figure smart contract trust chains make decentralized consensus smart contract execution possible, should completely deterministic. this entails that smart contracts only used for on-chain data. any real world data should supplied the calculation process only using oracles while providing data with the corresponding timestamp. figure requesting data from oracle due coti's blockless structure (dag), the network doesn't require gas conception. fees for coti smart contract execution are fixed minimal and economical. the execution fee for bytecode instructions belongs the full node attached the transaction and includes the execution fee. for transaction network fees, they must transferred the network pool. stablecoins coti's multidag, together with coti smart contracts and the possibility multiple genesis transactions allows for the creation high performance stable coins. most stable coins are essentially erc- tokens, which make them hardly usable for everyday payments. for coti, the situation different high throughput, quick confirmations and low fees enable the creation highly usable stable coins. coti, each stable coin's transactions constitute its own cluster with its own confirmation rules. all stable coin clusters are organized according the transaction sender's trust score. figure stable coin cluster stable coin cryptocurrency with constant rate some real-world asset. means that the supply stable coin cannot fixed. stable coin tokens are minted and burned according market movements. the picture above, genesis token minting transactions are green and token burning transactions are black. the minting and burning transactions created smart contracts the stable coin originator's wallet according the particular stable coin's rules. the coti multidag allows for the origination stable coins all known types: fiat collateralized, gold (or other asset) collateralized, crypto collateralized and non-collateralized. stable coins can originated coti itself or, more commonly, third parties. dedicated coins the coti multidag, another type specialised coin, designed for dedicated coins. dedicated coins are originated enterprises that need their own currencies. dedicated coins are useful for loyalty programs, discounts, coupons and more. coti dedicated coin mechanics are similar the coti stable coin, but are based different rules set the originator the dedicated coin and implemented its confirmation rules and smart contracts. figure coti ecosystem with coins different types anatomy payment for simplicity, this section does not take the coti multidag structure into account. accounts coti, account set user's cryptography addresses combined and managed together for the user's convenience. addresses are cryptographically generated from the user's seed public keys. coti, users can choose how use their addresses one-time permanent addresses, addresses organised into several accounts with different rules. addresses may not have negative balance and are checked full nodes and signed dsp nodes. transaction structure transaction the coti network includes descriptive fields, cryptography protocol related fields and bundle elementary base transactions. figure the structure transaction fees all the fees the coti network are collected full nodes. fee base transactions are created together with all base transactions the bundle and are signed the user and the transaction, creating full node together with the whole transaction. network fee base transactions are also included the main transaction bundle. these base transactions spend coti from the full node addresses and are signed the full node signature together with the whole transaction. the network fee level network-wide constant any given time. the correctness the network fee included the transaction bundle verified other full nodes the transaction confirmation. multisig accounts coti provides users with multisig accounts allowing escrow and other cryptography lock possibilities. multiple signatures are checked full nodes confirming transactions. rolling reserve the rolling reserve share seller's funds that frozen for the purpose buyer protection. being key element the buyer protection system, the rolling reserve crucial for online trade. coti, the rolling reserve implemented the protocol level for maximum efficiency. the rolling reserve account belongs the coti arbitration system pseudo-user, but linked the seller the conditional owner funds. rolling reserve account funds can spent two ways: transferred the seller's account the end the freezing term used payment the plaintiff the seller loses case. the rolling reserve share and freezing term are dependent the seller's trust score the moment the payment transaction created. coti considering two possible options rolling reserve handling. the first having the payment split the creation the transaction bundle the wallet (as seen figure the second having the payment transferred the account full and then split from the account (as seen figure figure handling the rolling reserve splitting the payment the creation the transaction bundle. figure handling the rolling reserve having the payment transferred the full before splitting it. trust score trust scores are key feature the coti network. they are used for effective transaction processing, risk mitigation and network structuring. trust scores are calculated dedicated and decentralised trust score nodes. trust scores common actors the coti network possess their own trust score metrics, including nodes. node's trust score, however, not the same node owner's trust score. all accounts the payment network have trust score, which changes according user's payment statistics and alignment with several event types. account trust score real number within the range [,]. all transactions the payment network also have trust score. the trust score transaction the sender's trust score when the transaction initiated. the cumulative trust score transaction the sum all the trust scores all transactions along the heaviest path approving transaction including transaction itself. the trust score algorithm designed ensure the maximal performance the trust score-based source selection algorithm. for example, let the recommended level trust (cumulative trust score) for the transaction this means that transactions created highly trusted network participants (ts need least confirming transactions the chain, while transactions from low trusted network participants (ts need least confirming transactions the chain. trust score nodes collect transaction and other statistics continuously update participants' trust scores described the trust score update algorithm subsection below. trust scores can also changed according the occurrence external events, such bankruptcy the company that owns account. the trust score nodes will receive information these events confirmed arbitrators. uses and implications the trust score arranging transactions for the trustchain algorithm and providing optimal parallel transaction processing, while ensuring improved performance for highly trusted users and additional checks for less trusted users. defining the rolling reserve requirements for merchants. determining fee levels. setting pow levels, which can indirectly affect fee levels. setting the arbitrator threshold and defining which network participants can chosen arbitrators and included the arbitrators pool. defining network topology and transaction propagation paths (node trust scores). optimising node workload (node trust scores). trust score types the various types coti network participants use different trust score counting algorithms. participant may person, business entity nonhuman (e.g. the iot device), and may have the role user, merchant financial institution. the node's trust score described below subsection "trust score for nodes." when participant registered merchant financial institution, enables the participant receive payments exchange for goods services. uncooperative participants attempting sell goods services without registering either merchant financial institution will penalized with low trust score (see the trust score range for malicious network participants below). result, such participants will assigned high rolling reserve requirements amounting order uphold buyer protection standards. figure the different types participants and roles the coti network. trust score ranges all trust scores are real numbers within the range [,]. zero trust score means that the participant has been banned from using the coti network for serious wrongdoing, including false identification the submission forged documents. the initial trust score algorithm (itsa) assigns values the range the range reserved for malicious network participants. the initial values for legal entities and for all merchants lies within the broader range because these participants can supply more data related their activities than simple customer. the arbitrator trust score threshold will preliminarily defined but this value will adjusted according actual network statistics. figure the ranges the initial trust score for different user types. decentralised design trust score nodes trust score nodes are decentralised servers that provide the coti network with the storage and computational power needed calculate trust scores and supply network participants with them. trust score nodes work using the same algorithm. other nodes control cross-checking trust score calculations. initial trust score algorithm the initial trust score network participant calculated using the initial transaction score algorithm (itsa), based machine learning (ml) and rules-based approaches, within coti kyc server. the dataset that the itsa uses calculate the initial trust score includes sensitive user details from the kyc/aml procedures and the questionnaire they were required fill in. users wants supply additional details increase their trust score, possible fill the questionnaire more than once. data used the initial trust score algorithm for user not possible join the payment network before completing kyc verification, defines the minimal amount data the itsa possesses and the minimal trust score participant can have after joining the network. identification document type, citizenship, date birth, proof-of residence, phone number, country residence and zip code are all kyc data types that are available the itsa runs within the coti kyc server. the following data requested from users filling the trust score questionnaire: family status, education level, employment, occupation, income data, insurance, driver's license, bank reference, social network account name and web site, etc. user, fill these data not fill, but usually the more data the user supplied, the large trust score he/she has. person purports have higher trust score than the arbitrator threshold, then the itsa can randomly generate request submit supporting documents. the documents are then checked randomly chosen arbitrator and sent the trust score nodes. the user fails confirm the trust score questionnaire data, the documents are found forged, will constitute misdemeanour event and will used downgrade the user's trust score. proof source funds required according kyc/aml procedures the event that user plans transfer large sums money. data used the initial trust score algorithm for legal entities legal entities are also required complete kyc procedures prior opening account. the data supplied legal entity includes incorporation data, owner data, beneficiary owners, directors, responsible officer identifications, shares, issued securities, balance sheets, auditor reports, and business profile data. there are lot elaborated methods evaluate and rate company, but these methods are different from country country. coti plans implement trust scores for companies before the main net beta launched. data used the initial trust score algorithm for merchants order participate merchant, the participant must provide the following information, addition the kyc documents and questionnaire: business activities, including the nature business, historical performance data, licenses (if applicable), bank references and planned sales volume. merchant company, the required data set the same for any legal entity. data used the initial trust score algorithm for robots and iot devices coti trustchain platform allows creating efficient light-weight solutions usable for iot devices and robots. participants coti network, anyone needs have trustscore. the initial trust score for devices and robots will be, part, borrowed from the device owner, and, part, calculated basing the device safety and robustness hacker attacks. coti considering use highiot high-iot.com device security data calculate iot devices trust score. itsa dataflow figure the itsa dataflow submitting kyc data. the minimal trust score range based only kyc data [,]. after beginning use the network, participants can improve their trust score filling the trust score questionnaire and supplying additional data. figure the itsa dataflow submitting the questionnaire supplying additional data. the machine learning portion the algorithm begins with the ideal types approach (see m.weber, the objectivity the sociological and social-political knowledge). order have labeled dataset, defined ideal user types (including boundary points), together with desired trust score values for them. figure for ideal types. took one hundred real people feature vectors and defined the desired trust score values according the most similar ideal types. having this dataset, can use simple machine learning methods like linear regression define the optimal set weights used itsa. the itsa, however, doesn't only use machine learning approach. for example, have reliable statistics cyber crimes country and more reasonable apply these statistics before using algorithm, not even include such features all. individual's age another parameter for which have risk aversion statistics. see itsa code coti public github repository for further details. calculation trust scores the trust score nodes figure generally tends increase from its initial value for most users. trust score update algorithm the trust score update algorithm (tsua) has been designed efficiently collect data the user's behaviour order submit the information decentralised trust score nodes. the coti network, trust score nodes receive copies all processed transactions and store them their own database shortened form exclude the possibility double counting and enable trust score recalculations. trust score nodes maintain transaction, turnover and balance counters, while the tsua recalculates them. they also manage trust score lists affecting events like arbitration outcomes, and decays for them. there are two types decay: exponential decay and limitation terms. exponential decays are applied numeric values, while limitation terms are applied events. there are transactions events involving participant, then his/her trust score will converge asymptotically figure the process updating the ts. data for the current trust score calculation the current trust score value calculated trust score node using the datasets the table (table table datasets used for the calculation the trust score update along with their explanations. dataset explanation (initial trust score, date) the initial assigned the itsa together with the corresponding date from which calculate the decay. zero trust flag indicator for zero-trusted participants initial trust counters score change data compiled regarding the frequency completing questionnaires and forging data that results trust score downgrades. [(monthly turnover, date), (monthly turnover, date)] the list monthly turnovers for the previous months, including the current turnover and dates for decay calculation. [(monthly average balance, date), (monthly average balance, date)] the list monthly average balances for the previous months, including the current monthly average and the dates for decay calculation. [(monthly counter, date), (monthly counter, date), (monthly counter, date)] the list monthly transaction frequencies for the previous months, including the current frequency and the dates for decay calculation [(misbehavior case, date), (misbehavior casen, date)] the list all known wrongdoing events and dates for decay calculation [(dispute outcome, fulfilment, date), (dispute outcomen, fulfilment, date)] the list all disputes and information fulfilment and dates current trust score calculation event contributions are limited terms and are subject exponential decay. (.), ... are periods time; refers the event and dei and fei refer the date and contribution corresponding this event. fei vei ... dtoday dei save figure proof work flow. the next phase take the previous generated hash and use the input/public key for the next algorithm. pow validation should instant. the validation process should able validate the proof effort, meaning that all algorithms were indeed executed and performed properly. could the same nonce with concatenation each algorithm's result. algorithm pseudocode for the validation stage coti's pow. given list nonces the normalised difficulty for the given transaction deterministic_order from the given txn for each deterministic_order hashing algorithm pop nonce compute previous hash confirm validation works each block validating the algorithm signature with the public key provided. the case cycles [-n] the validation run against private and public keys. figure proof work validation flow. normalising our scaling will need take into account the possible range the original trust score and difficulty numbers. let: denote the minimum the range denote the maximum the range denote the minimum our desired target scaling denote the maximum our desired target scaling [rmin rmax denote our measurement scaled then rmin (tmax tmin tmin rmax rmin will scale linearly into [tmin tmax desired. step step, rmin maps rmax rmin next m-rmin rmax -rmin maps into multiplying this tmax tmin maps tmax tmin finally adding tmin maps [tmin tmax scaling difficulty for cryptocurrencies, not enough that pow memory hard, must also flexible enough scale the difficulty the work finely tune the block production rate. for this reason, the final step coti pow also adjust the work based the difficulty level defined the network. double spend prevention and dsp consensus dsp consensus for all high-performance distributed ledgers, potential double spending attacks are fundamental problem. high performance achievable only with high degree parallelism, and the price for this non-coherent state network portions. most known solutions the problem are inefficient centralised. the coti double spend prevention solution consists adding handful highly trusted nodes the network with only one function: reach consensus whether the transaction legitimate double spend. dsp consensus consists majority dsp nodes. when transaction has more than one half the dsp node signatures, then consensus achieved. the double-spend prevention mechanism shown figure order prevent double-spending, the dsp nodes: keep light version the cluster with pre-calculated balances for all accounts; receive copy any new transaction attached the cluster; check new transactions against set heuristics detect possible double-spending attempts; check new transactions against available account balances; sign legitimate transactions; flag transactions suspected double-spending; inform trust score servers about double-spending attempts. the transaction verification process performed the dsp node supposed quick operation, only the amounts involved are checked, opposed the signatures transaction. the checks that the dsp nodes perform are only carried out after transaction has been attached the cluster. transactions require the signature dsp node before they can considered fully confirmed. any double-spending attempts detected are flagged and refused malicious, while valid transactions receive signatures from dsp nodes. any valid transaction should receive number signatures defined the consensus order continue confirmed. the dsp nodes are load balanced ensure that the verifications that prevent double-spending are fast. figure the verification procedure followed dsp nodes the creation dsp node due the nature the verifications required prevent double-spending, user who would like run dsp node has meet the following requirements: user should have high enough trust score order serve dsp node operator; substantial amount coti will have deposited special multisig account; the performance and security the dsp node must checked remotely, including the quality load balancing. figure procedure for dsp node creation based the principle delegated proof-of-stake. the clusterstamp prevent the growing cluster from becoming unmanageable storage size, coti has implemented the clusterstamp, which consists two phases: the last fully confirmed transactions (having both trustchain consensus and dsp consensus) for each account have been found. the 'last' transaction means that there are fully confirmed transactions confirming it. these transactions then become the genesis transactions the next generation the cluster. all other confirmed transactions are excluded from the working dag kept full nodes. all non-confirmed transactions are kept the working dag. the clusterstamp process performed automatically. following the creation and verification clusterstamp, stored the coti history nodes. history nodes are receiving copies all propagated transactions together with confirmation states, for this reason don't need copy any transaction data during the clusterstamp. the clusterstamp not applicable the smart contracts cluster. besides keeping the dag operational data structure, the clusterstamp has more benefits for the coti network. the clusterstamp provides useful reference point and opportunity for performing system-wide audit ensure that there are inconsistencies possible fraud. figure the clusterstamp process captures all the information the time the gray transactions. thereafter, the next generation the cluster begins with the gray transactions. performance investigation order better understand the performance characteristics coti's algorithms, will provide mathematical framework for making deductions about the cluster, addition high level mathematical observations simplified context. will then present series empirical investigations that make use full simulation the cluster. mathematical framework for the purposes analysis, have made some simplified assumptions about the cluster and the transactions taking place within it. first, assume that all nodes take fixed amount time run the source selection algorithm and perform proof-of-work. second, assume that new transactions arrive according poisson process with fixed rate also assume that the transactions are all valid and the senders are distinct. all these assumptions are not reflective the real world, but can locally true for stretches time and sections the cluster, and are therefore useful consider for analysis. the parameters and will feature the discussions below. there are also number internal parameters that control how the cluster will operate. trust scores can take integer values from the maximum possible trust score. will assume what follows. when new transaction arrives the cluster, assume has trust score then each new transaction removing less than one source average and will increase. conversely lt, then lts and the number sources will increase. therefore over time, must approach the fixed point lt. particular, for sufficiently large amount time, can assumed approximately constant. now consider the number validated, unconfirmed transactions time which will denote will use the fact that after sufficient amount time, the expected in-degree all transactions since every transaction starts out source transaction and will have expected in-degree the steady state. fixed time, let the set source transactions; the set validated (unconfirmed) transactions; the set vertices with the longest reverse oriented path (in number transactions) precisely observe that since every path length that greater than has cumulative trust score greater than ld, and any vertex the beginning such path confirmed and not now the parents any vertex from are further, each vertex contributes two out-edges the dag, and the argument above each vertex consumes average vertices from the dag, find that e[|v $-$ $-$ $-$ window rcf lock-up arbitration selection days after days days after days days after days days after days table continued from previous page use case product not received subscription cancelled unrecognised b.. dispute amount number arbitrators $-$ $-$ $-$ window rcf lock-up arbitration selection days after days days after days days after days how evidence submission works each dispute has multiple parties involved the process. although the coti arbitration layer not involved deciding the outcome the dispute, plays role conveying evidence the jurors. what submit the evidence submitted should relevant the cause the dispute. web logs, email communications, shipment tracking numbers, delivery confirmations, proof prior refunds replacement shipments can all helpful. for example, response dispute with the reason 'product not received' should have evidence that includes shipping information and any screenshots package tracking. when issuing evidence for disputes, requests call email for more information, links click for further information should not included (e.g., file downloads links tracking information), these will not logged the arbitrators who are responsible for evaluating the dispute. coti arbitrators will not call merchants follow external links, it's important submit all available evidence through the coti arbitration system. keep your evidence relevant long introduction about the product company, complaint about the customer, the unfairness the dispute will not make the responses more compelling. instead, advisable provide only the facts concerning the original purchase using neutral and professional tone. for example, john smith purchased from our company [date] using his coti wallet. the customer agreed our terms service and authorised the transaction. shipped the product [date] the address provided the customer and was delivered [date]. merchants should also include email correspondence texts with the customer, but it's important aware that these exchanges not verify identity. merchant's include them, they should ensure only the relevant information included (e.g., when including long email thread, better redact any text that only quoting previous emails). the evidence should factual, professional, and concise. while providing little evidence problem, overwhelming customers,merchants and arbitrators with unnecessary information can have similar impact. provide clear and accurate evidence the arbitrators reviewing the responses are going decide fairly quickly whether not the evidence sufficient refute the claims. for responses with multiple pieces evidence, participants can also include table contents and give each uploaded image pdf attachment number letter. lengthy terms service refund policy that has the relevant information highlighted can make the case significantly clearer. customers and arbitrators will not follow any links provided response. instead, advised include clear screenshot terms policies they appear during the checkout process, the merchant site they are important part the defence (e.g., customer disputing subscription, although there minimum contract term that must adhered to). include proof customer authorisation proving the customer was aware and authorised the transaction being disputed vitally important any case. any data that shows proof this standard part compelling response, such as: avs (address verification system) match signed receipts contracts address that matches the customer's verified billing address include proof service delivery addition fraudulent disputes, claims from customers that products services never arrived, were defective unsatisfactory, not described are also potential dispute reasons. assuming that all well the merchant's side (the product was not faulty, was described, was shipped and delivered prior the dispute date), then merchants should provide proof service delivery. for purchases physical goods, the merchant should provide proof shipment and delivery that includes the full delivery address, not just the city and zip code. choosing carrier delivery method that requires signature delivery provides the best defense against product not received fraudulent disputes where merchants have shipped verified billing address that has passed avs and zip code verification. your customer provides 'ship to' name that differs from their own (e.g. for the purchase gift purchase), customers should prepared provide documentation explaining why they are different. while it's common practice purchase and ship address that doesn't match the kyc verified billing address, this additional dispute risk. the merchant's business provides digital goods, then supporting evidence, such the address system log proving the customer downloaded the content used the software service should submitted. include copy your terms service and refund policy providing proof that the customer agreed and understood the merchant terms service checkout, did not follow return/refund policies critical. legible screenshot how the terms service other policies are presented during checkout important supporting evidence-it not enough simply include text copy these. decentralised governance arbitrators voting decentralised governance decisions one the most significant functions the coti arbitration system. decentralised governance voting, all active arbitrators have one vote each. nb: this provision subject future changes. arbitrators the coti arbitration system maintains pool reputable network participants from which the arbitrators are randomly chosen for the arbitrators jury. users are invited the arbitrators pool they have maintained high trust scores. the arbitration system decentralised human-input service, even when particular arbitrator legal entity. not required for network participants deposit any amount coti, maintain any amount coti invited the arbitrators pool. however, participate the arbitration process required that arbitrators have sufficient amount coti locked per their stake and released once the dispute decision has been made. arbitrator recruitment and training individuals who wish register arbitrators must satisfy certain requirements before being admitted the arbitrator platform. committee randomly selected arbitrators will have the ability select arbitrators and add them the network. among other requirements, arbitrators must demonstrate relevant language proficiency and undergo online assessment determine that they have the aptitude perform the arbitration tasks high standard. coti endeavours make arbitration open broad group people and will make available online training programs that can assist candidates acquiring the requisite knowledge effectively contribute the dispute resolution process. the training program will consist of: online courses procedures and manuals online certification exams internship participating small disputes cases arbitrator onboarding process particularly, but not restricting this, compliant financial institution, coti will implement the following kyc/aml due diligence points: customer identity. beneficial owner identity (if applicable). purpose and intended nature business relations. ongoing monitoring, including transaction monitoring. the and all occasional (not regular) transactions larger than eur should reviewed. source funds may required explain the nature business relations and process monitoring. computer-aided dispute resolution subsequent versions the coti arbitration layer would like add ai-based tools that will help analyse case data and provide recommendations arbitrators regarding how judge certain disputes. this will drastically decrease the cognitive costs arbitrators and make the arbitration process more efficient. online dispute resolution tools coti will develop three step model for online dispute resolution. our online dispute resolution environment will virtual space which disputants will have variety dispute resolution tools their disposal. participants can select any tool they consider appropriate for the resolution their conflict and use the tools however they desire. the proposed three-step model based fixed order. the system proposed conforms the sequencing outlined below, which our opinion produces the most effective online dispute resolution environment: first, the negotiation support tool should provide feedback the likely outcome(s) the dispute the negotiation were fail i.e., the batna). second, the tool should attempt resolve any existing conflicts using argumentation dialogue techniques. third, for those issues not resolved step two, the tool should employ decision analysis techniques and compensation/trade-off strategies order facilitate dispute resolution. narrowing the issues, time and money can saved the process. further, the disputants may feel longer worthwhile achieve their initially desired goals. decision support systems decision support systems supplement human knowledge management skills with computer-based means for managing knowledge. they accept, store, use, receive and present knowledge pertinent the decisions being made. decision support tools help decision makers improve their performance whilst decision-making tools automate the process, leaving minimal role for the user. tools that have been used develop intelligent negotiation support systems include: rule-based reasoning: where the knowledge specific legal domain represented collection rules the form 'if then action/conclusion'. case-based reasoning: uses previous experience analyse solve new problem, explain why previous experiences are are not similar the present problem and adapts past solutions meet the requirements. machine learning: where the system attempts learn new knowledge automatically. neural network: consists many self-adjusting processing elements cooperating densely interconnected network. each processing element generates single output signal that transmitted the other processing elements. the output signal processing element depends the inputs the processing element. each input gated weighting factor that determines the amount influence the input will have the output. the strength the weighting factors adjusted autonomously the processing element data processed. traditionally, negotiation support systems have been template based, with little attention given the role the system itself should play negotiations and decision-making support. the primary role these systems has been demonstrate users how close (or far) they are from negotiated settlement. the systems not specifically suggest solutions users. however, decision support can provided informing users the issues disputes and the level the disagreement. using game theory basis for providing intelligent negotiation support traditional negotiation decision support has focused providing users with support how best obtain their goals. such advice often based nash's principles optimal negotiation bargaining. game theory, opposed behavioural and descriptive studies, provides formal and normative approaches model bargaining. adjusted winner and smartsettle two widely known and used negotiation support systems are adjusted winner and smartsettle. both use game theoretic techniques provide advice about what they claim are fair solutions. these algorithms are fair the sense that each disputant's desire equally met. they not however meet concerns about justice. both systems require users rank and value each issue the dispute allocating the sum one hundred points amongst all the issues. given these numbers, game theoretic optimisation algorithms are then used optimise, identical extent, each user's desires. adjusted winner allocates divisible goods between two parties fairly possible. adjusted winner starts with the designation the items dispute. either party says item the dispute, then added the dispute list. the parties then indicate how much they value each item distributing points amongst themselves. this information, which may may not made public, becomes the basis for fairly dividing the goods and issues later stage. once the points have privately been assigned both parties, arbitrator can use adjusted winner allocate the items each party and determine which item (there will most one) may need divided. smartsettle interactive computer program developed assist those involved negotiating agreements among parties with conflicting objectives. can used during the negotiation process opposing parties, professional arbitrator. smartsettle can help all parties identify feasible alternatives that are preferred each party's proposal based information provided confidence the program. such alternatives not exist, the program can help the parties develop counter proposals. arbitrator jury the arbitrator jury selected randomly after the arbitration system has received the claim and accepted it. arbitrators work independently validate real world information pertaining transaction disputes and then cast votes mediated outcome. arbitrators receive case data and cast their votes using the arbitrator client. they are not able communicate with one another and are unaware how many other arbitrators are involved resolving dispute. the number arbitrators dependent the case and the dispute stage. merchant rolling reserve the rolling reserve share merchant's transactions that temporarily set aside cover potential business risks, such when merchant loses mediated dispute and must compensate the consumer. rolling reserve funds are denominated coti coins and automatically accumulate the merchant's account for defined term. the arbitration service creates rolling reserve for each merchant cover possible claims and system-wide reserve credit fund (rcf) guarantee it. both funds are maintained coti's native currency. the required size merchant's rolling reserve calculated based the merchant's trust score. the rolling reserve used when merchant has lost mediated dispute and required compensate the consumer. merchants that not meet the rolling reserve requirements will forfeit their ability sell goods and services within the coti network. arbitration rules trade dispute there are two possible outcomes dispute. the merchant wins, additional transactions are needed. the merchant loses the case, the arbitration system creates transaction that transfers money from the merchant's rolling reserve the customer's account. the merchant's rolling reserve not sufficient, the reserve credit fund (rcf) will used, and the merchant obliged reimburse the rcf. the coti arbitration system, the merchant has fixed period which he/she may pay voluntarily make appeal. the customer the winning party, he/she remunerated using funds from the merchant's rolling reserve. case insufficient rolling reserve funds, compensation remitted from the rcf. when the merchant the winning party, the other hand, further action needed. figure pictographic summary how coti's trade dispute process works. coti arbitration flow initiating dispute: trying resolve the dispute without arbitration: arbitration selecting jury: fees arbitration initiating cost fee payable the plaintiff upon complying. this fee intended decrease the demand for arbitration and avoid barratry. this fee refundable the plaintiff won the case. dispute resolution fee the fee dependent the type case and the stage the dispute resolution and paid the party that lost the case. arbitrator fee the fee that coti arbitrators earn for participating the dispute resolution process. this fee dependent the case type, the stage the dispute resolution, and the arbitrator's stake held coti coins. merchant rolling reserve fee rolling reserve requirements are calculated based the merchant's turnover and trust score, which powerful incentive for merchant maintain high trust score. because the design the coti payments network, arbitration system and decentralisation, the rolling reserve requirements are substantially lower than existing payments networks. every merchant transaction incurs rolling reserve fee that reserved for predefined arbitration time window. when the rolling reserve term has ended, funds are released back the merchant's account. jurisdictions the coti arbitration system resolves disputes between parties who voluntary agree the mediated outcome. the coti arbitration system cannot deal with potential criminal cases, substitute public law enforcement. general, any jurisdictional court will opine that cannot accept situation which international corporation focusing the provision its services the local market can prevent clients from accessing other jurisdictional courts and adjudicating their dispute accordance with local laws. can stated, that any coti's operations should expect subject the jurisdiction local courts. addition, can also stated that the mere fact that most, all the activities such multinationals, performed via the internet does not provide them with immunity from being taken court and subject local laws. this end, offering products and services online, online merchant may subject the jurisdiction local courts, regardless the merchant's attempt, via its terms and conditions, subject its clients the jurisdiction foreign courts, the coti arbitration process. follows that any e-commerce merchant that has local clients, operational any other form, manner any given jurisdiction should carefully review the scope legal exposure may have result its activities and clients, and seek legal advice limit such exposure properly structuring its business. policies collusion prevention due its distributed nature, the arbitration system needs take into account the possibility collusion, either between arbitrators, between arbitrators and one the parties disputed transaction. this collusion risk mitigated random selection arbitrators the jury. any arbitrators are found have engaged any form collusion, they will severely penalised. privacy prior distributing case data, coti takes measures ensure that only the data that aids directly dispute resolution disclosed. default, coti removes personal identifying information from all data submissions. the parties dispute choose, they can elect forgo privacy for the sake providing more detailed data. during the arbitrator registration process, all arbitrators are required read and accept the arbitrator privacy policy, any violation which will result expulsion from the coti network. dispute attestation possible questions for opening dispute: which transactions are you disputing? what the reason for your dispute? when did you cancel the transaction(s)? did you engage the transaction(s), receive any goods benefits result it? have you attempted contact the merchant? what documentation needed? one the following items needed: dispute reason receipt(s) confirmations (emails, faxes, etc.) proof shipment return any other document that supports your case figure overview the dispute cycle dispute influence trust scores losing arbitration case will reflected the trust score consumers and merchants. the penalty only applies arbitrations are lost within transactions one another and increases severity the frequency lost arbitrations increases. penalties will apply both parties prevent user from unnecessarily lodging disputes. figure disputes influencing the trust score