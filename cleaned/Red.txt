red: full-stack, open-source toolchain for simple smart contracts and decentralized apps development nenad rakocevic, nenad@rakocevic.net, tamas herman, tamas@herman.im april abstract blockchain technologies will dramatically alter the landscape many industries and the way human activities are managed, using fair and trustworthy decentralized model. smart contracts are the center this revolution, yet contract development tools are crude, hindering the adoption and reliability this new technology. the innovative red programming stack offers better solution which will greatly simplify smart contract development and improve their security. new token, named red community token (red), has been created fuel the growth the red open source programming stack and its community. the red toolchain will extended ease the development more secure smart contracts and decentralized applications (dapps) superseding current, inadequate tools and their complex architectures. mission statement the mission the red team power the revolution promised blockchains, smart contracts and decentralized apps, lowering the barrier for smart contracts and dapps creation and deployment using the innovative red fullstack solutions. state smart contract development smart contracts, general-purpose computations taking place blockchain, are the most promising part blockchain technologies. they provide programmable "partially fully self-executing, selfenforcing" model, with different levels capabilities depending the blockchain type (bitcoin, ethereum, neo,...). such contracts are currently implemented using first-generation programming languages, capable compiling the bytecode used the chains (virtual machines). the most prominent smart contracts platform ethereum. solidity the language used most program smart contracts ethereum. solidity programming language for smart contracts with general-purpose capabilities. allows the implementation any kind computation the blockchain, the price high complexity and high security risks. any mistake solidity contract can lead partial total loss ether controlled that contract when the security flaws are exploited attackers. the only counter-measure submitting the contract's code solidity experts for auditing before deploying. this both slow and expensive procedure, which results only reducing the risks, not suppressing them. moreover, solidity has notorious design issues that are further undermining smart contract development. another possible approach use templates for contracts, and parameterize them for given use-case. this approach theoretically mostly eliminates the security issues, the contracts code always the same, can audited extensively before been put into production. the drawback that the application domain then becomes extremely limited, that template providers need produce vast quantity templates, covering the most used cases, order stay relevant. still, with the advertised "noprogramming" contracts, the "general-purpose computation" aspect the blockchain lost the process, well the decentralization (template platforms are mostly controlled single entities) the core the blockchain philosophy. templates could help smart contracts gain more popularity and traction the early days, but they are not the usual way software built, this approach might never become mainstream. this document and any other documents published association with this white paper relate potential token offering persons (contributors) respect the intended development and use the network various participants. this document does not constitute offer securities promotion, invitation solicitation for investment purposes. the terms the contribution are not intended financial services offering document prospectus. the token offering involves and relates the development and use experimental software and technologies that may not come fruition achieve the objectives specified this white paper. the purchase tokens represents high risk any contributors. tokens not represent equity, shares, units, royalties rights capital, profit income the network software the entity that issues tokens any other company intellectual property associated with the network any other public private enterprise, corporation, foundation other entity any jurisdiction. the token not therefore intended represent security interest. when the smart contracts are combined with user interface, they are then called "decentralized apps" (dapps). dapps are currently built web apps, served online through browser, encapsulated standalone, downloadable executable (typically using electron framework, like ethereum's official client, mist). running web stack, dapps suffer from several issues: security issues: the web stack, being pervasive nowadays and having extremely vast attack surface millions lines complex code), big target for attackers. when dapps are distributed standalone clients, constant updates are required fix the security flaws and bugs the underlying web stack heavy deployment: dapp user interface are running webview (browser encapsulated electron), but still require separate download and installation blockchain light client node, making complex and/or expensive barrier for nonexperts users. webapp development, despite being broad usage, still has long learning curve one need master least three different languages (html/css/js), and vast amount quickly changing frameworks, feeding growing complexity. all those issues described above, are real obstacles the faster adoption blockchain technologies. the red team intends tackle them with the innovative red language stack and toolchain. necessity language for blockchains blockchains are networks virtual machines running specialized code. the ability simply and efficiently create smart contracts and decentralized apps critical the success any blockchain beyond just the speculative usage its intrinsic fuel token. templating solutions are barely scratching the surface possible contracts use-cases, only programming language can fulfill the promise the "decentralized world computer" made advanced blockchains like ethereum. red will the powerful enabler that allows new wave smart contract programmers and users emerge. will create opportunities for people that are currently only available very well resourced individuals and organisations. just tools like visual basic for desktop development the hands many people, red will the same for smart contracts thanks its simplified and effective programming paradigm. the red fullstack approach red open-source programming language launched nenad rakocevic. its goal provide simpler and more cost-effective way build software. red very high-level language, capable extremely expressive code. besides the features that red language can already accomplish, the biggest leverage provided red the ability easily implement domainspecific languages (dsl). dsl are one the most effective ways reduce complexity software development and red uses them pervasive way. several ones are already included cover gui programming, drawing, pattern-matching, data extraction and system programming. thanks those dsl, red covers the whole range software abstraction layers, and extends now horizontally across domains. the red toolchain zero-install, zeroconfiguration, single file containing its complete toolchain including cross-platform native compiler, the whole standard library (more than datatypes), dsl, cross-platform native gui system and interactive console. the codebase for all those features weighs about loc. open-source project, with transparent mode operation, red has growing community thousands users and dozens contributors working daily improve red and help newcomers learn it. the red project already has stars github, views its web site and about developers the online chat room discussing about red daily (at end dec, red for smart contracts given the current obstacles that smart contracts and dapps are facing, the red stack perfect fit help pass them and accelerate world-wide adoption software powered blockchains. order realise that, the red team will providing uniquely easy use, integrated set tools for smart contract development. this will include smart contract programming language, complete toolchain for building smart contracts and library for building dapps. red/c,a language for smart contract programming red cross chain code (red/c) the red dsl for cross-chain programming and the key part our solution. will compile directly the blockchain virtual machine (vm), using different backends targeting each blockchain (starting with ethereum). the language itself composed two layers: very high-level layer: symbolic, highly declarative language with restricted computing semantics and restricted control flow (turing-incomplete), reading mostly like natural language (compared mainstream languages). coarse-grained code produced this level the compiler will exhibit higher safety, close the level provided templates, while still providing much greater flexibility. intelligent, visual program builder will also considered for pregenerating such code. lower-level layer: general-purpose, statically typed, subset red language, capable general computations. contracts will written high-level code with the ability locally drop the lower layer for more general computations. both layers will able call external contracts written using any other tools, they will fully interoperable with existing contracts. using the new simplicity low-level language intermediary representation considered. red/cis currently still under design. red toolchain for blockchains the red/ctoolchain standalone toolchain, extending the existing red toolchain, that can run natively users' desktop mobile devices. will include: compiler bytecode, with one backend per (starting with ethereum vm). generative test module for extensive contracts testing. blockchain simulators written red/system for fast performance (starting with ethereum target). wrappers separately downloadable minimal blockchain nodes for real deployment. the red/c compiler will written red language, with dependency any other toolchain. the compiler's implementation main concerns are simplicity and shortness few thousand loc the target) order ease auditing and future formal proving correctness. fig.: red/ctoolchain overview secure way store and handle private keys required for sending transactions the chains, including hardware wallet integration. specific library for red token management (for easing and encouraging red-oriented dapps creation), possibly based aragonos zeppelin_os solutions. the hosting and distribution model such redpowered dapps not yet decided. leveraging the decentralized swarm and ipfs infrastructures for those strongly considered. fig. red dapps runtime stack red dapps the web stack used far dapps will replaced the red one, which will about times smaller for standalone dapps (mb for red's runtime ~mb for electron) and will provide integrated native blockchain node, avoiding complex deployment requirements, that plague current dapps. the red regular language and all its built-in dsl will fully available for dapps building. the red standard library will extended include: wrapper for integrating targeted blockchain node (using direct api and/or json-rpc for interfacing). high-level interface operate the smart contracts and send transactions run-time from regular red code (equivalent web similar interfaces web dapps) sandboxed i/o mode enforce security devices running dapps. red: red community token the community has been very important component the whole red project since the beginning. are now willing one step further, and empower the red community even more making distributed autonomous organisation (dao). this dao will enabled communityoriented transferable erc- token called red community token (red). holding red tokens will the pre-requirement member the red dao. the membership will provide privileges, including but not limited to, voting rights for new features and bug fixes the red software stack and red dapps. transactions between community members themselves, including but not limited to, tipping other developers contributions and intracommunity services will done using red tokens. the red community will pave the way new economical model for open source projects communities, building community tools powered dapps and red tokens, which could used later on, other open source communities. order achieve these goals, all the red open source project's assets will moved non-profit foundation, which will define the rules red usage. are closely following how the oax foundation, aragon and other daos are operating and will seek partnerships help build optimal organization. the voting rules and intra-community modes operations for the red will defined the foundation. specific dapps using red stack will built, allowing deeper interconnection between community members. such "community dapps" would require red tokens operate. they would both power the community economics and serve showcase apps what the red programming stack can accomplish. they would include, but not limited to: red wallet dapp community chat system community code exchange place collaborative code editor providing more community dapps will actively encouraged the foundation through rewarding program using red tokens: foundation community: rewarding code contributions rewarding community management rewarding red learning tutorials completion rewarding marketing actions (events organization, presentations and promotions) community community: tipping chat posts tipping code contributions tipping direct peer peer coding help and code snippet exchanges tipping community-provided learning materials paying for peer peer services, like app development, code reviewing and debugging, assets (graphic/video/audio) design and editing, tutoring. the future, the red token also intended serve "meta-fuel" token for smart contract execution across different blockchains, abstract the different per-chain intrinsic fuel tokens. red foundation the red foundation structure was set the beginning january paris, france. the red foundation kindly hosted the ephe, the human and artificial cognition research center. for brief overview, the red foundation structure composed several teams: administrative team: president vice-president treasurer operational team composed regular members. honorary members, who act advisors. the role the foundation manage the whole red open source project, and set new economic model for open source projects using the red token. order achieve that, all copyright holders the red codebase github will asked transfer their rights the foundation. nenad the copyright owner the biggest part the source code, was the first one (resulting changing the copyright the source files headers and license files the benefit the red foundation). the tasks the operational team also working currently, are: website for the foundation, featuring: blog platform where regular reports will made. full information about the red token (usages, reward rules and amounts). contributing task bounties for the red community (paid red tokens). defining the rules for retro-distribution red tokens for past contributions (since the opening the red github repo will proceed with the distribution soon the rules and correct amount reward tokens are decided. this needs the list contributions and contributors gathered. defining the decision processes the operational team. defining the rules for membership the foundation. managing the re-design the red-lang.org site and moving new platform. all those tasks and their results will published the foundation website, for the sake information and transparency. the token sales order kickstart the red community economics and the new blockchain-related technical developments for red runtime stack and toolchain, token sale was held cover the costs hiring extra talents, and marketing campaigns, services and products. this token sales process took place from january january three stages: private angel investors jan jan early bird round jan jan open round jan jan the total fixed supply red tokens ,,. the allocations are: (,,) for private investors with months lockup period. (,,) for crowdsales (earlybird open rounds). (,,) for the red team with months lockup period. (,,) for red foundation. (,,) for marketing and strategic actions. exchange ratios with ethers (eth) are set as: private investors eth red early birds eth red open round eth red only ethers are accepted, with minimum eth. private angel investors also benefit from unlocking the closing date the token sales process. all red token provided for the sales were sold out, providing final amount eth. order participate, all token buyers needed through online registration process (kyc), and provide the required credentials: first and last name email address nationality passport photo photo the passport owner holding the passport strict control those documents resulted rejecting two third applicants, for faked, invalid suspicious credentials. citizens countries that have banned posed heavy regulations such token sales were not allowed participate. the eth resources global allocation plan is: for team recruitment and operations hong-kong and san francisco offices. for red token sales expenses. for marketing operations. for outsourced software developments. those allocations will change depending the conversion ratio eth with fiat money. roadmap the development schedule prioritizes for dapps building soon possible, order kickstart the community infrastructure and usage the red token. the red stack already usable state both windows and macos platforms, the only missing part the blockchain node wrapper the red runtime library, this the first task complete and starting with the ethereum network. red/ccompiler (alpha node simulator (beta) community chat dapp red/ccompiler (alpha neo node wrapper for red dapps (alpha) community code exchange place red/ccompiler (beta) collaborative code editor ethereum node wrapper for red dapps (alpha) red wallet dapp (alpha) online ethereum full-node for red wallet and dapps the wallet currently supports only the nano ledger hardware key (no software keys support for now). the wallet also uses default the ethereum full-node provided the red foundation. for the ethereum node wrapper, have implemented json-rpc library red, used the wallet app. that library will released alongside the wallet code. only covers some basic features from the ethereum node api for now. plan vastly extend the api coverage subsequent versions. once the release red out, could wrap that library code eth:// port and provide nice, human-friendly interface for it. believe that enabling easy way interact with the ethereum blockchain (and some others later this year), will raise the interest existing red coders for the ethereum ecosystem, and set new standard for high-level scripting tasks for blockchains. red/ccompiler (alpha node simulator (alpha) bitcoin node wrapper for red dapps (beta) redwallet dapp red toolchain for blockchains legal considerations the red tokens usage will deeply rooted the intra-community operations and economics. red tokens are not for speculative investment. promises any particular value future performance the red are made. the red stack provides integration with blockchain nodes, written third-parties (like the ethereum foundation), risks associated with blockchain usages and especially smart contract deployment, buying selling smart contracts using red platform provided dapps are assumed solely the user. this document and any other documents published association with this white paper relate potential token offering persons (contributors) respect the intended development and use the network various participants. this document does not constitute offer securities promotion, invitation solicitation for investment purposes. the terms the contribution are not intended financial services offering document prospectus. the token offering involves and relates the development and use experimental software and technologies that may not come fruition achieve the objectives specified this white paper. the purchase tokens represents high risk any contributors. tokens not represent equity, shares, units, royalties rights capital, profit income the network software the entity that issues tokens any other company intellectual property associated with the network any other public private enterprise, corporation, foundation other entity any jurisdiction. the token not therefore intended represent security interest. the most recent version this document can found the following address: https://ico.red-lang.org/red-whitepaper.pdf references smart contract https://en.wikipedia.org/wiki/smart_contract red language http://red-lang.org decentralized apps http://www.ethereumwiki.com/ethereum-wiki/dapps/ depending their turing-completeness levels. https://en.wikipedia.org/wiki/solidity "why solidity isn't solid" https://medium.com/@hibryda/why-solidity-isnt-solid-affcc security issue with ethereum's solidity language, not just the dao" https://medium.com/@muneeb/solar-storm-a-serious-security-exploit-with-ethereum-not-just-the-daoaddfa solidity design issues: https://news.ycombinator.com/item?id= like etherparty blockcat. https://github.com/ethereum/mist/releases https://medium.com/@homakov/why-you-shouldnt-worry-about-the-jaxx-hack-aca like mist client (about download) using metamask browser extension. light clients are still very early stage though. https://hashnode.com/post/is-modern-front-end-overcomplicated-cipwgcbotgwpbuytw red the next evolution rebol language, most expressive general-purpose language according redmonk study: http://redmonk.com/dberkholz////programming-languages-ranked-by-expressiveness/ parse dsl http://www.red-lang.org///-introducing-parse.html cross-platform native gui system http://www.red-lang.org///-red-gui-system.html reactive programming: http://www.red-lang.org///-reactive-programming.html embeddability: http://www.red-lang.org///-libred-and-macros.html http://www.red-lang.org/p/download.html red main chat room: https://gitter.im/red/red simplicity, low-level language for blockchain contracts: https://blockstream.com/simplicity.pdf red/system language: http://static.red-lang.org/red-system-specs-light.html web (https://github.com/ethereum/web.js), ethjs (https://github.com/ethjs/ethjs) ether pudding (https://github.com/ethers/ether-pudding) aragonos (https://blog.aragon.one/introducing-aragonos-say-hi-to-modular-and-extendableorganizations-aff), zeppelin_os (https://zeppelinos.org) swarm: http://swarm-gateways.net/bzz:/theswarm.eth/ ipfs: https://ipfs.io/ open asset exchange: https://oax.org https://www.ephe.fr/en https://github.com/red/red/commit/eaabcacdcedc