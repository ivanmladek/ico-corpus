fiiicoin yellow paper fiiicoin versatile, scalable and energy efficient blockchain technology yellow paper authors sylvester lee cto founder john liu solutions architect age copyright (c) fiiilab technology ltd fiiicoin yellow paper abstract fiiicoin transaction network specifically designed for mobile devices mining purpose only. the blockchain technology enable all mobile devices participate maintaining the blockchain network while leaving idle and charging battery instead relying expensive and powerful computer hardware running the mining work. the main objective create least effort way and promote re-using the existing available resources (mobile devices) together take part maintaining the blockchain. even the non-it people non-crypto fans can easily learn and involve mining long they least have smartphone. fact, smartphone any other mobile devices are not suitable setup blockchain node. the reasons are the computing power weak, storage capacity limited keep full blockchain and battery powered device are not meant running all time, and requires high network bandwidth synchronize blocks data. the mobile device runs the node using network, will finish all the bandwidth time. fiiicoin built using enhanced version proof-of-capacity consensus algorithm delegated proofof-capacity (dpoc) achieve the mobile mining capability while keeping the mobile device from being full node and perform extensive block synchronization work. fiiicoin developed using in-house built customizable blockchain technology fiiichain. fiiichain provide standard blockchain modules with the "plug-and-play" capability for developers modify the blockchain characteristic base the given business requirement. network fiiicoin network based (peer-to-peer) network architecture which constantly connect multiple nodes within the same network synchronize data. network means each computer the same network identical, same privilege and authorization communicate with each other flat topology. addition peer-to-peer protocols, fiiicoin network also include additional custom gateway protocol provide routing service enhance the efficiency network connectivity, that can help newly added nodes the network can quickly access other nodes. routing protocol the fiiicoin network contains multiple master-node servers that are distributed around the world, providing the blockchain data synchronization service every participating nodes, and they run continuously non-stop help other nodes discover other nodes. fiiicoin has global tracker service hosted seed all the active nodes tracker.fiii.io, which work similarly bittorrent. the seeder provides all the addresses all active nodes the node which just join the fiiicoin network. all the active nodes periodically provide heartbeat data the tracker indicate they are still active the network. age copyright (c) fiiilab technology ltd fiiicoin yellow paper node distribution strategy each fiiicoin node collection functions for routing, blockchain databases, mining, and wallet services. each node participates the whole network routing function, participates verifying and propagating the transaction and the block information, discovers and maintains the connection with the nodes. when new node online, all the node lists are obtained from the tracker and then attempt connect these nodes. whenever node establishes connection another node for the first time, the first thing get the full list addresses which the other node currently connecting, download the list own node address database. when node passively connected another node, the passive node requests the latest list from the active node synchronize its own node address database. each node will randomly establish connection active nodes base the list from the own node address database. order for each node maintain fast network speed, reducing the chances data packet loss, avoid network congestion, the strategy applied select nodes that connected, are less than response time, for less than response time, for less than response time, and lastly for greater than response time. the network latency can used assume the distance between nodes. the lower the latency, the nearer the nodes are, while the higher latency mean the node far away from the connecting node. active connection gets disconnected for some reason, the node will automatically attempt reconnect. the node unable connected after attempts, the node will removed from the node address database since offline node. the strategy make sure the nodes are connected real distributed way across the globe, preventing nodes being overly packed one single location the nodes are connecting nodes which has the fast connection only. unhealthy distribution healthy distribution age copyright (c) fiiilab technology ltd fiiicoin yellow paper accounts fiiicoin wallet contains only keys, not cryptocurrency. each user has wallet that contains multiple keys. the wallet contains only the keychain with the private/public key pair. the user uses the key sign transaction prove the ownership the unspent transaction output (utxo). the fiiicoin amount that stored the wallet based the total balance utxo set the blockchain that user own. private key public key fiiicoin contains series asymmetric key pairs, and each asymmetric key pair includes private key and public key. the private key random number, and the public key obtained single encryption via the elliptic curve cryptography (ecc) algorithm. the user produces digital signature using the private key sign transaction, and then using the public key apply data fingerprint. the application this asymmetric cryptography allows anyone verify the signature each transaction, while ensuring that only the owner with the correct private key can produce valid signature. the private key bytes long random number, but its generation process ensured that the results are unpredictable and unique. hence, fiiicoin public/private key pair generated using ed[] high-speed and high-security signature algorithm which derived from eddsa (edwardscurve digital signature algorithm). the benefits are: fast single-signature verification even faster batch verification fast signing capability fast key generation high security level fool proof session keys collision resilience secret array indices secret branch conditions small signatures small keys the generated private key byte stream (bytes) length bits, which stored the keys.dat file the wallet directory. age copyright (c) fiiilab technology ltd fiiicoin yellow paper address fiiicoin address string characters with combination numbers and letters but excluded the uppercase letter "o", uppercase letter "i", lowercase letter "l", and the number are never used prevent visual ambiguity. the address generated hashing the public key with sha, following perform race integrity primitives message evaluation (ripemd) public key hash, then lastly encode the final hash with base encoding become address which unique, recognizable and verifiable. public key bytes sha public key hash ripemd hash xee hash double sha xee hash checksum bytes base encoding fiiim base symbol fiiimkdjcadfpksegazffesdawedaldn address generation process flow for mainnet, the address prefix fiiim for testnet, the address prefix fiiit age copyright (c) fiiilab technology ltd fiiicoin yellow paper transactions fiiicoin huge public ledger that keeping all the transaction records into blocks which similarly bitcoin the blockchain technology originator. transactions are the core data which distributed all the participants the network. input output the fiiicoin transaction consists set inputs and outputs, whereby the output the fundamental the blockchain transaction. transaction must have least one output more, but can have input. the output inseparable, stored the blocks, recognizable the entire blockchain network. all the spendable fiiicoin actually unspent transaction outputs (utxo). the wallet stores the collection utxo (known utxo set) wallet.dat file, from there calculating and displaying the total amount fiiicoin which usable. when someone send fiiicoin person, the wallet forms new transaction that the sender utxo become input, while the recipient will receive output. each utxo can only consumed once. utxo behaviour similar bank note. when transferring amount fiiicoin recipient, may involve combination use multiple utxos achieve same greater than the transfer amount set transaction inputs, the excess output amount will returned back with new utxo add into existing utxo requested. mining fee fiiicoin mining fee can low fiii per kb. fiiicoin powered delegate proof capacity (dpoc) consensus algorithm whereby only the dedicated super nodes responsible mining and forming blocks, hence the mining less competition and the mining fee low. refer the consensus algorithm section below for more dpoc explanation. age copyright (c) fiiilab technology ltd fiiicoin yellow paper transaction data structure the transaction data structure follow: "version": "locktime": "vin": "txid":"afefdddaafad...", "vout": "sequence": }], "vout": "value": "scriptpubkey": "op_dup op_hash abcdb... op_equalverify op_checksig" "value": "scriptpubkey": "op_dup op_hash fbafbd... op_equalverify op_checksig", version: transaction version locktime: the time for the utxo spendable vin: inputs txid: current transaction vout: the sequence order the output sequence: transaction time but must greater equal the transaction lock time. scriptsig: unlock script with digital signature and public key. refer transaction script section for more detail. vout: outputs value: transfer amount scriptpubkey: unlock script with digital signature and public key. refer transaction script section for more detail. age copyright (c) fiiilab technology ltd fiiicoin yellow paper transaction script the fiiicoin transaction verification engine relies two types scripts authenticate: locking scripts and unlocking scripts. locking scripts often contain series instructions and public key hash (obtained from the recipient wallet address). unlock script typically contains user's public key and digital signature generated the user's private key. scripts are typically used the following two scenarios: validating utxo after the node receives new block, read the locking script instructions, iterates through all the transactions and attempting match its own public key and digital signature for unlock verification. matching successful, the node claims the output ownership, then added the output node utxo set, and then updates the wallet balance. transaction verification while the miner prepares the block data during the node receives new block, validates all the inputs the transaction extracting the digital signature and public key, and then trying match the inputs with the outputs from other transactions, and then unlock the output using its own digital signature and public key. the unlock successful, indicates that the transaction input valid, otherwise, the transaction considered illegal tampered. transaction confirmation after transaction generated, first entered into the transaction pool (or known memory pool) and then broadcast the transactions all the connecting nodes the entire blockchain network. the miners first verify the genuine the transactions (as explained the section transaction verification above), and then prioritize the transactions base the transaction fee (mining fee the byte length the transaction) and writing the transactions into block, then undergo the mining process. the block being successfully mined, block being broadcasted all the connecting nodes. transaction considered confirmed only after the transaction the block has behind. once the transaction confirmed, the transaction outputs will unlocked base the unlock script and then utxo set and wallet balance will updated. blockchain blockchain series data that linked between blocks base individual block hash id, and each block contain the data structure public ledger that book keeping transactions between accounts. can stored flat files simple database. fiiicoin uses the sqlite database store metadata. the blocks are chained from old new sequence order, and each block points the previous block. blockchain are often treated vertical stack, the first block (known genesis block) will the very bottom the stack, and each block stacked above the previous block. the "height" indicate the distance the block from the first block. age copyright (c) fiiilab technology ltd fiiicoin yellow paper blocks block ledger that contain transaction records. fiiicoin block size limited containing all the transactions data size add-up. the following are the block data structure: attribute height version timestamp previousblockid nextblockid nonce bits difficulty size data type string long integer datetime string string long decimal decimal long tps nullable yes remark block hash value block height block version block creation time previous block hash next block hash mining nonce value for this block hash locking time difficult mining this block block size block size size time the block generation time minute seconds). since each transaction size around bytes, the coinbase transaction size about bytes. with block size limit, can store transactions per block. hence, theocratically can support around transactions per second. each block will generating fiiicoin coinbase transaction the miner. the coninbase reward will halved every million blocks. the following are the coin supply rules: stage genesis coin supply ,,,. ,,,. ,,. ,,. ,,. ,,. ,,. ,,. ,,. ,,. ,,. ,,. block reward blocks age copyright (c) fiiilab technology ltd fiiicoin yellow paper total ,,,. total fiiicoin maximum supply ,,,.. base the coin allocation for the fiiilab marketing purpose, and considering the blockchain economy, the genesis block has been hardcoded mint billion fiiicoin into designated account. remaining billion fiiicoin open for mining. when the total blocks have been mined, there will longer any coinbase reward. the miner can only earn from the transactions fee. genesis block the first block the blockchain called the "genesis block", which the common ancestor all the blocks within the block chain, meaning that you backtrack from any the block, ultimately will back the genesis block. the height the genesis block and its previous block hash value always copyright (c) fiiilab technology ltd fiiicoin yellow paper byzantine fault tolerance fiiicoin nodes contain block pool that temporary keep unconfirmed blocks, then perform block validation and identify the block which has forged signature base the transaction script prevent double spending. the transaction block need recognized least the entire blockchain network then only considered the genuine chain. fiiicoin nodes periodically synchronize blocks the same time validating the chain with all the peers, and capable rejecting false blocks with unrecognized digital signature, making those blocks become orphan blocks. the rule simple: the longest chain the highest accumulative difficulty chain recognizable least the entire blockchain network there may case whereby the network latency delays the block synchronization causing the block with greater height has parent. the node cannot reject yet but have temporarily keep the block pool, until there same height block already chained into the main chain, the block will rejected permanently. delegate proof capacity proof capacity (poc) also known proof space (pospace) consensus algorithm originated from burstcoin which somehow similar proof work (pow). however, poc uses storage instead computing power perform proof work. poc energy efficient for mining and the concept suitable for mining with mobile device which has weak cpu and memory. due the consideration the balances security, decentralization and performance the blockchain, fiiicoin form new delegated poc consensus that limiting certain participation the blockchain network which aim solve the following problem: limiting mining access prevent attack improve performance better crowd control consensus formation base the implementation delegate poc, there will types node order form the consensus. copyright (c) fiiilab technology ltd fiiicoin yellow paper super node the super node the main delegated node that responsible generating new block, verification and data synchronization. the roles the super node are follow: identify and delegate mining access. issue proof capacity mining work. validate mining work. construct blocks. synchronize broadcast blocks. the super node will setup with mining pool cater for managing the miner delegation and coinbase reward allocation. mining node each mining node registered the super node and allocates desired storage space for storing the pre-computed hash data beforehand get mining work from the super node. mining node need obtain the access token from the super node providing digital signature and account id. the mining access can only support single session, using the same account and digital signature get work from the super node will refresh the access token, eventually kick the previous connecting session. wallet node wallet node the basic blockchain node that download blocks data, validate blocks, submit transaction, check account balance and providing routing services the peers. mining process flow the mining process follows: the miner submits the following information the super node request for mining access: fiiipos serial number device account wallet address the super node validates the device and approve the mining access request. the super node return access token the miner. the miner proceeds request job with the access token from the super node once the miner completed the job and then repeat step the miner receives the coinbase reward the nonce found successfully. copyright (c) fiiilab technology ltd fiiicoin yellow paper mining flow miner pool super node start plotting files submit mining request end check request recognized device? yes get mining information forming block package job return work scan nonce generate access token submit nonce validate nonce correct nonce? yes submit nonce chain the block broadcast block distribute reward block received confirmation phase end copyright (c) fiiilab technology ltd fiiicoin yellow paper plotting prior mining, file plotting the first mandatory step compute all the hashes and nonce and then save them into storage space. nonce integer range from hashes are generated base nonce. each nonce generates unique hash data. the amount allocated storage space determines how many nonce and hashes can stored. all the generated nonce and hashes can grouped into scoop, and each scoop has slots. each scoop bytes large and formed base two bytes hash value. each scoop has from fiiicoin uses sha- create mining hash values. nonce the base value parameter given the sha- hash function generate unique hash value. the reason using sha make the hash value difficult compute and making difficult building application-specific integrated circuit (asic) mining machine for fiiicoin. also, since the hashes need pre-computed only once during the file plotting, become advantage use the sha slow hash which not suitable real time mining. before generating hash value with nonce, prepares seed data first, then only perform sha- hash, then save into storage. the seed data consists fiiipos serial number, device id, account id, wallet address and bytes long nonce. the hash value will stored the scoop with hash label. seed fiiipos serial number device account byte nonce sha- byte hash mentioned above, each scoop slot has bytes storage which can keep two bytes hash values, hence one scoop can keep hashes. so, the first hash will labelled starting form the back. next, form new seed with hash, then hash again get hash. copyright (c) fiiilab technology ltd fiiicoin yellow paper seed byte hash fiiipos serial number device account byte nonce sha- byte hash according the previous step, the length the seed data exceeds bytes when the calculation exceeds times. when the seed length greater than byte, the seed used the subsequent step calculation takes only the first byte. other words, the seed the sha- operation does not exceed bytes. base the above steps, repeat the hash function continuously until hash value generated, the last hash value will hash also known the final hash. the following how the scoop and hashes being stored the plot file: nonce scoop hash hash scoop hash hash scoop ... hash hash scoop hash hash the dpoc mining consensus rule, the super node will first determine which scoop find for nonce current block hash. order enhance the efficiency the mining node, the system will automatically optimize the data storage format for easy searching correct plot file. the plot file name format is: deviceid_accountid_walletaddress_scoopnumber_startingnoncenumber_numberofnonce with the above mechanism, the mining process force the miner read the plot file from beginning till the end, there will cheating, though burstcoin had optimized plot file way reduce the scanning time, but fiiicoin will remain the unoptimized plot file structure. copyright (c) fiiilab technology ltd fiiicoin yellow paper mining once the plot files have been created, miner connect the super node get mining information. the super node will forge block taking transactions from the memory pool. then, base the last blocks generation time, calculate the basetarget value the deadline order maintain the seconds block generation time, then follow the scoop number. the miner starts scanning from the nonce file until the last file, then look for the scoop and hash value from within. miner nonce scoop hash hash scoop hash hash scoop ... hash hash scoop hash hash nonce scoop hash hash scoop hash hash scoop ... hash hash scoop hash hash ... nonce scoop hash hash scoop hash hash scoop ... hash hash scoop hash hash nonce scoop hash hash scoop hash hash scoop ... hash hash scoop hash hash the rule determine the block mined successful the nonce value for the corresponding hash value has the derived target value the specific scoop lower equal than the basetarget. the following the process determining the scoop and target: generate the block signature (gensig) hashing the previous block signature and current block generator address with sha-. copyright (c) fiiilab technology ltd fiiicoin yellow paper obtain the genhash hashing the gensig and block height. seed byte gensig byte block height sha- byte genhash calculate the scoop number modulo genhash. miner search for the nonce the specific scoop number only the bytes scoop data and bytes gensig will hashed get the target. plot file seed nonce scoop nonce scoop byte scoop data byte gensig nonce scoop sha- target compare the target and basetarget, target lesser equal basetarget, means the nonce correct, super node will chain the block and broadcast inform all the connecting peers. mining difficulty order maintain the block generation time average seconds, the mining difficulty will automatically adjusted every blocks. when the difficulty high, the basetarget value will low the deadline short. when miner able complete the mining within the deadline, the miner obtained lowest target value will the winner. the new difficulty calculated based previous block old difficulty (o) and sum last blocks time (t) divide seconds. d=o copyright (c) fiiilab technology ltd fiiicoin yellow paper smart contract smart contract pre-programmed script that executable when certain criteria situation met. the contract not amendable and has its own digital signature. fiiicoin also equipped with smart contract capability. relies microsoft roslyn compiler perform the smart contract script execution. hence, the smart contract can coded vb.net. roslyn compiler supported windows, linux and macos platform. smart contract script will digitally signed the contract creator. the signed contract has unique hash fingerprint and given unique address that kept side chain. the smart contract script will kept the contract node. block: data: smart contract ddacafbc... version timestamp signature bcbeaad... contract ddacafbc... source accountid cbdbafc block: coinbase: fiii from tx: fiii from fiii from fiii from fiii from block: coinbase: fiii from tx: fiii from fiii from fiii from fiii from virtual machine roslyn compiler prev: ... prev: dbafb... prev: dfdbfafcafefb... hash: baeabcafafad... hash: baeabcafafad... hash: cffdbadc... side chain for smart contract main chain public ledger for fiii transaction the main chain will remained public ledger track transactions between accounts. the additional side chain specifically keep smart contract. the reason doing maintain the cleanliness the blockchain and clearly differentiate the aspect purpose. the contract *.cs for *.vb for vb.net file format and the script content follow the fiiicoin smart contract template. using system; using fiiilang; namespace fiiicoin.contract class exchangecontract public void deposit(string address, decimal amount) //some coding public void convert(decimal amount, datetime date) //some coding public void withdraw() //some coding copyright (c) fiiilab technology ltd fiiicoin yellow paper signing contract after the contract has been created, the creator uses its own account private key sign the contract. the contract will uploaded the contract node for compilation. the contract node has the collection all smart contracts. the virtual machine run the contract node responsible executing the smart contract when the contract defined condition met. contract bug there developer that does not create bug despite the script has been fully tested. since the contract kept the contract node and not the blockchain, the contract can amended and then re-signing and reupload the contract node. the new contract signature will updated the side chain. there will prevcontracthash reference that act contract chain that telling the contract node there newer version the contract. contract attributes the following are the contract attributes that store the side chain: attribute name version language timestamp previouscontractid nextcontractid creatorsign accountid data type string string integer integer datetime string string string string nullable yes remark contract hash value contract name contract version c#, vb.net contract upload time previous contract hash next contract hash contract creator signature contract creator account fiiicoin smart contract not meant for public use and not blockchain operating system platform like ethereum eos. fiiilab use different approach for platform service (paas), which provide blockchain service (baas) creating online platform that generate blockchain source code template based user requirement customize. the new blockchain from other project can link fiiicoin blockchain support cross chain communication. copyright (c) fiiilab technology ltd fiiicoin yellow paper multichain fiiicoin leverage smart contract perform multichain and cross-chain communication, ultimately, the payment and crypto exchange solution will fully decentralized. the smart contract fiiicoin used track the exchange activity other crypto. main chain public ledger for coin transaction exchange fiii side chain for fiii coin exchange fiii main chain public ledger for fiii transaction exchange fiii side chain for fiii coin main chain public ledger for coin transaction all the crypto-to-crypto exchange must through smart contract book keeping the transaction. the third party crypto that uses fiiichain technology will have ready api that capable direct communicate with fiiicoin smart contract perform automated exchange. acknowledgement the authors would like thank all the fiii community, enthusiast, fans, evangelist with many useful feedbacks that bring success the technical implementation. also, would like express our gratitude burstcoin for the original idea proof capacity consensus, bitcoin for the payment and blockchain idea, ethereum for the smart contract, and eos for the delegation approach risk mitigation. the content yellow paper subject update the future case any changes the technical implementation. copyright (c) fiiilab technology ltd fiiicoin yellow paper references high-speed high-security signatures https://ed.cr.yp.to/ed-.pdf the features https://ed.cr.yp.to/index.html bitcoin: peer-to-peer electronic cash system https://bitcoin.org/bitcoin.pdf delegate proof capacity https://sylvester-lee.blogspot.com///delegate-proof-of-capacity.html proof capacity https://en.wikipedia.org/wiki/proof-of-space burstcoin https://burstwiki.org/wiki/whitepaper:burst proof work https://en.wikipedia.org/wiki/proof-of-work_system application-specific integrated circuit https://en.wikipedia.org/wiki/application-specific_integrated_circuit burstcoin optimized plot file https://burstwiki.org/wiki/technical_information_to_create_plot_files microsoft roslyn compiler https://github.com/dotnet/roslyn change log version initial draft the yellow paper copyright (c) fiiilab technology ltd