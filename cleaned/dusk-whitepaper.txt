the dusk network and blockchain architecture scalable consensus and low-latency data transmissions for privacy-driven cryptosystems emanuele francioni fulvio venturelli dusk foundation amsterdam, the netherlands emanuele@dusk.network dusk foundation amsterdam, the netherlands fulvio@dusk.network abstract implement efficient payment mechanism for high qos applications such secure and anonymous voice calls order satisfy broad set data transfer scenario, the dusk network adds additional layer security the protocol suite (used mostly peer-to-peer fashion). through the adoption mix established strategies and novel techniques, the dusk network has been conceived specifically protect the privacy the communicating peers from any form eavesdropping while satisfying variety challenging use cases varying from fast communication (e.g. voice calls) large data transfer (e.g. file transmission). dusk circumvents the notorious unreliability crowd-sourced infrastructures embedding economic incentives into the core mechanism the network itself. such incentives are designed encourage peers partake the network permission-less, anonymous and private fashion. important difference with cryptonote, that dusk does not make use proof-of-work mining and therefore drops completely cryptonight and deviates substantially from the hashing algorithms therein adopted. particular, dusk uses what call segregated byzantine agreement (sba) protocol which enhances classic implementing specific measures protect peer privacy. sba has been developed specifically power the dusk blockchain and help meeting the aforementioned requirements. these efforts not solely relate the application layer but extend the networking layer well. this why the dusk protocol makes use of: stealth addresses: protect transaction recipient anonymity ringct signature: protect transaction sender's identity anonymous network layer: protect the address the network peers; provide secure data transfer mechanism; implement off-line data retrieval strategy; power the anonymous gossip network for transaction propagation and verification non-interactive verifiable secret sharing scheme: conceal all but highest priority time-locked transactions from the participants the block generation sortition cryptographically committed provisioners: protect the information about stake; implement division responsibilities between block generators and the electable block voters and verifiers; boost network efficiency acting state channel guarantors; incentivise participation the network; protect the balance information transacting nodes; prepare sba for future expansion with non-balance and non-payment related weights such storage contributed the network (as proof-of-storage), availability expressed elapsed time since joining the network (as proof-of-idle), etc. keywords dusk, blockchain, cryptocurrency, privacy, consensus, segregated byzantine agreement introduction the dusk network makes use decentralized and privacy-oriented digital currency that evolves the cryptonote protocol[] through the groundbreaking discoveries the field byzantine consensus and pseudo-random functions world renown cryptographers such silvio micali, michael rabin, alexander yampolskiy and evgeniy dodis. dusk radically departs from any other blockchain employing adaptive consensus mechanism, called segregated byzantine agreement (or sba), which does not require the computational intensity proof-of-work and fairer alternative proof-of-stake. built such consensus algorithm, dusk poised the first simultaneously achieve previously conflicting goals guaranteeing transaction untraceability and unlinkability, safeguarding user privacy, reaching transactional "finality" after bound number rounds within single block election and achieving virtually unbounded user scalability without any significant performance degradation. the dusk network requires heightened security setup designed specifically to: preliminaries diffie-hellman hardness assumption any group, discrete logarithm lodb number such that most the cryptographic building blocks related this work are linked the diffie-hellman assumption which uses the hardness discrete logarithms cyclic groups []. considering multiplicative cyclic group order and generator can formulate the following assumption: given and for uniformly and independently chosen then dab performs like random element order obfuscate addresses the communicating peers prevent linkability and traceability accounts guarantee network performance this paper published under the mit international license. authors reserve their rights disseminate the work their personal and corporate web sites with the appropriate attribution. web symposium, april amsterdam, the netherlands (c) stichting dusk foundation, published under mit license. web symposium, april amsterdam, the netherlands francioni and venturelli prime number; this the number points the curve. element -/; value used the curve equation below elliptic curve equation; the twisted edwards curve/equation are using base point; (x, -/); the**generator** point. this base starting point used for all elliptic modulo operations. prime order the base point; the order the base point this defines the maximum size scalars and the maximum number points that can used. cryptographic hash function deterministic hash function e(fq e(fq all private and public keys dusk will using hex characters. figure generic elliptic curve consequence such assumed randomness, the decisional diffie-hellman (ddh) problem relates distinguishing the following two probability distributions: (da dab (da dab are defined diffie-hellman tuple (da hiding recipients: stealth addresses inspired the cryptonote white-paper[], stealth address technology the basis dusk recipient hiding technique. already widely tested other privacy-oriented digital currencies, the proven choice for concealing the true recipient address transaction while keeping uniqueness within the context the ledger (meaning other address can linked stealth address). additionally, derivation unbound number receiving addresses also possible without any them allowing traceability back the recipient's main address. anonymous key agreement protocol, dusk uses the elliptic curve diffie-hellman (ecdh) due the desired property allowing two parties generate shared secret solely knowing each other's public key, and the generator point the elliptic curve used the twisted edward equation. following detailed explanation how dusk implements stealth address technology. elliptic-curve cryptography the elliptic curve diffie-hellman the elliptic curve diffie-hellman (ecdh) anonymous key agreement protocol, variant the diffie-hellman protocol adapted work with elliptic-curve cryptography. thanks ecdh, two parties can generate shared secret over unsecured connection only knowing each other's public keys, and the generator point the elliptic curve used the ecc equation. demonstrate this, will use alice (with private key and public key a=ag) and bob (with private key and public key b=bg). (where the generator point) previously stated, points curve can added together, and alice could calculate point but this could also potentially done anyone eavesdropping the conversation, since and are publicly available. now, let's remember that and are points the elliptical curve, and that can add point itself. alice can now calculate new point d=ab, and bob can get d'=ba. can now prove that d=d', and thus alice and bob share secret operating ecc and knowing each other's public keys and the generator point the system makes use elliptic-curve cryptography (ecc), hence approaching public-key cryptography through the algebraic structure elliptic curves and thus allowing for the creation smaller and more efficient cryptographic keys. ecc gives the same security levels of, for example, rsa, but using much smaller security key. the structure elliptic curve plane curve satisfying the equation which returns the graph figure ecc, galois field created taking the modulo all points using large prime number, creating finite number values for the used equation. the following axioms are furthermore taken into account: point can't multiplied divided another point. any point the curve can added subtracted another point (or itself). adding point itself allows for scalar multiplication. accounts and addresses the following procedure will used create address. pick random /textitprivate spend key, generating random bits, and reducing mod call this hashed with hashing algorithm (keccak_). interpret the result the hashing integer, reduce mod before. call this key generate our public spend and view keys and hash (network prefix (xef) with append the first bytes this operation (prefix a), obtaining bytes value convert this cnbase. will explain how stealth addresses work first going trough brief explanation about key exchanges ecc scenario, the next section. private and public keys the dusk blockchain utilizes curve, which twisted edwards curve with the following elliptic curve parameters: the dusk network and blockchain architecture web symposium, april amsterdam, the netherlands figure stealth transaction given common generator point alice has a=, a=g (private and public keys) bob has b=, alice computes d=ab=b=*g=g bob computes d'=ba=a=*g=g d=d' point has corresponding scalar the example above equal which shared secret between alice and bob figure ring signature transaction calculates f'=hs calculates f'=f'g calculates p'=f'+b p'=p, then bob knows the transaction was intended for him, and can retrieve like this: (bob has compute the secret key associated with the transaction) stealth addresses let's consider the diagram figure from the cryptonote whitepaper. the dual-key stealth address defined (ra) the link-ability the stealth address achieved using combination spend/view-keys, without actually allowing spending transaction take place. let's now assume that alice has private spend-key and private view-key call her public spend/view-keys the other side, bob's public keys are and with bob's private keys and unknown alice. order build stealth address, bob needs compute (an arbitrary random scalar chosen alice) and the corresponding ecc point such rg. not being shared with anyone and can discarded after its use unless alice wants prove that she sent transaction bob external party. added the transaction that can seen everyone. new calculated for each transaction, since reusing the computation the stealth address, would result collision. therefore, given the equation above: (ra)g stealth address can constructed follows. the stealth address where the funds will sent hashing algorithm returning scalar value the random scalar chosen alice bob's public view-key the standard base point bob's public spend-key alice calculates point from ecdh using randomly chosen and bob's public key bob computes independently from alice, due the properties ecdh. alice computes the scalar (d) (this hashing step creates unlinkability between bob's address and the new stealth one) and calculates f=fg, and (bob's public spend-key). now, order check the transaction's recipient, bob: calculates using propagated with the transaction (the equality d'=ar still unproven). bob knows (computed above), and derives xf'+b (bob's private spend key) knowing that p=xg, got p=xg=(f'+b)g bob then has check the transaction spent, bob computes key-image and checks the blockchain the image linked that transaction has been spent. image i=xhp (p) bob can then sign new transaction using obfuscating sender ring signatures are efficient, established way obfuscate the input transaction making use sender's account keys and number decoy keys (called outputs) taken directly from the blockchain, using triangular distribution method. the technology finds its roots the early days blockchain research, satoshi nakamoto himself was hypothesizing back "crypto may offer "key blinding". did some research and was obscure, but there may something there. "group signatures" may related." the procedure allows one the members the ring sign messages behalf the whole group, and doing renders infeasible know exactly which member signed. (figure group signature procedure, there central management setup all the signer needs the public keys the members she chooses part the ring. each signer associated with public key and corresponding private key ring signature scheme defined two procedures: ringsign(m, ..., pkr sks which method for computing the ring signature which gets the message the public keys the ring members, and the private key the message signer. https://bitcointalk.org/index.php?topic=.msg#msg web symposium, april amsterdam, the netherlands francioni and venturelli blockchain, and anonymous networking used give full anonymity the nodes involved. the dusk network, ringct used default for all transactions except those used participate the sortition for block generator (which are normally ring signed). this merely detail, though, considering that external observer would not able tell these two kind transactions apart from each other. figure ring stealth transaction ringverify(m, q): which procedure verify the signature which gets message and signature arguments, and returns boolean (correct not correct) output. signature generation having message and its own private key sks together with sequence ring member's public keys, signer can create signature follows: computes key h(m), where collision-resistant hash function. chooses random chooses random and computes solves for the equation containing the combining function ck,v ..., finds knowing its own sks ds- creates ring signature: ..., signature verification verifier can confirm ring signature follows, having the collection the member's *public keys:* compute, for each computes h(m) confirms the equation ck,v ..., for values the equation correct then the signature valid, otherwise it's not. future development: bulletproof transactions initially, non-interactive proof knowledge based [fiat-shamir heuristic have been taken into consideration order conceal transaction information such sender and amount. however, quickly appeared that technologies developed top its concept such zk-snarks require prohibitive computational power and time processing for transaction generation. even the more recent zk-starks []) proved impractical integrate dusk because the problematic hurdle needing extremely bulky verification proof (as big several hundreds kilobytes), although solving the problematic reliance trusted third-party for system setup and being substantially simpler than zk-snarks terms cryptographic primitives (they not make use elliptic curves, nor public key cryptography). the most promising advancement the field transaction confidentiality probably given the so-called bulletproof transactions [], which would appear provide substantial improvement over ringct terms cryptographic proof size. the time this writing, first tests show tenfold reduction size and verification times (although still not reaching the same level efficiency compared zk-snark proof). given the "pluggable" nature dusk core, the underlying software for transaction generation will kept flexible through plugin architecture order facilitate the adoption future implementation bulletproof transactions soon emerging library proves stable enough for integration. ring confidential transactions cryptographic accumulator the set algorithms known cryptographic accumulators have been developed allow hashing finite and potentially large set values into single succinct value, called the accumulator. the algorithm enables efficient computation witness for every accumulated input that proves its membership the accumulator. dynamic accumulator special kind accumulator which permits efficient input addition and deletion where the computation costs these operation independent the number values added deleted. such, space and computational time efficient data structure initially developed for testing membership. formally, dynamic accumulator tuple algorithms defined follows: blockchains such monero use particular breed ring signatures called ring signature confidential transactions (ringct where the privacy taken one step further not only giving full anonymity the sender level (as explained above), but also the amount spent and destination. the ringct technology makes the payment virtually unlinkable the original spender, fast, and also conceals the amount being transferred. confidential transactions include cryptographic proof that, given set input amounts, proves that their sum equates the output amounts, without revealing them. practice, alice has output dusk and wants send bob dusk, she will have spend the output its entirety transaction and then send the change dusk) back herself. (figure this commitment represented the formula: rct (g) the formula, the amount sent out the transaction, computed random value. publishing the value rct the network output, the network will able verify the legitimacy the submitted transaction. this technology goes top the already untraceable (stealth) addresses used the dusk generate(k (skacc pkacc given security parameter return (private, public) key pair. notice that the parameter sensitive information (trapdoor) which could deterministically recreate the private key eval((skacc pkacc (acc aux): probabilistic algorithm that gets the key pair and set accumulated and returns the accumulator and some auxiliary data witnesscreate((skacc pkacc acc aux, wit creates witness wit otherwise the dusk network and blockchain architecture web symposium, april amsterdam, the netherlands verify(pkacc acc wit wit witness for this the actual membership verification add(skacc pkacc acc aux, acc the element not already the set returns the updated accumulad tor acc with {yi delete(skacc pkacc acc aux, acc the element the set returns the updated accumulator acc with \{yi witnessupdate((skacc pkacc wit aux, wit updates the witness for case has been added deleted (aux describes which the two) different technologies exist that implement accumulators with different level computational efficiency and security requirements. currently, dusk experimenting achieve the best tradeoff between decentralized choice and efficiency accumulator technology. following are the technologies under evaluation. operation". this association the basis for elliptic curve multiset hash which constructs homomorphic multiset hashing top efficient blake hash function and binary elliptic curve encoding. this allows for incremental/parallel computation hashing function for various applications including efficiently testing for subgroup membership. this makes ecmh appealing alternative the other known algorithms construct accumulators, especially since the method unencumbered with the necessity trusted setup. rsa accumulators abundant literature has been developed regarding many different accumulators, particularly the so-called rsa accumulators. considering strong rsa setting, rsa accumulators (e.g. carmenish's and lysyanskaya's dynamic rsa accumulator []) are based one-way rsa function for suitably calculated where and are sample primes with polynomial dependence the security parameter and therefore are effectively the accumulator's trapdoors which need destroyed immediately after parameters are generated. alternative, the employment rsa- could used circumvent the need for developers know the security parameters and act trusted party, considering that the related security parameter claimed destroyed and factoring solution the rsa- number has been found for the past years despite incentive offered. .., comacc modn the set members pactly represented the accumulator acc witi d(a, ..,ai -,ai ..,an )modn expressive bilinear accumulator under such security assumption, dynamic accumulator schemes from bilinear pairings have been developed the literature. among those, expressive zero-knowledge set accumulator has been formalized zhang, katz and papamanthou capable providing succinct proofs for large collection operations over accumulated sets, among which particular interest the sum operation, which could find application for rapid and zero-knowledge calculation accumulated provisioners stakes. however, similarly rsa, bilinear pairing accumulators present also the drawback relying the security parameter segregated byzantine agreement the dusk blockchain built upon novel consensus mechanism, called segregated byzantine agreement (sba), engineered provide the best possible tradeoff between security, efficiency and flexibility. sba complements the idea cryptographic sortition, player replaceability and ambiguity resilience (firstly introduced the consensus developed micali and the mit csail []) with the new concepts stealth time-locked transactions method for sybil resistance and non-interactive verifiable shared secret scheme implement simple but secure (t,n)-threshold secret sharing for keeping sortition auditable solely rotating set pre-block verifiers. order both improve network and block-generation efficiency and privacy transacting peers, sba allows only normal transactional nodes compete for block-generation, while restricts the computationally and network intensive tasks associated with verification, voting and notarisation (vvn operations) nontransactional nodes called provisioners. provisioners harden the dusk blockchain decreasing network communications across vvn operations, improving the time-to-finality through notarisation process, decreasing the probability network partitioning and contributing the overall availability dusk network. furthermore, they contribute distributed storage infrastructure the dusk on- offline file transfer, and enable runtime payments high qos transmission handling state channels for communicating peers through novel mechanism secure tunnel switching. cryptocurrencies powered message-passing byzantine agreement (ba), use cryptographic sortition order carry out the functionalities block proposals, validations and subsequent insertion into tamperproof sequence blocks. its essence, each node the network, while collecting (and further relaying) pending transactions, runs computationally lightweight process that yields pseudo-random fashion which role such node should assume the operations production and validation new block. the great advantage compared other consensus mechanisms based upon proof-of-work proofof-stake, lays primarily avoiding any possibility forking the blockchain and thus preventing any ambiguity about which branch will become the dominating one. this translates into the appealing property achieving transaction "finality" soon consensus reached for block. the best case scenario this happens after rounds non-interactive elliptic curve multiset hash shepard, tibouchi and aranha teach new and efficient method "associate hash value arbitrary collections objects (with possible repetitions) such way that the hash the union two collections easy compute from the hashes the two collections themselves: simply their sum under suitable group https://en.wikipedia.org/wiki/rsa_factoring_challenge web symposium, april amsterdam, the netherlands francioni and venturelli sortition. the worst case scenario (weak network synchrony controlled adversaries for long but bounded period time), achieves block finality after rounds. consensus very convincing engine for powering open cryptocurrencies which not require privacy. the election block generator and block voter requires the total weights available the system and each sortition candidate's balance public and known all peers order allow blocks proposed higher priority members propagated within the network and validated multiple voting committees. this problematic for privacy-oriented digital currency such dusk which strives protect the data the transacting actors. sba therefore focuses primarily the privacy transactional nodes while keeping auditable (but not public) only essential information about nodes participating block generation, validation and notarisation. their stake the accumulator any. this case, this information gets added the pre-block voting number rounds each which run different subset provisioners called voters. proves that the amount round optimistically for strongly synchronous network and for weakly synchronous one with strong adversarial presence controlling the network (albeit for finite period time) notarization the voters which reached voting consensus the pre-block are called notaries. the public key the notaries are added the pre-block and they play the role verifiers the next block's validation phase. the pre-block finally turned into official block the notaries adding the block reward information. consensus outline the algorithm has been developed direction unsuitable for dusk because transactions are supposed propagated clear, nodes not keep private state except their private keys and there measure prevent every node the network learn every other node's balance, address and, ultimately, providing mere pseudonimity protect their identity. propose here new approach that evolves into what call sba (as segregated byzantine agreement) which finally renders the consensus mechanism outstanding choice for privacy-oriented currencies (such dusk) due its quick finality mechanism, minimal amount computation required and speed block production. sba foresees different subsequent cyclic phases, all which are non-interactive, with the sole exception the validation, where the nivss_reconstruct requires o() communications complete. verifiable random function the cryptographic sortition implemented through the so-called verifiable random function (vrf). formally, for generation algorithm gen producing the key pair (pk proving algorithm prov (x) which outputs pair function value and proof correctness (x), psk (x)), vrf function for which exists verification algorithm (x, which verifies that (x) using proof practice node running vrf can prove the output received propagating together with the vrf result. this way node, running vrf and communicating its output, can convince its peers non-interactive fashion (meaning without talking anyone else the network) whether has been selected "the cryptographic sortition" play specific role the current block creation round. the roles are either block generator block verifier. the elected node will then proceed perform the steps foreseen its role independently from all the other nodes (regardless their role) and thus propagate the result such operations the network together with their allotment proof outputted the vrf. the nodes forfeit their role and become irrelevant the consensus soon they communicate with the network. this way, the algorithm makes virtually impossible for adversary target nodes participating the block election transaction validation. only small fraction the nodes each round get randomly selected. the likelihood positive vrf output depends weight correlated the amount digital currency committed node. this the public balance each node, sba this depends the sortition role (i.e. block generators commit payment while provisioners commit stake). regardless the type commitment, the weight mechanism used prevent sybil attacks since renders probabilistically and economically disadvantageous for node replicate itself over several different sybil processes, since such behaviour would actually decrease its chance winning the ballot. block generation sortition run nodes with time-locked stake called block generator candidate (or simply "candidate"). during this phase the candidates run the vrf, calculate their priority, run the non-interactive verifiable shared secret protocol and propagate pre-block (which block proposal that still needs get through various round consensus and gets decorated with additional meta-data along the way) together with the various proofs. default block generation sortition run provisioners parallel the block generation sortition. the eventuality that the block generation sortition produces candidate with priority higher than zero the validation phase fails, provisioners run the classic sortition algorithm supply default pre-block. validation run subset provisioners called verifiers. verifiers run the secret reconstruction protocol, validate the priority information the highest priority candidate and either sign the pre-block proposal the candidate default pre-block. additionally, the verifiers validate the witness wit candidate provisioners committing vrf and sortition procedure through vrf sortition, number block generator candidates are selected each round. the candidates propagate their proposed the dusk network and blockchain architecture web symposium, april amsterdam, the netherlands figure provisioners setup provisioners organized elected subsets which form different committees throughout the algorithm rounds. order eligible provisioner, node uses non-interactive cryptographic commitment bind predefined minimum amount dusk coins into collective anonymous escrow and creating spend transaction toward stealth address obfuscating p's address. such spend transactions are kept concealed until the node ready cash back its stack and quit its role provisioner. the system verifies through efficient (i.e. within polynomialtime) non-interactive zero knowledge proof wit that actually committed its stack the accumulator. this means that soon the provisioner commits its stake the accumulator, announces itself provisioner the network gossiping its public key, its dusk network address and wit the drawback relying trusted setup circumvented using the rsa-. also, the notoriously big size spend proof (estimated the zerocoin whitepaper []) not problematic the case provisioners since their stake meant long-term escrow. this easily enforceable protocol level. block together with the vrf output, which includes the proof winning the sortition together with the priority given the digital currency balance the node. peers collect and propagate gossiped packets, forwarding solely the message with the highest priority and discarding all the others. the amount time peers are supposed collect messages usually part the protocol configuration and suggested seconds. the end this period, peers which did not receive message propagate empty block (which perfectly valid outcome the consensus). from security perspective, adversary could orchestrate attack deceiving peers into proposing different blocks. however, this attack would fail unless the adversary would have the highest priority round and the number honest provisioners are also less then /rd. cryptographically committed provisioners one approach protect the stake information was the employment order preserving encryption and homomorphic cypher [], which would have theoretically allowed for priority comparison without revealing the balance the different nodes. this approach however has been discarded because susceptible binary search attack. fact, exposing priority information, any attacker with access the oracle could ultimately obtain information about the original balance node simply performing multiple comparisons with the hash known number. additionally, every node the network required perform validation the packets receives. since the priority the block generator input parameter for validating its vrf's output, the measures required provide access such datum secure setting would result unacceptable degradation performance and increase complexity. instead, the attempt obtain the best trade-off between efficiency and anonymity, the system restricts the opportunity perform vvn operations solely non-transactional nodes called non-interactive verifiable shared secret protocol verifiable secret sharing (vss) cryptographic protocol designed allow dealer decompose secret fragments and share them publicly peers (players) that only subset (threshold) those fragments are needed reconstruct the original secret. vss, through the addition auxiliary information, players can verify reception "valid" fragment without acquiring any knowledge the initial secret. the non-interactive verifiable secret sharing protocol the dusk variation the simplified vss protocol gennaro, rabin and rabin []. our protocol, the dealer does not communicate directly with the players but can only rely multiple untrusted web symposium, april amsterdam, the netherlands francioni and venturelli message relayers the case using the dusk gossip protocol. the protocol foresees sharing phase and reconstruction phase. the constant term (x) the secret. the second polynomial (x) used generate independent random strings used commit the shares. the verification performed player after decrypting its share from the share vector with its own private key ski trivially recompute c(a and check that the equation holds. c(x, commitment hash function such skein sha-. lottery for proposing block, the candidate performs time-locked transaction toward stealth address s_addrpk where the recipient party's key the public key (which thus used twice). such transaction indistinguishable from normal one. when propagating the result the sortition, the block generator candidate runs the dealer part the nivss protocol encrypt the meta-data composed the view-key for the time-locked transaction and the locking period expressed number blocks into shared secret. thus, propagates such secret, together with the proof for the nivss and the hash the meta-data signed with the node's private key following description the block generator sortition. whereas: vrf the elliptic curve verifiable random function described nsec for elliptic curves (pk, sk) are the public/private keys the node with candidate block generator seed public random seed chosen and propagated together with the last block the maximum number candidate block generators per sortition the proof allowing anyone knowing pki check that the hash corresponds the input parameters the vrf vkt the block generator's view-key stealth timelocked transaction the sum all balances all provisioners the amount circulating dusk the list validators identified their public key pki algorithm find the pseudocode for the block generator sortition procedure for node algorithm share secret verifiable and non-interactive way procedure nivss_share(s, secret, list verifiers (x) (x) random polynomial (x) (x) random polynomial for each player (i), (i)) {encpki {c(a return algorithm reconstruct the secret (view-key) procedure nivss_reconstruct(s, decpkp (s[p]) sigp |rp sigskp (ap ||rp gossipv propagate share solely other verifiers list all shares (i.e. points (x), (x)) loop onsharereception: sigpkc (bc input (bc (bc then different pre-blocks... return complaint pkc ...candidate dishonest else vf(sigi hoi then {(a length(f then interpolate f^(x) and r^(x) that touch all return f^() end else return complaintvi end end loop return await onsharereception algorithm sortition for generating the pre-block with priority procedure blockproposersortition(seed, th, rfnode .sk (seed) the maximum probability selected extractions (n, time_locked(s_addr node .pk tuple dusk and blocks ij+ while ehash (k; p)) n(hash) nivss_share(vkt ||t, sn,t signode .sk (vkt ||t) return node runs the sortition process become block generator calculating the pseudo-random hash and the proof feeding the vrf its secret key and the seed calculated and propagated when last block was chosen. the vrf returns hash which essentially value with uniformly distributed probability between and en(hash) where the len function the bit-length the hash. the priority for the node calculated considering each unit dusk the time-locked transaction performed toward the stealth address s_addrpk independent runner for the block generation lottery. this means that for each node participating the sortition with time-locked payment amount dusk there are exactly runners every selection round. block generation sortition node that wishes participate the sortition (and become block generation candidate simply "candidate") first required lock arbitrary amount dusk. time-locked transaction special transaction where the output un-spendable for predetermined period time. order participate the sortition the dusk network and blockchain architecture web symposium, april amsterdam, the netherlands the probability for obtaining selections out of extractions follows the binomial distribution (k; p)n-k where the sum all probabilities (k; naturally the set representing all possible probability values gets split ij+ into adjacent intervals (k; p), (k; p)) for the tuple the pre-block candidate hash (block) and the transaction list txblock bdef aul the default pre-block propagated the appropriate provisioner's committee algorithm verify and propagate pre-blocks ..., hash/l en(hash) falls the intervals then the priority the node's sortition and verifiable knowing the vrf's output hash (proven and the amount while the information about node's entire balance, sba this amount instead encrypted the node and shared among the verifiers using the nivss algorithm and kept verifiable solely threshold the members the verifier committee. differently from ba, sba the probability obtaining total amount positive extractions only all nodes participate the sortition with their whole balance. this seldom the case and therefore the probability that candidate gets selected propose block greater than zero. obviate this eventuality and still produce block case dishonest block generator gets caught, provisioners run their own parallel block generator sortition fallback scenario for those cases. also, mitigate the potentially reduced probability generate successful sortition with multiple candidates, chosen substantially higher than the parameter ba. verification pre-block propagation during the gossip procedure, each node relays solely the pre-block with the claimed highest priority (provisioners will also gossip the default pre-block the other provisioners), while dropping all other pre-block proposals. sba, protection from sybil attacks granted the time-locked payment made the block generator candidate which not clear. therefore nodes and provisioners other than verifiers could only perform validation the vrf result hash and the proposed pre-block. they not engage priority validation, which entirely demanded the verifiers. this has the positive side-effect perceivably decrease network latency during gossip operations. verifiers run the verifyblockproposersortition order reconstruct the view-key and the time-locked transaction propagated the block generator candidate and able validate the claimed priority. depending the outcome, they either sign and propagate the candidate's pre-block the default pre-block. this does not really require consensus since the propagated pre-block mere result the validation operation, which gets further audited the different voter committees. such the probability for propagating mismatching pre-blocks negligible. the future will explore the possibility use probabilistic checkable non-interactive zero knowledge proofs propagate very efficient proof validation without revealing the candidate's view-key any further than the verifiers. whereas: procedure propagateverifiedblock(hash, ctx, pkc nivss_reconstruct(s, extractamount(vkt !verifyvrfpk (hash, ctx .seed) then gossip complaintpkc validation data and signed bdef aul break end .th -ct ij+ while ehash (k; p)) n(hash) .tblock !(v eri yblock(ctx .seedpk (block))) then gossip complaintpkc validation data and signed bdef aul break end gossip( verifiers already operate implicit reduction procedure through the asynchronous function onreception within the nivss_reconstruct procedure, which checks the shares well the block and the hash propagated the candidate. taught turpin and coan two-step technique, such implicit reduction the problem reaching consensus binary choice (either the candidate's pre-block hash the default pre-block) important ensure liveness. voting blocks voter's sortition while nodes compete for generating the block, provisioners other than the verifiers run the sortition procedure appointed the task voters and reach byzantine consensus over different rounds voting. block election happens through set steps, each one requiring different committee being formed peers sorted through vrf output with the voter's role. during each step, sorted nodes (and only them) gossip their signed hash the block together with block round, step the process and proof sortition outputted the vrf. since voting task reserved provisioners, gossip during this phase stays confined within the provisioners' boundaries and relayed solely voters. result, the voting operation completes much faster than all the others since there need wait for messages reach all extremities the network. provisioners organised subsequent elected voting committees try reach consensus (i.e. counting enough votes for either the the claimed candidate's priority tblock the time when the pre-block has been produced pkc the candidate's public key ctx represents object encapsulating the state the ledger web symposium, april amsterdam, the netherlands francioni and venturelli figure sba glance pre-block hash the empty block) progressively raising the amount votes for pre-block empty block. each subsequent step, the votes cast during the step before remain accounted for, while the new elected provisioners cast new votes until the required majority reached. intuitively, the convergence guaranteed the fact that voters which have already declared consensus for pre-block will not vote for any other value the same round and will keep proposing the same result until consensus converges. opposed block generators, provisioners not gain their reward winning the sortition procedure. rather, the end each block amount dusk coins coin-based, dependent the stake amount committed the provisioner the accumulator, independently from whether they participated the block committee not. this amount thus spent toward the provisioner's address. counterintuitively, the rewards paid are inversely proportional the staked amount (i.e. bigger stakes get proportionally less rewarded, respect smaller stakes). this measure novel and the writers' knowledge not viable option outside the dusk blockchain, where the probability win the sortition lottery and therefore take active part the sba algorithm not associated with reward, except the sole payment the transaction fees. the motivation twofold. together with preventing the rich get richer scheme, the intention create counterposition between power (intended the capability influence block generation notaries block rewards soon the validators reach consensus over non-empty preblock, they turn into notaries running supplementary procedure aimed generating new block hashing the pre-block with set coin-base transactions. coin-base transaction basically transaction with input which mints new dusk coins and spend them the address the block generator. the dusk network and blockchain architecture web symposium, april amsterdam, the netherlands figure dusk tunneling being selected part the block committee) and money (intended the financial benefit acquired from running provisioners). considering that sba already protected from sybil attack making probabilistically disadvantageous dilute stack into several balances, similarly, reversing the proportion between rewards and stake, the system prevents financially motivated participants benefit from organizing themselves into few provisioner pools the expense decentralization. figure dusk network bootstrap dusk anonymous network layer the vast majority blockchain implementations, network communication protocols limit themselves just embracing the privacy standards have place today for our daily internet needs: tcp/ip, udp, ssl for encrypting communication channels name few. while this can considered acceptable for centralized environments platforms where user privacy not the main proposition, the anonymity and privacy requirements established with the dusk network impose the adoption technology offering much higher level privacy protection. achieve this goal, dusk enabling full anonymity over its decentralized network integrating advanced, custom bi-directional routing, fully compatible with ip's garlic-routing technology for all its networking communications, but extending the underlying protocol not only for the deployment additional functionality (such fully anonymous file transfer) but also for allowing the default anonymous gossip protocol which powers the entire dusk network. the proposed architecture has been designed make computationally infeasible for eavesdropper tell apart dusk related traffic from other network activities. additionally, should very hard for any network node associate with the address the original initiator. compared similar solutions, the dusk approach offers the following benefits: when negotiating access the network, the accessor node (alice) selects entry tunnel route (encrypted) messages through. each node the network acts facto router, relaying the message multiple times, until gets delivered exit tunnel, for which the last node has been chosen the message recipient (bob). bootstrap prior forming the entry tunnel, the accessor connects blockchain's seed server vouching seeder (inert network nodes specifically designed facilitate the bootstrap peers relaying configuration parameters, the blockchain's current snapshot) order obtain list active nodes. the vouching seeder replies with message containing three parts: the collection candidate entry node ips the collection candidate entry node public keys and the public key the accessor node the seeder's signature and its public key the part and the message are called the vouch the accessor node thus selects arbitrary end point chosen among those offered the vouching seeder. thus, the accessor requests entry tunnel forming with sending the vouch that can verify the vouching seeder's signature and the public key the accessor, thus preventing potential routing leaks. the verification fails, the node refuses access, marks the node malicious and puts its into distributed blacklist. the accessor will then receive set active endpoints where connection can initiated, and will assigned hash which will act mask for his real address. similarly, the other nodes the network will reachable solely through their own hash-mask. the vouching seeders are trusted servers, reachable via secured https url encoded into the dusk main core. makes use packet routing, instead circuit routing. this means transparent load balancing all networking message across peers, instead single tunnel. multiple packets are joined together inconspicuous messages, making exponentially difficult for attacker expose network communications. true decentralization: uses distributed directory have overview the network, opposed relying centralized bulletin board. uni-directional tunnels guarantee that incoming and outgoing traffic kept decoupled; measure engineered enhance transmission unlinkability through data stream separation. (figure gossip communication once connected the arbitrarily selected entry node, accessor will become full fledged member the dusk network, and will web symposium, april amsterdam, the netherlands francioni and venturelli figure example gossip setup receive from the vouching seeder and the entry node initial snapshot dusk addresses can gossip to. this internal, partial view the network constantly maintained and refreshed using peer-sampling service, which itself gossip-based. using this service, the node will periodically ask other nodes for updated view the network, and will receive return set addresses update its internal view with. for efficient message spreading, also imperative that the internal view each node random possible, and for this reason the peer-sampling service also designed maintain high entropy within the network occasionally shuffling nodes between requesting peers. let's assume the structure figure with nodes and being two nodes about shuffle addresses between each other. the scenario above, node e's internal node tables [c, which the list node addresses knows about. node internal node table will instead [g, e]. when shuffling nodes, the top the head each table exchanged between peers, node will send node the addresses [c, and return will receive [g, the new internal tables will modify the network structure figure this procedure ensures that configurations are never stagnant, and high levels randomness are always kept within the network. exchange information about responsiveness different peers order stipulate constantly updated overview convenient low-latency routes. the information exchanged follows: murmur the node initiating the communication sends out message receiving peer which contains his current view the network, plus information the node itself (uptime, version), and meta-data describing part its internal status which wishes transmit. followup the receiving peer computes difference between his own meta-data and the one that was sent the initiator. then follows the communication with reply containing the gossip the initiator ignores and list peer addresses the initiator does not know about. confirm: after receiving the followup message, the initiator updates his meta-data with the message just received the peer, saves the information, and sends out confirm message with the missing information the peer did not know about, necessary. this marks the end the status propagation round. the increase network traffic due the peer-status propagation constant and not expected perceivably impact the efficiency the network. relaying the murmuring fact limited restricted number peers (i.e. three/four nodes) and stata synchronization happens through the constant -phases followup and confirm messages without causing any network spike. peer-status propagation synchronising information about peer's dusk addresses happens with gossip-based communication scheme, called peer-status propagation, which slightly more involved than the one used for transaction propagation (which resembles more fire-and-forget approach). peer-status propagation shows resemblance tcp three-way handshake and suitable scheme synchronise information relating peer-sampling table, list recent provisioners, new peers joining the network addresses consistently timeout. another possibility (not explored this paper) transaction propagation the dusk blockchain makes use advanced gossip network technology order propagate transactions and sortition results for block generator/validators. gossip protocols follow the endemic message dissemination system and represent natural fit for network needing frequently synchronize small status variations among its peers through the following advantages: the dusk network and blockchain architecture web symposium, april amsterdam, the netherlands figure gossip setup post-shuffle the case the dusk blockchain, there inherent partition nodes given the fact that messages around block proposals, validations and voting performed solely provisioners which relay these messages solely other provisioners. error tolerant: dusk can operate extremely well with unreliable connections and unorthodox configurations. the same packets are sent multiple times different peers this way, should infrastructure problem arise between two points impeding their communication, they will both receive the same message from other nodes the network. decentralization ready: there central role for any the nodes. each node works independent agent, with pre-established rules about data transmission. figure peer status propagation desirable property the dusk gossip protocol obtaining relatively low complexity while guaranteeing safety. for this reason, nodes the network not relay more than one message/transaction coming from the same node per sba. when node wants transmit information (transactions, sortition results, etc.) selects random nodes from the set nodes knows about (through the peer sampling service) and transmits such information them, who, turn, relay further. information gets periodically sent targets, where known the fanout. scalability: the general complexity network gossip protocols, o(lodn which represents the number rounds reach all nodes the network, where the total number nodes. nodes only send limited number messages and not wait for acknowledgements. such system can easily scale although cannot achieve unbound scalability given the requirement achieving global dissemination. web symposium, april amsterdam, the netherlands francioni and venturelli figure tunnel switching with fanout will need o(lodn cycles (which the number rouds spread rumor) for the information reach all nodes. order safeguard the anonymity the peers, most the messages are relayed through anonymous datagrams following the specification ip's non-repliable datagram, which are packets devoid sender information using the udp protocol. the first instance the dusk network, will make use sam protocol before considering rolling out custom-made solution (which might necessary case dusk will need relay packets bigger than kb). (scap) instant using off-chain transaction, for dynamic value that will auto-regulated the dusk core. this done keep the transmission cost stable, and also independent from token fluctuations. receiving the transaction request, the scap will freeze the status block the dusk chain for node updated later when the off chain transactions will come end. upon finalizing the transaction, node will contact her entry point and provide with the view key proof payment. turn, will check the validity the key, and correct will allow the opening garlic routing tunnel for duration time towards node that node can initiate the transmission. instant node will start new transaction with scas renew the duration such tunnel for additional interval and successful will open new tunnel with and will start sending concurrent, identical data stream the new one. node will consequentially drop the previous tunnel using procedure that will describe below. this process will continue until the data transmission will come end, either choosing not renovate tunnel failing complete new transaction with the scap. node does not provide her entry point with valid view key for the next transaction, the tunnel will dropped entirely from the entry point itself. secure tunnel switching (sts) powered the dusk blockchain, the dusk network layer aims provide next-generation, cryptographically secure way perform secure audio, video and data streaming between two distinct nodes the network. current technologies limit themselves estaablishing secure connection between peers but the dusk approach are about describe goes far beyond that, making sure that even node the network becomes compromised, the overall security the platform whole remains untouched. setup assume that node (alice) wants establish secure data stream connection with node (bob), for which knows the relevant dusk address. before initiating any connection attempt, node will commit payment towards smart contract access point the dusk network and blockchain architecture web symposium, april amsterdam, the netherlands figure data match switch figure secure file transfer tunnel switching once has received the data stream from sender node receiver node will parse the raw data (which can voip call, for example) and will keep waiting for new tunnel connections. upon receiving second connection, will match the two data streams doing trivial bit matching operation, which will almost certainly show small time lag due the fact that the two tunnels use different set relaying nodes. (figure after successfully matching the streams, node can safely discard the old one, and continue parsing the stream the most recent one. the procedure will repeat for long sender node renews the transaction costs with the scas keep streaming data. this dramatically improves security and anonimity over conventional garlic tunnel connection. switching the data tunnel regular intervals, malicious attacker would unable predict compromised nodes, perform ddos attacks, and general exploit vulnerabilities the network. using bob's third line optional and alice's symmetric key encrypted with bob's this needed case symmetric encryption was chosen encrypt the document. fourth line also optional and used case alice would like bob know she was the sender the file, which case she will add her own dusk address, also encrypted using bob's will now have two separate cases, since bob can online when the file sent, offline. bob online bob receives alice's datagram, checks the owner the file trying decrypt the second line with his private key successful will also decrypt the first line and download the file the location specified the id. bob offline the entry will inserted distributed hash table (dht) and kept there for days, which bob can interrogate soon online order check for files that were addressed him while was away. the dht will supported extending the provisioner protocol with simplified version the rpc primitives kademlia specifications implemented over non-repliable datagrams. on- offline file transfer the capability anonymously and securely send files over the network and allow both offline and online retrieval unique feature the dusk network. implement such use-case, dusk combines the capabilities the anonymous peer discovery and gossip mechanism previously described with those third party decentralized and anonymous storage service (e.g. the orc object storage). the workflow securely send file over the network follows: alice encrypts file.doc using either bob's (in case the file modest size) using symmetric scheme such aes- with key allow for better performances. alice will upload the file the decentralized storage and will get the the file once the upload complete. alice will create anonymous non-repliable datagram with the following structure: conclusions dusk network unrestricted, unsurveilled and fully distributed cryptosystem designed for high-rate voice and data communications, enforcing the utmost level privacy the partaking peers. the network features novel blockchain-based digital cash called dusk, used directly incentivize participation the network and promote widespread adoption. dusk features untraceability through the use ring confidential transactions, unlinkability through the use stealth address and protection from sybil attack and double spending through novel consensus algorithm called segregated byzantine agreement sba. sba provides direct block finality preventing forking while providing virtually unbounded scalability. the network built top efficient gossip network which utilizes non-repliable datagram and garlic routing order prevent address propagation. finally, the dusk network complemented with off- online file transfer mechanism and with realtime dusk payment channel enable undetectable and fast peer-to-peer data communication through technique call secure tunnel switching. tcvgqr/nqxilfekdtugzrqgggnyyoxuxrmfvpw= gtrzkvxjipjtxpjxvihuqjizelxkduvcjkyguwkhtgzara /o+xckfwneytfnrgpmlpz+mlww== ptlsgckudyuvfsmfaweguipxby+wgbqyrhvcqgiup dha== the first line the datagram the encrypted the file the decentralized storage (using bob's and will used retrieve such file. second line bob's dusk address, also encrypted with references jan camenisch and anna lysyanskaya. dynamic accumulators and application efficient revocation anonymous credentials. (feb. retrieved web symposium, april amsterdam, the netherlands francioni and venturelli february from http://cs.brown.edu/~anna/papers/camlys.pdf harold s.m. coxeter. generators and relations for discrete groups (th. ed.). springer-verlag berlin heidelberg. amitabh saxena al. application layer encryption for cloud. (oct. retrieved oct from https://www.researchgate.net/publication/_ application_layer_encryption_for_cloud benedikt bunz al. bulletproofs: short proofs for confidential transactions and more. (oct. retrieved march from https://eprint.iacr.org// .pdf eli ben-sasson al. zerocash: decentralized anonymous payments from bitcoin. (jan. http://zerocash-project.org/media/pdf/ zerocash-extended-.pdf eli ben-sasson al. scalable, transparent, and post-quantum secure computational integrity. (oct. retrieved march from https://eprint. iacr.org//.pdf russel turpin al. extending binary byzantine agreement multivalued byzantine agreement. (jan. retrieved from https://groups.csail.mit.edu/tds/papers/coan/turpincoan-ipl.pdf sharon goldberg al. nsec from elliptic curves. (jan. retrieved march from https://eprint.iacr.org//.pdf silvio micali al. algorand: scaling byzantine agreements for cryptocurrencies. (oct. retrieved oct from https://web.eecs.umich.edu/ ~manosk/assets/papers/algorand.pdf amos fiat and adi shamir. how prove yourself: practical solutions identification and signature problems. (th. ed.). springer-verlag berlin heidelberg. rosario gennaro, michael rabin, and tal rabin. simplified vss and fast-track multiparty computations with applications threshold cryptography. (july retrieved from http://www.eecs.harvard.edu/~cat/cs/tlc/papers/ grr.pdf michiel hazewinkel. cryptonote (oct. retrieved october from https://cryptonote.org/whitepaper.pdf o.a. ivanova. cyclic group. (jan. retrieved april from https: //www.encyclopediaofmath.org/index.php/cyclic_group jeremy maitin-shepard and mehdi tibouchi. elliptic curve multiset hash. (jan. retrieved jan from https://arxiv.org/pdf/..pdf ian miers, christina garman, matthew green, and aviel rubin. zerocoin: anonymous distributed e-cash from bitcoin. (oct. retrieved from http://zerocoin.org/media/pdf/zerocoinoakland.pdf yupeng zhang, jonathan katz, and charalampos papamanthou. expressive (zero-knowledge) set accumulator. (feb. retrieved april from http://legacydirs.umiacs.umd.edu/~zhangyp/papers/accum.pdf