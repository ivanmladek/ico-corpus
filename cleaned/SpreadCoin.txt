spreadcoin october introduction proof-of-work cryptocurrencies new coins are generated the network through the process mining. one the purposes mining protect network from double spending attacks and history rewriting. miners generate new blocks and check contents the blocks generated other peers for conformation the network rules. however, many miners now delegate all the checking work crucial cryptocurrency security pools. this means that pool operators not have any large hashing power but have control over generation new blocks. this brings unnecessary centralization otherwise decentralized system. controlling more than mining power allows perform double-spending attacks with chance success but even with less than control possible perform attacks which have chances succeed. the core idea spreadcoin prevent creation pools and thus make mining more decentralized and the whole system more secure. pool prevention pooled mining miners perform only the work which necessary fulfill the proof-of-work requirements and pools take care block generation and broadcasting and distribute reward among miners according the shares they submit. this scheme miner has two alternatives: solo mining. this case miner cannot send shares the pool because they will not accepted. pooled mining. miner's shares will accepted the pool but the case miner will actually generate new block its reward will the pool which will redistribute all miners. this allows organization pools because miners has way cheat and steal generated money. prevent creation pools must remove this possibility that pool will created than miner can mine pool, submit shares usual and get reward for them but the case actually finding block miner can send directly the network instead the pool and get full reward for it. spreadcoin mining organized such way that miner must know the following things: private key corresponding the coinbase transaction. whole block, not only its header. this ensures that miner can broadcast mined block and spend coins generated that block. may seem that necessary know only the private key spend coinbase transaction. two conflicting transactions will appear the network then the one that was broadcasted first will have much higher probability included block because each peer remembers and retransmits only the first one the conflicting transactions. both miner and pool know private key but only pool knows the content the block than pool can generate and broadcast spending transaction earlier than miner. both miner double-spending. bitcoin wiki. https://en.bitcoin.it/wiki/double-spending and pool know content the block than miner will the first one who can broadcast block and spending transaction. prove knowledge the private key and whole block there are two new fields the block header: minersignature and hashwholeblock. minersignature digital signature all fields the block header except for the hashwholeblock. changing any information the block requires regeneration this signature which means that necessary recalculate during each iteration the mining process. this implies that miner must able sign any arbitrary data. hashwholeblock sha- hash the block data arranged follows: block padding block padding max_block_size padding ensures that there incentive mine empty blocks without transactions. padding values are computed using simple algorithm which initializes last bytes uint) with hashprevblock and then goes backward and computes remaining uint values using the following recursive formula: ii+ ii+. this algorithm ensures that there efficient way compute padding values the fly during hash computation which otherwise could potentially give some advantage mine empty blocks certain computing environments. important that block hashed twice. was hashed only once then pool could hash the beginning the block and send resulting hash state the miners. each miner would then modify some information the end the block and recalculate the hash based the known state without actual knowledge about what contained the beginning the block. appending block data itself make necessary know the whole block recalculate hashwholeblock. pool may detect and ban cheating miners. however, many miners may still prefer cheat that pool will completely unusable for honest miners. miners that have low probability finding block will get more profit stealing reward for accidentally found block even pool will ban them thereafter. miners that have enough mining power find blocks consistently can still connect pool and submit shares for some time but steal the first found block. this way they can get both reward for their shares and the actual mined block. given all this expected that one will create pool. but even someone will than can countered releasing stealing miner software which many miners will switch to. compact transactions spreadcoin well bitcoin uses ecdsa signatures. each address bitcoin hash ecdsa public key. spend coins sent address necessary provide public key matching that hash and signature. this results bytes for each transaction input script (scriptsig) depending whether compact public key used. however, possible recover public key from the signature which means that not necessary provide transaction input. together with using compact representation the signature allows reduce size transaction input script from bytes bitcoin bytes spreadcoin. recovering public key has almost extra cpu cost compared the usual signature verification process used bitcoin. this important because the cpu cost ecdsa signature verification bottleneck for bitcoin transaction processing. usual output script (scriptpubkey) bitcoin looks follows: op_dup op_hash bdebbabbbbcbafafa op_equalverify op_checksig spreadcoin the semantics the op_checksig instruction was changed checking signature hash the public key (it recovers public key and compares its hash with the provided one). this results much simpler script spreadcoin: bdebbabbbbcbafafa op_checksig this results additional minor space saving because this script bytes smaller. block reward bitcoin computed using the following formula: reward smooth supply spr spreadcoin bitcoin btc where block height, spr btc reward halving period, initial reward, spr btc spr years reward for block years years years years time floor function. this method results abrupt reward changes near halving points. spreadcoin uses simple linear interpolation between halving points make reward decrease much smother. this achieved modifying reward using the following formula: mod rh' (rh spreadcoin uses its reward halving period. ecdsa signatures allow recovery the public key. bitcoin forum. https://bitcointalk.org/?topic=.%%f why the signature always (++) bytes long? bitcoin stack exchange. https://bitcoin.stackexchange.com/questions//why-the-signature-is-always---bytes-long