notice nothing this technical whitepaper constitutes legal, financial, business tax advice and you should consult your own legal, financial, tax other professional adviser before engaging any activity connection herewith. neither arcblock foundation ltd. (the foundation), any the project team members who have worked the arcblock platform (as defined herein) project develop the arcblock platform any way whatsoever (the arcblock team) nor any service provider shall liable for any kind direct indirect damage loss whatsoever which you may suffer connection with accessing this technical whitepaper, the business whitepaper, the website https://www.arcblock.io/ any other materials published the foundation. all contributions will applied towards the foundation's objects, including without limitation promoting the research, design and development of, and advocacy for scalable, extensible, cost efficient, protocol-agnostic and easy-to-use platform for building and deploying decentralised blockchain applications, which would overcome many the existing technological barriers faced existing blockchains, and which designed self-evolving ecosystem. this technical whitepaper intended for general informational purposes only and does not constitute prospectus, offer document, offer securities, solicitation for investment, any offer sell any product, item asset (whether digital otherwise). the information herein below may not exhaustive and does not imply any elements contractual relationship. there assurance the accuracy completeness such information and representation, warranty undertaking purported provided the accuracy completeness such information. where this technical whitepaper includes information that has been obtained from third party sources, the foundation and/or the arcblock team have not independently verified the accuracy completion such information. this technical whitepaper does not constitute any offer the foundation the arcblock team sell any abt (as defined herein) nor shall any part nor the fact its presentation form the basis of, relied upon connection with, any contract investment decision. nothing contained this technical whitepaper may relied upon promise, representation undertaking the future performance the arcblock platform. the agreement between the foundation (or its affiliate) and you, relation any sale and purchase abt governed only the separate terms and conditions such agreement. accessing this technical whitepaper any part thereof, you represent and warrant the foundation, its affiliates and the arcblock team follows: (a) you acknowledge, understand and agree that abt may have value, there guarantee representation value liquidity for abt, and abt not for speculative investment; (b) none the foundation, its affiliates, and/or the arcblock team members shall responsible for liable for the value abt, the transferability and/or liquidity abt and/or the availability any market for abt through third parties otherwise; (c) any decision purchase any abt, you have not relied any statement set out this technical whitepaper; (d) you will and shall your own expense ensure compliance with all laws, regulatory requirements and restrictions applicable you (as the case may be); and (e) you acknowledge, understand and agree that you are not eligible purchase any abt you are citizen, national, resident (tax otherwise), domiciliary and/or green card holder geographic area country (i) where likely that the sale abt would construed the sale security (howsoever named) investment product and/or (ii) which access participation the abt token sale the arcblock platform prohibited applicable law, decree, regulation, treaty, administrative act, and/or (including without limitation the united states america, the people's republic china, new zealand, and the republic korea). the foundation and the arcblock team not and not purport make, and hereby disclaims, all representations, warranties undertaking any entity person. prospective purchasers abt should carefully consider and evaluate all risks and uncertainties (including financial and legal risks and uncertainties) associated with the abt token sale, the foundation and the arcblock team. the information set out this technical whitepaper for community discussion only and not legally binding. the agreement for sale and purchase abt shall governed separate token sale terms and conditions setting out the terms and conditions such agreement (the token sale terms and conditions), which shall separately provided you made available https://www.arcblock.io/. the event any inconsistencies between the token sale terms and conditions and this technical whitepaper, the token sale terms and conditions shall prevail. all statements contained this technical whitepaper, statements made press releases any place accessible the public and oral statements that may made the foundation and/or the arcblock team may constitute forward-looking statements (including statements regarding intent, belief current expectations with respect market conditions, business strategy and plans, financial condition, specific provisions and risk management practices). you are cautioned not place undue reliance these forward-looking statements given that these statements involve known and unknown risks, uncertainties and other factors that may cause the actual future results materially different from that described such forward-looking statements. these forward-looking statements are applicable only the date this technical whitepaper and the foundation and the arcblock team expressly disclaims any responsibility (whether express implied) release any revisions these forward-looking statements reflect events after such date. this technical whitepaper may translated into language other than english and the event conflict ambiguity between the english language version and translated versions this technical whitepaper, the english language version shall prevail. you acknowledge that you have read and understood the english language version this technical whitepaper. part this technical whitepaper copied, reproduced, distributed disseminated any way without the prior written consent the foundation. introduction purpose the purpose this document provide high-level technical overview the arcblock platform. assumes that the reader has basic understanding cloud computing, decentralized applications, and blockchain technology. list resources provided for those who would like develop foundational understanding blockchain technology. scope this document provides technical overview arcblock, blockchain ecosystem for building and deploying decentralized applications. describes core elements the service and provides details about the architectural design critical components. the information this document intended for informational purposes only. arcblock may make improvements changes the products, architectural design, programs described this document any time without notice. related documents arcblock official website: https://arcblock.io table contents introduction purpose scope related documents overview problems with today's blockchains poor performance not consumer friendly cost platform lock-in lack features the arcblock platform arcblock's advantages built for the new token economy optimized for the best experience built for the cloud built with open standard architecture design principles system architecture open chain access protocol blocklet blocklet components decentralized pub/sub gateway marketplace and token economy cloud nodes core components open chain access protocol open chain access layer chain adapters chain adapters marketplace relationship with blockchain service design principles and inspiration blocklet microservice architecture serverless computing blocklet types off-chain logic off-chain and on-chain logic asset and resource handling smart contracts oracle blocklet implementation blocklet components decentralized pub/sub api gateway api gateway pub/sub decentralized and secured decentralized media and assets client library/framework algorand the token economy and the service the arcblock token (abt) the miners resource miners component miners the arcblock marketplace token foundation services application tokens future work acknowledgements overview arcblock platform and ecosystem for building and deploying decentralized blockchain applications. the platform goes beyond providing the necessary foundational components for using blockchain power complex business rules. connects your existing system blockchain networks, enabling you automate business processes using the data and identities associated with existing systems. arcblock's primary goal remove the barriers that have slowed blockchain adoption among the general public. we're also passionate about developing unique approaches that will significantly advance blockchain development. problems with today's blockchains blockchain technology still its infancy. there are many issues preventing developers and businesses from creating widespread, decentralized blockchain applications. poor performance performance one the main challenges facing current blockchain technology. the blockchain that bitcoin uses designed handle seven transactions per second, and ethereum can only handle few more. december simple cryptokitties application can slow ethereum and increase transaction fees dramatically. today's consumer applications must able handle tens millions active users daily basis. addition, some applications will only become meaningful when critical mass reached. the platform itself must able handle large number concurrent users. good user experience demands reliable feedback with only sub second delays. longer delays frustrate users and make applications built blockchain less competitive with existing nonblockchain alternatives. not consumer friendly today's blockchain applications are built for the few tech whizzes who know how use them, rather than mainstream consumers. nearly all blockchain applications require users either run blockchain node install "light node." the learning curve and effort involved has delayed adoption among the general public. for example, while the ethereum-based game cryptokitties probably the most user-friendly decentralized app ever built, still requires the user install the metamask light wallet browser extension. users also need know how buy ethers securely and use them with metamask. attract large numbers people, blockchain applications need simple today's web and mobile apps. blockchain technology should completely transparent the consumer. cryptokitties craze slows down transactions ethereum (http://www.bbc.com/news/technology-) metamask bridge that allows you visit the distributed web tomorrow your browser today. allows you run ethereum dapps right your browser without running full ethereum node. (https://metamask.io/) cost the extremely high cost using blockchain technology major barrier mainstream adoption. also limits developers who need the flexibility build free services. just like today's web and mobile apps, users shouldn't have pay for every minor action. similar the internet, blockchain technology should able support free applications. making blockchain free use key widespread adoption. free platform will also empower developers and businesses create valuable new services they can monetize, rather than having users pay fees use the blockchain network. platform lock-in with the early days any computing technology, blockchains have critical "platform lock-in" problems. developers have decide which blockchain support, then implement platform-specific code that makes very difficult switch application different blockchain later on. developers don't want locked into working with certain blockchain technology. they need the freedom evaluate, use, and switch between options. some applications may even need run multiple platforms provide the best user experience. lack features people have high expectations for blockchain--the news media, evangelists, and journalists paint bright future for decentralized applications for the public, especially with the increasingly high prices cryptocurrencies. reality, however, blockchain technology still its infancy. most blockchain services lack rich features and don't have mechanism encourage the community contribute the feature stacks. blockchain protocols make them very easy fork, and there's been recent spike forks created for various purposes. unfortunately, forks typically only improve the forked branch, splitting the community and computing resources. the incentive mechanisms for blockchains just aren't designed encourage contributions the blockchain tech stack yet. the arcblock platform arcblock solves these problems through its revolutionary new design. unlike its predecessors, arcblock platform service, rather than standalone software package set apis. arcblock comprehensive solution that combines blockchain technology with cloud computing. arcblock incentive-driven marketplace for reusable services, components, and even applications. "miners" arcblock platform not only bring computing resources, more over they help build the platform together providing reusable components, new services, and even ready deploy applications. people who contributed resources services will rewarded with tokens form positive, self-growing platform that continues evolve its own. the arcblock platform service isn't our creation alone. it's developed the entire arcblock community--we're just kick-starting new blockchain revolution. arcblock's introduction the open chain access protocol enabled open connectivity over multiple blockchain protocols. developers now have the freedom evaluate blockchain protocols, and even switch back and forth between them. the open chain access protocol makes easy implement new blockchains the technology evolves. eliminates the platform lock-in issue and enables applications run multiple blockchain fabrics, vastly improving the developer and user experiences. blocklet another revolutionary component that takes advantage the latest microservice architecture and serverless computing technology. blocklet high-level application protocol that can implemented with any platform language. leverages the full capacity the native platform and offers the same level performance, rather than running low-performing virtual machine. blocklet does more than access blockchains. connects any existing data source, and performs both on-chain and off-chain computing. our unique design aims provide high-performance, user-friendly, cost efficient, and protocolagnostic platform. believe that arcblock represents major technological advance that will usher the generation blockchain applications. fig: road map toward blockchain arcblock's advantages addition solving the common problems outlined above, building and deploying decentralized blockchain applications with arcblock has significant advantages over the vendor-specific frameworks available today's market. built for the new token economy arcblock self-evolving ecosystem--not just software platform built one centralized organization. arcblock foundation limited and the arcblock foundation are only jump starting the project; the platform will continue develop and grow its own. the entire arcblock service driven the token economy. rather than basic service platform, arcblock economy driven incentives that encourage the blockchain community work together build better ecosystem. optimized for the best experience built the arcblock platform using "top-down" strategy that centers the user experience. contrast, many existing solutions focus the blockchain technology itself the expense user friendliness. applications built with arcblock offer reactive, real-time experiences. users can simply access them from web browser (no additional plugins required), download mobile app directly from app store. either way, the process familiar. arcblock also dramatically improves the developer experience. there's need deal with lowlevel blockchain protocols. with our mock blockchain adapters, engineers don't even have run local blockchain test nodes start developing and testing their applications. built for the cloud arcblock designed run natively the cloud. can also run single computer for testing and development. this design principle makes arcblock fundamentally different from many other platforms the blockchain world. arcblock, node can "logical computer" comprised one more virtual machines, group cloud services working together computing environment. this approach marks significant step forward that will help elevate blockchain and decentralized applications the next level, including our patent pending technologies. arcblock will initially build top aws and windows azure, then expand support google compute engine, major cloud computing players china, and other platforms. built with open standard arcblock built with open standard. we're trying our best not reinvent the wheel and build for the application developer's wants and needs. addition open sourcing our core components, will also actively contribute variety blockchain technology communities. our team members are actively involved with range standards organizations, non-profit foundations, and committees. these currently include the blockchain community group community group, ieee standard association's blockchain community, enterprise ethereum alliance, linux foundation, and hyperledger foundation. this list will expand over time. architecture arcblock aims build scalable, extensible, and easy-to-use platform for building and deploying decentralized blockchain applications. design principles arcblock's design based following core principles: the user experience comes first. performance matters. the system will built open standard. the system will build upon incentive-driven economy. system architecture the arcblock platform introduces suite revolutionary technologies designed mainstream blockchain applications making them easy for the average consumer use. fig: high-level overview arcblock open chain access protocol our open source protocol provides abstract layer for accessing underlying blockchains. similar odbc jdbc interface set databases, our open chain access protocol enables your application work different blockchains. there's need alter your business logic work with multiple chain technologies. chain adapters can built the community and encouraged the incentive mechanism. this will enable arcblock support many blockchain protocols and continue improve. blocklet blocklet serverless computing architecture component for running various types applications. use blocklet for smart contracts, oracle, resource and asset handling, and off-chain business logic. blocklet communicates with blockchains through arcblock's open chain access protocol, and can orchestrated with our algorand-based consensus algorithm. anyone can use blocklet build services and components and contribute them under the incentive system. community members will receive tokens when others use their contributions. blocklet components blocklet components are pre-built blocklets that form the foundation the arcblock platform. most arcblock's features (such its token services, user identity services, etc.) are implemented with them. blocklet components are highly reusable and customizable. incorporate our pre-built blocklet components into your applications get and running fast. provide components for user identity management, utility tokens, wallets, messaging, notification services, and more. use them out-of-the-box, customizable starting points for your own creations. blocklet components can also built and contributed the community. they are managed through the arcblock marketplace app. decentralized pub/sub gateway distributed messaging system supports pub/sub and acts api gateway for blocklets. arcblock's gateway uses decentralized design and secure communication channels. your applications will run both web browsers and mobile apps, giving users reactive, real-time experiences. the gateway supports various network protocols default, including websocket, ddp, https, and mqtt. advanced developers can extend the gateway with new network protocols fit their needs. marketplace and token economy arcblock comes with fully customizable token economy manager for apps built the platform. applications can even build unique utility tokens that inherit all arcblock features. the arcblock marketplace native application built arcblock allow the community contribute and exchange reusable components (e.g. chain adapters, blocklets, even applications) the diagram below shows high-level view the platform architecture. detailed descriptions some the core components appear the next section. cloud nodes while using group cloud services node may seem like unusual approach, physical computer simply group hardware components that work together (cpu, memory, external storage, bus, network interfaces) one box. aside from how the components are distributed and communicate with each other, they're essentially the same. arcblock the first blockchain platform treat cloud services nodes, achieving much higher level abstraction, enhanced performance, and even better security. believe this approach will likely become the facto standard for future blockchain platform design, and pioneer will lead the trend technology evolves. although arcblock's preferred node cloud node, you can still run arcblock single traditional node like server box. test private environment, developers likely run the node locally, their test server boxes. using cloud node won't compromise the decentralization and security the system. fact, takes decentralization and security the next level. the cloud platform's own security enforced cloud service providers. most likely, the servers and services from cloud service provider will more secure and reliable than self-hosting servers, and far more secure and reliable than peer-to-peer connected nodes from homes mining farms. the decentralization aspect using cloud node even more interesting, since cloud node likely distributed service that runs multiple servers from multiple availability zones, even different regions. the future, cloud nodes could offered various providers and cloud computing vendors. some may even self-hosted mining service providers. this makes the system much more decentralized indeed. core components the following sections offer more detailed descriptions our key components and core algorithm. this section assume that you have advanced understanding blockchain technology and computer science. you're not interested detailed information about the components and would rather learn more about using the platform, feel free skip this section. open chain access protocol arcblock's open chain access protocol enables your application adapt variety blockchain protocols including bitcoin, ethereum, hyperledger, and more. the open chain access protocol will open sourced with mit license that everyone the blockchain community will able contribute, create extensions, and make improvements. will develop the protocol private mode, then open source once reach the release candidate milestone. open chain access layer the open chain access layer defines high-level, generic apis that enable open connectivity and access range blockchain protocols. the layer supported chain adapter under layer. each chain adapter implemented for specific blockchain protocol. the open chain access layer has three levels apis: level description level this set apis provides the foundation for the open chain access apis. common chain apis any chain adapters must support all the apis included this level. level this set apis enables fundamental access blockchain data, and treats each blockchain under layer finite state machine. chain adapters may either support the apis this level, alternate capabilities. the set includes apis that allow applications query the supported capabilities. common chain data apis chain adapter must support all the apis included this level. however, they may implement different capacity set. level native chain apis this advanced api set exposes the native features underlying blockchain protocols. while supporting this set optional, will maximize your application's ability use native blockchain features. supporting the api set this level optional for chain adapters. chain adapters arcblock's open chain access layer enables the platform support multiple blockchain protocols. application developers can choose from several different blockchains, node types, and deployment types. arcblock's chain adaptors are the implementations that make the open chain access layer possible. chain adapters work like device drivers translate blockchain under layer protocols into the unified apis defined the open chain access layer. some the chain adapter implementations require you combine on-chain and off-chain implementation works together. the chain adapter also assigned one three categories, based the open chain access layer api set has implemented. plan implement chain adapters for bitcoin blockchain, ethereum, and hyperledger first. after open source the code, anyone will able contribute, improve the protocol, implement their own code. also plan support additional blockchain protocols. chain adapters marketplace chain adapters that have been developed improved the community will made available the arcblock marketplace that everyone can use them. the people who contributed the adapter will receive rewards when others use it. the incentive model will encourage the community develop more and better chain adapters. time, arcblock will able offer line high-performance, high-quality chain adapters for various blockchains. relationship with blockchain service the past months, several leading cloud platform providers began offering new type platform called blockchain service (baas). baas platforms typically offer users permissioned public chain, and they're usually optimized for specific deployment node type. ibm cloud (aka bluemix) baas, which offers hyperledger fabric service, was one the earliest providers. while microsoft windows azure also offers baas platform, mainly targets the test environment and fast spin-up for developers. amazon aws hasn't officially offered baas yet, but there are third-party images that help users quickly deploy blockchain nodes with aws instances. existing baas platforms work perfectly with arcblock. while they simplify the process deploying blockchain for users, arcblock simplifies the process developing and deploying blockchain apps for software engineers. the first phase arcblock's implementation will include integrating with cloud computing platforms (through the aws sdk, for example), that users can manage baas services from directly within arcblock applications. design principles and inspiration design the open chain access protocol, investigated many existing customer solutions, talked real developers, and learned from the evolution computers and database systems. for example, the structure for the open chain access layer was inspired the open connectivity design seen databases. look back the development database systems and applications reveals many similarities with the evolution blockchain technology. the position the blockchain typical system very much the same the database database application system. many scenarios, it's fair say that blockchain actually acting distributed database. most the blockchain itself built top database, including bitcoin and ethereum. that said, can find inspiration how database systems evolved. blocklet blocklet the core arcblock. more than application protocol, it's also software architect that lays the foundational building blocks arcblock itself. the arcblock platform built series blocklets. the open chain access protocol allows blocklet communicate with under layer blockchains. the distributed pub/sub gateway allows blocklets communicate with the client-side code live the user's browser mobiles apps. short, blocklets are the center the entire system. ibm offers blockchain service https://www.theregister.co.uk////blockchain_as_a_service_ibm/ blockchain azure https://azure.microsoft.com/en-us/solutions/blockchain/ mohan, tutorial: blockchains and databases, vldb endowment, https://dl.acm.org/citation.cfm?id= microservice architecture microservice architecture perfect match for blockchain applications. variant the serviceoriented architecture (soa) style, microservice architecture structures application collection loosely coupled services. the services should fine-grained and the protocols lightweight. deconstructing application into variety smaller services improves modularity and makes the application easier understand, develop, and test. arcblock designed event-driven microservice that uses blocklet technology overcome the inherent limitations the blockchain. blocklet communicates with the blockchain under layer through the open chain access protocol, allowing the application access external data securely while also maintaining data integrity. serverless computing serverless computing cloud computing execution model which the cloud provider dynamically manages the allocation machine resources. most serverless vendors offer compute runtimes function service (faas) platforms, which execute application logic but not store data. serverless computing models also work well with blockchains. most the blocklets can implemented serverless program. manage blocklets through aws lambda, windows azure functions, another serverless execution environment. microservices https://en.wikipedia.org/wiki/microservices serverless computing https://en.wikipedia.org/wiki/serverless_computing function service (faas) https://en.wikipedia.org/wiki/function_as_a_service note that microservice architecture and serverless computing involve different levels abstraction. serverless computing can used implement microservice that fits perfectly within microservice architecture. however, developers can also use serverless computing for other purposes, and it's not always necessary use serverless computing implement microservices. blocklet types blocklet inherently flexible and can used develop various kinds applications. this section describes some common types blocklets. bear mind, however, that blocklet could consist one more the following units business logic packaged together. off-chain logic because blocklet native microservice, can access data sources other than the blockchain. for example, can connect database, external restful api, any other data source. blocklet can used develop any application logic--even logic that's not related blockchain. using blocklet for standard application development has overhead. real-life, decentralized applications often run quite few logical components off-chain. blocklet provides total solution for application development that engineers won't need use different frameworks handle different parts their applications. off-chain and on-chain logic it's very common for application's business logic need both on-chain and off-chain handling, and require the respective data connected. for example, on-chain code can't access external data and events, such time market. calling code data outside on-chain smart contract blockchain breaks the general trust barrier and reduces confidence the authenticity transactions. these cases, off-chain blocklet acts bridge that connects on-chain and off-chain logic bring the full business logic together. asset and resource handling applications usually need handle resources and assets like photos, videos, music, and documents. because blockchain isn't designed handle large amounts data, typical blockchain application handles those resources and assets with off-chain solutions. while there are different ways accomplish this, the traditional solution involves using service like aws more decentralized solution like ipfs. regardless the approach you take, blocklet will able communicate with your assets and resource storage system. sometimes assets may need mapped with their on-chain token identifiers, verified through the records the blockchain. blocklet the perfect location for these kinds logic. smart contracts communicating with on-chain code securely through the open chain access protocol, blocklet enables you implement high-performance smart contracts while maintaining the trust barrier and verifying the authenticity transactions. it's the engineer decide how much logic should run on-chain vs. off-chain. one extreme, the engineer could simply treat the blockchain state machine and put most the business logic inside the blocklet. the other extreme, the engineer might develop complex, fully on-chain contract where the blocklet merely serves stub for triggering monitoring activity from the onchain execution. oracle blocklet design, oracle simply type smart contract that takes external data sources event triggers. blocklet makes easy implement oracle design. blocklet-based design also compels engineers consider the division between on-chain and offchain logic during the design and development phases. this improves the efficiency these phases without compromising security and trust. blocklet implementation the first phase arcblock development, will implement blocklets with local test environment and aws. the local implementation for test purposes only. production will based aws that can take advantage the many advanced design features aws offers. the future, will support windows azure, google compute engine, ibm bluemix, and other computing platforms. also plan support docker and open source fass solutions for blocklet that users can easily build and deploy their own blocklets without using any cloud services. because blocklet itself type application protocol and architecture, it's possible implement with different languages and frameworks. our initial implementation will based node.js and go. blocklet components blocklet building blocks are pre-built blocklets that lay the foundation for the arcblock platform and most its features, such token and user identity services. blocklet building blocks are highly reusable and customizable components. decentralized pub/sub api gateway distributed messaging system supports pub/sub and acts api gateway for blocklets. arcblock's gateway uses decentralized design and secure communication channels. your applications will run both web browsers and mobile apps, giving users reactive, real-time experiences. api gateway api gateway essential microservice architecture. api gateway facade that provides simple api interface complex subsystem. essentially decouples the interface that clients see (in our case api consumers, which could mobile apps, web clients, thin clients) from the underlying implementations. arcblock, all features are implemented with blocklets. rather than communicating directly with clients, blocklets communicate through the api gateway. the gateway supports various network protocols default, including websocket, ddp, https, and mqtt. advanced developers can extend the gateway with new network protocols fit their needs. fig: simple reference implementation node.js (as dec pub/sub publish-subscribe messaging pattern where message senders (publishers) categorize published messages into classes without knowing which subscribers will receive them, any. similarly, subscribers only receive messages assigned the classes they've expressed interest in, without knowing which publishers there are, any. the publish-subscribe pattern sibling the message queue paradigm. it's typically single piece larger message-oriented middleware system. most messaging systems support both the pub/sub and message queue models their apis. this pattern provides greater network scalability and more dynamic network topology, resulting decreased flexibility terms modifying the publisher and the structure the published data (this not disadvantage for blockchain applications). decentralized and secured use completely decentralized design implement and simplify cloud services. arcblock's api gateway can used out-of-the-box with zero configuration--just start and will its magic. also features name-based addressing, clusters (i.e. automatic load balancing), and perfect secrecy (all network traffic encrypted). fig: how decentralized messaging and pub/sub works decentralized media and assets while arcblock's core components weren't designed handle media and assets, blocklet can used handle them with support from other systems. blocklet can also help you create off-chain data, verify off-chain data with the on-chain data. today, most decentralized applications handle media and assets with off-chain logic. they either use cloud-based centralized solution like aws microsoft windows azure's storage service, decentralized solution like ipfs swarm. rather than reinventing the wheel, encourage application developers adopt the best-fit solution for handling their media and assets. predict that most application developers will use centralized solutions, which are the simplest and most mature. addition, media and resources don't necessarily have any relationship with blockchain data most applications. other developers might consider using ipfs hybrid solution. arcblock allows you decide which solution best for your application--it works with either technological approach. while the arcblock platform uses aws handle its own media and assets, may consider moving toward decentralized system the future. client library/framework arcblock provides libraries and frameworks for client application development. these libraries support web, ios, and android platforms. with the electron framework, the web version can easily encapsulated and packaged desktop application for windows and mac os. ipfs (the interplanetary file system) new hypermedia distribution protocol, addressed content and identities. ipfs enables the creation completely distributed applications. https://ipfs.io swarm distributed storage platform and content distribution service, native base layer service the ethereum web stack. https:// github.com/ethersphere/swarm electron framework for creating native applications with web technologies like javascript, html, and css https://electronjs.org the version for the web simple communication library that works with https and websocket provide real-time and reactive user experience. works with nearly all other web frameworks, allowing you pick the framework you'd like work with, such meteor, vue, react. this important advantage for application development. engineers can spend most their time handling the client side and user experiences, and write most the code this layer. thanks arcblock, however, now they can develop client applications the same way they build traditional, nonblockchain applications. our design enables developers work with their favorite frameworks and tools they can draw upon community resources and support. fig: client communication model our reference implementation aws (as dec algorand arcblock among the first blockchain startups adopt algorand production. algorand was founded silvio micali, winner the acm turing award. micali pioneer cryptocurrency and blockchain technology. was instrumental the development many the building blocks cryptography, published works game theory and byzantine agreements, and even launched micropayments startup. when micali saw bitcoin, thought could improved; algorand the result that quest. fig: overview transaction flow algorand (via) algorand involves suddenly and randomly selecting small group nodes charge the next block, then receiving reward the form percentage the block transaction. this must done way that can't manipulated adversary. one selects the group; it's selected hash instead. micali suggests taking pseudo-random generator which pre-specified and elongating much you need select the committee. the group decides the next block via redesigned byzantine agreement which leader picked randomly from the group. jing chen, silvio micali, algorand, technical report, https://arxiv.org/abs/. gilad al., algorand: scaling byzantine agreements for cryptocurrencies, sosp', https://people.csail.mit.edu/nickolai/papers/gilad-algorand.pdf algorand: scaling byzantine agreements for cryptocurrencies, https://blog.acolyer.org////algorand-scaling-byzantine-agreements-for-cryptocurrencies/ arcblock uses algorand and its variant number places. for example, use algorand pick where the smart contract blocklet will execute from, well for the high-performance blockchain that powers our native tokens. will disclose more details implementing algorand the arcblock the future when reach release candidate milestone. the token economy and the service what makes arcblock unique that it's not just set apis libraries--it's robust platform with full set features. addition, the service runs top its own native token system, which driven latest blockchain technology. the arcblock token (abt) the arcblock token (abt) native the arcblock platform. achieve high-performance transactions, built optimized blockchain dedicated arcblock's own token services and the public ledger. the design goal achieve tx/s, which more than adequate for wide range applications. the future this blockchain could improved for broader purposes. the arc designed general purpose token that can used different scenarios. within arcblock, the abt's basic utility value pay for the cost using the arcblock system. like cloud computing service, the abt utility token for paying the cost associated with using the service. unlike ethereum bitcoin, where users typically pay fee for each transaction they make, arcblock designed let application providers pay the transaction fees for their end users. this approach vastly improves the user experience. developers pay monthly basis, enabling them add small units and save money. arcblock also request developers lock number arc token stake when they need provide mission critical services. arcblock tokens map erc tokens this simplifies token exchanges and allows developers tie into the ethereum community. application developers can take advantage the existing ecosystem built the erc token while also leveraging high-performance and full-featured token service. while this mapping necessary today, anticipate that may become obsolete the arc matures and the arcblock community grows. the miners arcblock allow contributors ("miners") run arcblock platform services and join the overall service network. the role miners within the arcblock community significantly different from that bitcoin and ethereum contributors, however. resource miners resource miners contribute computing resources the system. they might provide cloud computing resources and run cloud node, contribute self-hosted computing resources. arcblock's design, miners may provide the computing resources for their own use only, share them across multiple parties, share them with anyone. the choice model entirely the miner, and can changed they need to. component miners component miners contribute software components the system, such new chain adapters, blocklet components, ready-to-deploy applications. the component might packaged code that can reused and deployed another application, set services that's merely exposed through the blocklet interface. for example, deep learning-based image recognition service may have its own services running elsewhere, but offer the services blocklets that other arcblock applications can use them. smart contract defines how the miner's fee will distributed the component developed multiple parties. will also define the rules for how the code for the component forked. the arcblock marketplace the arcblock marketplace decentralized blockchain application built arcblock platform itself. the app serves marketplace for listing, searching, evaluating, using, and ranking reusable components, such chain adapters, blocklets components, and applications. the marketplace also responsible for maintaining public feedback about the quality components and the reputation their developers, well other information. this information will help users evaluate reusable components. all the marketplace information are recorded the public ledger powered arcblock's blockchain technology ensure transparency and the trust. token foundation services the platform's token foundation services consist set blocklet components that lay the groundwork for arcblock's token services. the arcblock token implemented entirely with blocklet. the token foundation service also powered blocklets, and the token economy service consists group blocklet building blocks. application developers can use blocklet easily handle events triggered tokens and accomplish complex business logic. the distributed ledger arcblock ensures that your tokens are secure, high performing, and reliable. just like any other blocklet components, the blocklets for the token foundation service can also improved and extended the blockchain community application tokens with arcblock, developers can also create their own custom tokens that inherit all the features our native token. arcblock makes easy build your own economy. tokens aren't just for cryptocurrencies, however. they can represent many different things, from user identities, certifications, and documents realworld entities. arcblock enables you tokenize everything your application. the near future, you'll able make initial coin offers (icos) with arcblock's application token once you've built and deployed your applications with arcblock. acknowledgements this work the cumulative effort multiple individuals with the arcblock team, and would not have been possible without the help, comments and review from our partners, advisors, community collaborators and valuable customers. this technical whitepaper was written robert mao, the chief-architect arcblock and reviewed flavien charlon, the chief-scientist arcblock. during the authoring process received valuable helps and comments from the rest arcblock engineering and marketing team, our partners, also received lots valuable feedback from the emails, wechat groups, telegram groups, conferences and forums. would like thank all our advisors and collaborators for valuable conversations, particular ximen liushang, justin tomboulian, violin wang, michael yuan, frank lee, richard liu and jonathan lu. woulds also like thanks kate dougherty and jean chen for the help the proof reading and document structure. the end copyright (c) arcblock foundation limited. all rights reserved. draft for community review. subject change.