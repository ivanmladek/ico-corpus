cryptocoderz team project white paper written the cryptocoderz team february (version release) table contents abstract_________________________________________________________________________ blockchains_______________________________________________________________________ consensus and reward mechanism___________________________________________________ terminal velocity ratex (vrx)_______________________________________________________ velocity blockchain constraint system________________________________________________ sidechains cross-chain interfacing__________________________________________________ secure messaging_________________________________________________________________ site-on-chain____________________________________________________________________ lightweight/mobile blockchain_____________________________________________________ chain apps______________________________________________________________________ x-nodes________________________________________________________________________ project roadmap_________________________________________________________________ team structure__________________________________________________________________ disclosure______________________________________________________________________ www.espers.io abstract with the advent blockchain technology the early the world has been standing excited see what becomes it. most notably bitcoin has captured everyone's attention being currency that operates the blockchain and other communities have sprung its wake. the need for advanced blockchain solution everyday tasks that both the provider and the user would benefit from being secured and decentralized has yet fully realized though. even those currently with specialty features often have "lone wolf" mentality causing projects fight amongst themselves and fragment that communities become diluted and the message the goal lost. espers proof-of-work/proof-of-stake (pow/pos) hybrid blockchain that was created solution the division and lack usability that currently attributed blockchain technology, both unifying and expanding possibilities. implemented features such secured messaging, cross-chain interfacing, modular sidechains, websites the chain, file storage the chain, name few are then joined through universal interface that any coin project may then participate in. using esp (espers) coins "fuel" catalyst that drives the services that the chain operates further stimulates the interest contributing processing blocks for the network. miners/stakers are encouraged participate causing consistent block generation and ensuring lightning fast network overall. this document intended describe detail the different systems that the espers project employs and how they operate unison provide the end user any community seamless and intuitive experience. www.espers.io blockchains current shortcomings much what attributed blockchain today simply single function system with very specific purpose intended generate revenue. bitcoin's creator had hoped offer truly unique technology not focusing revenue, but the vision became muttled hundreds blockchains flooded out into the world. despite what the news and media would like have you believe blockchains not have only carry one functionality. regrettably the media focuses only losses and gains, such the average person put off considerably for any blockchain that deals solely with providing tokens "coins". though individually being technological feats little able tie bitcoin based blockchains together, even alternatives such ethereum fall short providing effortlessly seamless solution. current implementation and benefits blockchains can described digital ledger which transactions made bitcoin another cryptocurrency are recorded chronologically and publicly" (-google). though this more less true, stating that blockchain's digital ledger used for recording transaction history mentally causes one restrict what they believe can done with it. primarily blockchains are indeed used widely distribute decentralized digital ledger that stores recorded transaction data for the entire system, allowing anyone able access their accounts and information securely. with central point failure being decentralized, blockchains such bitcoin are very resilient any kind form take down attack against the system. distributed ledgers also provide transparency allowing general information visible anyone while keeping more private values and info under the lock private key which each user individually has unique version of. transaction information stored blocks information conveniently known "blocks". blocks are generated "miners", people either mining staking which form contributing resources order encrypt block information and pass off the network. blockchain generates blocks can also manipulate their size, easing the possiblity store different data types large capacities that are then provided end-users. this negates need grow the blockchain unless required the chain parameters. when put together blockchain very capable system terms coins, but its versatility doesn't end there. future possibilities blockchain may utilized for plethora software solutions regards additional security and reliability offered through distributed consensus. the limitation one's own imagination and creativity. communities talk operating systems, messaging systems, data storage systems all running the blockchain, significantly improving our current protocols. once communities and projects alike begin move away from monetary focus and lean more towards developing the technological possibilities itself will create real streamlining both security and reliability our every day tasks. www.espers.io consensus and reward mechanism espers uses proof-of-work/proof-of-stake (pow/pos) hybrid blockchain which directly affects how the system handles block production and stimulates interest doing so. proof-of-work (pow) it's often referred to, the most notable consensus method it's also the most common among blockchain projects since its use bitcoin. pow functions having participants contribute computing power form known "hash" "hashing" reference hashing block the blockchain. participants are rewarded for correctly submitted blocks that are accepted the blockchain/network and then confirmed the block ages ensuring subsequent generation (mining) future blocks keeping participants interested. furthermore multiple participants typically pool together their resources using "mining pool", apposed normally competing against each other, service allowing even those with little computing power able receive compensation for what they provide rather than attempting beat entity with considerably more hashing power. this distribution method falls short perfect though possible attack the blockchain controlling what information the blocks being mined and submitted. these are known "bad blocks" which are blocks with invalid information that would normally not accepted even possibly splitting the blockchain into two versions itself (forking) that then compete for network validity and acceptance when entity has the ability compute with massive amounts power that the majority not have access to. proof-of-stake (pos) for short newer method block generation, however arguably one the more secure methods distribution though not readily available newcomers just climbing board community/project. this because pos uses the coins that participant owns and holding generate block, thus owning more coins and staking them provides the participant with higher possibility generating the next block. staking the act allowing one's wallet/client remain online order support the network having randomly selected coins become temporarily unavailable while the wallet/client forges block and then compensates the participant with earned interest the coins used. the longer one has owned their coins the more "weight" they accumulate and the higher their chances forging the next block, once the block found the coin's weight reset allow for other participants chance also mining block. this method considered more secure properly distributed the participants will invalidate most any form attack that abuses hashing power order gain control blockchain, however one must first obtain coins order stake which depending their worth can costly and overall deterrent the project this the only method available. pow/pos hybrid, known typically just "hybrid" distribution method, shuffles both pow and pos together onto singular blockchain. hybrid systems are still relatively new, few blockchains employ robust enough difficulty algorithm which adjusts the time span between generated blocks for either pow pos and this case both unison. custom difficulty retarget algorithm known "vrx" was created for espers order allow for proper shuffling generated block types within full hybrid blockchain. doing the security espers substantially increased pow and pos complement each other's shortcomings, allowing the blockchain significant edge over one operating singularly particular method. www.espers.io the consensus and reward structure, the writing this document for the espers project, defined below: block time (post vrx implementation) minimum enforced spacing: minutes per block target spacing: minutes per block max (soft limit) minutes per block proof-of-work pow block block block esp per block (start blocks*) esp per block (reserved blocks*) esp per block network fees (standard blocks) proof-of-stake pos block -,: block ,,: block ,,- ,,: block ,,+: annual interest annual interest annual interest annual interest (-day miscalculation*) (standard phase) (scale down phase-*) (scale down phase-*) maximum espers coin supply total of: ,,, esp (-billion esp*) start blocks*: refers setting block reward that the first few blocks the chain may analyzed while they are mined without generating any reward for the miner. reserved blocks*: initially the espers project gave away the total blockchain what's known "airdrop" anyone who wanted participate free charge, while reserving that was split equally amongst the six team members fund ongoing development. this was done april upon launch and carried over the blockchain swap that was conducted shortly afterward. -day miscalculation*: upon launch the pos system within espers there was initially mistaken value input for the annual percentage equation that calculates user's stake rewards. this resulted -day hours) over compensation stake rewards generated pos, but way had any major impact the overall supply/function and was promptly resolved. twenty thousand blocks were processd this was prior vrx implementation and the chain had been rushing block generation during this time. scale down phase-*: once the standard pos reward phase ends after approximately billion esp has been generated. scale down phase-*: later final scale down conducted fairly close reaching maximum coin supply. -billion esp*: the maximum coin supply estimated reached years after launch a.d.) www.espers.io terminal velocity ratex (vrx) vrx terminal velocity ratex blockchain difficulty retarget system that, using several block depth scan, quickly adapts the implemented blockchain/altcoin's mining staking difficulty levels ensure narrow window around the desired block time. allowing course for some inconsistencies block spacing due significant increases decreases hashrate/staking depending whether the blockchain proof-of-work based, proof-ofstake hybrid, the vrx system ensures that blocks are generated consistently even pace. furthermore for hybrid blockchains the blocks are properly shuffled ratio allowing both consensus types even chance. simply put vrx indexes previous set amount blocks (typical reference implementations are set the previous six blocks) and then compares each them against one another relation their block times thus determining set spacing between those blocks. the system then takes the determined block spacing and compares against desired block spacing what called "check round". this check round similar the other retarget systems available but adjusts different curve which adapts quickly large changes the hashrate the blockchain, also making sure not adjust too much not "stall" the blockchain. there one check round per pair blocks indexed using six block count index depth vrx will yield five check rounds. after vrx runs through its checks then determines whether should change the difficulty either down depending whether the desired block time was overshot rushed, the severity which limited maximum doubling the previous block difficulty halving it. finally average calculated between the different pair difficulty changes that the most logical change difficulty occurs that best suits the blockchain and then logged the espers system. please refer the function diagram the next page that depicts the actual function. late versions the vrx systems (such the one used) feature unique pow/pos difficulty swing which hybrid systems skew the difficulty curve favor the less often found block type. doing ensures that neither one block type can win out over the other one and both miners and stakers can benefit the blockchain equally. vrx was designed directly interact with espers' velocity block constraint system, which discussed greater length the next section. this because other difficulty retarget method was compatible with since the block difficulty plays important role within the velocity system itself. www.espers.io (function example diagram) [fetch previous-block-] [block time: e.g. minute block spacing (mbs) minute block spacing (mbs) minute block spacing (mbs) minute block spacing (mbs) minute block spacing (mbs) [fetch previous-block-] [block time: e.g. [fetch previous-block-] [block time: e.g. [fetch previous-block-] [block time: e.g. [fetch previous-block-] [block time: e.g. [fetch previous-block-] [block time: e.g. target spacing minute block spacing (mbst) [check-round-] [mbs mbst] [adjust-down] [check-round-] [mbs mbst] [adjust-down] [check-round-] [mbs mbst] [adjust-down] [check-round-] [mbs mbst] [adjust-none] [check-round-] [mbs mbst] [adjust-none] compare actions then select highest chosen action adjust-down adjust-none adjust-down adjust-none vrx adjusts blockchain mining/generating difficulty down meet target spacing www.espers.io velocity blockchain constraint system overall feature functionality velocity rewritten feature originally found frycoin now ancient bitcoin based altcoin). upon stumbling across this feature became quickly apparent that although significant sections code would need re-done the feature itself had good overall premise both security and chain stability aspects making very desirable. the feature was successfully rewritten despite few small setbacks and bugs earlier versions that not actually affect chain stability coin operation any way other than intended. later development additional systems were created that were never part the feature's original function for proper overall blockchain operation. the key role velocity constrain the chain with the parameters already defined within the code, instead having block spacing and other properties behave reaction the chain's operation. other implementations blockchain technology, sudden increase hashrate, which can indicate possible attack are still vulnerability despite the best difficulty retarget systems out there being implemented control block spacing. network fees, possible invalid balance issues while sending transactions and other portions the blockchain are enforced with double check but are still susceptible attack whether temporary double spend that confirmed and causes users the network grief and losses which unacceptable. the issue possibly exploiting parameters resolved the velocity system being "triple check". even after block during generation has seemingly met all requirements and then generated now longer simply accepted. instead checked once more for inconsistencies and possible other exploits. most notably users will see rejected blocks during the mining staking phase (or both depending coin properties). despite the tendency assume that there something wrong with the chain rejecting blocks this fact completely normal and welcomed operation. reasoning that rapid block times, incorrect fees, insufficient balance and other issues can manipulated talented programmer with malicious intent. guard from these kinds situations velocity checks the generated block against the chain parameters. first checks the block for proper spacing, the block was generated too quickly, thus has not met one the main parameters for the chain and promptly rejected, staving off possible attacks and any kind sudden increase hashrate. the next step verifies that previously the client that sent transaction (if sent one the previous block) sent valid transaction comparing previous balance current balance along with fees paid minimum fee required pay the block waiting accepted. any these parameters are not met (mind you these are standard chain parameters and nothing outlandish) then the block rejected despite being generated successfully. thus this system secures the chain, making more stable, predictable, and overall reliable, instilling confidence that the blocks that are accepted are indeed blocks that are proper. this feature still prototype system. its implementation into the espers blockchain (which fully hybrid system using both pow and pos simultaneously) caused small glitches with the original retarget system which were addressed moving the previously mentioned vrx retargeting system. these glitches consisted causing the difficulty bottom out until proper retargeting system could used. that being said blocks accepted are now www.espers.io spaced consistently minimum minutes allowing the chain move forward smoothly. next the transaction verification and previous balance checks are currently turned off until such time the checks become flawless. the implementation for these specific checks are still being developed properly ascertain those sections chain parameters. security analysis miners may also able create automated cutoffs for the system not waste power while blocks are simply not accepted the chain creating two possible exploits. first that users with advanced mining systems may able effectively premine block during the time that the chain not accepting blocks and withhold from submission until the minimum time has elapsed. the system were then employ security check that verifies the block's timestamp see miner had withheld block for submission another exploit would set withheld block created with valid timestamp long the miner knew each valid time window. these two exploits are resolved first having the previously stated method the system ensure the block timestamp does not come from outside the allowed block window. this discourages attacks creating more steps for the attacker through before having chance success. next the vrx implementation penalizes minimum block time, making the power required maintain possible attack (even with injecting valid timestamp) increase exponentially until after just few generated blocks the difficulty great that minimum time can longer achieved and another miner/staker can simply find the next block. this quickly negates any possible progress the attack. course the velocity system requires all parameters met and not simply just block time order accept what appears validly generated block. the system can expanded include more verification and even more stringent implementation that may adapt any kind features that are added removed. this makes the espers system very adaptable and less hassle work with can grow with the coin and becomes more refined and mature will this new security feature called velocity. www.espers.io sidechains cross-chain interfacing while single blockchain quite capable processing large amounts information newer methods have arose where blockchain system will use smaller blockchains that are reliant the parent chain that created it, known sidechains, order simultaneously process more data while alleviating network load from any particular chain. some approaches require the main chain interface with the sidechains directly, having the sidechain fully reliant the main chain. espers' approach have the sidechains remain capable functioning completely independently. these sidechains once created continue function without the requirement the espers chain existing. using cross-chain interface transmit data from one blockchain another will allow for each chain able share workloads while remaining completely independent. this independence means that regardless any failure issues with given chain, the rest the network will remain intact and operational instead suffering complete collapse. employing this system even makes possible interface with other projects and communities entirely, allowing multiple projects tie together and benefit one another the communities choose so. for example project which capable encrypted messaging and coin distribution processes only transaction data for coin with blockchain "a" while processing only message text data with blockchain "b", each blockchain only has process their respective services. then, using cross-chain interfacing, products can share data amongst each other, providing end users with fluid and intuitive system that fast, secure, and reliable. elaborate this example, blockchain "a" was hypothetically compromised blockchain "b" remains functional and its services would also continue operate. allowing users keep using services that they need even one more element may longer accessible. this type system also makes easier for blockchain project break free from only being able offer single type service. refer figure for visual illustration the proposed system. www.espers.io (figure www.espers.io secure messaging there have actually been several different attempts implement -secure messaging- into blockchain projects. regrettably, few any actually use the chain's algorithm order encrypt the messages. ensure speedy delivery, the message doesn't actually affix itself the blockchain but rather private key where the message contents are sent and from which they can read. allowing for very fast relays messages without the need add load the blockchain network clever solution. however, proper implementation secure messaging would need broadcast the messages across nodes through the blockchain itself, just mined block would normally do. storing raw text block, similar how bitcoin's genesis block contains the text headline news article title, the messages can then more secure than just being encrypted and sent the recipient. this due not only encrypting the message through encryption algorithm but also being able confirm that the message sent/received indeed valid. allowing the message confirm its validity the same manner that transaction confirms its validity within the blockchain ensures that messages received and sent contain only what they were intended contain. falsified even spam messages are significantly reduced even nullified entirely some cases. while the content the messages remain private, for transparency reasons the blockchain still reports when message sent and what public key. however, the recipient and sender are the only ones privy the content publicly there only note made onto the chain that there was message sent, along with the public keys which are already normally available. transparency required for any sort data transference regardless for coins for another type service. this because without transparency becomes very convoluted verify that the recipient did indeed receive the intended method service the chain fails properly record actions taken. continuing beyond merely including text the content message, espers' messaging system also designed process and distribute everything from basic images compressed files and documents allowing its users beyond standard text-only limitation. accomplish the previously mentioned side-chain system and cross-chain interface used. with espers being the catalyst for text data processing its other sidechains then directly interact with the espers blockchain well the other individual sidechains also able process other data simultaneously while keeping the network load light. this done remove central point failure from the system while allowing for greater flexibility the services. for example user "a" sends message user "b" the espers blockchain that contains stylized text data well few images the message will actually split and processed simultaneously sections. first the espers chain itself would process and relay the text message data including the styling code which will then render client-side upon delivery, keeping data processing lower. secondly the images that user "a" has sent are then processed into sidechain that notifies the espers chain image attachment sent message. once the message confirmed user "b" then able view the message contents, the images are rendered across from the sidechain and the message text natively rendered from the local chain ensuring once again that some aspect such the image sidechain failed the message would still delivered regardless the state the rest www.espers.io the network. the opposite also true. the chain processing text incurred issue then the chain processing images would still relay and deliver the images user "b" though the text would not visible. this creates far more robust system than attempting have single point process such loads data. going beyond the espers chain, using chain interfacing, the system also able interact directly with other projects and their communities, uniting them allowing users from one community directly interact with the other. two users participating blockchains desired they are able send message from their local wallet/client the other user's wallet/client regardless the same chain, community project. this shatters the separation between communities and allows for higher possibility real use from the systems that are currently out there and are still being created. each chain processes messages with fee paid their each respective networks, keeping their communities interested processing blocks. key benefit how this impacts the goal the espers system. individual entities such companies are able conveniently and effectively run standalone blockchains for their own needs such inter-company messaging and data processing that the entity requires kept secure/encrypted. this cross-chain communication allows for interaction with another department entirely different entity while retaining privacy and individual security. site-on-chain current internet protocols including ssl and tls still leave all wanting more. websites, servers, and even personal computers are compromised almost countless times daily even with the best practices implemented and security protocol followed. this because much the traffic that speeding through the world wide web not encrypted secured any way. more reputable websites and companies make sure use some sort encryption for traffic with their website(s) but even then compromised server network can cause the whole system come down potentially jeopardizing client information, business information, and other sensitive data. response this predicament the espers project proposes that websites and other internet related services operated/stored/hosted through the blockchain, thus nearly negating any possible attack websites and other internet services without ever impacting usability. using the blockchain internet protocol you effectively add almost impenetrable layer protection any kind service operated, especially websites. going further than merely adding layer security, blockchain operated website has possibility suffering from ddos attack, there are servers datacenters compromise, files "hack", hosting worry about, domain headaches, storage concerns, data intercept, and on. order achieve this lofty goal the previously discussed features are all used unison bring about properly rendered website any user across any participating blockchain/project. www.espers.io first the hosting party uploads their website through the espers client which promptly converts the files into raw code and stores within indexed blocks the blockchain. individual sidechains are used store each type information that code types, images, videos and other data does not saturate any given chain. when the hosting party submits their website onto the blockchain they also pay small network fee process the data with the blockchain just one would with paying transaction fee for sending transaction. this fee nominal amount, and simply there order retain reasonable compensation any miner staker that might have processed the block. once the data that processed onto block, and the block has been confirmed, becomes available the entire community using the espers system and any other participating parties. when browsing for websites the espers client queries each chain for its predetermined data type and renders live the client side for the user interact with. this means that any type web browsing always session based and not visible another entity party. any information processed between the website and the user then also secured along with all information viewed the user with the chain reporting access and other usage variables stored for analytical purposes. doing web browsing service such google could submit their very own browser that would then crawl the chain for websites that were hosted it, sense offering transitional difference between our current internet system and what can effectively called the "internet all while maintaining secure, intuitive, and fluid experience. using the cross chain interface system espers can then bridged with future like-minded projects that instead creating division user could browse websites stored within another project's system entirely from the espers client and blockchain system while effectively remaining completely independent not incur risk from unrelated project's chain failure affecting user's currently used system. this encourages unity enabling standardization, foregoing the need for proprietary system. www.espers.io lightweight/mobile blockchain blockchain grows becomes "heavier" the sense that continuously stores information without regard possible hardware service limitations the end user. order circumvent such concern for possible mobile users users who simply cannot store the entire chain either that moment/ indefinitely important offer alternative what's known "full" client. standard "full" clients general practice store and verify the entire blockchain which allows for significant redundancy and support community members/users use the system while "lightweight" "mobile blockchain" acts access portal, querying the blockchain and pulling data from more like block browser rather than actually storing the system locally. not storing the majority files locally the espers system can more readily used full scale mobile device user with limited network/storage capacities. though much what makes this system lightweight simply crawling the blockchain also course has the capability submit data the blockchain processed the upcoming block with without synchronizing the blockchain. every system should allow for customization the user that using and such the lightweight/mobile blockchain also capable synchronizing either partially wholly. the option selected, the system will synchronize from the last checkpoint and "assume" that previous transactions reported the chains hosted nodes are valid. another option have "quiet" full sync run where after the semi-sync completed from the last checkpoint the client then begins synchronizing the rest the blockchain silently the background allowing the user still support the network completely their discretion. chain apps the espers blockchain system designed use sidechains and modular features the "chain apps" pertains the project's ability plug any kind blockchain operated application into itself and grow capabilities. some these chain apps come from x-node voted features (discussed further the next section) while others are from parties verified prior implementation into the system. user created chain apps may submitted any time via the system's client and are then promptly processed assigned unique sidechain for use. www.espers.io x-nodes x-nodes are not mistaken with masternodes, which centralized system where users lock specific balance order participate additional network features and support them, later rewarding the participant with some the generated coins from the next block they qualify. instead, x-nodes are completely opt-in meaning that any community member may participate the system regardless their current balance previous experience. this ensures that the decentralization aspect the espers project and blockchains general not lost once again strengthening the overall network. the way x-node functions having participant register themselves the network additional data processor allowing them store additional sidechains that are used provide additional chain features. similarly masternode, x-node requires persistent internet connection and penalizes any participant that consistently disconnects avoid inconsistent connections any possible hang-ups service provided end users. the longer that user participates the system the higher their chance become being part the compensated x-nodes which are automatically voted the network depending reliability and data processed. participating user may then also lock any desired amount their balance which will effectively become frozen the participant will longer able stake them until they are unlocked from the x-node and doing have the balance act multiplier the compensation rate provided. course the multiplier curve and implements several anti-abuse system such requiring cool down period for recently locked coins. until the cool down complete participant will not see multiplier effect. the smaller the amount locked the longer the user must wait for the lock cool down exponential rate. larger balances require users wait less time cool down while having the multiplier exponential curve. this negates the usefulness significantly larger balances ensuring that users are encouraged lock larger amounts rewarded sooner while penalizing possible "dust" locking such degree that becomes impractical. locked balance will still able find the next block the chain however any coins created are diverted (after lock cool down) participant's selected feature vote. voting the network this manner crucial establishing rapid feature development the project team and raises community support. participants may also choose simply not vote however the multiplier aspect again penalized this creates drop support for new network features. any participant may submit requested feature voted the network for future development, however when the voting round ends any feature voting that was not selected pooled together and split into two section that are then used independently. the first half split into sections that are then trickled back into the network fees paid allowing miners and stakers alike receive slight "bonus" until the balance runs out while the second half put towards the winning voted upon features. users may unlock their balance any time while participating the x-node system even the balance has not completed the cool down period giving users complete control over their experience. similarly, participant opts-out any given time, just like when they had opted in, the participant will incur another cool down now between deactivation and allowed reactivation time. furthermore the x-node system intuitive and single-click removing possible user-error that often occurs with similar features such masternodes and replacing with user interest/immersion. this also takes considerable load away from support needs, network inconsistencies, and the overall hassle operating participating the system. www.espers.io www.espers.io www.espers.io disclosure this whitepaper (document) for informational purposes only, and not binding commitment. not rely this information when interacting with espers coins ultimately the development and timing remains the sole discretion the espers/cryptocoderz team. we, the espers/cryptocoderz team, intend way harm any kind anyone any shape form. there has never been crowdsale coins, presale any other crowd funding method used for the espers/cryptocoderz project its developers. please understand the risks involved with cryptographic blockchain technology and their respective coins. the espers/cryptocoderz team cannot held responsible for any lost, stolen, otherwise missing funds any kind. you are unsure have any doubt about this project urge you not invest become involved this prototype technology system stated numerous areas and used your own risk. have affiliation with the yobit product called "espers". this separate product solely operated yobit. credits big thank you all who helped make this project reality, special thanks goes out the following community members (usernames) who have contributed this document's creation and revisions: bit cafecontiki cryptocarrot cxplexus eugen gandalf tekna vin wolf www.espers.io