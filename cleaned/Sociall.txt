sociall: secure and private decentralised social network for all whitepaper version august www.sociall.io working document subject change table contents abstract ................................................................................................................................................... market ..................................................................................................................................................... functionality ........................................................................................................................................... wallet ................................................................................................................................................. features decentralisation........................................................................................................... top ups.......................................................................................................................................... user account ...................................................................................................................................... marketplace ........................................................................................................................................ instant messaging ............................................................................................................................. mobile applications ......................................................................................................................... community/blog .............................................................................................................................. privacy.............................................................................................................................................. crowdfunding................................................................................................................................... decentralisation ipfs ................................................................................................................... ad-platform ...................................................................................................................................... self-governing ................................................................................................................................. technology stack.................................................................................................................................. overview .......................................................................................................................................... frontend application ........................................................................................................................ api server ........................................................................................................................................ authentication server ....................................................................................................................... image processing micro-service ...................................................................................................... websockets micro-service .............................................................................................................. open-source ......................................................................................................................................... bounties ............................................................................................................................................ security ................................................................................................................................................. scl ....................................................................................................................................................... details............................................................................................................................................... source code ..................................................................................................................................... exchanges......................................................................................................................................... roadmapbeyond.............................................................................................................................................. contact support ................................................................................................................................ abstract social networks provide opportunity for data hacks and security/privacy breaches, including those the network provider themselves, evidenced recent facebook examples. decentralised, encrypted network would enable users retain control and protection their data (including online behaviour, wallet/financial information, multimedia and profile information), thereby minimising potential for hacking privacy breaches. sociall new generation networking. secure and private decentralised social network for all. sociall encrypts all data and multimedia uploads and stores securely all over the world, making completely decentralised. the platform private and discourages search engines from viewing user profiles displaying them search results. sociall does not claim ownership any uploaded data multimedia the system. all information belongs the uploading user. the platform utilises its own easy use cryptocurrency called scl. used pay for all goods and services rather than traditional money. think scl the native currency the platform instead using multiple different currencies that usually come with conversion fees. sociall will supply all accounts with decentralised wallet securely store scl and other popular cryptocurrencies. all account wallets will exist within series smart contacts the ethereum blockchain, making completely decentralised and uncontrollable from anyone other than the wallet's creator. adding scl account will breeze the wallet will have the ability convert many different forms currency scl. sociall plans move the entire platform self-governing. this means that users sociall will able assist with keeping the platform clean and safe removing spam and offensive posts. all users who contribute this will compensated scl. eventually, the entire platform will run the users instead centralised controlling entity. the users will even have the ability make updates and fix issues, thanks open-source and pull-requests. sociall giving the power back the people. market more than billion people people earth use some form digital social networking. social media advertising spend projected reach more than billion globally with this number reaching almost billion sociall will target these two major markets: social and e-commerce. both markets are multibillion-dollar industries, with billions users, that are currently controlled large corporations. sociall hopes create decentralized social network paired with online peer-to-peer marketplace, ad-platform, and much more. e-commerce sales expected grow almost the next few years. global retail ecommerce sales will reach trillion accounting for total retail spending worldwide. shoppers believe they will get better deal online than stores. number social media users worldwide from (in billions) number digital buyers worldwide from (in billions) https://www.statista.com/outlook///social-media-advertising/worldwide https://www.statista.com/statistics//number-of-worldwide-social-network-users/ https://www.statista.com/statistics//number-of-digital-buyers-worldwide/ functionality wallet sociall account wallets will created through decentralized smart-contract process where there owning entity. the setup entity, being sociall, will not have control over any funds kept user's account wallet and will never able process any transactions behalf the user making completely decentralized. onboarding process prompt user create password access wallet function returns new wallet address sociall saves wallet address for reference only sociall has plans allow the storing and sending other erc based tokens the near future, along with also integrating shapeshift for instant token-to-token trading inside the wallet. features decentralisation the entire wallet will built using smart contract coded solidity the ethereum blockchain. the smart contract will generate user's wallet and will stored the database. since the wallet generated from smart contract, will not have private key, sociall will not have store private keys. instead, the user will create password that grants them access their wallet. whenever transaction requires signing (for send), the user simply enters their password and the smart contract checks the user has access not. user password must first hashed and salted before sending the smart-contract will displayed publicly the blockchain. this far more decentralised solution than hosting and encrypting private keys like majority exchange and application wallets. below the flow for how user can initiate transaction and sign with their password. user initiates transaction user enters password sign transaction password hashed and salted transaction signed, smartcontract takes scl txfee scl sent address passwords must treated like private key. sociall will not storing these passwords, password lost then access the wallet will lost forever. all transactions will paid scl, not eth. user account wallet will need hold eth make transactions/purchases. sociall will hold amount eth within the smart-contract pay for all transactions and will charge users small amount scl (.%-.%, depending txfees and gwei prices) for the transaction. all transaction prices will dynamically calculated depending the current scl/eth trading pair price. for example; scenario scl/eth trading pair goes up. the scl transaction fee may reduced the smart contract will overcharging. scenario scl/eth trading pair goes down. the scl transaction fee may increased the smart contract will undercharging. scenario scl/eth trading pair stays stable. the scl transaction fee may stay the same slightly adjusted according market conditions. scenario eth average gwei increased due high-load network. the scl transaction fee may increased the smart contract will undercharging. the scl/eth trading pair has effect this scenario, although can play part depending market conditions. audit the smart-contract will completed reputable firm before pushing the code live. please refer the security section within this document for more information regarding security and code audits. top ups users sociall will able top their account wallet with scl simply depositing popular supported cryptocurrencies (such btc and eth) and eventually fiat. the project will utilize coinpayments and stripe for these future integrations. this top-up process will consist complex business logic the background. master wallet consisting scl from the platform and marketplace fees will fulfil the order. the proposed flow for topping with btc below. very similar flow will utilized for fiat deposits, although different api endpoint will hit. user requests scl top btc api checks enough scl exists master wallet enough exists, api requests btc deposit address deposit address generated and sent user user deposits btc scl added user wallet the final proposed flow for attempting top with btc (similar error flow for fiat) with not enough scl execute the order existing within the master wallet. user requests scl top btc api checks enough scl exists master wallet not enough scl exists error displayed user scl will purchased from the master wallet inflated rate. the buy rate will approximately higher than the consolidated exchange rate. sociall has plans eventually implement peer-to-peer buy/sell function for scl directly from the users account wallet eliminate the need for master wallet. user account account sociall can set less than one minute. user simply signs with their full name, email address and requested password. after the activation email clicked, then the final stage onboarding begins. below are the steps for the onboarding process. user enters basic details and accepts terms and conditions. user clicks verification email confirm ownership email address. user taken the final onboarding screen where they select their interests from predefined list. user taken through short-guided tour the applications. onboarding process complete. once the onboarding completed, the user may then browse the application. the user may then also update their information from the account settings page. temporary username created for them upon signup that consists their full name and random generated id. user may update their username whenever they wish. usernames are used mention user post/comment, along with also being the gateway their profile via url. the url structure for user profile: https://sociall.io/u/[username-here] urls will not publicly visitable. user does not have account not logged in, they will redirected the login/signup page before allowing proceed the requested user's profile for privacy reasons. sso (single-sign-on) capabilities will offered third-party applications and websites that would like offer their users the ability signup login with their already existing sociall account. marketplace sociall will allow the creation "product posts" within the platform that represent goods services. followers can see this post and purchase directly with the scl held their account wallet. for example, you wanted sell your old laptop you could simply attach image along with meta data describing the item and price scl. users will then able search multiple ways within the marketplace for your uploaded post. once user decides purchase marketplace item, they simply click the "buy" button attached the post. password prompt will displayed the user for them sign the transaction. the receiving user will see notification stating that user has purchased their item. the two users can continue discuss finer details within dedicated live chat. all product posts can geo-tagged that users sociall can search for items within their location that are available for local pickup they wish. the marketplace will have small flat fee scl and will taken from the seller after the transaction complete. the marketplace will have strict rules against illegal goods and services. all which will laid out the terms and conditions the website. all product posts that violate these terms will removed from the platform ensure safe and compliant environment. escrow based services and systems will integrated the near future protect both buyers and sellers. this will consist holding account where scl will stored until the buyer receives the item and confirms. the beginning, sociall support staff will act the mediators within the transaction. once the platform gets closer full self-governing model, then the mediator role will moved the moderations the platform for further decentralised peerto-peer marketplace experience. senario example the proposed flow for when item purchased successfully, and the item correct: user purchases item scl sent escrow holding account seller posts item scl released from holding wallet seller buyer receives item and confirms scenario example the proposed flow for when item purchased, and the item not confirmed deemed faulty and rules the dispute favour the buyer. user purchases item scl sent escrow holding wallet seller posts item buyer receives item and reports faulty sociall opens dispute dispute ruled favour seller scl released from holding and sent seller scenario example the proposed flow for when item purchased, and the item not confirmed deemed faulty and rules the dispute favour the buyer. user purchases item scl sent escrow holding wallet seller posts item buyer receives item and reports faulty sociall opens dispute dispute ruled favour buyer scl released from holding and returned buyer instant messaging instant messages are the most used feature within social networking platform, sociall hopes make more enjoyable for its users. messages within sociall will mainly user-to-user, with the ability have dedicated messaging groups for groups and events. messages will able consist multimedia (images), emojis and eventually also sending scl. messaging sociall will utilise websockets functionality with the help the signalr library. please refer the technology stack section this document for more information regarding the technology behind this. sociall will soon integrate end-to-end message encryption. this ensures that only the sending and receiving users can read what sent, and nobody between, not even sociall. the database will store encrypted messages cypher text that unreadable and impossible decrypt without access the unique key pairs. here basic example how end-to-end message encryption will work sociall. please refer the roadmap section this document for estimated implementation date. user and user share unique key pair user messages user message encrypted via key pair cypher text stored database user recieves message message derypted via key pair messages sociall will eventually consist more advanced functions for interaction. this includes sending scl one-on-one chat, sharing recorded audio, and much more. readable message displayed user mobile applications sociall currently concentrating the first release the web platform. once that complete and all issues resolved, then the team will begin working semi-hybrid mobile applications for both ios and android. both applications will consist all features within the web version and will still able create transactions and access the account wallet. ios and android apps will then moved full native applications ensure better usability, stability and reliable faster native sdk calls. after the native migration, advanced integrations such vpn and tor will added, further enhance the privacy aspect the platform. the web version the application will accessible via mobile devices consists full responsive design. this allows sociall users still use the platform the while the mobile applications are under development. please refer the roadmap section this document for further information and release dates. community/blog the community section sociall way for all users the platform discover new accounts follow and engage with the community. consider the community section more open public blog where content rich posts can seen anyone sociall and beyond. where you can create post with images, links, embedded multimedia (and more), and have other users sociall read through it. the community section will have feature-rich wysiwyg editor make post creation breeze. the community section the only part sociall that visible search engines. community posts will indexed search engines and the only section within the application that can visited users who are not registered logged in. privacy sociall private social network that does not allow search engines index user profiles. the platform will soon have strict (yet simple) privacy settings for users control who and who cannot see their profile and personal data. initial launch, all profiles will visible other users sociall. future releases (see roadmap), users will have the ability the make their profile and posts private those who are not following them. account settings will also feature way make all following requests manually approvable instead having each request automatically approved. here list the simple settings that will exist. profile visibility public. profile and posts visible all users sociall matter who (besides blocked users). private. profile and posts only visible users who follow you. following approval on. all following requests must manually approved. off. all following requests are automatically approved. crowdfunding crowdfunding capabilities will soon added sociall. they not represent ico nor they integrate with any foreign new token. crowdfunds sociall simply represent personal cause such individual user trying raise funds for charity, family trying raise money for medical bills. all crowdfunds use scl and set funding goal, deadline, images and other related metadata. sociall will take small fee all raised scl. decentralisation ipfs all data and multimedia uploads are stored within the encrypted decentralized storage solution that built and maintained sociall. this system integrates with hosted database that utilizes mongodb sharding for further decentralisation storage. image sent from the client (website) server. image renamed, encrypted and sent the cloud for resizing and decryption keys are stored inside the decentralised database solution. micro-service picks queued image, decrypts it, resizes different sizes (if possible), encrypts the content again and stores permanent store location. the image resized multiple different dimensions for different display scenarios the website. the encrypted images are stored the cloud. since they are encrypted, the cloud cannot access the raw data. when the client (website) requests image, the encrypted data retrieved from the cloud, decrypted sociall's servers via the stored decryption keys, and delivered the client. the above used temporary solution not ideal method for blockchain based application. the team already working solution that utilizes ipfs, peer-to-peer hypermedia protocol. ipfs true distributed protocol that allows further decentralise sociall's storage solution. sociall plans moving multimedia uploads and data storage ipfs the below proposed flow how this will implemented successfully. the same flow will used with data objects too, although they will json documents instead multimedia objects (images). image sent server for uploading server processes image ipfs returns unique reference hash server utilises ipfs and uploads hash saved for reference hash used client display image ad-platform the ad-platform sociall will consist semi-automatic self-serving process. any user with sociall account and scl balance above can create and submit campaign through the platform. all submitted campaigns will manually revived sociall support staff before going live the network ensure quality and compliance. per all other functions sociall, this process will eventually moved self-governing model where moderators the platform can approve the ads. all add fees will paid scl and will based cpi (cost-per-impression). basic metrics will displayed the creator the "ad manager" section, such number impressions, performing interests, date/time impressions and much more. ads sociall will sit within the news feed different sections. different areas will have different pricing depending availability and visibility. new sections may added the future depending planned features that are not within the roadmap. available sections include: personal news feed community section right widget section (site-wide) marketplace feed all ads sociall will formatted strict display manner. this means that ads will have short title, description, link and display image. display image dimensions will depend the section that the optimised for. ads will static, and animations are allowed. this ensure that the platform abides the styling guidelines with nothing looking out the ordinary. self-governing sociall slowly moving the entire platform self-governing. this means that users sociall will able assist with keeping the platform clean and safe removing spam and offensive posts. this "self-governing" feature will give the power back the people instead having all power sit with the owning entity. for example, mainstream social networks often remove posts promoting free speech strong opinion regarding certain topic. sociall, it's the appointed moderators (who are not staff, they are everyday people and users sociall) who decide the post really requires deletion not. it's giving the power back the people and offering true decentralisation. example the flow for inappropriate post: particular post sociall flagged multiple users. post displayed moderators sociall for their decision. moderators deem post violation the sites terms. post removed permanently from the database. the moderators are rewarded scl for their services. example the flow for accepted post the platform: particular post sociall flagged multiple users. post displayed moderators sociall for their decision. moderators deem post within the terms and acceptable. post then whitelisted and continues displayed. the moderators are rewarded scl for their services. users sociall are granted moderator privileges manually they have strong track record and not break any rules the platform. first, sociall support staff will reach out users the platform see they would like these privileges. eventually, this role will handed over already existing moderators sociall further enhance the self-governing aspect and decentralised experience the platform. technology stack overview sociall has five applications. all applications and services run consolidated group ensure the speed and functionality. each application hosted individually make sure that the application can continue run even singular service goes down. here the list all five applications that sociall currently running. frontend application api server authentication server image processing micro-service websockets micro-service more micro-services will created often keep intense services away from the main api server. frontend application the frontend application developed with the most recent version angular. served via simple nodejs server running expressjs. sits within complex docker image linux server. utilises popular packages and frameworks such ngrx and rxjs. the frontend uses openid standards for authentication and communication with the authentication server. api server the sociall api server runs the most recent version .net core. delivers all information from the database the frontend application readable manner. restful api service, meaning that it's based representational state transfer technology. also communicates with all services within the sociall ecosystem, such the image processing micro-service and the identity server. authentication server the authentication server runs the open-source identityserver. has been slightly modified use the most recent version .net core and adapt the mongodb decentralised solution. the authentication server api compatible and must for use within the frontend project. the server issues refreshable jwts (json web tokens) the client for communicate with the api server. the api server then checks the jwt against the authentication server verify its identity. image processing micro-service micro-service used process all image uploads. this required compress and resize the image multiple different dimensions for different screensizes and placements within the application. this run separately hosted micro-service ensure that does not affect any other areas the application, since image compression equals high cpu usage. this service written the most recent version .net core. websockets micro-service websockets protocol for full-duplex communication via the http protocol. this grants always-open connection between the server and the client. allows real-time connection for sociall's instant messaging functionality. sockets more advanced solution than traditional api polling due its constant server connection and lower bandwidth usage that leads realtime client-side updates. messages are sent the api server for storing within the database and the same time synced the sockets micro-service that the client experiences real-time conversation. the sockets micro-service built with .net core and utilises the open-source signalr library. open-source majority sociall's projects will moved open-source just after mid this includes the api server, frontend project, and all micro-services (see technology stack section). the project may eventually open some repositories pull-requests, although this yet confirmed. outside developers will able contribute the development sociall creating pull-requests the public repos. the sociall development team reviews the request benefit the platform, then will approved. these participants will not awarded scl, but instead mentioned the credits section sociall. the identity authentication server may partially open-sourced the future, although has been advised against the project's security firm. open-sourcing majority sociall's systems displays transparency the community. all code repositories will available via sociall's github profile https://github.com/sociall-io bounties the public will encouraged run tests the project's available code find flaws the security, design and all other aspects. this opens door freelance security experts, developers, designers and other whitehat experts audit code and report issues the lead developers. bounties will offered findings that the support team deems error bug. all finds will assessed manually and individually, and the payout will depend the severity the issue. all finds will paid scl user's account wallet sociall. these members may also get their names mentioned the credits section the platform. security course, the most important aspect any social networking platform the security its data and authentication process. this why sociall using reputable open-source project called identityserver handle all authentication the application. sociall using reputable third-party security firm run audits, penetration testing, and much more over all servers and applications that will developed. this ensures that there are security vulnerabilities within sociall's code development flows. public report for this will available after the audits are complete. sociall has five applications (as per the technology stack section). all five will tested ensure that the application secure with vulnerabilities. new audits and tests will conducted each time new function pushed live the platform. dcorp developing and auditing the smart-contract wallet. hosho will complete the final audit the code and smart contract structure before pushing live the blockchain. since all wallets exist within smart contract the blockchain, sociall does not store any private keys passwords the database. this makes hacking account wallets virtually impossible the user enters sophisticated password. sociall will enforce strict password criteria when the user sets their wallet for the first time. all code audit reports will publicly accessible via the project's github profile. scl details the platform utilises its own easy-to-use cryptocurrency, called scl. used pay for all goods and services rather than traditional money. think scl the native currency the platform instead using multiple different currencies that usually come with conversion fees. scl erc based token the ethereum blockchain. name code address total supply circulating supply emission rate role token sociall scl xdbdccbcfdeceedee ,,. ,,. new coins will ever created buy goods, services and spaces sociall due the strict nature smart contracts and project set up, more scl can ever minted. the circulating supply may slightly differ from the total supply for many reasons such lost tokens, locked accounts, lost private keys, and much more. this number cannot effectively determined, hence why the circulating supply has been listed the same the total supply. scl can stored any erc compatible wallet. source code the source code for scl can found etherscan. compliant erc contract and was developed frank bonnet. https://etherscan.io/address/xdbdccbcfdeceedee#code exchanges having scl listed multiple exchanges important for the liquidity and volume the token. the sociall support team constantly reaching out large reputable exchanges and upcoming exchanges have scl listed there. the team hopes that once sociall out beta and public release that exchanges will see potential both the token and project. scl currently publicly tradeable the following exchanges. fcoin https://exchange.fcoin.com/ex/gpm/scl-eth hitbtc https://hitbtc.com/exchange/scl-to-btc bancor https://www.bancor.network/communities/aeadaeafea/currency cryptopia https://www.cryptopia.co.nz/exchange/?market=scl_btc roadmap below the projects roadmap over the next year and half. all dates and scope are subject change. many variables can affect the dates specified such revenue, priority, team resources and size, and much more. v.b initial closed beta launch. invite only access the platform. more invites sent out frequently the platform becomes more stable and bug-free. bug fixes, optimisations, and micro-features continuously pushed the closed beta. preparing for open beta. further testing and bug fixing the closed beta. more invites sent out the public each week. security audit completed all code and the authentication flow remove any found vulnerabilities. expanding the development team. opening the floodgates and moving the platform open beta august. releasing the facebook migration tool. releasing account deleting and data exporting. further bug fixes and optimisations. taking all code repositories open-source. post sharing capabilities. releasing the community section. adding better profile privacy settings. building talented in-house marketing team. decentralised wallet integration. users can store/receive/send scl securely. starting security audit the wallet feature before shipping live. adding optional fa. adding the events and groups sections for public and private use. adding the marketplace sociall where users can create product posts and make purchases. send scl user-to-user via instant message. allowing scl top-ups inside the wallet with fiat. adding more micro-features. multilingual capabilities. concentrating mainly english, spanish, japanese, chinese, korean and hindi first release, with many more come. first release self-governing capabilities. adding poll posts. planning ipfs migration. crowdfunding capabilities and posts raise scl for specific goal purpose. release ios and android applications. migrating all data and multimedia uploads ipfs. release the platform. further language support. business/company/organisation pages. end-to-end message encryption for secret chats user-to-user. open api for third party single sign-on capabilities and integrations into foreign websites and applications. giphy support comments, messages and posts. integrating civic verify identity and receive "verified" badge. beyond there are many more features that the team has planned for the project. sociall listens the voice the community and would like hear your thoughts future integrations, additions, features and more. contact info@sociall.io you'd like suggest feature idea. contact support you have any questions about sociall, the team, technology anything between, please not hesitate reach out via any channel listed below. sociall values the communities feedback and consider all requests. website: https://sociall.io email: info@sociall.io medium/blog: https://medium.com/sociall-io facebook: https://www.facebook.com/sociall.io/ twitter: https://twitter.com/sociall_io instagram: https://www.instagram.com/sociall.io/ reddit: https://www.reddit.com/r/sociall/ telegram: https://t.me/sociall.io youtube: https://www.youtube.com/c/sociall-io bitcointalk: https://bitcointalk.org/index.php?topic= github: https://github.com/sociall-io