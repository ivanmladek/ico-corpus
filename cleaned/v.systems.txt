v.systems: blockchain database and apps platform sunny king kate shan rob zhang scott nadal background technology forever evolving. the birth the internet, arguably one the most revolutionary event history, took place only around years ago. very short span time, nonetheless, has evolved much and moved from giant computers tiny smart phones the hands billions around the globe. the benefits and impact that brings need explanation. other technological areas like artificial intelligence and quantum supremacy, have also witnessed significant growth over the years. and despite the differences among these technology inventions, all them have been target wide variety criticism before reaching massive adoption earning substantial development resources. satoshi nakamoto's announcement bitcoin [nakamoto different. there are constant skepticism surrounding the token its black market association the highly fluctuated valuation are just some the many examples. yet, satoshi's brilliant creation blockchain has gradually picked momentum over the years. almost every major corporation around the world has some way involved with blockchain technology, incorporating them into current business model investing related companies. this testimony how valuable and revolutionary this technology is, and also how much ahead his time satoshi was. blockchain, general, should viewed distributed database system. this implies that significant portion the world's data could stored blockchain, just they traditional relational databases and the comparatively recent cloud databases. with the massive potential that blockchain could bring, however, the world has yet witness the true materialization the technology. light this, sunny king, creator the proof-of-stake mechanism, devises brand new consensus mechanism, supernode proof-of-stake (spos), not only tackle the rising energy consumption owing the proof-of-work mechanism first explored bitcoin, but also refine the proof-of-stake mechanism. with this mission imprinted the project, envision push forward new economic era. introduction since bitcoin was not designed for general data usage, attempting use the bitcoin style blockchain for data storage has proven difficult and expensive. bitcoin protocol limited legitimate data usage the scale bytes per transaction although this limit changes over time, the magnitude stays essentially the same. this limitation was deliberately put place the creation bitcoin, the accommodation data usage conflicting goal the system performance. has been prolonged battle and drama raise bitcoin's maximum block size limit, which evidently reflects that inherent scalability limitation the technology. the scalability issues stem from the fact that, unlike previous distributed databases, bitcoin extremely redundant system. each full node the bitcoin network has complete dataset the bitcoin blockchain, and must also validate the blockchain its entirety. promote data usage, would cost even more consumption the already-limited storage resources, and reduce the maximum transactional throughput the system. the high cost associated with such extreme level redundancy and resource straining discourages the scaling blockchain. over the years, there have been many attempts make blockchain more scalable. for instance, bitcoin initially tackled the redundancy issue via system called light-weight validation, which cleverly organized transactions merkle tree data structure, such that users can still follow the blockchain consensus decentralized fashion only using light-weight nodes. this technique was able significantly lower the redundancy level the bitcoin network. currently, the number light-weight nodes far exceeds the number full nodes the bitcoin network. blockstream later suggested that applications may offloaded sidechains [back order maintain bitcoin-centric world, pegging system bitcoin was proposed this scheme. besides from that, ethereum proposed tackle the redundancy level via sharding. sharding distributed database technique divide large database into smaller 'shards', which stored different nodes. however, due the lessening redundancy, this system introduced risk reduced shards availability. counter this, ethereum would likely require the existence several highly-available full nodes storing its whole blockchain. v.systems platform: re-architecting blockchain technology there are tens thousands blockchain project happening around the world. but due the many flaws and inherent scalability issues, the world has yet witness massive adoption this technology. time tackle the core issues blockchain and reinvent the technology bring truly scalable, stable, and global blockchain platform that easy use and compatible with billions system. doing so, enable the widespread blockchain adoption and push forward whole new era. blockchain database the major breakthrough that blockchain technology brought was decentralization. logically, one the keys adopting blockchain lies within the migration from traditional database structure this new decentralized framework. general, traditional user accounts can substituted public-private keys and addresses blockchains. traditional databases are subject strong access control, almost all data restricted authenticated accounts. moreover, account creation also centralized model traditional databases, which database administrator grants the user account for access. with blockchains, conversely, key pairs are generated freely anyone, without the need for centralized administration. much the data then considered public access, unless stored encrypted form the blockchain. this applies even for private blockchains within organization's own lan, unencrypted data should still considered publicly accessible, due the unavoidable breach into the lan. instead, privacy protected the anonymity the virtual identities. this fact arguably stronger privacy protection compared centralized model, where the loss customer data happens often due hacking. for applications that require some form central administration, achievable through the business logic inside the client/node software. privileged key pairs known administrators can built into the client software. administrators can then choose mark those key pairs violation the service agreement violators. administrators can also mark specific data for censorship. the data the violators specific data that inappropriate illegal can then disregarded the node software. however, worth noting that this type central censorship weak form, since the violator data still allowed enter the blockchain, just not recognized the official node software. for customer identification, typical for applications require users pass identity verification the account opening process before the account activated for use. this can achieved well inside the client/node software. whitelist public keys that have passed the identity verification will introduced, and only data from this list public keys are recognized the software. with the above concepts mind, significant portion the world's databases use today are suitable for migration blockchain databases. elements traditional database can have new interpretation objects blockchain environment. the followings are examples basic objects: public key: the public part key pair generated users address: abbreviated form public key virtual identity/avatar: long term use identity, compared public key, which can for temporary use organization: identity associated with and managed multiple virtual identities/avatars fungible: virtual asset/token fungible nature, such currency and share etc. account: container fungibles for identity, like bank account. not confused with user account traditional databases the followings are examples basic relations: ownership: relations between identities and objects creation: relations between objects and identities who create them issuance: relations between token issuer and fungible the followings are basic user database operations: create database insert object update object delete object create index query index key value objects, the form json objects, are pretty powerful data structures represent structured data. key-value pairs can considered simple example objects. key key-value pair should not confused with public key virtual identity. this term sometimes also referred name-value pair avoid confusion. keyspace namespace scope the database can either local the user global. under ownership type data model, the data object may regarded "owned" the identity who inserted it, meaning can only modified deleted this owner. for global namespace, there global namespace resolution problem. this can understood global uniqueness constraint problem. when user attempts insert key-value pair, observer sees the key name the broadcast and then makes competing insert the same key name, which may get confirmed into the blockchain instead the original insert. namecoin introduced protocol deal with this issue. the idea goes like this: user sends pre-insertion reservation transaction, where the key/name the insertion hidden via hashing. the protocol understands that the reservation transaction reserves the insertion the given key for some period. wait for the pre-insertion reservation transaction confirm. then broadcast the actual insertion transaction the network. the insertion transaction should include link/reference the reservation transaction pass protocol validation that the insertion and the reservation match each other. since the squatter does not know what the key name the time the reservation transaction broadcasted, would not able get before the actual owner, unless reorganization the blockchain happens after the insertion transaction broadcasted. however, this still unable prevent squatters from guessing what other people want and claiming them advance, like the domain name system. ownership can transferred. during the transfer transaction, the owner the object modified. default, only owners can modify delete object. however, other models which allow more flexibility are also considered. for example, documentation wiki application may not require ownership each data record. once the object inserted, everyone free modify delete them. another possible way utilize whitelist identities who are allowed modify the object. advanced database features the platform also plans introduce advanced database query features. object-relational query language such those similar mongodb, more flexible than the traditional relational query model, also known sql. google's mapreduce also presents new form data processing. database migration migration features are extremely important for database. database scales, would more cost effective migrate separate blockchain its own, the blockchain fees can lowered specific the application itself. the platform plans provide migration tools move database from one blockchain another. modularity goals modularity important design goal lower the system complexity and reduce future development and maintenance cost, not only for the platform itself but also for the individual blockchains running applications the ecosystem. layers protocol: consensus management layer block tree management layer interchain processing layer transaction processing layer data format layer peer-to-peer network layer internet protocol layer system components: pluggable consensus models pluggable business logic container database management component database operation component database query component shared peer-to-peer networking full node with blockchain processing smartphone based light-weight cold wallet smartphone based light-weight hot wallet browser based wallet consensus systems the original proof-of-work consensus used bitcoin now the breakthrough where all began. for more than eight years running, bitcoin's system has certainly proved its reliability. however, the rising energy consumption and centralized mining pools have become targets criticism. this why proof-of-stake consensus was introduced through peercoin [king the major difference between proof-of-work and proof-of-stake that instead allocating weight based computing resource consumption the case proof-of-work, proof-ofstake consensus systems allocate weight relative the amount coin holdings participating the consensus activity, also known block minting. this algorithm decouples the consensus security level from system energy consumption level and eliminates the requirement energy consumption order reach consensus, thereby resolving the energy concerns over proof-ofwork, while reducing overall system operating cost the process. proof-ofstake consensus major breakthrough significantly lowers the cost blockchain technology and thus the entry barrier, enabling vastly diversified blockchain ecosystem. nevertheless, there are concerns over proof-of-work and proof-of-stake consensus mechanism, including the lack incentives for nodes perform hardware upgrades and the random process block generation. these are proven major obstacles scaling blockchain. and after careful evaluation, our team has devised the brand new supernode proof-of-stake (spos) consensus, both incorporate the goods and discard the bads with the old mechanisms. spos consensus will serve the enabling technology for blockchain reach global scale. supernode proof-of-stake consensus mechanism dictates that elevated nodes (supernodes) act minting pools while holders vsys coins, native currency the blockchain, take the role minters through leasing their coins supernodes. interests will paid coin owners who leased their coins supernodes for minting. this new incentive model does not only ensure the quality the nodes, but also guarantee truly decentralized ecosystem where vsys coin owners have the actual power govern the network. the same time, the system also allows for contention supernodes any moment through determining winner among contenders comparing their minting average balance. this innovative mathematical approach ensures the system carries enough stake liquidity while reduces busy contention attack. more detailed information regarding the supernode proof-of-stake consensus mechanism available the spos whitepaper. mainchain-sidechain model the platform introduces its own model for mainchain and sidechain. blockchain called sidechain another blockchain the mainchain, satisfies: awareness: full nodes are also full nodes and process the entire blockchain synchronization: observes abstract clock synchronization abstract clock synchronization deals with the ordering blocks between the two blockchains. imagine the blockchain abstract clock, whereof each block the chain clock tick. called abstract has nothing with the local timestamps written into the blocks. timestamps are local values that cannot determine the correct ordering events globally. instead, block number inside blockchain can determine global time sequence. observers can safely say events previous block always happen before events later block regardless their timestamps. when sidechain block generated, links the latest mainchain block its mainchain parent. multiple consecutive sidechain blocks are allowed share the same mainchain block their mainchain parent. this mainchain-sidechain parent-child relationship must also order-preserving this model mainchain-sidechain allows develop proprietary communication method between the two blockchains. unlike blockstream's proposal, our model does not require pegging sidechains, thus giving sidechain projects much more freedom innovate. cloud features the platform plans provide toolsets sets blockchain for applications. blockchain template preparation allows user choose from different protocol parameters and pluggable components such consensus model. once the template and options are selected, the platform provides toolset deploy new blockchain for the application, possibly even before specific business logic needed for the application developed. smart contracts smart contracts [szabo allow parties create binding agreements without third trusted party. bitcoin used simple scripting system when validating transaction. but this scripting system quite limited, and for the fear potential issues, bitcoin restricted its use among standard transactions. later, ethereum [buterin redesigned new smart contract system with turing-complete programming language known solidity. was significant progression for blockchain technology, allowed autonomous and decentralized contracts realized for many application scenarios. eos recently proposed implement another smart contract system utilizing webassembly, also known wasm. wasm emerging web standard for low level in-browser client side scripting. wasm typically developed via c++ and compiled wasm. the platform plans support compatible implementations ethereum and eos style smart contracts. virtual machines will implemented modular fashion that applications can choose enable preferred style smart contracts. more competing smart contract systems are developed the industry, they would also evaluated and considered. scalability great deal effort has been put solving the scalability limitations single blockchain. while some them are notable, believe that the ultimate future scalability the ecosystem the result unlimited number blockchains. envision world with possibly billions blockchains operating the same time. result, the platform will allow applications run separate blockchains necessary, achieving complete scalability isolation other application systems the same ecosystem. usability usability has long been bottleneck for the general acceptance cryptocurrencies. the platform plans develop both browser based wallet and mobile light-weight wallet for smartphones, all while having modern user experience and high security mind. cold wallet should easily used everyone, allowing users safeguard their virtual assets with peace mind, free from the threats from the dark corners the web. conclusion v.systems platform aimed significantly lower the cost blockchain technology and massively increase the competitiveness blockchain database platform compared traditional database systems. our vision that the future blockchain not only few billion dollar worth blockchains, but billions blockchains well. this revolutionary change and are excited push forward whole new economic era. references [nakamoto bitcoin: peer-to-peer electronic cash system, https://bitcoin.org/bitcoin.pdf [back enabling blockchain innovations with pegged sidechains, https://blockstream.com/sidechains.pdf [king ppcoin: peer-to-peer crypto currency with proof-of-stake, https://peercoin.net/assets/paper/peercoin-paper.pdf [szabo smart contracts: building blocks for digital markets, http://www.fon.hum.uva.nl/rob/courses/informationinspeech/cdrom/literatur e/lotwinterschool/szabo.best.vwh.net/smart_contracts_.html [buterin ethereum: next-generation smart contract and decentralized application platform, http://www.the--blockchain.com/docs/ethereum_white_paper-- a_next_generation_smart_contract_and_decentralized_application_platform--vitalik--buterin.pdf