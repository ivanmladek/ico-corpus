cryptoguru poc sig, public domain the burst dymaxion arbitrary scalable, energy efficient and anonymous transaction network based colored tangles sean gauld franz von ancoina, robert stadler abstract describe the concept and implementation proposed layer the burstcoin cryptocurrency called "the burst dymaxion". this layer implements arbitrary scalable, energy efficient and anonymous transaction network based colored tangles. tangles are dags that can seen generalization the blockchain. coloring simple tagging technique used cryptocurrencies allow for coexistence various instances class common data context. the burstcoin network has several unique properties that make our premier choice for implementation: its proof-of-capacity (poc) consensus algorithm energy efficient, fair and anti-centralistic, the blockchain very compact and implements data scrubbing reduce blockchain bloat and has smart contracts. the coin has over years heritage and community bootstrap with, yet small enough allow for significant improvements without long and paralyzing scaling debate. the original burstcoin blockchain used underlying layer open and close arbitrary number general purpose transaction channels, similar the lightning network proposal bitcoin, but using iota-like tangles for propagation and verification. each these channels not limited terms capacity and number transactions. this concept takes the best traits the original burstcoin, iota, monero, zcash and the newest bitcoin proposals create currency suitable for truly global use. allows e.g. banks, clearing houses, remittance processors and virtually all other market participants use quasi-private, yet decentral and trustless transaction channels with desired properties. keywords burstcoin dag dymaxion lightning-network poc ring-signature scaling tangle zk-snark poc consortium cryptoguru sig bestiale institute technology *corresponding author: dymaxion@cryptoguru.org stronzo blockchain enforcing contents introduction building blocks burstcoin blockchain smart contracts dags and the tangle zk-snark vs. ring signature blockchain binding with accts lightning network coloring putting all together dymaxion tangle vs. iota tangle blockchain-dymaxion interaction using nodes for ad-hoc dls dymaxion anonymity implementation details opening transaction within closing security considerations collusive nodes attack spamming and dos scenarios results and discussion prototype performance adoption process acknowledgments spacemint paper errata the burst/qora acct process burstcoin cips references introduction cryptographic currencies, cryptocurrencies for short, have been around for about years now. after existence the fringes, they are being perceived increasingly disruptive technology that may change the way how will see and use money the future. the burst dymaxion figure cap gemini/bnp paribas: number worldwide non-cash transactions (est.) despite their technical elegance and possibilities, cryptocurrencies lack mass adoption because two critical factors: usability and scalability. while usability can addressed with sufficient engineering and development effort, scalability often theoretical problem its own. the inherent features good cryptocurrency decentralization and trustless design often contrary traditional methods upscaling centralistic processes. while bitcoin's pioneer achievement, the blockchain, solved the problem decentralized trust, its inventor certainly left much headroom for scaling that concept for truly global use. fact, speaking "truly global use", let's fathom the scale this concept. assume you would like support one hundred million people world-wide able use cryptocurrency like bitcoin with average just transactions per day (about the global non-cash transaction volume see also figure you would need mib blocksize meet that demand. this would imply blockchain growth over gib per day. aside from the feasibility considerations, questionable transaction for the acquisition sack rice made china should kept for all eternity the blockchain and thus memory mass storage all participating nodes world-wide. concept overcome many the restrictions typical blockchain imposes scalability was presented the iota white paper[]. this novel system, transactions are not broadcast over network participating nodes, some which (miners) try put them into block. instead, network nodes can validate transactions and this validation work actually earn the right perform transactions themselves. the nodes the burst dymaxion have unified roles and form kind systolic array[] for data processing. the data being transaction propagated along directed acyclic graph. due it's success and thus increasing usage, bitcoin started experience scalability issues, now commonly hitting its theoretical tx/s limit. long scaling debate about pushing this limit and removing other protocol constraints continues the present day. one the suggested extensions the bitcoin protocol called the lightning network (ln). basically network two-party ledger entries for participants who have subscribed bidirectional payment channel. while solves many the problems associated with high transaction volume, micropayments and their cost, not silver bullet. e.g. does quite little increase the limits the number concurrent users.[] dymaxion term that richard buckminster fuller associated with much his work. portmanteau the words dynamic, maximum, and tension and sums the goal his study, "maximum gain advantage from minimal energy input." use this term for the burst dymaxion honor the achievements and influence this true generalist and also because the geodesic dome structure fuller helped popularize has very similar properties what proposed this paper for transaction propagation: elements the dome while each limited resilience distribute mechanical stress throughout the whole structure, making geodesic domes able withstand very heavy loads for their size. our proposal, the dymaxion set tangle-based lightning networks, each single one used for propagating transactions. each single these networks distributes "transactional stress" among its whole network participating nodes, allowing for arbitrary scalability. the more nodes participate, the higher the transactional capacity each the currently active networks becomes. any number these tangle-based lns can co-exist the same time, speak dymaxion layers (dl). therefore present nothing short energy-efficient cryptocurrency that able sustain the total global load non-cash transactions. below all this small and very moderately growing energy-efficient blockchain with proof-of-capacity consensus used for bookkeeping the opening and closing the dymaxion layers above it. see also central figure proof-of-work (pow) systems and responsible for making burstcoin energy efficient. efficiency while similar proofof-stake (pos) systems, still achieved low barrier entry, where you not need acquire significant stake the currency order able participate the mining consensus[]. figure the main chain (black) consists the longest series blocks from the genesis block (green) the current block (orange). orphan blocks (purple) exist outside the main chain called forks+ building blocks burstcoin blockchain burstcoin digital cryptocurrency and payment system derived from the nxt cryptocurrency. such based the blockchain technology (figure shows the general concept blockchain with the most essential terms explained), but using special class consensus algorithm called proof-ofcapacity (poc). this algorithm allows for the usage storage space instead raw computational power being used ethereum has very similar concept under the name raiden network smart contracts blockchain can seen distributed database that ensuring consistency and validity verification work done majority participating nodes this blockchains network. while cryptocurrencies such bitcoin speak the blockchain public ledger, others such ethereum put emphasis smart contracts and not only monetary transactions store their blockchain. smart contract procedural way, usually done computer program, facilitate, verify, enforce the negotiation the burst dymaxion performance contract. compared their "inanimate" paper-based ancestors, smart contracts also fulfill the role otherwise needed lawyers (verification), notaries (validation) and executors (enforcing). for this very reason, smart contracts are seen disruptive technology future digital economies. burstcoin has been given smart contract system the formalism used called (automated transaction) and has been proposed and implemented ciyam[]. turing-complete formalism, ats are both powerful (expressiveness) and dangerous (verifiability) and have been used only sparsely templates facilitate simpler smart contracts (scs), such lotteries, crowdfunding and asset exchange. because the expressiveness the formalism, other possible applications are basically limitless, yet have designed with great care avoid situations such the dao debacle that led the hard fork and community split ethereum and ethereum classic. dags and the tangle directed acyclic graph (dag) restricted form finite directed graph that has directed cycles. short, data structure with interesting computational properties and widespread use computer science. assume the reader has basic understanding graph theory and encourage acquire otherwise. figure shows example simple dag. main proposition this concept, its feasibility provide good infrastructure for microtransactions, mainly targeted the iot industry. any microtransaction-capable infrastructure seeks overcome the problem paying fee that larger than the amount value being transferred. the smaller the value microtransaction becomes, the more applications open (tipping, machine-to-machine transactions, microservices, spam protection etc.) but the harder gets lower the transaction cost below the value being transferred. ideally the transaction cost would zero, but then again what would the incentive for transaction processor be? iota answers this dilemma unifying the roles network participants. there more discrimination between transaction (tx) issuer and verifier node has both these roles. the cost for issuing provide the verification least two other txs. doing this, the network security kept issuing transactions. assumed that the nodes check the approved transactions are not conflicting. node finds that transaction conflict with the tangle history, the node will not approve the conflicting transaction. node issues new transaction that approves conflicting transactions, then risks that other nodes will not approve its new transaction, which will fall into oblivion. while not discussing the implementation, the iota white paper suggests there being hidden pow the validation process: for node issue valid transaction, the node must solve cryptographic puzzle similar those the bitcoin blockchain. this achieved finding nonce such that the hash that nonce concatenated with some data from the approved transaction has particular form. the "incentive participate" for node (assume node has need perform transactions, why should validate other transactions) achieved nodes keeping statistics their peers, e.g. how many new transactions are received from neighbor. one particular node "too lazy", will dropped its neighbors. therefore, even node does not issue transactions, and hence has direct incentive share new transactions that approve its own transaction, still has incentive participate. figure simple directed acyclic graph consisting vertices (a-e) and edges connecting them. the arrows stand for direction and there are loops therefore acyclic. the iota white paper describes blockchain-less approach ensuring transactions cryptocurrency with the use called "tangle", which essence dag. the https://www.coindesk.com/ ethereum-classic-explained-blockchain/ zk-snark vs. ring signature the acronym zk-snark stands for "zero-knowledge succinct non-interactive argument knowledge," and refers proof construction where one can prove possession certain information, e.g. secret key, without revealing that information, and without any interaction between the prover and verifier. ring signature type digital signature that can performed any member group users that each have keys (to sign messages). therefore, message signed with ring signature endorsed someone particular group people. one the security properties ring signature that the burst dymaxion should computationally infeasible determine which the group members' keys was used produce the signature. both concepts are central elements cryptocurrencies with high focus anonymity, namely zcash[] (zk-snarks) and monero[] (ring signatures). both ring signatures well zk-snarks have their advantages and drawbacks anonymizing transactions, which leaves either these functionalies optional feature the setup parameter space for created tangles. blockchain binding with accts atomic cross-chain trading (acct) mechanism, where two (or more) parties own coins separate cryptocurrencies, and want exchange them without having trust third party. the term "atomic" here means indivisible, and refers the fact that sending coins one chain and sending other coins the other chain cannot performed independent each other. these transactions could performed independent each other, then while one party could fulfil their side the bargain and send some coins one chain, the other party would have the option going back his end the bargain and simply not following through with the protocol, ending with both coins. decentral exchange where two parties, and want exchange tokens can based the following process: generates some random data (called the secret) figure rivest, shamir, tauman ring signature scheme ring signatures referenced figure are pretty plain and straightforward way multi-sig application: given entities each with pub/priv keys, ..., (pn party can compute ring signature message input (m, ...pn anyone can check the validity ring signature given and the public keys involved, ...pn ring signature properly computed, should pass the check. compared this, zk-snarks seem outright "magical" first glance. you can verify the correctness computations without having execute them and you will not even learn what was executed just that was done correctly. reality, zk-snarks can dissected into four relatively simple ingredients: represent polynomial problem random sample for succinct check homomorphic encoding encryption zero knowledge checking structure will not explain these full here, but encourage the reader visit good introductions and explaining blogs for zksnarks[], []. will not discuss the concrete implementation both concepts here, there are already off-the-shelf implementations github https://github.com/apuljain/ linkable-ring-signature https://github.com/scipr-lab/libsnark generates (the payment) containing output with the chain-trade smart contract it. allows coin release either signing with the two keys (ak and with (secret this transaction not broadcast. the chain release script contains hashes, not the actual secrets themselves. generates (the contract), which spends and has output going back has lock time the future and the input has sequence number zero, can replaced. signs and sends who also signs and sends back. broadcasts and can now see the coins but cannot spend them because does not have output going him, and the not finalized anyway. performs the same scheme reverse the alternative chain. the lock time for should much larger than the lock time for both sides the trade are now pending but incomplete. since knows the secret, can claim his coins immediately. however, the process claiming his coin, reveals the secret who then uses finish the other side the trade with (x, accts have the disadvantage that both chains need implement the acct (of course addition being capable provide smart contracts) order for this work. burst was provide some acct with say bitcoin, the acct handling would have implemented not only see appendix for visualization the burst dymaxion figure burst/qora acct prototype the burstcoin side, but also bitcoin client(s). while not entirely impossible, unlikely get arbitrary cryptocurrencies development teams provide that kind interoperability. if, the other hand, the implementation accts happened situation where the same development team exercises control over both "chains" question, then this approach certainly seems viable. burst already does have prototype acct implementation with the cryptocurrency qora see figure lightning network the term "lightning network" became widely known from publication poon and dryja[] the context the bitcoin scaling debate. essence, off-chain protocol running network nodes for making micropayments digital currencies. said nodes form scale-free network bidirectional payment channels without delegating custody funds trust third parties. yet, these payment channels are bound smart contracts the underlying blockchain ensure enforcability case uncooperative participants. the basis this mechanism are called hash timelocked contracts (htlc) implemented smart contracts the blockchain. when opening payment channel, participants must commit amount transaction which registered the blockchain. this can seen collateral and guarantees enforcability transactions (so-called commitments) done offchain the payment channel. given their similarity, accts are probably the origin the technique now called htlcs. introduced for bitcoin, this system conceptually not independent overlay network; more deferral state the standard blockchain, the enforcement still occurring the blockchain itself (albeit deferred future dates and transactions). because the payment channels are bi-directional between two parties only, forming network where parties can participate transactions between each other depends finding "paths" between two parties that can through intermediaries. based http://ciyam.org/at/at_atomic.html way, the formation lightning network relies transitive properties separate communications. the problem with this approach similar the problem premonetary trade. achieving transitive pathways for out network participants becomes increasingly difficult not much larger than the old explanation why money was invented the first place holds true for itself: had twenty hens and wanted exchange them for one pig, either had find someone willing exactly that trade, two other people say and where might have had pig wanting two goats and finally wanting twenty hens and having two goats. the categories that example translate incompatible monetary volume and time ln. possible that operation well feasible with the help powerful intermediaries/facilitators who command large financial resources. this case, however, can expect the exhibit decentral and not distributed topology compare figures and coloring abstract sense, coloring simple tagging technique used allow distinction, thus coexistence, various instances class common data context. cryptocurrencies, colored coins concept that allows attaching metadata transactions and this leveraging the coins infrastructure for issuing and trading immutable digital assets that can represent real world value. colored coins[] are method track the origin burst coins, that certain set coins can set aside and conserved, allowing party acknowledge them various ways. such coins can used represent arbitrary digital tokens, such stocks, bonds, smart property and can even represent real-world objects. when coin "colored", can traded the burst network just like any other coin the system. this allows burst exchanged for whatever object the colored coin represents. this concept forms the basis for the burst asset exchange. the burst dymaxion figure decentral (left) vs. distributed topology. since has been suggested, that various coloured coin protocols could interest banks and major financial institutions, because its inherent applicability their requirements use self-issued, quasi-private, yet decentral and trustless transaction channels with desired properties. since then various implementations like coinspark and multichain have evolved from the original concept rosenfeld. while our proposed combination colored coins and tangle-based lightning network (which call colored tangles) brand new concept, prototype implementations for the bitcoin already exist. putting all together have seen, all building blocks for our proposal are already place, not only theoretical concepts, but well developed and even tested real-world application use. these are solved problems. the realization the burst dymaxion therefore seems more like engineering rather than research task, but the major contribution this paper the seamless integration said components into new framework with significant synergistic gains. dymaxion tangle vs. iota tangle while dags have been used part graph theory for several decades now and are mathematically well understood today, their use cryptocurrencies generalization the blockchain novelty. are convinced the advantages tangles bring questions scalability and decentral design, but not every aspect the current iri (iota reference implementation) seems the best possible design choice.[] our biggest concern the cryptographic hash function used iota: curl. the iota vulnerability report[] has shown already practical signature forgery attacks and while iota longer uses the curl hash function hash transactions part the iota signing process, curl still used for other purposes iota. similarly disturbing seems the claim one the iota founders have placed that vulnerability into curl purpose, able shut down copycats. even leaving the ethical aspect aside publishing iota source under gpl license and allegedly placing cryptographic vulnerability its core hash function experience shows, that control over backdoors and vulnerabilities seldom remains the "right hands". extension, this puts iota itself risk. seems more apropriate, use the iri only design guidance some aspects, using standard libraries and standard hashing algorithms complemented own peer-reviewed implementation. moreover, the biggest difference being the underlying burst blockchain allowing dymaxion tangles opened and closed against point reference, well the existence arbitray number logically separated (colored) dymaxion tangles compared just one iota tangle. future iota could very well live within the dymaxion, maybe even its native form. blockchain-dymaxion interaction figure the top-level view the presented concept. the burst blockchain acts fundamental bookkeeping chain where opening and closing the dymaxion layer recorded. payment processors, banks, exchanges etc. may use accts (actts really) open and close payment channels with desired properties (network size, validation reqirements, etc.) and keep them open for certain period (ttl) e.g. one day for daytrading wallstreet. the tangles work asynchronously with inherent clock signal contrary the -minute target time for block generation the burst blockchain. transaction latency dymaxion layer effectively network latency plus validation latency ttx tnl tvl https://is.gd/vzoin http://coinspark.org/developers/ https:/www.multichain.com/ https://is.gd/rcpqf with network latency effectively being the packet time between two peers sum network-hop latencies, often measured milliseconds, and validation time being pow, poc pos runtime the node measured seconds. the burst dymaxion figure dymaxion top-level view: set colored tangles over the burst blockchain. each tangle representing independent lightning network for transaction channels. block magnified show inner structure containing transactions some which are opening and closing tangle lns. with the average block time the burst blockchain being said seconds, this can lead situation potentially short-lived tangles that can opened and closed intra-block i.e. within one and the same block the burst blockchain (see green tangle). the application for this could voting where some hundred thousand globally distributed voters would have give their vote within short period. some tangles might live for day longer and bear the transactional load financial institute exchange and only the end the day the respective period close and record that state the blockchain. mentioned section acct stands for atomic cross chain transaction. will use slightly modified actt for atomic chain-tangle transaction from now on. course, figure very simplified view you consider that basically every block pictured potentially could without any burst blockchain scaling cip have incoming outgoing actts. see only three actts for block one incoming actt for blocks and and one outgoing for block and even this simplification already suggests multiple the traditional blockchain-only transaction capacity. will discuss the implementation details (opening, closing, enforcing) section using nodes for ad-hoc dls each cryptocurrency network consists nodes and each these nodes has contact other nodes which from its perspec- tive are called peers. this infrastructure already place for burst and there communication protocol between these nodes ensure transactions are propagated, blocks are downloaded for new outdated nodes (blockchain syncing) etc. see https://burstwiki.org/wiki/the_burst_api similar the lightning network daemon (lnd implement burst dymaxion daemon (bdd) that can but doesn't need integral part the burst wallet any case, the bdd would active nodes that participate specific colored tangle networks. the decision whether participate not, would defined dynamic node capabilities defined the respective cip see appendix one particular detail the network infrastructure acquisition node discovery presented the next section (see .). tangle-based network made for high degree decentralization and transaction performance, but has problem upon startup there not network sufficient size place. the burst dymaxion solves this problem effectively providing the equivalent cloud service for nodes. figure shows the burstcoin core network running the poc blockchain protocol. this base network has been running for over years now and will always form source nodes potentially available upon initiation. https://github.com/lightningnetwork/lnd brs burst reference software: poc-consortium/burstcoin https://github.com/ the burst dymaxion figure burst cryptocurrency core network nodes december nd. node discovery recursive descent. dymaxion anonymity both ring signatures well zk-snarks are part the implementation and upon opening can chosen optionally conceal transactions that happen within that specific dl. this has consequences for the respective record (see section well for monetary supply the dl. for various reasons, there are plans bring zksnark anonymity on-chain. due the cutting edge nature zk-snarks, our opinion there not enough peer-review the underlying cryptography make mandatory part the base chain. participants who desire anonymity can limit the value-at-stake providing zero collateral. application scenario would dissidents that had carry only clearing cost for on-chain operations and use the for encrypted communication, voting similar. believe global payment system should agnostic any moral, legal, monetary social requirements these are most often not global nature. that's why groups wanting use the for anonymous value-transfer activities can so. enabling the anonymity features supposed the result cost-benefit consideration. one such potential cost anonymous mode operation comes from the fact that: zcash, where there "certain scarcity" and god forbid, zcash had bug that allowed for people generate more zcash coins than the intended money supply, then possible that nobody could tell. were severe bug, potentially somebody could inflate the money supply hundreds millions dollars, making profit while lowering the price zcash for speculators. there are several examples major cryptocurrency bugs that have led massive misallocation the quantity cryptocurrency that should have been circulation. contrary this, even the worst case bug the anonymity functions, due the ttl any possible damage contained and limited the collaterals used when forming the dl. even "dl goes wrong", this has effect other past, present future dls and certainly not the base chain. while zk-snarks and the pinocchio protocol[] allow for concealment even the value being transferred, said problem with uncontrolled supply tokens may not worth the risk. ring signatures provide very nice alternative for complementary scenarios with anonymity requirements. there risk uncontrolled supply and case the has larger number members can guarantee sufficient level anonymity with good transaction performance levels. while anonymity on-tangle can covered for large parameter space requirements, on-chain anonymity somewhat weak itself. many addresses are re-used and even http://zcoin.io/zcoin-and-zcash/ the burst dymaxion named. their connection on-tangle transactions (via collaterals) can prevent any anonymization effort on-tangle. fortunately there are two mechanisms improve on-chain anonymity. the somewhat crude approach mixing service, that theoretically can provide sufficient concealment source and target payment streams, but from cryptographic point view more obfuscation functionality than real anonymization. the other mechanism for on-chain anonymity littleknown feature ciyam at: anonymous accts. one might think, that anonymous accts are not possible, because the itself has secrets, but with slight changes the process can altered allow just that. normally acct would involve putting the same "hash" into two ats (each residing different blockchain, our case chain and tangle) and then sending the secret unlock both order make the transaction take place see appendix turns out, there need for the secret "identical" the on-chain would store the hash eaeedeeccdf\ eceefcbfdcbcfcee while the on-tangle could store dabebdbddacfb\ bbbbdfebbdaadfa both hashes seem completely unrelated, and some observer they are, yet the ats have the knowledge that one sha "burst", while the other the sha "tangle". (this course trivial example how this the in-production version does use more elaborated callenge-response process than just using fixed strings with some concatenated id). assuming will have numerous ats operating across numerous blockchain-tangle dls all doing transfers around the same time pretty clear that any observer aiming for "total awareness" would have record the total global sum transactions the dymaxion performing. seems highly unlikely for this succeed when observing "globally decentralized transaction machine". implementation details the life cycle dymaxion layer consists the following steps initiation (a) initiator set (b) creating the (node discovery, at) (c) subscribe phase operation closing (a) node shutdown broadcast (b) clearing opening opening dymaxion layer (dl), the main operation for tangle spring into existence. while more complex, the operation conceptually very similar acct, creating asset the btc lightning network initiation process. initiation tangle initiator creates on-chain actt (which effectively htlc) with several tangle parameters including, but not limited to: consensus type poc, pow and pos will supported. poc the preferred way for full nodes with attached storage ("plots"), pow and pos available for various application scenarios, where small tangle nodes (iot) possibly cannot perform poc some even pow. time-to-live (ttl) global time-lock for the tangle. point the future where the tangle will fold. maximum ttl could decades, but propose first release max. ttl blocks the burst blockchain (ca. year). must bigger than the subscribe-time. subscribe-time deadline for subscribers sign their collaterals on-tangle. maximum blocks (ca. h). collateral collateral burst the tangle initiator. this collateral used backing for whatever units (see below) the initiator issues. the collateral can low but then any currency, asset, bonds, futures, shares whatever the issued units represent must backed other means (promises similar current burst asset exchange) and might not have much trust collateral-backed issuance. the collateral blocked and unspendable for the issuer until the tangle folds. technically, the collateral defined the burst address and it's utxo which the initiator names and signs. features can created with more parameters defining its behavior. the most significant probably being anonymous transactions and their type, where the participants (initiator and subscribers) can perform transactions using ring signatures zk-snarks (see .). this case, records the tangle transactions (see can kept, but not contain any information make the participants the tangle identifiable. units number and types units issued, can applied e.g. for different types stocks like common, preferred for ipo issuance. other than that each type unit can bit number quants. subscribers optional list addresses who are subscribers the tangle the participants. this pull operation, that can happen without interaction the subscriber himself. has effect the availability the funds these particular addresses. all are spendable can receive more burst. until the subscriber himself does not sign the burst dymaxion his participation on-tangle, the particular address still detached from the tangle. this parameter given, speak private else public open everybody, which case fees for clearing balances upon folding are paid the subscribers themself. cost creating tangle implies minimum transaction fee, which independent the collateral. consists fixed and variable part. the fixed part being constant fee going the miners the block where the tangle opening was recorded .the variable part depends the number subscribers see equation and locked time until the tangle folds. this fee intended cover the cost for clearing operations for the participants. fvar nsubscribers fordinary-payment although the on-chain accounts are protected from any form hijacking simply being referenced the tangle initiator has effect initiator has also motivation reference arbitrary number on-chain accounts, this will raise the tangle opening fee. unspent fee (reserved for subscriber who never signed on-tangle) forfeited for the tangle initiator and goes the miners the burst blockchain block where the folding the tangle recorded. the tangle initiator technically just the first subscriber the tangle, therefore his collateral defined the same way for all subsequent subscribers: providing signature for the respective burst address with funds the time signing. successfully recording the tangle the burst blockchain, will get unique its "color" and definition all units this colored tangle are limited this context. now, there inter-tangle transaction possible, all value transfer desired happen between two different colored tangles has over the burst blockchain intermediary. node discovery figure shows the step immediately following the initiation: node discovery. this step, initiation requirement broadcast the peers the node that got the tangle initiation requirement (not necessarily the node the tangle initiator). the peers record this requirement, broadcast their peers and check the parameters against their own capability configuration (see and case the node's configuration does allow for handling the requested dl, the node becomes part the network. section discuss the latency and throughput benchmarks for tangle initiation under various connectivity scenarios and geographic situation. subscription within the subscribe time defined the tangle initiator, each subscriber must sign his address on-tangle become participant the newly formed dl. list subscribers has been given, the subscriber must part that list (private dl) and the respective tangle can seen invite-only. such list has been given, the open everyone with address the burst blockchain. figure parallel node discovery for colored tangles (dl network infrastructure acquisition): peer lookup, check against node capabilities. while there are defined maximum values for ttl and subscribe time, there minimum time given, except the constraint tttl tst must met. this allows for short lived dymaxion layers that can opened and closed within one block and its approx. seconds life time. naturally these kind short-lived dls are probably more suited for machinemachine iot transactions instead. transaction within for consistency reasons, describe transaction process the dl, would like use parts the iota terminology: sites are transactions represented the tangle graph. the network composed nodes which issue and validate transactions. iota, the main idea the tangle the following: issue transaction, nodes must work approve other transactions. therefore, nodes that issue transaction are contributing the network's security. the price for transaction on-tangle not named fees, but validation work done for other transactions. iota uses some kind "low-effort pow" validate transaction. this design choice makes sense, you target iot devices and lots them. the problem is, works only with sufficient security such large scale tangle network already place. the burst dymaxion implementation will support all three types consensus algorithms, but will start off with just poc until the network has reached sufficient size and more experience from network operation gained. the on-tangle poc validation will quite similar burst mining and also using regular poc plot files, although the re- the burst dymaxion quirements for the plot size node will much lower the order plot size. the node will validate transactions also finding deadlines the hash the transaction validate. case can't find deadline below certain threshold, the validation has failed and the node can't validate that particular transaction. node manages validate two transactions this way, can use its solution send transaction itself and the cycle repeats (with another set on-tangle nodes). because this type validation verifiable (nodes can verify the poc validation solution found other nodes), there need for central entity issue any specific transactions this currently the case with the iota coordinator. moreover, there gain for nodes amass more poc space for validation, will not give them more "validation power". the poc validation minimum-threshold satisfiability problem, which either met not. should miner with several hundred poc plots decide use these for on-tangle validation (which assume will more the rule than the exception), will not give him any more power than regular node has, the validation poc search fit. closing when dymaxion layer closed, speak the tangle folding. this because upon initiation closing the layer, clearing all participants' (initiator and subscribers) balances happens and after the final balances are the burst blockchain ordinary payment transactions with the respective fee from the tangle setup cost the whole structure the tangle scrapped. now, there are two possible conditions when tangle will fold: the tangle ttl has expired there are subscribers (except initiator) the tangle after the subscribe-time the first condition defined the tangle intiator when creating the dymaxion layer, whereas the second condition defined the subscribers who either not show (subscribe) the tangle all, who unsubscribe. unsubscribing from tangle does not free the subscribers funds on-chain on-tangle. these still remain locked until the tangle folds. tangle records tangle participant chooses keep the records, free so, but these are relevance the funds that are now the burst blockchain. some participants, most often the initiator it's financial institution, are required law keep these records and they can so, but these records have impact blockchain size. the other hand, the burst blockchain can serve warrant validity these privately kept records, the tangle entry and exit points are stored. the final tangle state being recorded with its hash value forging the records, although they may have been archived single entity only, considered impossible. this attribute immutability important legal requirement archiving financial documentation. even all tangle participants choose are required keep the tangle records (similar bank statements), the storage their responsibility and thus only their local interest. the blockchain free just record openings and closings the tangles working above and sustaining the high-volume transactional load. tangle storage left completely the private domain only those who have interest keeping the records, yet these records' immutability ensured the decentral burst blockchain. blockchain enforcing security off-chain transactions enforced blockchain smart-contracts without creating on-blockchain transaction for individual payments. the blockchain serves the function arbiter, possible conduct transactions off-blockchain without limitations. transactions can made off-chain with confidence on-blockchain enforceability and deterministic results. enforcing the transfer collaterals after folding the tangle does not require cooperation from any counterparty. clearing operations are solely the actt running both on-chain well on-tangle. while subscribed parties can choose not participate any on-tangle transactions, their on-chain collaterals remain frozen until the tangle folded. security considerations collusive nodes attack tangle network possible attack scenario set collusive nodes causing either double spends modifying transactions along the graph while validating them for each other and causing called parasite chain see [], pg. the iota paper introduces family markov chain monte carlo (mcmc) algorithms counter the problems bad tip selection from collusive attackers. the dymaxion implementation uses instead byzantine consensus algorithm. from mathematical model point view, attackers the network can considered "faults" distributed computing protocol. byzantine fault tolerance (bft) achieved the non-malicious nodes have majority agreement their strategy like handling default values for missing corrupted messages. use the bft-smart byzantine fault-tolerant state machine replication library build dependable protocols. given the number faulty nodes, the total number nodes needs for correct operation the transaction propagation the tangle honest nodes). this puts upper boundary for the maximum tolerable portion malevolent nodes almost there are more https://bft-smart.github.io/library/ the burst dymaxion than /rd malevolent nodes, trustable transaction validation on-tangle not possible without further security precautions. while believe that attack with such high number colluding nodes infeasible for large global networks, this theoretical limit also exists for the iota network whole, matter the tip selection algorithm used. contrary this, dymaxion layer has additional security measures place. described section the node discovery run picks potentially from the total set nodes the burst network subset suitable and available for the initiated colored tangle. given the total number nodes the burstcoin network, and the number available and suitable nodes for the dymaxion layer tangle, where proper subset n), collusive nodes would have take the whole burst network and not only subset also would like point out, that all members set are constantly vetted part the burst network and once misbehaving are blacklisted other nodes the network, which effectively bars them from being chosen into set even tangle initiator would work collusion with such network, the tangle initiation parameters cannot set way that would favor the preferred choice malicious nodes and this lure the tangle subscribers into trap steal their collaterals. spamming and dos scenarios transactions on-tangle are free from fees. they were truly zero-cost transactions, there would nothing stake for some attacker who would like issue huge amount transactions for some own benefit (spamming) simply congest the network and hinder other transactions validated (dos). the worst case, the attacker could amass processing power that would allow him execute whole class majority attacks with dire consequences the network such. iota currently counters this problem the use socalled coordinator specific node run the iota foundation make specific transactions called milestones stabilize the network until has reached size that would make majority attacks infeasible. the burst dymaxion design starts much better initial situation. instead centralized entity rely on, the underlying burst network and the blockchain form already points reference upon entry and exit tangle. moreover, nodes propagating on-tangle transactions are required perform poc for validation. pos and pow consensus algorithms for on-tangle transactions will added dls will run devices not capable perform poc consensus (or are defined for low resource requirement operation see c), but the initial mode operation will allow for the network grow decentralized manner without any entity exercise central control over any aspect it. mentioned section nodes the burst network are vetted and blacklisted when misbehaving (e.g. spamming) already. this actually functionality that has been added and battle-tested the wake the spamming attacks that occured july results and discussion prototype performance performed various benchmarks with prototypes for initiation consisting node discovery latency timings, internode communication throughput and various cost metrics. the benchmarks are done with scripted prototype and are preliminary. such they can expected improve, but you can clearly see from the numbers, perfomance good even the worst case scenario with many adverse effects coming into play. latency figure node discovery reference point (wallet.burst.cryptoguru.org) figure shows node discovery latency from our point reference, the pocc online wallet, hosted some german isp and representing currently the best case scenario for the prototype. you can see, the maximum response time from peer answering potential tangle node) below with the majority peers having answered within .s. this can considered the best case scenario, where broadcasting node with good connectivity also region dense burst nodes presence. for comparison, figure shows discovery latencies from node with regular internet connectivity (cable) for home network, situated near region with good burst nodes coverage, but nodes the own country yet. this can considered the standard situation areas where the burst network starts proliferate. the pocc network observer gives good overview areas with dense burst nodes presence and their neighboring regions. even this case, almost half the answering peers remain under with the slowest peer answering with latency the burst dymaxion figure node discovery from burst node situated tokyo isp network figure node discovery from burst node situated prague home network around ms. even for the very specific case flash tangle formed and folded within one burst block (ca. seconds) this would leave over )/tavg validation steps within the tangle for transactions. being the tangle initation time, the tangle folding time, tavg being the median response time per node, the "prague" case. depending the width the tangle this allows for least on-tangle transactions until folding the tangle potentially the same block. (/.) transactions this case. even some pathologically small tangle consisting only nodes, could perform intra-block almost transactions time window (over million per day). this the green tangle depicted figure while this number isn't even the best possible case, let's look some worst case scenarios. tangle initiation, folding and operation from region far away from dense burst nodes presence. once burst nodes proliferate form truly global and omnipresent network, such situation may not even exist, but always good have limn- estimate. figure shows the situation for node far away from other burst nodes. can see maximum latency with the median being ms. this case our formulas and resolve roughly (/.) transactions during regular burst block time million per day). the most exiled node the pocc could benchmark situated sydney, australia. measured latencies from this node theoretically seconds, but are rounding account for further processing delays figure node discovery from burst node situated sydney isp network with tangle formed europe are shown figure the maximum latency ms, the median which results (/.) transactions during single burst block time million per day). throughput besides latency, measured throughput for the peer initiated form dl. table shows the results for the prototype implementation. the results are representative, but measuring throughput for long-distance node-node communication naturally highly volatile, time day, global network load regional isp activity can have influence. "one-off" measurements handle one validation (connect, validate) then exit, can rule out any network caching effects, although can assume for long-running tangle better network throughput performance peer connections will router caches. the high performance between "sydney" and "tokyo" nodes probably due the fact that these while geographically the burst dymaxion min max germany prague tokyo sydney germany prague tokyo sydney table one-off node-node connection throughput mbit/s distributed are operated the same isp and evidently have dedicated connectivity. the poor connectivity between the "prague" node and the two "sydney" and "tokyo" nodes suggests that probably not good idea initiate tangle from your home network. fact, assume tangle initiation will done large corporations institutions with dedicated hardware and excellent connectivity. still, let's examine what throughput-limited performance could expect tangle was formed between geographically distributed nodes such this case. the payload for ordinary non-anonymous transaction roughly byte. anonymous ring signature takes kb, while zk-snark roughly kb. even our worst-case scenario (prague-sydney), can see that throughput not limiting factor. theoretically, even mbit/s throughput kb/s) could allow for tx/s ordinary payments tx/s rs-anonymous transactions tx/s zk-snark-anonymous transactions however, compared the latency-limited per burst block time giving "only" tx/s for pathologically small and excessively relocated tangle, throughput limits are not the issue. adoption process burst has been around since yet still small enough allow for significant improvements without long and paralyzing scaling debate. natural cryptocurrencies with large market capitalization have very conservative with their changes the code base given the amounts stake. while burst more flexible this aspect, cryptocurrency there are certain principles development must adhere to. changes the code base must have the approval the majority users, which this case are wallet/node operators (not miners). blindly forking the coin can result community split and undesireable general. establishing the burst dymaxion will incremental process consisting the implementation several burst cips (see section partially c). each these steps will carefully adhere well defined and transparent process with evident benefits resulting from its adoption. because the burst dymaxion layer top the burst blockchain, virtually all essential components burst will remain unchanged and there change, backward-compatibility always considered the premier option (e.g. poc cip section more rigorous changes are required with significant consequences (hard-forking, re-plotting), the cost-benefit evaluation must weigh significantly favor the benefit aspect. evident, the dymaxion whole represents the most significant update the burst cryptocurrency. the claim provide cryptocurrency capable sustaining the total global load non-cash transactions. the best our knowledge any burst stakeholder section should root for this happen. general, each change should undergo the cip workflow (see also c). each feature would have two thresholds that need met order for become active: activation block height, which should set far enough the future, every node operator has enough time prepare for it, and defined percentage signalling nodes support this feature, which would definition burst nodes capable the feature question. acknowledgments the authors would like thank many members the cryptographic community for their support and valuable input. anton yip provided great insight into burst ciyam ats and their applicability accts. burstcoin community member quibus took the time for forensic dilligence the burst plotting and mining process. also, his proposal backward-compatible and un-gameable poc can considered milestone for burst. tom creance (@gadrah) helped with the visual representation some figures. sergey blagodarenko for providing insight and code the poc gameability problem. also would like express our gratitude the numerous authors bitcoin, iota, monero and zcash. without the giants who kindly let stand their shoulders, would not have had the building blocks necessary for the burst dymaxion. the burst dymaxion appendices spacemint paper errata spacemint: cryptocurrency based proofs space[] paper about proposed cryptocurrency named spacemint which based "proof space" concept some the authors presented another paper.[] section "related work", the authors make some claims about burstcoin the only coin implementing proof-ofcapacity consensus somewhat related the proof-of-space described the paper. particular they make claims about burst weaknesses: shabal operations have performed, each shabal delivers byte (bit) hash value only. because the amount input data that being given the shabal capped bytes, it's also not million bit blocks" that are being hashed total get all scoops nonce, but exactly bytes, therefore total bit blocks. roughly the claimed value the spacemint paper. mentioned the previous paragraph, many estimates the authors are based the insufficient information about how burstcoin works the time available them. this results certain follow-up errors that requiring the examination constant fraction (.%) skew the computations. e.g. there are hashes computed reserved disk space, burst according the authors and not for the attack described the authors, inefficient compared spacemint which requires only there actually only /th the total plot space needed logarithmically proportional amount examination. (the final bytes perform the xor)[]. now with the current poc used with burstcoin, there indeed verification problematic burstcoin, because miner are time-memory tradeoffs possible, roughly the authors has verify million blocks verify another miners describe. the burstcoin developers have been aware this claim". possibility use less capacity and invest more work for burstcoin being susceptible time-memory tradeoffs, specific range scoops (at this moment the highest scoops are prone this attack somewhat viable way). thus allowing miners mine using pow and using just this attack poc mining fairness was possible theory, small fraction space the same rate "honest but not feasible economically, because the pow required for miners". this mode operation consumed far more energy than poc would like clarify and refute some these claims, mining style. however recent advancements hardware and because they seem have originated the spacemint authors' gpu performance show, that economical feasibility just matter time. incomplete understanding the burstcoin poc and even some therefore this situation must addressed. poc cip simple arithmetic mistakes. (see underway ensure the burstcoin blockchain not "inefficient examination" correct, that burstcoin gameable any way not even with the advent any theoretirequires per round each block every seconds /th cal shabal asic devices postulated the spacemint the space reserved disk examine the authors also point authors. out correctly this being .%. unfortunately their model summary burst neither inefficient plot examination durcomparison with spacemint, using mining space, they ing the mining process, nor the load put verifier "too transform this into gigabyte data examined high". agree that there small theoretical possibility for burst, while spacemint allegedly requires only megabyte for "time-memory tradeoffs", but this moment its security examined. impact low. burst will undergo series upgrades and this due lack availability were not able verify the claimed requirements for spacemint, but cor- issue will addressed poc cip (see section c). would also like add that reducing mining and verificarectly translates into megabyte, thus factor lower than the authors' wrong comparison value. therefore be- tion effort not necessarily the ultimate goal. the spacemint authors are aware called nothing-at-stake problems: lieve, that the claim burst inefficiency merely exists due this error the spacemint paper. when replacing pow with different type proof "problematic verification" the authors avow that their that computationally easy generate (such assessment the burst plotting and mining process only pospace), series problems arise which are their best guess, based the admittedly sparse and informal collectively known nothing-at-stake problems. specification the time writing the paper. they base their intuitively, because mining cheap, miners can claims mainly the old, and even the time its publication mine multiple chains, and try multiple not exact mining/plotting diagram. blocks per chain, very little additional cost. the biggest deviation from the actual situation results from these two problems potentially allow for doublethe fact, that order compute one scoop bytes), two spending attacks and slow down consensus. called scoop also https://is.gd/bwpjcb see "time-memory tradeoffs" believe the burst mining process premier example the burst dymaxion figure proof-of-capacity backward-compatible plots with scoops consisting interleaved shabal hashes. preventing time-memory tradeoff for high-range scoops. equilibrium between energy-efficiency and nothing-atstake problem prevention. figure burst/qora acct step alice sends after examining the from bob, the key the qora at. alice (the initiator) wants trade burst for qora. figure burst/qora acct step alice deploys acct burst that will contain the responder's address, quantity, password and expiration time. two hashes are made the password: key and lock figure burst/qora acct step upon examining alices at, bob deploys acct qora with the initiator's address, quantity, lock sent from alice and expiration time (less than than what alice set). the burst/qora acct process the general process acct described section for the concrete burst/qora realization, which the best our knowledge was the acct ever realized, please see the depicted reference below. bob (the responder) wants trade qora for burst. now there are only steps necessary provided the mechanism running both the burst and the qora chains see figure the communication between initiator and responder, like sending the details the generated ats and initiator resipient key case everything went well course done off-chain and the mode operation depends what communication channels are established (website, phone, face face,...). burstcoin cips burstcoin capability improvement proposals establish process, defined the burst community, similar bips (bitcoin improvement proposals) and eips (ethereum). cips (short for "capability improvement proposal" even "coin improvement proposal") are meant advance further development burstcoin and describe proposed standards for the burstcoin platform, including core protocol specifications, client apis, nomenclature and contract standards. https://burstwiki.org/wiki/cip https://en.bitcoin.it/wiki/bitcoin_improvement_ proposals https://github.com/ethereum/eips the burst dymaxion figure burst/qora acct step the qora sends the amount alice's address and reveals the key bob for the burst at. bob sends the key the burst and receives the payment. what's not covered cips are changes improvements the coin that can done without any change the protocol api, such usability improvements. improved walletui initializing burst address with public key without outgoing transaction fall into that category. figure poc time-memory tradeoff pow miner speed. y-axis shows nonces/minute cpu core, x-axis the nonce number. source: sergey blagodarenko poc the "time-memory tradeoffs" mentioned the spacemint paper are real and show weakness the poc (henceforth poc) consensus used burst. proof-of-concept implementation exists (see figure improving its speed only engineering task. while they currently not represent fatal threat burstcoin (one can assume around all mining capacity going dishonest miners), good practice for cryptocurrency, well sign responsible development, address such issues timely manner. moreover burst blockchain being the backbone many high-volume payment channels must address security issues even they haven't yet crossed the threshold practical applicability. therefore several burst core developers discussed ways address this problem way that would not only fix the issue, but also with minimum impact the current stakeholders, this specific case miners who are vested with large capacity plots. the poc proposal minimally invasive way achieve time-memory tradeoff resistance, while keeping the currently used plots functional. figure shows the concept hash interleaving re-shuffle shabal hashes scoops way that each scoop represents equal amount hashing effort. software used for the mining process can operate both poc well poc format, where poc requires twice the reads compared poc and works both optimized well unoptimized poc plots. for better poc performance poc poc converter will offered. can seen figure poc optimized plots provide significant advantages compared unoptimized plots. the number seeks unoptimized poc plot basically ntimes the number nonces that plot, which can the millions. compared this, the difference between seek times poc plot interpreted poc (unoptimized poc) and "native" poc merely factor for each poc scoop, two poc scoops have read (consisting the two -byte shabal hashes). this factor applies both unoptimized well optimized poc plots. burst units nomenclature burst divisible, similar many other cryptocurrencies, into million parts. now, burst had equivalent value the low cent range, nomenclature fractions burst seemed not important. similar the nomenclature bitcoin units propose simple naming scheme for the fractions burst see table while the canonical si-names milliburst (mburst) and microburst (uburst, uburst) are probably best used technical documentation and protocol specifications, the more intuitive names like burst-cent (bc "bessie") instead centi-burst this (millibessie "maybel") can used for humanhuman communication. denote the smallest unit burst "planck". https://en.bitcoin.it/wiki/units the burst dymaxion figure poc unoptimized and optimized plots. optimized plots reduce hdd seek time significantly, order magnitude equal the number nonces present. decimal (burst) canonical name alternate name burst cburst mburst uburst burst bessie maybel planck digit reference table units burst and its fractions dynamic block size and cost currently, the minimum fee burst and the maximum number transactions that can block both these hard-coded values work well only for narrow parameter space burst value and transactional load the network. imagine scenario where burst rises value usd even btc levels, immutable transaction fee burst would certainly inhibitory network usage. while that might not big problem future scenario where burst used (valuable) collateral opening and closing dymaxion layers, there are other arguments against keeping these values as-is. hard-capping the lower bound cost burst effectively dismisses possible burst microtransactions, because transaction burst with transaction cost burst illogical. the other hand, simply lowering transactional cost could lead spam attacks the network. the low value burst together with fixed cost per transaction, independent transaction size bytes, already did enable spamming attack july disturbing network operation significantly. this moment, the transaction fee possible for one block are the range from burst (for empty blocks) burst (for block filled with generated assets). there figure comparison constant and linear-progressive fee structure inclusion guideline. linear-progressive fee structure does allow for microtransactions, while preventing spamming and ensuring miner rewards same height the constant-fee system under high-load conditions. way fees could above this upper limit and there way even users would like spend more than the minimum burst per transaction get more than transactions into block. propose make transaction cost and block size dynamic values better able cope with varying transactional load the burst blockchain. given the burst blockchain stored relational database, varying block size not much issue. yet, space the blockchain considered scarce, thus precious resource. cost transaction should therefore depend how much space will occupy within block and thus the blockchain. furthermore, the cost transaction should depend network load, which extension means fill state forged blocks. currently values for the number transactions and the maximum block payload are hard coded the burst wallet source: max_number_of_transactions max_payload_length max_number_of_transactions assume regular block filled with the current max. capacity ordinary payments, the total fee would burst and the payload would bytes. this means, the current protocol expects roughly, without headers paid burst per byte payload. compared this, the bitcoin network offers fee structure https://bitcoinfees.earn.com/ the burst dymaxion satoshi per byte, with best-case -block delay starting satoshi/byte. december the transaction cost structure comparison between burstcoin and bitcoin burst ca. sat), shows satoshi/byte the burstcoin network and therefore roughly higher cost for bitcoin block space and ca. higher cost for network transactions, bitcoin transaction roughly bytes size fiat, this means that price around us-cent per burst, one byte payload costs cent the burstcoin network and around cent the bitcoin network. the hardcoded cost for the burst network was remain burst minimum, burst would reach the same level cost that bitcoin has today price us-cent, therefore around $.. no. fee total fees table progressive fee reference: per-tx fee and total block tx-fee for various number transactions maximum tx/block model. look todays price levels, burstcoin miners were ensuring the network for maximum payment burst daily. average, the network has been doing around tx/day. addition the block reward, the transaction fee reward per day, for the whole burstcoin network around december order cope with future development burst price and transaction volume, propose progressive fee structure guideline, where wallets can decide and priorize what transaction include the current block depending the fill-state the current block and memory pool backlog see figure the area the blue rectangle and triangle roughly the same vs. order included the next block transaction currently mempool must provide higher fee than the currently free slot the block requires. the transaction can fulfill this requirement, included the block, can't will wait mempool for the next block, where this process repeats. the progressive approach opens the door for more on-chain scalability. instead limiting the max. number transactions could now theoretically have open limit and solve much the scalability issues blockchains have per se. instead, propose conservative extension the max. number tx.transactions (-fold). with the same linear progressive rule, the reference values for -tx "triangle" are shown table https://en.bitcoin.it/wiki/transaction_fees together, these two modifications (linear-progressive fee and max tx/block), would ensure that nominally, miner earnings will remain the same. "nominally" meaning same network load, same price. moreover micro-transactions should possible and under high-load conditions miner profit would multiple what now. enabling limited micro-transaction capability onchain now, burst would open new applications and markets. still, with the progressive fee structure spamming would out the question and financially strong market participants could basically "throw money the problem", when e.g. financial institute would need open dymaxion layer the current block, most probably could premium. dynamic node capabilities the network consisting nodes will never homogenous hardware capabilities the nodes will always differ. our opinion not desireable make artificial (-dimensional) distinction between so-called "super-nodes" and "regular-nodes" some cryptocurrencies do. neither does seem the right design decision some minimum capability requirements nodes are imposed all nodes (such available memory) thus leaving potential capacities unused. believe fine-grained configurability nodes, extending current principles, has implemented. while today the brs configuration options allow allocate number cpus enabling gpu support the processing capacity and also define how much network traffic and peers node willing cope with, more fundamental settings are not possible. the wke the spam attacks, limits mempool have been hard-coded the wallet. while this proved very effective measure against memory dos attacks what the spam attack effectively was prevents nodes with higher resources make use their full potential support the network. propose the mempool size being configurable better adjust the node capabilities. other parameters, similar packet introspection routing protocols but this case applying parameters transaction datagrams, could define policies for nodes, e.g. which transactions relay and which not. this common practice e.g. the bitcoin network, where node can decide support low-fee transactions (by forwarding them) not. believe structure the network will evolve from these parameters, better adapted the underlying node capabilities what node operators are willing provide forming naturally hierarchy nodes with backbones and super-backbones emerging from that. the other end the scale will also allow nodes participate which are not capable doing today. very small embedded devices from the ubiquitous iot, that can support the network serving even merely repeaters with very little resource requirements. section talked about transactions that have remain mempool case they could not included the current block. because nodes have limits for mempool size, transactions with the lowest fees are being discarded from mem- the burst dymaxion pool first maximum mempool size reached. acting spam prevention, this also ensures priorization high-fee priority transactions. nodes with more resources and higher mempool storage parameters will still have these low-fee transactions mempool while others may have already discarded them. while will not impossible for low-fee transaction "survive" until gets included block (dip traffic volume), tx-fee certainly proportional chance being included timely manner all. dymaxion the burst dymaxion not only the most significant update the burst cryptocurrency, the biggest technological update any cryptocurrency has ever received. each the components features full outstanding protocol feature itself, establishing the dymaxion whole needs done incremental process, split into several separate cips: adding ring signatures library adding zk-snarks library adding parts the iota iri adding acct (actt) templates mentioned earlier, all these components are already place, and some may the time the publication part the brs repository. the integration and enabling these features will subject community-approved roadmap defined block-height and adoption rate (percentage supporting wallets use) for the features described section also the features themself will establishen incremental process. while there support for all major consensus algorithm types, only poc already present will enabled the first instance the dymaxion. post-dymaxion: poc the advantages poc comparison pow pos have been mentioned and examined under multiple perspectives already. while poc and its designated successor poc are energy-efficient, which our opinion the only sustainable way for cryptocurrency with global impact, the space used for the poc consensus other use than perfom mining and validation for the burst blockchain. critics have pointed out that the disk space used for burst "lost" "wasted" otherwise plots are not really usable for anything else. this formally true and because this propose establishing proof-of-capacity consensus some time after the dymaxion comes full effect. this poc will exist parallel poc. will based dual-use data instead the burst mining-only plots poc and poc. dual-use means real-world data, like movies, audio, wikipedia archive files, openstreetmap gis data and more. general, large immutable files permanent interest all not the private word document, holiday picture browser cache. figure symmetric feistel cipher transformation for individualization poc plot file.++ the protocol would allow these files announced the network (sha, size) and voted nodes for validation inclusion. very high percentage (say threshold) the nodes would vote favor adding these files the pool "dual-use plots" which also implies storing these files themself, each node would find deadlines these files based succinct test values virtual hard-to-pebble[] trees laid over individualised versions these files. once the pool accepted plots, poc plots would need remain there, because while for mining their presence optional, for ab-initio validation the blockchain when resyncing their presence mandatory. first, each poc-accepted file would undergo feistel cipher transformation (fig. with the numeric account individualize plot and counter grinding attacks. the mining process would assume the file being mapped rbtree(figure layout seen figure let the basic operation the feistel encryption with the round function and sub-keys for the rounds follows: split the plaintext block into two equal pieces, our case two -byte chunks. for the future, can picture situation with distinction "full poc nodes" containing all poc and being able make such resync and "restricted poc nodes" being able sync blockchain from the full nodes the burst dymaxion figure red-black binary tree structure for traversing poc plots. each node being -byte data chunk, each depth represents next level depicted the data layout the next figure. figure data layout poc "plot". each level twice the size, maximum levels allow for plot size yib (yobibyte). for each round compute li+ ri+ f(ri then the ciphertext rn+ ln+ decryption ciphertext (rn+ ln+ accomplished computing for li+ ri+ f(li+ then the plaintext again. course "plaintext" cryptography nomenclature mean the more generic term original data. similar the current burst mining process, scoop would define the starting point the data layout (index the lowest level). the algorithm would traverse the tree -byte scoops, where the path decision (start, then red black for each level) would simply defined the bit sequence the previous block-id =b, =r. maximum steps allows for maximum poc plot file size yib (yobibyte). the values along the traversed path would concatenated and hashed. all values along the path well their hash value are then broadcast the network, where any nodes can take over the validation the submitted data. the length the path defines the size the underlying plot logarithmic way, also the position submitted deadline this path modifies this deadline logarithmically (in the case this binary tree structure this resolves simply halving the value for each level for level for level etc. using feistel ciphers allows for individualization, yet lossless retrieval arbitrary data. the symmetry guarantees the cipher being same length the original data, paving the way for dual-use proof-of-capacity consensus. the burst blockchain will thus not only form the fundamental layer for truly global transaction network, can also take over custodian role globally distributed redundant storage. this means can used for the safe preservation all information that has been acquired our civilization and that permanent interest. the burst dymaxion references serguei popov. the tangle. https://iota.org/iota_whitepaper.pdf, [online; accessed -october]. petkov. systolic parallel processing. elsevier science inc., new york, ny, usa, john ratcliff. the lightning network glass half full post. http://codesuppository.blogspot.com// /the-lightning-network-glass-is-half.html, [online; accessed -october-]. quibus. technical information about mining and block forging. https://burstwiki.org/wiki/technical_ information_about_mining_and_block_forging, [online, accessed -november-]. ciyam developers. automated transactions documentation index. http://ciyam.org/at/. [online, accessed -november-]. eli ben-sasson, alessandro chiesa, christina garman, matthew green, ian miers, eran tromer, and madars virza. zerocash: decentralized anonymous payments from bitcoin (extended version). nicolas van saberhagen. cryptonote hyperlink https://cryptonote.org/whitepaper.pdf, https://z.cash/technology/zksnarks.html, [online, accessed -november-]. christian reitwiessner. https://blog.ethereum.org////zksnarks-in-a-nutshell/, [online, accessed -november-]. joseph poon and thaddeus dryja. the bitcoin lightning network:scalable off-chain instant payments. https:// lightning.network/lightning-network-paper.pdf. meni rosenfeld. overview colored coins. https://bitcoil.co.il/bitcoinx.pdf, nick johnson. why find iota deeply alarming. why-i-find-iota-deeply-alarming-fb. ethan heilman, neha narula, thaddeus dryja, and madars virza. iota vulnerability report: cryptanalysis the curl hash function enabling practical signature forgery attacks the iota cryptocurrency. https://github.com/mit-dci/ tangled-curl/blob/master/vuln-iota.md. bryan parno, jon howell, craig gentry, and mariana raykova. pinocchio: nearly practical verifiable computation. ieee symposium security and privacy, pages ieee computer society, sunoo park, krzysztof pietrzak, albert kwon, joel alwen, georg fuchsbauer, and peter gazi. spacemint: cryptocurrency based proofs space. iacr cryptology eprint archive, stefan dziembowski, sebastian faust, vladimir kolmogorov, and krzysztof pietrzak. proofs space. iacr cryptology eprint archive, vivek bhupatiraju, john kuszmaul, and vinjai vale. exploring proof space with hard-to-pebble graphs. https://math.mit.edu/research/highschool/primes/materials//conf/-% bhupatiraju-kuszmaul-vale.pdf, https://hackernoon.com/ licenses original file: theymos from bitcoin wiki vectorization: own work (https://commons.wikimedia.org/wiki/file: blockchain.svg), ,,blockchain", modified, https://creativecommons.org/licenses/by/./legalcode feistel_cipher_diagram.svg: amirki derivative work: (https://commons.wikimedia.org/wiki/file:feistel_ cipher_diagram_en.svg), ,,feistel cipher diagram en", modified, https://creativecommons.org/licenses/ by-sa/./legalcode changelog/errata initial version