empirical study namecoin and lessons for decentralized namespace design harry kalodner* miles carlsten* paul ellenbogen* joseph bonneau+ arvind narayanan* {kalodner, carlsten, pe, arvindn} @cs.princeton.edu* jbonneau@gmail.com+ princeton university abstract introduction decentralized namespaces. initiate the study decentralized namespaces from economic perspective. namespace, define it, online system that maps names values. the domain name system (dns) the most prominent example. web service such twitter that allows users claim usernames and create profiles can thought implementing namespace. memorable humans, namespaces must support arbitrary userchosen strings names. secure, namespaces must map each name the same value for all users and adversaries shouldn't able convince user that any other value correct. the problem decentralized namespaces has long been recognized important one. the dns critical yet centralized component the internet and those who control can alter the web for all users. the controversies around the shutdowns wikileaks.org and the domain name seizures the u.s. doj and dhs illustrate why many researchers and activists have sought decentralized alternatives []. the above three properties security, userchosen names, and decentralization are known zooko's triangle []. until designing system that exhibited all three was conjectured impossible []. the rationale was that enforcing the uniqueness name-value secure decentralized namespaces have recently become possible due cryptocurrency technology. they enable censorship-resistant domainname system outside the control any single entity, among other applications. namecoin, fork bitcoin, the most prominent example. initiate the study decentralized namespaces and the market for names such systems. our extensive empirical analysis namecoin reveals system disrepair. indeed, our methodology for detecting "squatted" and otherwise inactive domains reveals that among namecoin's roughly registered domain names, mere are not squatted and have nontrivial content. further, develop techniques for detecting transfers domains the namecoin block chain and provide evidence that the market for domains thin-to-nonexistent. argue that the state the art mechanism design for decentralized namespace markets lacking. propose model utility different names different participants, and articulate desiderata decentralized namespace terms this utility function. use this model explore the design space mechanisms and analyze the trade-offs. mappings and consistent view the directory for all participants would require centralized server hierarchy. cryptocurrencies and namecoin. cryptocurrency technology enables building namespace with all three properties. put simply, the block chain global, distributed data structure that can repurposed directory. miners execute consensus protocol establish the state the system and are incentivized mining rewards they receive exchange for their participation. long majority miners weighted computing power follow the protocol, all users will see consistent view the directory when they query it. this turn gives the system, and hence the underlying currency, economic value, making miners' actions profitable them. namecoin cryptocurrency that realizes decentralized namespace. the first altcoin from bitcoin with its own block chain. offers the same features bitcoin with the addition name/value store that can used hold arbitrary data (see section the name/value store supports various applications; primarily, namecoin has been used for domain-name resolution for the '.bit' alternative tld, and the online identity service, onename, which utilizes the namecoin block chain record data about its members. namecoin offers novel solution the technical challenges decentralized namespaces. however, there are also economic challenges. these arise from the fact that even though namespaces theoretically support infinite number names, the supply names that are memorable and meaningful humans scarce. allocating these names users therefore mechanism-design challenge. the central thesis this work that this mechanism design challenge far harder than realized. system that gets wrong may "work" narrow technical sense, but may not useful real users. specifically, there are several crucial questions consider: how model the economic behavior the users namespace and what are the goals mechanism design for namespaces? how well does namecoin succeed attaining these goals and what are its limitations? namecoin not the ideal design, can analyze the design space guide the creators future decentralized namespaces? our contributions. along the above lines, make the following contributions. begin proposing model utility different names different participants and articulating desiderata decentralized namespace terms this utility function (section highlight the difficulty mechanism design even toy model and explain the importance making the model more realistic incorporating extensions such time-varying preferences. the central contribution this paper thorough empirical analysis the namecoin ecosystem. develop series criteria based the block chain, network behavior, well content distinguish active websites from parked squatted names (section this allows iteratively filter our dataset around registered names namecoin, leaving mere that are not squatted, and have nontrivial content. then delve deeper into the economics names. namecoin has built-in ability transfer names, which secure way trade them using the block chain. however, not obvious which transactions correspond such sales, opposed regular name updates. develop novel analytic technique distinguish the two types transactions and find evidence for about transactions the entire history namecoin that may represent sales names (section course, possible that more sales have occurred off the block chain, but there doesn't appear widely known marketplace for namecoin names. based all the empirical evidence present, are left conclude that the namecoin ecosystem dysfunctional. the vast majority registered names represent squatting and there little evidence secondary mar ket for names. while there could many factors that explain the lack adoption, there appears clear room for improvements the design minimize squatting and other problems. this end, section explore the design space decentralized namespaces and make recommendations. why study namespaces? although find that the namecoin ecosystem disrepair, studying namespaces important. while there currently doesn't seem widespread dissatisfaction with today's dns causing users seek censorship-resistant alternatives, the existence such alternatives provides valuable hedge against potentially abusive central authority. besides, domain names are just one application namespaces. centralized directories for user public keys have fared much less well than dns, and the service onename, which discuss section interesting alternative. and course, the problems posed namespaces are intellectually interesting study. think decentralized namespaces have many important applications, but their promise hasn't been realized far. our work helps understand why this might and lays the groundwork for more rigorous approach building such systems. and server software, users, mechanism, and on. fact, namecoin contains namespaces the computer science sense, which term subspaces this paper. history namecoin alternative cryptocurrency, altcoin, modeled after bitcoin []. furthermore, the first altcoin the sense that was the first create its own block chain, separate from bitcoin's. namecoin shares many similarities with bitcoin, including the same method for proof-of-work, the same coin cap, the same block creation time, and all the same transaction operations (with few additions). namecoin was inspired after discussions about bitdns protocol using block chain manage domain name lookup service. the motivation was that central authority managing domain names, such icann, requires too much trust single entity and represents single point failure. the first namecoin block was mined april and this writing, over total blocks have been mined the namecoin system. because its similarities with bitcoin, namecoin was able mergemined and has been merge-mined with bitcoin since october (see the next subsection). background: namecoin this section cover the background namecoin. begin looking the history the cryptocurrency and then explain why block chain can used for our definition namespace. then proceed discuss the technical design namecoin and the mechanisms used the design. conclude this section with discussion about the applications namecoin. note about the term 'namespace'. computer science, namespace simply container for set names, that names single namespace must unique but the same name can exist different namespaces. have chosen use the term related but different way: it's system that includes client description the block chain namecoin minted and maintained decentralized peer-to-peer network. namecoin transactions require the digital signature the account holder prevent theft, and every transaction published append-only hash chain, called the block chain. the block chain can extended with new transactions any participant, and such participants (known miners) obtain newly minted namecoin currency (nmc) and transaction fees from the transactions for performing this function. extensions the block chain require proof-of-work that this description adapted from []. rate-limits the process (to approximately one extension every ten minutes) which enables steady inflation rate, ample competition among participants extend the block chain, and adequate time obtain and verify the history the block chain for new participants. informally, the proof-of-work protocol namecoin intended maintain the following two essential properties about the block chain: number leading zeros required the hash referred the difficulty threshold. namecoin enjoys very high difficulty threshold for the proof-of-work because similar bitcoin and supports "merge mining" with bitcoin. this means that miners who are mining bitcoin can also choose mine namecoin the same time with extra work. essentially, this because the miner using their computational power solve cryptographic puzzle that satisfies the proof-of-work for both block chains the same time. this advantageous for the miners because they are rewarded with coins from both systems, and helps namecoin because gives the namecoin network vastly increased amount hash power over what would have did not support merged mining. including the merge miners, namecoin has aproximately one third the hash rate bitcoin. this provides resilience attack, although sufficiently large bitcoin mining pool could still execute this attack. every party eventually agrees the order and correctness transactions the block chain. any party can publish transaction (for fee), which will then verified and, valid, included the block chain within small bounded delay. one use case for block chain tamperevident log. that is, can used data structure that stores user-supplied data, and allows users append data the end the log. each new block has hash the previous block, data that earlier the log altered, will detected. adversary wants tamper with data anywhere this entire chain, order keep the hash pointers consistent, will have tamper with the hash pointers all the way and including the current block. thus emerges that just remembering the single hash pointer the head the chain, users essentially remember tamper-evident hash the entire list, all the way back the genesis block. namecoin, and all block chain based cryptocurrencies, use this tamper-evident log order record all the transactions between users. block chain security. the value and stability cryptocurrency are directly related the amount proof-of-work involved the calculations the blocks because this work what keeps the data distributed and secure the tamper-evident block chain. for both bitcoin and namecoin, the proof-of-work shown calculating the hash new block and random nonce over and over until the calculated hash has certain number leading zeros. the technical details names this subsection and the next, present details namecoin, separating the technical solution from the mechanism design choices. the feature that separates namecoin from bitcoin that namecoin namespace, and can used register name/value pairs that can stored the block chain and traded amongst individuals. this registration done using the three script operations exclusive namecoin: name_new, name_firstupdate, and name_update. order understand the registration process, think helpful walk through the registration process name, roughly following figure name_new. start, the user will need select coin crafted into token (or special coin) that represents name and whose value can changed whoever possess the token. the next step register name make transaction that uses the name_new script operation transaction sending the token from one their addresses another. using name_new, user can indicate interest name for name/value pair posting hash commitment the desired name the scriptpubkey the transaction. the reason the user posts the name hashed form first, rather than plaintext, prevent front-running, which will explain section the name_new operation acts signal the block chain for name parsers indicate that the next part the scriptpubkey will the hash commitment name. name_firstupdate. after doing this, and waiting for more blocks top the one containing the name_new transaction (to ensure that the block chain reaches consensus the name_new transaction), the same user can use the output the name_new transaction the input for the name_firstupdate transaction. once completed, this will associate the chosen name with value selected the user. similar name_new, name_firstupdate allows data posted the block chain part the scriptpubkey special transaction. create name_new transaction, user will select, input, the output the name_new transaction. they will then use another address they control the output for the transaction. the scriptpubkey this transaction will contain name_firstupdate, the name desired, the random nonce used the name_new hash commitment, and the first value for the name take. order for this transaction valid, miner will verify that the name and the provided nonce do, fact, hash the commitment the appropriate name_new transaction. the output this transaction now contains the token representing the name/value pair for name and value, and whoever can unlock and spend the output can utilize the final new operation, name_update. name_update. the third and final new operation namecoin the name_update operation. again, this operation's argu- ments (the name and newvalue) are stored the scriptpubkey special transaction. this transaction must have input name_firstupdate name_update output with the same name. this operation has three uses: updating, renewing and trading name. the user wants change the value associated with given name, they will update name with this operation, providing newvalue. names can expire, they namecoin, then this operation can also used renew name providing newvalue that the same the old value. either these cases, the user will use address they control output the transaction. the final reason make name_update transaction trade the special coin another user. this case, the user will put, output, one the other user's addresses instead their own. once the transaction resolves, the other user will have control over the special coin and can change the value whatever they deem fit. because the ownership name associated with the ownership the special coin, the buyer paying for the name with namecoins, the exchange between the payment and the name can atomic (meaning they happen the same transaction and either are only valid the other well). mechanism design fees. namecoin has been implemented with various fees and protocols incentivize the behaviors the users. the special token used the name_new transaction has value nmc. this coin will not spendable like other namecoins while has name attached it. for all the transactions, name_new, name_firstupdate, and name_update, the default behaviour have the user pay transaction fee the miner. the current expected transaction fee, which programmed into the namecoin client, histori there are also other operations that exist for reasons nmc each transaction. compatibility with bitcoin; this seems exist mini- cally, namecoin also had network fee attached mize changes bitcoin's script handling code. the name_firstupdate transaction. the figure namecoin name registration protocol described section network fee different from the transaction fee; the transaction fee paid the miners, whereas the network fee was destroyed (with op_return) when name_firstupdate transaction was confirmed. the network fee varied over time- started nmc the genesis block, but decreased factor every blocks (which approximately months). the purpose the network fee was have large initial cost claiming names deter users from quickly claiming all the desirable names, but then decay off that eventually the cost registering name becomes negligible. block the network fee became small enough that rounds and longer added onto the transaction. the current implementation namecoin has fees other than the transaction fees and the investment the token coin. name_update blocks, the name becomes available again for any user claim with name_new and name_firstupdate. similarly, name_update must cite name_firstupdate name_update that less than blocks old input. changing the protocol. changing the protocol cryptocurrency requires "hard fork" "soft fork" depending the extent the change. mature system like bitcoin, this very difficult. fledgling system like namecoin, however, much easier has happened multiple times. both the addition merge mining with bitcoin, and the increase expiration length were not initially the design namecoin and required hard-forking changes. order make these changes, the namecoin community decided arbitrary blocks which point the new protocol would enforced. explicitly, block blocks that were merge mined with bitcoin were not allowed into the namceoin block chain, but starting block they were. expiration. namecoin has expiration time for names. originally, the time period for name expire was blocks, but march the expiration period was increased blocks (which comes out about days). particular name hasn't been mentioned name_firstupdate applications quires trusting that the dns server working properly and accurately reporting results. final option using proxy server hosted standard tld. this requires local configuration, but users must example.bit visiting example.bitproxy.com. onename. the name/value data store namecoin has applications beyond dns. onename online identity service that runs top namecoin, making use the data store. onename centralized service, but one can use other clients interact with the block chain way that's interoperable with onename. the idea behind onename that user can have name/value pair the block chain that associates said name with different online identities such email, github, twitter, and bitcoin address. onename user can then confirm ownership accounts any these services referencing their onename name through some messaging channel each respective system. for example, alice wants tie her twitter username her onename username, she must tweet the message "verifying that +alice openname (my bitcoin username). https://onename.com/alice". this similar the verification scheme keybase uses. onename account also has associated bitcoin address users can easily find address use send bitcoins particular individual, they want. order make onename identity, user can visit onename's website create account. user makes account selecting username and then optionally entering their actual name, their account names, short biography and picture, and bitcoin address. onename takes the information given and automatically puts into name/value pair, with the name equal the selected username, and the value containing all the other data. the username not already claimed some user the namecoin subspace u/, then onename posts this pair into the block chain. already taken, the website will ask the new user select different username. user desires, there are many different subspaces namecoin, and the different subspaces correspond applications. when claiming name, user prepends the name with subspace and slash. namecoin was created very general that would useful for any application that would benefit from online name/value store. while has the most registered names, there are many used subspaces namecoin. the separation namespaces not enforced the protocol any way, but merely agreed upon consensus all users, analogous open web standards. .bit domains. the vision for namecoin was use one these subspaces for dns lookup the .bit tld. explicitly, namecoin names associated with .bit domains are prepended with the subspace d/. user wanted the domain example.bit, they would claim the name d/example. the owner example.bit would then set the value their server address way that would understood .bit compliant dns servers described the .bit specification []. most major web servers, such apache, ngnix, and lighthttpd will accept connections through .bit domains with minor modifications their per-site configuration files. there are number ways resolve .bit domains addresses with varying levels security. the most secure option running local dns resolution software. the three major projects created for this purpose are nmcontrol [], local dns server, freespeechme [], firefox add-on, and dnschain [], another browser extension. nmcontrol and freespeechme both hold local copy the block chain and query for values associated with .bit domains. they parse the value the name using the specification and seamlessly direct the user the resolved address. there are couple less secure options access .bit domains. users can connect specific dns servers such opennic which support resolving .bit domains. however this they can alternatively manually create name transaction using the namecoin client create name value pair with name the subspace and value formatted match the onename specifications. incentivize using their website interface, onename covers the namecoin fees for their users. rency, the currency becomes valuable. this incentivizes miners, making the system secure. the (non) role trademarks. scarcity also issue centralized namespaces, but manifests different ways. one key goal most centralized systems trademark protection. the trademark system can seen legal mechanism address the problems name scarcity and limits human memorability the real world, independent any particular technological system. most centralized systems support some form arbitration dispute resolution which trademark plays role. decentralized system, the other hand, there easy way enforce any rules that cannot encoded algorithmically. yet there way cryptographically assert that one the owner trademark, and this may impossible given the complexity and nuance modern trademark law. primary and secondary markets, algorithmic agents. use the term primary market mean the part the market where new names are issued users for the first time. contrast, the secondary market deals with the sale name already use. whom names "belong to" before they are sold the primary market? answer this, must understand decentralized agents. any cryptocurrency can thought algorithmic agent executed global, distributed computation. the agent has capability store private information but can hold funds and transact with users the system. bitcoin encodes very simple agent whose only function release currency into circulation prespecified rate. nutshell, the agent implemented namespace initially owns all names and sells them users. we'll see section there modeling namespaces names are scarce. many types systems map keys names values. his essay introducing his triangle, zooko considers naming systems that include system mapping pgp key fingerprints keys. fingerprints are hashes keys. this would not qualify namespace our definition because users cannot pick arbitrary names that would require finding the hash pre-image arbitrary name (fingerprint), hard problem the definition hash function. zooko (and similar prior work) considers such systems lack human memorability names. replace this criterion with that user choice names, which roughly equivalent but easy define rigorously. system that maps key fingerprints keys, names are fungible and essentially infinite, and thus not scarce and have market value. the other hand, any system that call namespace, scarcity almost inevitable consequence free user choice. even when names are scarce, the system architecture can make names more less valuable. for example, usernames twitter are more valuable than facebook the username handle relatively important way find user twitter, whereas facebook done more often navigating the social graph. the scarcity names makes the design namespaces challenging. but also makes the problem particularly amenable cryptocurrency-based solutions. since names have market value, and participation the primary market requires the associated cryptocur- for example see icann's uniform domain-name dispute-resolution policy []. the other extreme, altcoins such ethereum allow any user create agent making the central agent "turing complete," that is, flexible enough execute arbitrary programs specified users their behalf. are many variants including whether names are sold leased, whether not they can bought back, how names are priced, what the agent does with the funds received payment, and on. the most straightforward implementation secondary market leave entirely external the system. this the approach taken namecoin, but again, variety choices are possible. elaborate section squatting. even though names are scarce, it's not obvious what "squatting" means. after all, material goods are scarce, but don't usually characterize car owners squatting them. the difference that names have (vastly) different utility different users. squatted name one that owned user whose utility for that name close zero (or very small compared the user who has the most utility for that name), purchased hopes selling another user whose utility higher. squatting problem for the system? this tricky question. squatting exists merely because one side the primary market algorithm and doesn't charge market price, then squatters could seen analogous brokers ticket scalpers. such agents are sometimes considered perform useful function market makers [], least tolerated, but not considered existential threat the functioning the market. the other hand, squatters can viewed analogous land speculators. this analogy supported the fact that names, like land but unlike tickets, are not fungible. the speculator may have zero utility for name and makes use the name himself; hopes that demand for name will rise the future, and may therefore not sell buyer who has positive utility today. this could lead market failure few ways. the uncertainty around future demand means that some names may squatted indefinitely, while legitimate users may end with sub-optimal names. most valuable names are locked squatters, may prevent the growth the system, turn preventing the growth market price for names that specula- tors are hoping for. land speculation has also been criticized contributing market failure []. this view, squatting may exist and may problematic even the primary market able discover the market price. but the primary market algorithmic, only exacerbates the squatting problem. complexity the utility function. our argument above essentially that the utility given name given user may vary with time. this particularly relevant cryptocurrency-based namespaces addition the usual network effects that make the adoption some new products challenging, cryptocurrencies need "bootstrap," which presents additional difficulty getting off the ground. cryptocurrency may not sufficiently secure has too few users. thus, many users may have zero negligible utility for all names until they decide that the namespace secure enough and has enough users worthy taking seriously. another aspect complexity the utility function diminishing marginal utility. user named john smith may want either the name johnsmith john-smith but not necessarily both. time-variation and diminishing marginal utility make the mechanism design problem very tricky. suppose, the contrary, that utility functions are time invariant, and utility functions user for different names are independent. then may state the goal the system ownership each domain the user with the maximum utility (or willingness pay) for that domain, long that value above some threshold. can easily realize this making the primary market second-price auction with reserve price. secondary market would necessary. course, this oversimplified. let's add diminishing marginal utility this model. suppose there are john smiths the world and variations the name johnsmith. matrix describes the utility each user for each percent total names name. further, none these users has any util% ity for more than one name. now can state welfare-maximization goal finding the as% signment names users that maximizes the sum each user's utility for his assigned name, which translates maximum weighted graph matching problem. could happy with pareto-efficient assignment; since this one% sided market (names aren't agents), this the house allocation problem []. this shows that value occurs more than times even highly simplified setting with finite number names and the same number users, figure analysis squatting. names whose the mechanism design question very tricky. when add time-varying preferences the model, unclear can even formally state goal for the system. the harder make for user hold purchased name, the easier becomes for adversary "seize" name (see below). values occur more than about times can safely considered squatted. fact, the graph shows that the majority names are held prolific squatters who control thousands names. any rate, the fact that preferences are time varying appears part the reason that names namecoin expire and must renewed; effect, they are leased rather than purchased outright. analysis .bit domains this section analyze the current state .bit domains. begin the highest level, looking the repetition values order detect squatters. next look how many .bit domains are set with query-able values. finally seizures. the namecoin community consid- actually visit these query-able names and aners major goal prevent "seizures" do- alyze the content find there. main names adversaries []. prevent seizures, then, must easy hold name after buying it. this tension with pre- detecting squatters venting speculation, which works buying name and holding despite other people investigate the balance between squatters and other users the .bit subspace. diswanting it. cussed squatting critical issue any the reason even technically possible decentralized namespace. look namecoin prevent such censorship the face well- order get realistic view the proliferafunded adversary that the adversary can't pos- tion squatting. namecoin possesses the same pseudonymity sibly preemptively buy all the names that the victim might use. for example, wikileaks might properties bitcoin and thus difficult find any name with the string "wikileaks" group names their owner. names are owned acceptable, even not ideal, for their pur- individual addresses rather than identities poses. other words the victim's utility func- and common practice keep each purtion has large support; the adversary's utility chased name under different address. because for name contingent the victim owning this, difficult assess how many names any single entity owns. that name. type resolution count however, many squatters are easily identified nameserver url through the values they set for the names they nameserver own. since there built-in functionality single for the listing and sale names namecoin, multiple squatters use the values names they own single ipv display contact information. this information multiple ipv generally comes the form either contact intor formation stored directly the value name, alias contact information stored the address only subdomains which the name resolves. observed that total squatter's contact information generally constant among all the names they own. thus, table comprehensive list .bit domain resmeasuring the extent which values are dupliolution methods currently use. cated the block chain, can estimate the ratio squatters genuine users. regular .bit domain owners are unlikely use values that are highly replicated. the value domain points individual server and most are unique. repetition may occur this circumstance when multiple names resolve the same point. this could occur when single dns server resolving large number names different websites. however when performed the content analysis described section found that this does not happen currently. there definitive threshold for deciding exactly how often value has occur order assume squatter has been detected. however even the coarsest grained approach displays massive amount squatting the block chain. the currently active names, there are only unique values. figure examine the fraction current .bit names that are squatted. sorted all the values that occur the number times they occur. the graph has very sharp initial drop remove all names with values that occur only few times. this leaves the majority domains drop off very slowly remove bigger and bigger squatters. using cut-off appears safe say that least .bit domains are held squatters. dns records now examine how .bit domains are used genuine users. only out the .bit domains make any attempt resolve address. out these variety types resolution are employed. order support dns lookups, namecoin provides specification that allows for the support most dns record types. name's configuration stored json dictionary object which placed name's value. domain's can configured number different ways. the main methods are directly setting one more (or ipv) addresses setting one more secondary name-servers which hold information about domain. additionally records can link name number hidden-services url schemes like .onion and .ip []. namecoin supports number different name resolution methods. different methods have different properties and thus interesting inspect how people are setting their domains. the vast majority names point directly address. this includes people using ip, ipv, and tor. this far the most privacy preserving method since the address drawn directly from the block chain. client can simply look name the block chain and immediately connect the server. however, this privacy comes the cost flexibility since the criteria applied count valid dns curlable not squatter without duplicates without errors with content without icann hostname mirrors duplicates each other. after removing such duplicates, domains remained. large number pages were either error responses from the server default pages from various web servers. neither these can considered useful content. there were such domains, and removing them left with table number .bit domains which resolve domains. real content server directly encoded the block chain and can not changed without update. the much more flexible configuration, also commonly used, name server delegation. rather than directly listing address the block chain, one more name servers are listed. this way name owner can update their address without modifying the block chain. however this insecure delegation since namecoin can not enforce any properties regarding the action the external name server. the server will have full control over its interaction with users including the ability track lookups return results which aren't globally consistent. out the remaining sites, many had very small amounts content consisting only few words blank page like, "welcome mysite.bit." these pages, though valid uses namecoin, provide minimal utility visitor. thus, decided look only pages consisting more words and images which brought down domains. these domains make the only websites reachable through .bit domain names which have any real content them the time this analysis. are further interested the subset these pages which don't come from server that accessible through standard icann tld well. the pages directly redirect the user standard domain and were manually identified pointing the same domain content analysis site standard domain. the domains which had icann hostname's along with their .bit after understanding how people connect their hostname were manually identified and pinged names with addresses, explored what ensure matching addresses. sort content reachable through .bit domain names. attempted download the front this left with pages serving non-trivial page each these domains over port content that uniquely available via .bit. (http). these domains were unreachable didn't serve web content, leaving with our approach analyzing content suffers only responsive domains. from few limitations. first all only looking the content the servers' re- queried the main domain over port thus sponses, found that the responsive any the servers only respond subdomains domains, are owned different squat- only serve content over https, they are not ters. these domains serve nothing value and included. additionally when detect how caused massive inflation our reachable do- much content each page, not follow main count. links and thus content could hidden behind removing the squatters, count viable links. despite these limitations believe that domains. however, many these pages are have missed very few legitimate domains. frequency probability being registered alexa rank name length figure for each the figure the number namecoin names regprobability that .bit versions domains with istered function name length. alexa rank approximately are registered. examining choice squatter name length name have seen, many individual squatters buy very large numbers domains. now explore what sort categories these names fall into and try interpret the decisions these squatters have made. here explore two potential measures name desirability, one using alexa ranking, and one using the length the name. can see from figure and figure that there are patterns the names that squatters have acquired. figure can see that squatters have claimed the majority very high ranking alexa sites. figure see that there preference for shorter names. table shows that fact all one- and two-character names are taken. not until get names with least three characters that there are names available register. beyond three characters, the combinatorial nature name strings makes infeasible register all names that length. there are more names with length available than there are total names registered currently. alexa ranking and name length are not exhaustive description squatter behavior. future work would attempt better model the valua- percent registered table percent all domains registered length. all possible names are counted combinatorially using the rules given []. tion that squatters and other namespace participants put names. secondary market analysis next, seek understand and quantify how names move between users. our basic scenario that alice owns the name 'd/example' and bob would like purchase from her. explore various ways this sale can occur and how these sales can detected. detecting atomic transfers the safest way buy and sell namecoin names through the use atomic transactions. this important technique cryptocurrencies figure anatomy atomic name transfer. both the name and the payment are included the same transaction, one cannot fail transfer the other party without the other failing transfer. whereby two parties can exchange digital assets (such name exchange for currency) without trusted intermediary without either worrying that the other will abscond after receiving her half the bargain. show how these transactions work figure atomic transaction, alice and bob make their exchange single transaction. the simplest form atomic name transfer, bob creates transaction which transfers his payment alice and transfers 'd/example' him. then sends this transaction alice, the owner the name, who verifies it, signs, and broadcasts the transaction the block chain. both alice and bob's signatures are locked the inputs and outputs the transaction neither input can spent individually without the full transaction. this transaction provides cryptographic security both alice and bob since either both the name and coins will exchanged nothing will. although there nothing inherently different looking about this transaction the block chain, there are few possible techniques detect them implementation quirks. the namecoin client fairly underdeveloped piece software and thus there built-in method performing atomic transactions. order accomplish this task, the namecoin rpc client must used from the command line. order simplify this task, namecoin developer created antpy [], piece software automate the creation atomic transactions. this software has the quirk that the buyer's payment goes the address that the seller held the name in. find these transactions queried the block chain for transactions with name_firstupdate name_update input from the same address non name output. then further reduced this set eliminating transactions where the name stayed the same address. searched throughout the history the namecoin block chain for transactions fitting this specification. our query returned transactions which believe represent all transactions built the antpy script. however this means represents all sales the block chain. next attempt discover atomic transactions different way. implementation-agnostic method for detecting atomic name transfers find transactions that clearly use change addresses. this occurs when there are two non-name outputs transaction that has name input. this case the buyer did not want pay all his input the seller and thus kept some for himself. this number transactions leaves the transaction with outputs. under normal circumstances, name_update transactions will only have two outputs, name output and change address. thus every transaction with three outputs very likely atomic name transfer. the history the namecoin block chain, found transactions fitting this form. however the were also detected the previous (antpy) criterion. the atomic transactions which detected are lower bound for the number name transfers. are unable query for all atomic transactions since the buyer doesn't want any change from purchase and the seller gives the buyer new address send payment to, the transaction indistinguishable from regular non-transferring name update. squatter treshold figure number transfers detected based squatting threshold. for each the x-axis plot the number squatter non-squatter transactions detected characterize names whose values occur more times squatted. although there doesn't seem way deriving upper bound detect non-atomic name transfers generally, number sales there important subclass these transac- following our lower bound from the previous section, now derive upper bound the number name sales using data from the block chain. whereas atomic transactions, can (sometimes) recognized simply from their contents, other name sale transactions are not recognizable. here the payment could separate transaction even made currency other than namecoin. would hope that could detect changes name ownership looking changes which key owns name. however, since the namecoin client defaults sending names new addresses update, there way look update and tell whether not name being transferred between owners. order detect non-atomic transactions must expand our view the prior value name being updated. certainly the value does not change then the transaction simply renewing the name, not transferring it. however considering all other transactions name transfers far too conservative criterion. users freely update the values names whenever information them becomes outdated. tions which can still detected transfers from squatters regular users. the previous section discussed our detection squatters the block chain which produces list values which with high probability belong squatters. detecting transfers from squatters finding names that change from one these values value outside this set gives strategy detect transfers. employ additional criterion eliminate false positives tighten our upper bound. name's value includes info email field and that stays the same the updated value can assume this simply update the squatter. applying this analysis various squatter threshold values, see that the total number squatter non-squatter transactions detected holds approximately transactions. emphasize that this value likely upperbound since our criteria for reducing the number transactions were quite conservative. summarize, would expect that given the high percentage squatted .bit names, there flourishing secondary market would dominated sales from squatters regular users. yet are able upper bound the number such transfers about tiny fraction the number squatted names. further, even though namecoin supports secure way transfer names, find strong evidence based known tools supporting this functionality that its usage very low. exploring namespace design choices the key used first register the name. such system could deter speculative squatters because speculator would not able sell name another individual. while would possible transfer the private key that controls name, the user receiving would have cryptographic assurance that the original owner does still posses copy the key. the other hand squatters who wish censor names simply damage the system would undeterred the inability transfer names. noted section utility functions are time-varying, technical restriction against name transfer goes against the logic the market. possible that most names would controlled squatters who act dealers and lease names users. essentially this would make the system hybrid between centralized and decentralized namespace. throughout this section will refer the concept the decentralized algorithmic agent that introduced section several the options explore will require this agent implement rather complex algorithms. will not directly address the question practical feasi. control lasts forever except the user bility complex decentralized agents. note, however, that based proposed designs, these chooses transfer sell the name. this apagents can surprisingly powerful; refer the proach easy understand the most similar physical property. practical probreader lem with this approach that user loses her key, any names controlled that user key control names are lost forever. this may also happen user leaves the system, but this problem can alleat any point time, each name either conviated having the primary market agent buy trolled some user unclaimed. the latback names from users. this incentivizes the ter case, can considered owned the user give the name before leaving the sysdecentralized agent encoded into the cryptocurtem even she can't find seller for it. the rency, and the primary market. any user agent essentially acts automated market can attempt purchase any name the primaker. mary market. will return later the question how the name priced. names expire after fixed period, except when name controlled user, how the user renews it. this practical choice strong that control? can consider hier- that avoids the problems pointed out above, esarchy increasingly weaker forms control. pecially the renewal fee very small com. control lasts forever and names can- pared the price the name the primary not transferred. straightforward de- market. expect that rational user will keep sign namespace such way that names are renewing name she controls unless her utility non-transferable (in namecoin, would drops near-zero, she loses the associated matter requiring the input and output private key and therefore can't update the name. name_update transaction have the same the renewal fee substantial, this becomes address). making names non-transferable would similar lease instead ownership. the relock authority update the value restricted newal fee paid the agent. finally, the agent may pay the user she lets her name expires, returning her original fee her. this analogous deposit. names always expire after fixed period and return the primary market. seizure censorship becomes easy. additionally, imagine that names appreciate price being used, just land that developed increases value, this disincentivizes users from putting names use since they have expectation being able hold them. this model clearly inappropriate for applications like domain names, but perhaps useful other contexts. control over names may preempted other users. this idea that has been proposed several times the context namecoin, allowing users either force name return the primary market even directly acquire paying the fee the agent and/or the current owner. this intended alleviate squatting, but hard imagine this approach being superior functioning secondary market. the other hand, the downsides are clear: seizures are now possible, and before, uncertainty over future ownership may discourage legitimate use. markets and fees namespaces. the former case the utility name less dependent the user and therefore easier price based publicly available data. several factors based publicly available data can incorporated into the pricing model: name length, frequency the name (treated word) text found the web, traffic rank the corresponding .com domain, and on. pricing can also vary with time; blended model between auctions and algorithmic pricing would see initial prices decided algorithmically which decline steadily over time form dutch auction. again the challenges implementing this are practical: incorporating data external the block chain into the computation distributed agents possible, but very complex and has not been successfully demonstrated practice. the secondary market implemented within the system (see below), then the agent has access pricing data for other similar names well for the same name was previously sold the secondary market. there interesting technical limitation agents which affects algorithmic pricing. since the agent doesn't have private storage, adversarial node the peer-to-peer network can intercept user's request the agent purchase name, and try purchase that name ahead the user, perhaps the hope turning around and selling the user. this analogous front running. fact, front running problem the current dns well, carried out intermediaries that provide domain registry search services []. fortunately, the cryptocurrency context there's simple cryptographic solution: the user first presents sealed bid the agent (here the name that needs sealed, not the price, which public); after this message confirmed the block chain, the user (from the same address) reveals the name. now the adversary cannot front run the user because cannot spoof messages (transactions) from the user's address. primary market: auctions vs. algorithmic pricing. there are essentially two choices for the primary market: auction and algorithmic pricing. auctions are appealing, but there are practical problems due the infinite number names. for example, let's say auction for name triggered whenever any user expresses interest buying that name. since there are potentially infinite number names that user interested in, she would have able participate auction any time, which problematic assumption. alternatively, names could for auction fixed times, but this also has practical downsides. the other hand, names can priced this the approach used namecoin, and the reagorithmically. this more applicable for applications like domain names than for personal son why name_new and name_firstupdate need namecoin uses simple model flat fee for all domains that varies with time (which can think trivial case algorithmic pricing). secondary market. long the technical capability transfer names exist, would expect secondary market develop without any further design support. addition, the ability transfer names and payment single atomic transaction allows parties transact without trusted intermediary. this straightforward implement technically discussed section bitcoin and most altcoins including namecoin support it. however, there are benefits the capability post bids and offers the block chain well execute trades. first, practical matter, when cryptocurrencies are the bootstrapping stage, exchanges may not develop may fragmented. see this problem with namecoin. secondary markets for dns names are also fragmented. fragmented non-existent secondary market may turn inhibit adoption the namespace. integrating exchange (implemented, course, decentralized form) may prevent this problem. interesting historical aside, early versions satoshi nakamoto's bitcoin code contained exchange functionality prototype stage, but this was never rolled out []. second, mentioned above, executing trades via the block chain allows the agent direct access price data, and this may help with algorithmic pricing. finally, integrating exchange allows shaping the secondary market, for example, charging fee for trades. mentioned earlier, technically feasible deter private trades; this would force incentivize trades happen through the integrated exchange. the agent's finances centralized namespace, the owner the namespace has clear goal maximizing revenue from name sales. decentralized sysbe distinct operations separated -block waiting period, described section tem, this typically not meaningful goal. after all, the agent not real-world entity. how, then, should the agent handle its finances? our first simplifying observation that there point the agent holding any funds even needs buy names from users, can simply print money (introduce new coins into the system) necessary. course, from practical perspective may easier have the agent store funds; this corresponds the proposal namecoin treat registration fees deposits and hold them "escrow" []. conceptually, however, can get rid this option. that leaves two options. the first distribute its revenue miners, proportion their hash power the time the transaction. this technically straightforward structuring payments transaction fees collected the miner who first mines block containing that transaction. the other option "burn" the coins representing the payment, i.e., mark them permanently unspendable. this also technically trivial. assuming that the market capitalization the currency unaffected burning some it, has the effect distributing the agent's revenue all holders the currency proportion their holding. both these appear reasonable options, and namecoin has used both; not clear which better terms incentivizing the long-term growth and security the system. related work here discuss attempts besides namecoin decentralized cryptocurrency-based namespaces domain-name systems and more broadly technologies that utilize the block chain. bitshares another altcoin that includes proposals for namespace one its goals []. emercoin recently emerged namecoin competitor []. more broadly, the ability publish messages the block chain immediately allows vari- ety applications. physical property, shares stocks, bonds, any other real asset can digitally represented the block chain. overlay protocols such mastercoin and colored coins specify syntax and semantics for such digital representations commitcoin allows for putting hash commitments the bitcoin block chain order timestamp data trustless manner []. there are number more complex applications that require additional primitives. financial derivatives are contracts whose value depends, some mutually agreed-upon way, the price (or movements price) underlying asset. implementing derivatives digital assets, then, requires user-defined logic (or scripts) for transaction validation. this can accomplished via altcoin with flexible scripting language such ethereum []. furthermore, since derivatives depend prices, scripts that implement them require access price feeds input. otherwise, requires trusted third party (known bitcoin address) regularly publish suitably encoded, signed price statements reflecting external reality. these can published directly the block chain distributed off-chain and only added the block chain when needed redeem asset. more generally, such entities could publish any data feed representing news other events. bitcoin can act platform for fair secure multiparty computation these are smc protocols augmented with bitcoin operations, e.g., payment from one participant another, deposit. finally, set related ideas known decentralized autonomous organizations (among several other names) has stirred considerable excitement the community recently. these combine several primitives discussed above digital assets, long-lived scripts implementing arbitrary logic governing those assets, data feeds, and out-of-band communication. some proposals for daos incorporate human input various forms: one decentralized agent farming out computationally intractable tasks humans []. another voting shareholders decentralized agents enable modifications the logic (i.e., script). discussion and conclusion our empirical analysis namecoin and exploration the design space reveal several potential mechanism design weaknesses. first, namecoin's fees are far too low deter squatters. the system utilizes neither auction nor algorithmic pricing that might help price names near their market value. worse, users who paid high network fee the early period and who wish leave the system have way recoup any their investment returning the name the primary market. these problems are exacerbated the lack functioning secondary market. buying squatted name, even contact information available the block chain, cumbersome manual process. there way to, say, search for all names available for sale matching given string and below specified price limit. namecoin does not integrate exchange into its core functionality, nor have namecoin developers chosen build and promote one outside the system. decentralized namespace for domain names viable? even with hypothetical system where the above weaknesses are fixed, it's not clear that would viable platform for decentralized dns. namespaces are solution the problem mapping names values. however, domain name system, the problem that needs solved map entities legal entities, brands, identities addresses/values. naturally, mapping entities names (or directly values) not purely technical problem, but requires human judgment. the traditional dns, arbitration based trademark law mechanism prevent names that are confusingly similar from being controlled different entities. this augmented with extended validation certificates, which, when used, establish the legal identity the name owner. with these mechanisms place, the user must still provide name the system, but least she can then verify that corresponds the correct entity she had mind. this type verification much harder incorporate decentralized system. are not aware any designs for decentralized systems that attempt so. such mechanisms are not developed, can decentralized namespaces for domain names viable all? will they depart far from user expectations unusable? other solutions for usability might possible. web search engines are used practice way mapping entities names. indeed, such "navigational queries" are one the primary ways which people use search engines. navigational queries are about equally viable centralized and decentralized systems. presumably, using search engines and following links from other sources (including bookmarks) will allow user gradually memorize entity name mapping. course, users always used these nagivational aids and relied them entirely find the correct name, then those names don't have human-memorable user-chosen, one doesn't need namespace all. indeed, .onion domains force users rely navigational aids since names are public keys and can't freely chosen users. anecdotally, however, clear that this results poor usability and memorable names would improvement. remain neutral the question whether decentralized namespace for domain names can viable. but the human factors discussed complicate the mechanism design question. section proposed utility maximization (strawman) goal the mechanism, and suggested that auction would satisfy this goal. however, auction-based system, may turn out that adversary inter- ested phishing has higher utility for (say) bankofamerica.com than bank america does. not clear how design mechanism that will discourage such outcomes. comparison between .bit and onename. contrast the .bit subspace, the online identity service, onename, has very large user base. found that after limiting the number name/value pairs only those with unique, well formed entries (using the strategies listed section onename has roughly pairs, which dwarfs the .bit domains. too early tell whether not these users are putting their onename identities any real use, but least terms registration numbers, interest appears high. perhaps the biggest reason for this that while scarce, onename names are not nearly valuable domain names, and far less important get the mechanism design right, have any mechanism all. unlike domain names that must remembered humans, users typically find onename identities through links from other social media services searching for the individual's real name. second reason that onename benefits from being centralized service top decentralized platform. name squatted, typical user who wants that name might not even know how contact the squatter because they are trying register name through the onename website which doesn't facilitate this process. while user could technically interact with the 'u/' subspace the block chain directly, most onename users don't. the .bit subspace, the other hand, suffers from the lack any centralized service providers coupled with the poor usability the client software. new user faces many significant hurdles registering name. the first step acquiring namecoin client which requires downloading, verifying, and storing the entire block chain, which currently about gb. then she must acquire nmc, which requires bing reports that about queries are naviga- connecting the user's wallet cryptocurtional []. rency exchange (which supports namecoin) her bank account. our experience, there markets and order books. workshop the economics information security, url -day wait after registering with exchange http://weis.econinfosec. and being allowed transfer funds. now the org/papers/clark-weis.pdf. user finally ready register names, but she must also remember update names every domain name specification, url days run software the background that will https://wiki.namecoin.info/ automatically handle this. index.php?title=domain_name_ conclusion, designers decentralized specification. namespaces must pay careful attention mechanism design deter squatters and facilitate khalahan. nmcontrol. url https:// github.com/khalahan/nmcontrol. healthy secondary market. further, the usability the overall ecosystem, which includes not just freespeechme website. url http://www. users who own names but the applications that freespeechme.org/. utilize the namespace for web browsing other tasks, paramount. finally, hybrid model greg slepak. dnschain. url https:// centralized services that utilize underlying github.com/okturtles/dnschain. decentralized platform worth considering. url http://www. acknowledgement. would like thank opennic project. opennicproject.org/. felten and muneeb ali for helpful discussions and feedback. keybase. keybase. url https:// keybase.io/. references luke walker. icann's uniform domain name dispute resolution policy. berk. tech. lj, paul mutton. wikileaks.org taken down dns provider. url http: //news.netcraft.com/archives/ william silber. marketmaker behavior ///wikileaks-org-takenauction market: analysis scalpers fudown-by-us-dns-provider.html. tures markets. the journal finance, (): wikipedia. zooko's triangle, url john ottensmann. urban sprawl, land valhttp://en.wikipedia.org/wiki/ ues and the density development. land ecozooko%s_triangle. nomics, pages aaron swartz. squaring the triangle: secure, decentralized, human-readable names. url atila abdulkadiroglu and tayfun sonmez. matching markets: theory and practice. adhttp://www.aaronsw.com/weblog/ vances economics and econometrics (tenth squarezooko. world congress), pages satoshi nakamoto. bitcoin: peer-to-peer electronic cash system. url https:// daniel. proposal: domains should regularly auctioned. url https://forum. bitcoin.org/bitcoin.pdf. namecoin.info/viewtopic.php?f= appamatto. bitdns and generalizing bit&t=. coin. url https://bitcointalk. roger dingledine, nick mathewson, and paul org/index.php?topic=.. syverson. tor: the second-generation onion router. technical report, dtic document, bonneau, clark, felten, kroll, miller, and narayanan. decentralizing prediction juan pablo timpanaro, chrisment isabelle, and marcin andrychowicz, stefan dziembowski, daniel malinowski, and lukasz mazurek. festor olivier. monitoring the network. secure multiparty computations bitcoin. url https://hal.inria.fr/ security and privacy (sp), ieee hal-/document. symposium on, pages ieee, doi:./sp... antpy github. bitcoin github commit history. url https://github. iddo bentov and ranjit kumaresan. how use com/bitcoin/bitcoin/commit/ bitcoin design fair protocols. advances dabfabedefbed. cryptology-crypto pages springer, doi:./---[] ethereum white paper, url https://github.com/ethereum/ wiki/wiki/white-paper. ranjit kumaresan and iddo bentov. how use bitcoin incentivize correct compubitcoin wiki. agents. url https://en. tations. proceedings the acm bitcoin.it/wiki/agents. sigsac conference computer and communications security, pages acm, wikipedia. domain name front running, doi:./.. url https://en.wikipedia.org/ wiki/domain_name_front_running. vitalik buterin. daos, dacs, das and more: incomplete terminology guide, phelixbtc. bitcoin github. url https:// url https://blog.ethereum.org/ github.com/phelixbtc/antpy. ///daos-dacs-das-andmore-an-incomplete-terminologynamecoin forum. idea for better fee strucguide/. ture. url https://forum.namecoin. bing blogs: making search yours, url info/viewtopic.php?p=&sid= http://blogs.bing.com/search/ cfdbbcadadacb. ///making-searchyours/. .pp (bitshares dns), url http: //wiki.bitshares.org/index.php/ .pp_%bitshares_dns%. emercoin, url http://emercoin. com/. mastercoin protocol specification, url https://github.com/mastercoinmsc/spec. meni rosenfeld. overview colored coins, url https://bitcoil.co.il/ bitcoinx.pdf. jeremy clark and aleksander essex. commitcoin: carbon dating commitments with bitcoin. financial cryptography and data security, pages springer, doi:./----_. list significant .bit domains below list names counted towards the last entry table these domains were determined the proccess described section alt-freedom.bit bangkokgroup.bit bitcoinpl.bit bitcoinquotes.bit carnicominstitutemirror.bit changepurse.bit columbo.bit darkfur.bit dcinvestments.bit dealing.bit deathrowdemocracy.bit dot-bit.bit dotbitkittypix.bit feens.bit hewgill.bit hosting.bit kk-cabrio.bit lapan.bit medicinalgenomics.bit megabrutal.bit michail.bit mikeward.bit namecoin-test-suite-.bit onemillionpixels.bit peterboswell.bit rmgx.bit tuler.bit wikimouto.bit