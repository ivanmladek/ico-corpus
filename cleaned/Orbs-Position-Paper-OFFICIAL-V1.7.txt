orbs position paper orbs.com public blockchain infrastructure for established consumer applications public blockchain infrastructure for established consumer applications position paper orbs.com motivation the orbs vision purpose this paper introduction decentralized consensus the blockchain rule all blockchains requirement driven approach the era decentralized consumer apps why consumer apps decentralize kin kik interactive case study target audience for orbs building through design partners infrastructure for decentralized apps first generation (bitcoin) second generation (ethereum) third generation (orbs) centralized infrastructure service lessons pragmatic systems design the orbs platform overview decentralized-consensus compute decentralized-consensus storage consensus service design principles service level agreement (sla) consumer scale consumer protection and regulation modern deployment paradigms network entities consumers apps consensus nodes audit nodes the orbs ecosystem core infrastructure specialized infrastructure infrastructure marketplace the orbs token overview billing subsystem programmable fee models economy incentives token implementation architecture fork not fork polyglot microservices specification code meta programming universal addressing network-owned secrets orbs architecture infrastructure layers and services resources pools vs. virtual chains consensus pragmatic decentralization and trust healthy distribution power real-time validation rights governance decision rights proof work proof stake permissioned models layered approach helix consensus algorithm finality consensus results ordering opaque transactions separation ordering from validation fast consensus committees efficient leader election randomized sort node reputation system service level agreement (sla) industry standard cryptokitties case study sla decentralized context predictable fee models dedicated, reserved and on-demand resources virtual chains and blockchain virtualization design principles consumer scale throughput and latency scalable fee models ever-growing storage light clients separation ordering and validation efficient consensus via committees sharding via blockchain virtualization elastic capacity consumer protection and regulation regulatory evolution established consumer brands consumer protection decentralized ledger security censorship and front-running compliance protocols privacy and aml the white chain modern deployment paradigms network governance evergreen nodes gradual migrations upgradable contracts multi chain hybrids polyglot cross-chain contracts designing for consumers brands and trust mobile and web clients consumer patterns network access infrastructure implications churn consumer apps and open source the problem private keys decentralized secret bearing the orbs federation pre-launch design partners governance definitions legal disclaimer motivation motivation the orbs vision large scale consumer applications will have transitioned the blockchain, bringing decentralized services billions worldwide. see the beginning this trend today more and more established consumer brands- kodak, kik and telegram launch new, decentralized businesses and reinvent themselves this space. the masses mainstream consumers present unique combination challenges that general-purpose blockchain solutions find difficult adequately meet. see need provide these decentralized consumer apps with hybrid infrastructure solution that addresses the multitude requirements for making this transition possible and seamlessly integrates them into the emerging standard blockchain infrastructure. until now, established consumer brands have been forced either avoid blockchain technology altogether; defocus and develop their own custom infrastructure in-house; settle for off-the-shelf solutions that don't scale, fee structures that break business models and degree liability that real-world business cannot accept. orbs mitigates these problems augmenting current blockchain solutions such ethereum. rather than competing with current protocols, orbs complements them order bring scalability decentralized apps without reinventing the wheel especially where things were done well. the orbs project envisions complementing the facto, emergent blockchain standard ethereum functioning second layer hybrid. ethereum has unmatched combination decentralization, liquidity and ecosystem, yet, ethereum token requires overlay network optimised for micro-transactions order perform high-scale and low-fee operations. adopting orbs alongside ethereum allows dapps enjoy the best both chains: unmatched security, liquidity and ecosystem integration, together with low-fees, production-ready scalability and suitable fee structure. this combination ethereum and orbs the optimal solution for applications with millions users looking adopt blockchain, today through innovations like blockchain virtualization (a.k.a., virtual chains) and randomized proof-of-stake (rpos), orbs will blend the common requirements for security with demand for speed both, while compromising neither. envision fully decentralized public platform that put the needs app developers first, design. where consumer brands feel comfortable operating nodes and taking part balanced, decentralized ecosystem, one that makes this transition easier for the industry whole. the platform will complete with core product experience inspired well-established infrastructure solutions such amazon web services (aws) and speak familiar terminology like service level agreements (sla) and dedicated resources. purpose this paper see stark difference between white paper and position paper white paper takes complex problem and revolves around the solution that problem. position paper revolves around the problem itself. discusses the problem and provides arguable opinion how should approached. this paper designed the position paper for orbs discussing the problem consumer-oriented blockchain infrastructure and how approach it. there's tendency the blockchain space launch projects with celebratory technical white paper. believe that solving complex problems requires mix multiple solutions over time and that these solutions evolve. accordingly, the orbs project will publish set white papers, each dealing with different aspect the solution. these white papers will evolve; some may become obsolete and some may replaced with different ones, continue better understand the problems we're facing. nevertheless, don't believe white paper the first piece the puzzle. the first piece articulating the problem, explaining exactly what we're trying solve and why stable guide the turbulent waters momentary innovation. this position paper will carve the specific niche blockchain infrastructure that the orbs platform focused on. will then into details regarding the main requirements we're optimizing towards and the various tradeoffs we're prepared make. this paper will also introduce some the solutions we're working on, with dedicated technical white papers published separately about each one. introduction introduction decentralized consensus there's argument that cryptocurrencies have exciting air disruption about them, with the potential change core aspects everyday life, like creating programmable economies it's difficult measure the degree disruption objectively but possible examine the indicators that historically coincide with profound technological innovation. one the largest disruptions modern time was without doubt the birth the internet, which created the ability interconnect the world digitally matter milliseconds. indicator coinciding with this event was the dot-com bubble period excessive market speculation and wild growth. there are similarities between this period today's crypto bubble and evidence that the crypto bubble even greater magnitude. while should approach bubbles cautiously, they are requirement for extreme growth over short period time. many companies did not survive the collapse the dot-com bubble, but the giants today's digital world, companies like amazon and google, emerged from the wreckage. believe that the key for doing the same planting firm roots substantiated value and ignoring hype general. these are guiding principles for orbs and will covered greater depth throughout this paper. the internet was the technological breakthrough driving the dot-com era, what the underlying technology driving today's crypto era? cryptocurrencies are not technology unto themselves but applications technology. this technology decentralized consensus decentralized systems are distributed systems where group independent but equally privileged nodes operate local information accomplish global goals. these systems lack central controller that exercises governance, supervision and control over the system, thus allowing power distributed over the network more uniform and fair manner. distributed systems are not new, with applications such napster driving the peer-to-peer boom the early http://cnbc.com////bitcons-nearly-five-fold-climb-in--looks-similar-to-tech-bubble-surge consensus shared view reality that agreed upon between different parts system. consider the most trivial example consumer application instant messenger where users can chat amongst themselves. this system requires consensus operate, allowing every user authenticate and speak only their own behalf. all members must reach shared view reality regarding which user which, who owns every username and forth. the consensus property very easy achieve centralized systems, where single governing body trusted all members define this shared reality. whereas decentralized systems are easy build without consensus and consensus easy achieve centralized systems, maintaining both properties the same system proves difficult. this the underlying innovation the field decentralized consensus. the ability build decentralized systems where group independent but equally privileged nodes are able reach shared view reality. cryptocurrencies are excellent example application that requires such system, where agreement upon the ledger transactions and balances can reached without governing body. the blockchain rule all blockchains the term blockchain originates from core implementation construct cryptocurrencies such bitcoin and refers continuously growing list records, called blocks, which are linked and secured using cryptography. this chain blocks holds the journal all transactions the network and forms the distributed ledger. the term blockchain has become synonymous with the core technology providing the infrastructure for such applications. building the next generation blockchain infrastructure has become fertile ground for innovation and dozens teams are currently racing deliver the "best" one. many these projects position themselves, sometimes even explicitly, candidates for the blockchain rule all blockchains believe that this mentality flawed. history shows that silver bullets are rare: complex problems are not solved single, simple solution. believe that there will blockchain rule all blockchains. general-purpose blockchain can only optimize for the lowest common denominator. similar the internet, the future blockchain infrastructure will include large number systems working together, each specifically designed and optimized for fundamentally different use cases, making them powerful and efficient hybrid. these systems complement each other. that end, are taking different design approach. for us, the first step towards building business-grade blockchain articulating clear use case defining real world need that this blockchain infrastructure attempting resolve and determining whether not market for this need actually exists. requirement-driven approach the first question asked when presented with new blockchain infrastructure "what's the key differentiator?" more often than not, the answer this question groundbreaking new algorithm, breakthrough based years academic research, that takes some arbitrary narrow aspect the problem and revolutionizes the industry addressing innovative way. that's not how believe orbs should built. we've decided early that we're going take more humble approach. we're not going start with the solution; instead, we're going start with the problem. our first step would outline clear needs that current blockchain infrastructure solutions were not designed adequately meet. next, find actual businesses, real customers for this missing infrastructure. ideally, the next step would work side side with some these businesses. the beginning, attempt with them rely existing blockchain solutions for their production use case; need this process understand the practical limitations these solutions, where the actual challenges stem from, which features solve real problems and which are merely nice have. our mission, apparently, has become find design partners this would make orbs requirement-driven blockchain. consider this key differentiator. the initial design should emerge iterative manner with each piece added only resolve the most pressing requirement our design partners. our experience from building production systems the pre-blockchain age teaches that this approach more likely deliver superior and pragmatic solutions. definitely more efficient than concocting solution first, designing system around and then scrambling find market fit. good relevant example the emergence the modern cloud, the facto standard for infrastructure service today. aws, the first and leading cloud provider, emerged from amazon's pressing e-commerce needs for solid internal systems deal with the hyper growth was experiencing. the era decentralized apps the crypto space growing rapidly with more and more businesses joining the ecosystem every day. the first wave businesses included mostly early adopters, newly formed crypto-first businesses small existing businesses looking experiment with the technology. the consumer apps among them, products like steemit, gnosis and augur, achieved very mild success. this not surprising since consumer markets are notoriously https://techcrunch.com////andy-jassys-brief-history-of-the-genesis-of-aws/ https://steemit.com/statistics/@arcange/steemit-statistics--en difficult penetrate, especially when dealing with complex technologies that even the tech savvy find challenging master. we're starting see the next wave businesses join this maturing ecosystem. this wave consists established businesses making the transition blockchain, whether it's established venture capital firms joining the crypto funding landscape established companies looking tokenize. the most interesting among these are mature consumer brands companies like telegram, kakao, line, kik interactive, with millions end users, companies that have successfully penetrated consumer markets outside the blockchain world. the transition for these companies slow and far from straightforward, mostly because they have much lose the foundations turn out inadequate for their needs. estimated that the total number active cryptocurrency end users the world million this figure mind boggling proportion the total market cap cryptocurrencies which has surpassed billion usd. these established consumer brands make the next giant leap for cryptocurrencies and decentralized technologies and deliver them the masses. why consumer apps decentralize traditionally, established consumer brands have followed very strict centralized model. the question their motives comes mind more and more these applications take parts their business and decentralize them over the blockchain. critics may claim that the opportunity raise funds provides strong enough incentive for these brands join this space. nonetheless, have less cynical perspective which reveals multitude different reasons. tokens are becoming the standard for the transfer value the digital world. they are immune many the drawbacks that payments fiat currencies face digital setting. tokens can shared instantaneously across borders, removing the need for separate payment solutions per geography. businesses can receive tokens directly with minimal integration, cutting out middlemen such payment providers and the hefty fees they charge. tokens are easier secure, reducing fees that are traditionally high offset chargebacks and fraud. tokens are also well-suited for flexible payment models such microtransactions and can incorporated seamlessly into larger systems through their programmable interfaces. tokenization also provides the means create handcrafted micro economies that obey set predefined rules. this allows design controlled environments where consumer apps can monetize effectively. monetization has always been difficult for consumer apps, many https://jbs.cam.ac.uk/faculty-research/centres/alternative-finance/publications/global-cryptocurrency https://coinmarketcap.com/charts/ which must resort selling the attention and data their consumers advertisers and marketers. the ad-based approach has resulted advantages almost exclusively for the largest applications, concentrating wealth and power the hands the few. token economies today hold billions dollars value. securing much value centralized infrastructure costly because criminals have huge incentive breaking into it. decentralized ledgers are easier secure because single entity can manipulate the ledger, and particular, nobody with access the company's servers can use this access steal money from consumers. addition, multiple parties constantly audit the integrity the ledger and can identify discrepancies from the agreed upon protocol. tokenization also allows consumer apps distribute the economic value created them, particularly their users. this ensures that users are fairly compensated for the value they create within the app. this model resonates well environment where monetization normally not the best interest the consumer. another benefit decentralization for consumer apps the ability band companies together equals. the consumer space slowly consolidating into the hands the giants like facebook and google. decentralization provides the means for the long tail companies align together and create combined ecosystems where single entity can skew the balance power its favor. these ecosystems can even carry after some the individual companies cease exist, allowing consumers have direct ownership the value they hold, without relying the services others. kin kik interactive case study kik interactive ltd. established consumer brand based canada and the with the mission connecting the world through chat. kik interactive has over employees offices around the world and member the fortune unicorn list private companies with valuations over one billion dollars. its main consumer product kik messenger, popular mobile chat app and the fifth most-searched term the ios app store. kik has been operating for years and has raised million date from private venture capital. kik the classic example consumer product created with the optimistic vision fully connected world, brought the technological disruptions the dot-com and mobile eras. it's world where group friends, the university waterloo this case, can band together and create app their garage that will eventually find its way million users. over the years, kik has been searching for sustainable monetization model that does not compromise user experience privacy. nevertheless, operating world where digital services have been organized largely around attention-based economy and monetization ttps://www.kik.com/ ttps://en.wikipedia.org/wiki/kik_messenger ttps://www.kinecosystem.org/static/files/kin_whitepaper_v_english.pdf through advertising. the problem is, that the online advertising market structured very unfair way: bigger players have more data their users, and are therefore able sell advertisements much higher prices. this means that smaller apps don't enjoy revenues that are proportional their size. instead, revenue resembles pattern exponential growth: when the market structured this way, very large share the ads market the few big platforms who also enjoy the highest profit margins. they then use their market dominance set the market prices level that ensures smaller platforms don't make profit, but the bigger ones still do. this creates long tail small products unable sustain themselves and small number extremely profitable giants. this revenue graph means that kik will eventually struggle become profitable. despite the odds and reaching impressive number users, kik was struggling sustain itself. this problem not unique kik. almost every digital service that sits the "wrong" side the exponent which unfortunately includes almost everybody due the way exponents behave struggles monetize. this not surprising, the usually have the power. that's just how the world works. this problem worsens every year. one could say that the exponent getting steeper. the world consolidating, making harder and harder compete with the giants and less likely that group university friends trying change the world will successful. the result disadvantageous for consumers consolidation reduces market competition and hurts innovation. kik interactive has taken the challenge change this reality. many have tried and failed solve the monetization problem consumer apps the last decade, but kik believes that only disruption the magnitude the one that created the internet will suffice. this disruption finally upon us: cryptocurrencies, the technology decentralized consensus, exact. with this mission mind, kik interactive has launched kin, decentralized ecosystem digital services for daily life based new token named kin. this token makes new economy possible where digital services can monetize without direct reliance advertising. the kin white paper sets forth the vision for the kin ecosystem, aligning incentives developers and consumers through the kin rewards engine (kre). kik's token distribution event (tde) was held september selling almost million kin tokens. can use our graph example from before demonstrate the general motivation behind kin: the red line the graph above designates present economic behavior. the blue line what fair economy would look like. digital service developer with service that times less popular than facebook, expect make facebook's revenue. this would mean that still able sustain myself because company also the size facebook inc. while true that the usually have the power, this case, the would prefer move world that behaves like the line blue. through the kin reward engine, developers digital services are incentivized relation their contribution the overall adoption kin. kin thus constitutes powerful tool change the natural behavior the economy that results linear relationship between the number users and revenue. https://www.kinecosystem.org/static/files/kin_whitepaper_v_english.pdf https://kinecosystem.org/static/files/kin_rewards_engine_rfc.pdf this also explains why consumer apps favor decentralization. the kin token economy could generate substantial value. securing central ledger from theft, hacking embezzlement difficult and expensive. with decentralized ledger, one can manipulate the ledger gaining access the company's servers. this provides greater degree protection its users. addition, the success the kin ecosystem depends the number digital services that band together. cooperation between competing digital services would have been next impossible without creating decentralized equilibrium where all parties are equal. target audience for orbs the orbs platform focused providing blockchain infrastructure for large-scale consumer apps. successful digital brands the consumer space have access millions end users, usually through websites and mobile apps. the majority these consumer brands are already established and have amassed their user base before the blockchain era. the orbs platform provides the infrastructure for these consumer brands build emerging decentralized businesses for the benefit their users, such the ability utilize blockchain technology, tokenize, integrate smart contracts and more. working with distinct and well-defined target audience also means the requirements and goals are clear. orbs doesn't try general-purpose blockchain, it's built from the ground for the consumer app market and the very specific set requirements entails. building through design partners orbs being designed using strict requirements-driven approach. the founding team has been working closely with some the leading consumer brands that are the process transitioning the blockchain and has been relying them design partners. choosing partners representing different business domains, are ensuring that the requirements are exposed cover the essentials for truly practical solution. the domain social/messaging, are working with kin kik interactive. the orbs team has been advising the kin tde from the beginning and some its key members have been employed the kin engineering team its journey implement kin using existing infrastructure solutions. kik has been vocal about the challenges identified throughout the process which became cornerstone the orbs design. orbs maintains close relationship with the kin engineering team, cooperating both architecture and development. the domain payments/settlements, are working with zooz labs and pumapay. founded zooz leading solution provider for cross-border payments with customers such wix.com, burberry and gett. zooz labs introducing protocol for blockchain-based cross-border payments prevailing consumer-oriented mobile wallet apps. https://medium.com/kin-contributors/kins-blockchain-considerations-ebdbaebd pumapay working blockchain-based pull-payment protocol decentralized alternative paypal. among its launch partnerships are businesses interacting with hundreds millions users and processing billions dollars worth payments, such lifestyle media company fashiontv and adult media giant vivid entertainment. the domain online advertising, are working with zinc blockchain-based advertising protocol that improves efficiency the industry increasing user data transparency, delivering better user experience, and removing the impact bad actors. zinc working with ironsource design partner, one the largest advertising technology providers the world. ironsource, founded has global reach over billion users month, giving zinc the potential exponentially scale become the next advertising protocol standard. another notable domain business intelligence. our team has been cooperating closely with endor, business intelligence technology vendor, with customers such coca-cola, walmart and mastercard. while traditionally not consumer-oriented domain, endor bringing predictive business analytics end users, developing decentralized platform with google-like interface for queries. together, these companies and their partners represent network containing hundreds millions consumers, billions app installs and billions usd annual revenues. our team has been working closely with these projects since their inception, helping design their solutions both and off the orbs network. infrastructure for decentralized apps infrastructure for decentralized apps first generation (bitcoin) bitcoin considered the first generation blockchain technology. the building blocks used create bitcoin, such the concept proof work, have predated bitcoin several years. nevertheless, bitcoin unique its combination these elements solve the problem consensus decentralized ledger open, streamlined, elegant and secure way. the public success bitcoin should not attributed its underlying technology, interesting may be, but its product. after all, bitcoin primarily application and not infrastructure this application has been successful, fact, that cryptocurrency has become the killer app for blockchain technology. one the greatest feats bitcoin alleviating any doubt whether blockchain technology indeed working that secure and solid enough hold assets great value furthermore, can trusted greater degree than any infrastructure solution previously offered any authority. did remarkable way creating environment free central governance, where all nodes are equal but without assuming they are all honest. and still, successfully manages entire financial system worth billions. bitcoin naturally has its flaws first generation technology. problems like excessive fees, long confirmation times and difficult upgrade politics are preventing the system from being used production for any purpose other than electronic alternative stored gold. second generation (ethereum) ethereum considered the second generation blockchain technology. its primary innovation was the separation between the application and the infrastructure layers. ethereum has little application its own, but provides solid base for developers create their own decentralized applications over the blockchain. this done writing smart contracts, https://coinmarketcap.com/currencies/bitcoin/ https://en.wikipedia.org/wiki/smart_contract immutable pieces software running decentralized manner over all the nodes the network under the promise full consensus upon the execution its terms. before the age ethereum, decentralized applications like bitcoin were implemented monolith, mixing both the application and the custom-fitted infrastructure for running this specific application. the boom decentralized application development recent years can largely attributed this separation application from its infrastructure, the barriers for their implementation have been greatly reduced. naturally, the pioneering project make this giant leap forward, significant parts ethereum remain working proofs concept but ultimately, was not designed run businesses with millions users production. ethereum has become the de-facto standard for issuing application tokens, and for good reason. has unmatched combination decentralization, liquidity, and ecosystem. however, plagued high and unpredictable gas fees, well low tps (transactions per second) capacity. ethereum token requires second layer optimised for microtransactions order perform high-scale and low-fee operations. third generation (orbs) now that the foundations the technology have been firmly set, the race create the next generation blockchain infrastructure that allows real-world businesses decentralize. the third generation blockchain infrastructure projects will beyond the smart contract technology proof concept and into practical business applications real world production environments. the question longer whether this possible, but what's the most efficient way. we've witnessed how wide the gap between platform's readiness for use early adopters and being ripe for mainstream users and companies after working with the kin engineering team bringing kin production over ethereum. ethereum itself going through transformations evolve into third generation project, with core changes like the gradual switch proof-of-stake (pos). other than that, the number third generation candidates impressive, with excellent projects focusing different aspects the challenge, like eos and cardano. there isn't one blockchain rule all blockchains. we're hopeful that many these projects will reach fruition and each provide best its class solution for distinct scenario. https://medium.com/kin-contributors/kins-blockchain-considerations-ebdbaebd https://medium.com/kin-contributors/ethereum-challenges-while-launching-iplv-aebaa https://eos.io/ https://whycardano.com/ centralized infrastructure service solutions for infrastructure service (iaas) for centralized apps have matured significantly over the last years. leading cloud providers like amazon web services (aws), microsoft azure google cloud platform have become the facto standard the industry. there's great deal that can learned from these services when designing our iaas solution for decentralized apps. almost all established consumer apps use cloud services their infrastructure for centralized services. just companies like airbnb, netflix and lyft rely aws provide the infrastructure for their centralized businesses, expect companies with decentralized applications rely the orbs platform provide infrastructure for their decentralized businesses. another observation: emphasis having well-rounded product sorely lacking existing blockchain infrastructure solutions. what exactly well-rounded product for blockchain? this question often asked emerging fields which have yet produce concrete business applications. consider, for example, the question fee structure. should blockchain fees paid the sender transaction its recipient? maybe third party? should the fee paid per transaction per month with subscription? should the fee predictable and constant market-determined? these are all questions that have strong influence over the product how design the user experience when working with the infrastructure. seems that far, the answers most these questions existing solutions did not start from product discussion, but from security, fairness game theoretical considerations. what would real business using this infrastructure prefer? consumer app may want subsidize its users' infrastructure costs. addition, may probably want plan the budget for these expenditures advance. there's rarely need reinvent the wheel: the product for decentralized infrastructure not materially different from that centralized infrastructure like aws. mature platforms like aws provide with practices that are proven after years calibration fit the needs actual businesses. lessons pragmatic systems design we've made several observations that are important from pragmatic standpoint from working closely with our design partners architecting expansive decentralized system. first, decentralized system doesn't need decentralized end-to-end. depending your https://aws.amazon.com/ https://aws.amazon.com/solutions/case-studies/airbnb/ https://media.netflix.com/en/company-blog/completing-the-netflix-cloud-migration https://aws.amazon.com/solutions/case-studies/lyft/ goals, significant parts the system can remain centralized. this has great effect efficiency since centralized infrastructure usually significantly faster and cheaper than decentralized counterpart. consider obvious example: system that transacts video content securely over the blockchain. naive approach would store the video data blockchain storage, but doing would inefficient and immensely expensive. the system will perform better and cheaper operate orders magnitude the raw video data stored cheaper and faster centralized storage and served through cdn, while the blockchain only used distribute hash codes and keys. another important observation that real-life systems often span over more than one blockchain. we've mentioned before that there's one blockchain rule all blockchains. different blockchain implementations are better suited for different goals, even the same application. immediately after its tde, kin launched erc token over ethereum. after understanding that ethereum will not able hold the transaction throughput and fee efficiency required for consumer app with millions transactions per day, the project analyzed migrating optimized infrastructure solution such the orbs platform. this migration would have negative effect some existing users erc currently better integrated into the ecosystem exchanges, wallets (including availability hardware wallets) and forth. whereas orbs great consumer platform, ethereum currently better suited for professional asset management and exchange. ideal solution would enjoy the benefits both making the token available both platforms with two-way portability using atomic swaps. example atomic swap mechanism: https://en.bitcoin.it/wiki/atomic_cross-chain_trading the orbs platform the orbs platform overview the orbs platform decentralized, open and transparent network providing public blockchain infrastructure service (iaas) for large-scale consumer apps. the trend for decentralized businesses continues rise, expect more and more established consumer brands take advantage the new opportunities decentralization presents and start making the transition blockchain. orbs provides the cloud infrastructure run these decentralized applications and facilitate this transition. the three primary infrastructure offerings the orbs platform include consensus-based decentralized compute services, consensus-based decentralized storage services and consensus service (caas). decentralized-consensus compute compute services enable developers decentralized applications run their apps over the network and execute their code the various nodes. applications are executed fully decentralized and secure way over multiple independent nodes. the results execution undergo consensus make sure single coherent outcome emerges. compute services are similar spirit centralized iaas services like aws even aws lambda, but use blockchain technologies. the blockchain world, compute services are similar principle the execution smart contracts over ethereum. decentralized-consensus storage storage services enable developers decentralized applications store data over the network. data replicated and sharded between multiple independent nodes and stored securely fully decentralized manner. storage forces data consensus, making sure https://aws.amazon.com/ec/ https://aws.amazon.com/lambda/ https://en.wikipedia.org/wiki/shard_(database_architecture) there are inconsistencies between nodes. storage services are similar spirit centralized iaas services like aws even aws dynamodb. from blockchain perspective, storage services are similar principle storing data the blockchain itself ethereum, ipfs. consensus service since the orbs platform completely decentralized and comprised independent nodes owned operated different organizations, the ability reach consensus between these nodes core underlying capability the network. the consensus layer orbs architected modular and allow additional infrastructure layers, such compute and storage built top it. also allows its users reach consensus independently the other services. for example, one might use caas notarize documents, inputs from decentralized oracles. using orbs' inherent cross-chain connectors, caas can even used notarize states other blockchain platforms, execute atomic swaps between platforms. design principles orbs designed requirements-driven approach. working with design partners that are currently operating mass-market applications serving hundreds millions users, we've been able distill the following four areas our focal points: service level agreement (sla) sla commitment between the service provider and service user. particular aspects the service like minimum quality, availability, responsiveness are agreed upon advance with detailed mechanisms guarantee the sla practice compensate the user the sla not met. slas are industry standard the traditional consumer infrastructure space and are widely used centralized iaas platforms like aws. orbs, slas are much more than these traditional written agreements between parties, since they are implemented direct part the protocol and are integral the network design slas are important for consumer apps order increase the predictability the service level. consumer expectations are high and even small disruptions the availability app causes users leave. blockchain platform will bring little value its applications fails perform when congested, even provides magnificent performance and ultra-low fees. https://aws.amazon.com/s/ https://aws.amazon.com/dynamodb/ https://github.com/ipfs/ipfs/blob/master/papers/ipfs-cappfs/ipfs-pp-file-system.pdf https://cloudiqtech.com/aws-sla-summary/ consumer scale consumer apps serving millions end users normally have aggressive scaling demands, particularly for message throughput, message latency, and the number supported users. reference, lyft handles over million rides per day. handled over blockchain technology, each these rides should consist several transactions: ordering the ride, driver taking the ride, payment, review, etc. each these transactions needs processed almost immediately accommodate efficient transaction between the rider and the driver. using blockchain terminology, message throughput and latency translate transaction throughput and confirmation time. business-grade scale does not only apply raw network properties like throughput and latency. scale influences almost every aspect platform design. consider the scalability the fee model for example. infrastructure fees with fixed cost-per-transaction that only scale linearly (with the number transactions) provide poor framework for apps grow, especially for mass usage patterns like microtransactions. consumer protection and regulation there common misconception, that decentralized networks are unregulatable. practice, regulation may lag behind fast-paced technological innovation, but its users are ultimately subject the ruling regulators and seek its protection when need. consumer apps are normally developed well-defined organizations companies with clear legal identities, even they are decentralized. they are subject regulation, both governments and industry bodies (e.g. app stores), and must operate within legal and contractual limits. for established consumer brands, that have much lose found noncompliant, regulatory uncertainty risk rather than opportunity. our experience with design partners shows that compliance often becomes the critical path the roadmap. technical and infrastructure choices may impact the requirement for government licenses and compliance app store rules. modern deployment paradigms painful lessons history, such bitcoin segwitx, have shown how governance plays critical role the practical success decentralized system and its ability keep improving over time. consider governance and the orderly process for the continuous evolution the protocol first-class citizen the design orbs. incentives for evergreen nodes are constructed into the very base the orbs token economy. https://blog.lyft.com/posts/one-million-rides-a-day https://www.coindesk.com/x-called-off-bitcoin-hard-fork-suspended-lack-consensus/ the challenge smart contract immutability has also become important with ordeals such the aftermath the parity multisig bug ethereum. smart contracts could use some local governance, able adapt extreme situations without requiring intervention the governing bodies (or the governing daos). furthermore, our experience with real-world production scale also shows that impractical for production system deploy major changes the network forks, going from the flick switch. modern deployment strategies require the ability deploy changes gradually then etc.) with constant monitoring and the ability rollback. the system must also allowed deploy multiple orthogonal changes side side independent experiments else development will have serial and slow down significantly. https://blog.comae.io/the-m-ethereums-bug-fede network entities orbs blockchain infrastructure for large-scale consumer apps. such, can categorize several distinct types entities participating the network: consumers these are the end users the network who use the apps that are running top it. they would make the vast majority wallet holders for currency-based products. general, can assume they number the hundreds millions. consumers will likely gain access the network using mobile app website. consumers not have direct access the orbs network and not operate nodes like alternative blockchain implementations such bitcoin. consumers' access the orbs network always provided through app usage profiles mobile apps and websites are characterized extremely low availability resources low computational ability, low memory and low persistent disk storage. network connectivity extremely intermittent without any guarantee how often consumers are online and for how long. consumer apps general are also suffering from high churn meaning users are prone abandon the app. the number active users usually significantly lower than the number registered users (this number often low %). from regulatory perspective, most the effort made regulators aimed the protection consumer interests. apps these are the products running top the blockchain infrastructure, performing transactions for the benefit consumers. can assume low number popular apps the network, the area several hundreds. this mostly because apps are extremely competitive and consumer attention very difficult attain. the average mobile consumer does not use more than dozen mobile apps, although millions apps exist app stores. the orbs platform naturally optimizing for the most high-volume, popular apps. consumer-brand apps are normally developed well-defined organizations companies with clear legal identities. they are prone regulation and must operate within legal limits. the majority consumer brands targeted the orbs project are well established and have existed centralized entities prior the blockchain era. they currently rely centralized channels reach consumers: mobile apps the app stores, well websites with branded domains are fully centralized. resources should plentiful for such apps. outside the blockchain world, consumers are known have high expectations network scale and responsiveness. can assume nodes operated apps will have higher computational ability, more abundant memory and persistent disk space. network connectivity can also assumed steady and performant. consensus nodes these are the servers that participate the consensus process and provide the actual compute and storage resources execute the decentralized apps top the blockchain infrastructure. nodes are owned and operated various companies and organizations. each the organizations may operate multiple nodes. nodes participate the network following the protocol, for example running the orbs software stack freely distributed open source reference implementation introduced the orbs project and maintained the open source community. the collection nodes the network does not have any centralized point governance and not owned controlled the orbs project. the number nodes the network could the same order magnitude the number apps. fact, app developers are encouraged operate nodes the network and large similarity between the two groups can expected. account for node redundancy single organization spawning several nodes for robustness) and ecosystem apps like kin (where ecosystem organizations operate app together), can expect the number nodes one two orders magnitude larger. https://github.com/orbs-network audit nodes these are also servers the network whose primary purpose adding another layer security public audit the blockchain. audit nodes not take active part the consensus process itself and not have the capability write data storage close blocks. such, unreliable behavior audit nodes, such intermittent network connection downtime, does not have direct negative effect the overall performance the network. audit nodes also participate the network running the same software stack consensus nodes. fact, consensus nodes perform similar audit process among themselves parallel their additional responsibilities. like consensus nodes, they not have any centralized point governance and the collection audit nodes not owned controlled the orbs project. the orbs platform designed public and open for inspection. any entity and individual encouraged operate audit nodes help contribute the network general security. node operation also incentivized the token economic model. can accommodate large number audit nodes the network which doesn't necessarily correlate the number consensus nodes. the orbs ecosystem the orbs ecosystem core infrastructure the nodes the network running the orbs protocol software stack provide the core competence the orbs platform infrastructure layer for the developers consumer-oriented decentralized apps. the core offering includes consensus-based compute, consensus-based storage services and caas. the reliance upon turing-complete languages the basis for applications build upon has been proven vital projects like ethereum. consider unwise for infrastructure layer limit the abilities the applications carries, they are the main driver innovation the field and their exact requirements cannot fully anticipated advance. specialized infrastructure the core competence the platform only holds the most basic the building blocks for decentralized apps. these blocks are the most flexible, but experience shows that complex applications require specialized infrastructure well, that often built third parties. decentralized analytics concrete example specialized infrastructure the kin use case. most the partners the kin ecosystem would need data and business intelligence layer (bi) but don't have the resources develop maintain their own solution. reliance centralized solution offered established software vendor, such sisense tableau, would problematic: partners should base their most strategic decision-making this data, but they cannot trust that the data was not manipulated whoever controls the centralized account. decentralized solution better alternative, but currently kin would have develop from scratch. the best option this case for established software vendor develop decentralized version its analytics platform, given that already https://en.wikipedia.org/wiki/turing_completeness https://www.sisense.com/ https://www.tableau.com/ possesses the domain expertise. the vendor can interface with the orbs platform provide the infrastructure kin developers via apis directly accessible from orbs smart contracts. course, use-cases for specialized infrastructure are not limited and can also include tools and integration points such back-office software, oracles, integration erp/crm platforms, other types storage and databases that beyond naive key-value store, and much more. infrastructure marketplace orbs will encourage the formation open infrastructure ecosystem specialized third party solutions, whose participants will provide one stop shop for decentralized application developers. such platform will promote decentralized technologies general and empower specialized complementary infrastructure providers. this ecosystem will establish economy for services based the orbs token where third parties can receive payment using the token for infrastructure solutions they have created. the benefit for decentralized application developers clear single integration channel and common language for all their decentralized technology needs. this model has been proven successful centralized infrastructure platforms such aws marketplace, where third parties are upselling specialized services aws customers. complementary infrastructure orbs can also serve complementary, augmenting infrastructure layer top other blockchain protocols like ethereum. while ethereum settles into position the industry standard for token protocols and icos, the network struggles with scale. orbs utilizes blockchain virtualization optimize traffic for decentralized apps, form intelligent sharding that more efficient (as first level sharding) than other sharding methods. migrating orbs, users existing projects can elect anchor their erc- tokens reserve ethereum while using atomic swaps launch avatar tokens orbs. their original tokens remain erc- format, backing the tokens running over the more scale-friendly network created orbs. https://aws.amazon.com/mp/ the orbs token the orbs token overview the native token for the network, the orbs platform relies the orbs token fuel network operation and provide the means pay the fees involved with operation the consensus layer, execution smart contracts and consensus-based storage these are the three primary services provided the platform. the fee model serves incentive for nodes allocate the necessary resources for operating nodes and ensures sla consistent with consumer expectations term predictable and stable service, availability, performance and degree security. other words, nodes are paid for their services consumer applications that utilize them. the orbs token not only the driver for the orbs core infrastructure, but for the entire ecosystem built around the orbs platform. fuels infrastructure marketplace and serves the means payment for third party infrastructure providers which choose upsell specialized decentralized infrastructure solutions top the platform. the billing models for third party decentralized infrastructure solutions must evolve side side with the infrastructure itself. they also must adapt the new token economy and rely upon the new dimensions billing flexibility and the programmability provides. billing subsystem the orbs platform makes clear distinction between billing and accounting drawing inspiration from centralized infrastructure counterparts such aws, where billing uses local fiat currencies monthly intervals and accounting tabulated separately per use and demand with domain-specific metrics (cpu minute for compute for storage and bandwidth). current-generation blockchain platforms, like ethereum, not make this distinction and pair between transactions and their fee payments requiring that the fee itself explicitly attached every transaction. the orbs billing subsystem based the orbs token and provides the flexibility performed monthly intervals well. accounting the orbs platform performed separately per transaction and demand with domain-specific metrics (transaction throughput storage used chain). this separation adds degree flexibility compared the rigid per-transaction billing and fee model used most blockchain solutions today. programmable fee models the orbs billing subsystem takes infrastructure fee models step further. our experience with design partners taught that different applications prefer collect fees for infrastructure costs different ways. microtransaction-oriented peer-to-peer marketplaces hosted digital services prefer that the digital services will subsidize the fees for infrastructure and hide them from their end users. imagine for example dating app like tinder where the free model crucial for user adoption. these scenarios, expecting the end user pay upfront for infrastructure costs makes much sense asking end users instant messenger pay for the costs deliver their own messages. this achieved orbs through the introduction subscriptions. subscriptions are designed for the developers decentralized consumer applications which are often responsible for payment for the infrastructure services. this fee model closer the pricing model aws than that ethereum where the end users pay for infrastructure costs themselves. the orbs platform designed support alternative models well. consumer applications where larger sums change hands less frequent manner, such decentralized airbnb for example, may prefer that the party that originates the transaction will pay its fee. they may even one step further and make the fee proportional the amount paid despite the actual cost infrastructure being constant. other products, makes more sense for the recipient fund the fees. the elegant way deal with these varying demands move elements this decision from the infrastructure layer the application layer. adding degree programmability the fee model, with smart contract speak that specifies how the fee paid, applications will maintain the freedom adjust the fee model their needs. this also resolves another common challenge such systems, where the fee paid with one token and the transaction performed with another, requiring users hold balances both tokens order operate. economy incentives one the main benefits basing economies token instead traditional fiat currency the ability design inherent system incentives that will govern the system and steer towards global set predefined goals. bitcoin's goal, for example, relying the native token incentivize the security the network and rewards nodes for securely closing blocks with proof work. january bitcoins with value approximately are distributed every minutes average for this purpose. this mechanism creates economy bitcoin where predefined inflation supply, addition the fees paid users, https://www.anythingcrypto.com/guides/bitcoin-mining-block-rewards- provide the funding for this self professed global goal. the reward scheduled decrease gradually until fees comprise most the incentive for miners. the orbs platform, compensation validators (consensus nodes) designed based entirely fees (no inflation the token supply) from the very beginning. opposed where bitcoin stood, believe the blockchain industry mature enough correctly price transactions and validation without the "training wheels" block rewards. moreover, whereas fees distribute the burden relative the amount actual use the validation services, generating rewards inflation levies the cost the reward holders the token relative their holding amount. like usage property taxes subsidize trade which creates skewed market, using inflation subsidize validation will lead app developers make uneconomical choices. the fees for the orbs platform are designed with several aims mind: incentivize nodes maintain high sla high server availability with downtime secure servers against hacking and protect their private keys fast server hardware with fast network connection uphold its commitments other nodes (like dedication resources) regular server maintenance incentivize nodes not fork the official orbs token take part the official ecosystem and not split apart participate the consensus process with other network members incentivize new consumer brands and organizations join the network incentivize nodes evaluate protocol updates regularly and adopt them participate examining protocol changes proposed the open source community, other federation members and the orbs project run the same protocol everybody else enable fast end-of-life cycles for outdated versions, reducing maintenance costs incentivize public audit the network public validation that the network secure operation audit nodes that verify conformity the protocol real-time incentivize security researchers report vulnerabilities instead exploiting them other goals for the economy include handling excessive demand gracefully and determining who gets service this scenario, allowing applications pay for dedicated resources such throughput storage and providing the necessary friction prevent applications and users from spamming the network and paying for actual node server costs. besides the specific implementation details the billing subsystem, which controls how collected fees are paid node operators that provided services across the network, two other core aspects the orbs platform are used implement the economy incentives. the first reputation system for nodes calculated during the consensus process and facilitated the platform consensus algorithms such the helix consensus algorithm the second encouraging consumer applications join the ecosystem and maintain consensus node. this creates alignment between the incentives the users the platform and those the nodes operating it. addition, order bootstrap the platform, the orbs project budgeting tokens reserve for offsetting the entry costs high profile consumer brands joining the ecosystem. token implementation the initial launch the orbs platform, plan start implementing the billing subsystem over the ethereum blockchain. believe that ethereum great initial choice for practical decentralized billing system mostly due the extensive amount third party integrations available for erc tokens the industry today. these ecosystem integrations with exchanges, third party wallets and hardware wallets are important for the target audience the billing subsystem, companies and professionals, they are often required manage large amounts money the form cryptocurrencies. the current scale limitations ethereum are not likely pose problem for billing product since the rate billing transactions low once per month, and the amounts transferred are high making the significant fees ethereum negligible this case. these parameters are not very different from that wire transfer which common means payment for centralized infrastructure solutions like aws. avatar tokens for projects already operation, migration orbs would involve simultaneous locking tokens the original ethereum network with creation and launch tokens over orbs. the orbs version the tokens, avatar tokens, would represent the original erc tokens ratio. implementing the orbs token launch erc token will also provide production use case for core platform features orbs like polyglot cross-chain contracts the subscription smart contracts running over the orbs platform will access billing information found the ethereum blockchain. this great example where multi chain hybrid makes sense for practical reasons, where two blockchains can used side side, focusing their relative advantages. towards launch, the resources the orbs project are better allocated towards the primary differentiating factors the platform such consumer scale and blockchain virtualization. producing ecosystem integrations exchanges, third party wallets and hardware wallets not immediate priority. however, the orbs project ultimately intends invest efforts those well. architecture architecture fork not fork one the first questions that comes mind when designing new blockchain infrastructure whether fork existing system starting point from which build. some measure dominance the industry, can look the top tokens coinmarketcap, excluding bitcoin and ethereum, and see that over half the tokens are forks other popular tokens. forking has become popular method bootstrap new systems quickly due the permissive nature intellectual property the field. our conclusion, ultimately, was that this decision should depend what the system trying achieve. let's assume that have adequately mapped the space and found existing blockchain solution. the solution closely implements our conceived ideas, consider carrying out fork. suspect that our final result will differ from said system, should fork. suspect that our final result will differ shouldn't. using this our guiding principle, and the lack maturity the consumer application sector over blockchain general (with the first billion dollar consumer brands starting transitioning blockchain only recently) have decided not fork. are willing take the short term penalty delaying our time production for the luxury architecting system from scratch and designing for our distinct use case. want free ourselves from the potential burdens caused using architecture emerging from different set requirements. polyglot microservices the evolution software systems architecture, traditional systems grew gradually from the initial single program complete systems. initially, systems were very simple with all functionality single program what considered monolith functionality was added the system, both its codebase and group contributing developers grew. gradual growth then lead decomposition the project separate modules following the separation https://coinmarketcap.com/ concerns principle. over the years, well-architected modular systems proved work well for scaling functionality and for scaling development teams. the internet revolution brought about new challenges systems design, modern systems commonly need work massive scales interfacing with other systems and millions end users. this leads changes both ends the engineering process. the development end, the complexity such systems requires new development paradigms such refactoring, agile development, continuous deployment and build-measure-learn cycles. the operational end, leads dependence intricate infrastructure enable scaling the throughput overflowing interfaces. both changes prove hard apply modular systems that suffer from delicate module interdependencies. this hardship lead the evolution service-oriented architecture and microservices design methodology, where each functional component implemented separate, simple and focused product. easy observe that most current-generation blockchain platforms are built monoliths. this not only shows the immature state their development, but also hampers the ability evolve and extend the functionality systems based these platforms. moreover, high-complexity open source projects, the reliance well-acknowledged libraries and frameworks becomes limited when monoliths are constrained design choices optimal for just some their functions. the optimal environments for developing high-performance cryptography are different from those optimal for decentralized storage from those for high performance networking and on. the microservices architecture enables system polyglot i.e. use different programming languages and frameworks for the different services. such approach allows for higher quality services, and better usage resources such open source solutions and engineering talent with expertise relevant domains. specification code many software engineers know, specification document grows stale the minute gets published not before. therefore, strive for executable specifications that will trigger conspicuous alerts upon failing. using executable specifications, ascertain that point time does codebase diverge from its specification, thus assuring that backwards compatibility and correctness are never compromised. the distributed and decentralized nature blockchain network makes utilizing executable specifications even more important the developers have little control over the deployment lifecycle the services, rolling back deployment that broke api introduced bug not viable option. therefore, our workflow makes extensive use executable specifications https://en.wikipedia.org/wiki/separation_of_concerns https://martinfowler.com/articles/microservices.html two major categories: using protocol buffers for generating our api schemas, and using test-driven development (tdd) for achieving highly testable code. protocol buffers (or protobuf) interface definition language (idl) developed google that programming-language-agnostic and allows defining apis with backward and forward-compatibility mind. this creates clear distinction between the code that defines api specification and the language and code used implement it. developer changes implementation way that breaks api, static type-checking will fail the build and alert will sent the developer immediately upon failure. added value using language-agnostic idl enabler for writing polyglot microservice, the api between each pair microservices not defined any specific language. test-driven development (tdd) methodology which each required behavior coded into unit tests before coding the behavior itself. practice, means the developer starts defining the missing behavior, thus creating test that fails and making sure the failures are expected. only then can implement the code that makes that test pass. pursuing this methodology assures that untested code ever gets into the source code repository. next, the code reviewed, but unlike regular code review, the reviewer focuses validating the correctness the test (representing what the code does) rather than that the code itself (how does it). the tests are written semantic language describing the business domain (for instance, transferring some funds between two addresses) rather than the specific implementation; changing the implementation does not affect the test. practice shows that tdd leads shorter, more concise code and that the coding process comprises more cycles refactoring, thus reducing technical debt. meta programming the distributed and decentralized nature blockchain network imposes engineering challenges that are not present traditional deployment, the need arises for creative solutions allowing circumvent some these limitations. the orbs platform makes extensive use meta programming for critical components that will need support over the air (ota) deployment. other blockchain networks such ethereum offer the concept smart contracts way execute user-deployable code. the orbs platform borrows from these ideas and extends them for engineering-facing problems such deployment and provisioning. one interesting area where make use meta programming resource management and provisioning. this implemented hot-deployable code not unlike smart contracts, running instance the network itself (which can thought meta network), controlling the way resources are provisioned. for example, new virtual machines call "virtual chains" may automatically instantiated increase network capacity when new member joins the ecosystem particularly when this member paying for dedicated resources. since https://developers.google.com/protocol-buffers/ difficult foresee the types limitations and challenges might face when onboarding new members the ecosystem, making this area the management code ota-deployable makes lot sense. added value this approach that the developers will have immediate visibility into the platform's runtime, they will users the platform themselves, "eating their own dog food". another example public dns-like service which enables the resolution public address more user friendly format (alternatively, can used shuffle between multiple addresses). implementing such address resolution mechanism smart contract makes easier maintain than making part the platform's native core just ethereum chose implement ens smart contract. universal addressing addressing important topic blockchain infrastructure controlling the scheme how various resources are labeled and referred across the system. logical entities that have distinct address include token accounts, smart contracts and their stored variables. different blockchain implementations have adopted different addressing schemes. believe that single scheme superior over all others, furthermore, different addressing schemes have different qualities and are suitable for different applications. for example, some addressing schemes, such schnorr public key based, enable native support for multiple signatures. other addressing schemes have wider ecosystem presence and are supported more hardware devices and hsms. moreover, addressing scheme that compatible with the one used another blockchain implementation will allow end users the convenience using the same public address across multiple platforms. order promote interoperability between blockchain implementations and allow for easier migration onto the platform, orbs supports universal signature and addressing scheme. this method allows applications and users use range popular addressing schemes side side specifying the type address next the address itself. from architecture perspective, addressing schemes are managed dedicated module which can upgraded support additional future schemes they become popular across the industry. network-owned secrets centralized systems, secure operations are commonly based secrets owned the governing service which can used sign, encrypt decrypt data. decentralized networks are comprised independent nodes trustless setting, applying similar method not straightforward. secrets can only held individual nodes. the network whole usually unable hold shared secret and use for secure operations, due the open and decentralized nature the system, this secret will easily leak. this limitation often causes blockchain implementations rely trust for scenarios where trust should not have normally been required. good example how the client end user communicates with the network and performs queries its state, such checking the user's balance. assuming the client cannot run full node that synchronizes with the network and performs the complete suite resource intensive validations, some compromises must made. common workaround for the client communicate with the network through specific gateway node and delegate some the validations it. this would mean client query for network state needs trust the gateway node provide honest response. some improvements over this approach include redundancy tactics querying multiple gateway nodes once, choosing the gateway node randomly, fraud-proofs, etc. network-owned secrets cryptographic protocol introduced the orbs platform, that provides the ability hold shared secret securely decentralized network. none the consensus nodes have direct knowledge this secret, and only combined effort specified majority among them can facilitate this secret perform secure operation like signing, encrypting decrypting data. the mechanism relies cryptographic primitive called threshold encryption and described detail the technical white paper helix consensus algorithm the benefit this method that the combined signature only produced after reaching threshold amount signatures individual nodes, each using their own individual secret that other node knows. thus, have created combined signature that can effectively considered the signature the entire network. when the network whole has the parallel private and public key, many useful secure operations become easy implement. network-owned secrets provide the ability for secure interaction with the network without the need trust specific nodes. consider client that desires perform smart contract calculation and unable run full node. instead querying one the network nodes gateway and trusting its response, using network secret sign the combined response multiple nodes, the client can verify the response simply checking the signature. another interesting capability gained from the network's ability own secrets holding assets accounts the network level. consider the requirement implement smart contract over the platform that controls account different blockchain like ethereum. normally, this requirement would not have been possible implement because smart contracts cannot hold secrets. using network-owned secret, though, private key can generated the collective for nodes after consensus. this private key unknown any the individual nodes and can used access external ethereum wallet securely. moreover, smart contracts can used provide key services such key management, drm, etc. https://gist.github.com/justusranvier/fabff orbs architecture the detailed architecture the orbs platform will outlined set technical architecture white papers. general, the orbs architecture consists multiple layers, responsible for different functions the system. the layers and services are built such that they can operate different machines and scale independently needed. design goal, the architecture attempts separate services and modules much possible within layer order enable flexibility, upgradability and interoperability. key component the architecture the support virtual chains multiple parallel instances the consensus, state and storage layers that provide the illusion separate dedicated blockchain over shared physical node environment. the concept blockchain virtualization discussed greater detail the following sections. infrastructure layers and services client sdk client-side library for mobile and web apps that connects end users the network. the sdk can sign and encrypt requests and verify responses without relying trusted nodes. public api microservice that exposes all public web api clients (such rest json-rpc). provides the endpoint handling all end user transactions and queries. gossip microservice that provides efficient one-to-many and one-to-one communication between nodes the network. the novel communication scheme the orbs platform discussed detail the helix white paper. crypto services library and service providing the low-level cryptographic routines and services like signatures, hashes and encryption. has both native and non-native fallbacks. secure storage library and service that store secrets like private keys secure manner. uses hsm when available, relying dedicated hardware and tamper-resistant enclosures. system parameters and governance holds infrastructure configuration parameters and handles updates and provisioning. virtual machine (compute) microservice that owns the execution transactions and smart contracts, serving all virtual chains. the compute layer holds transient state for non-final execution and cross-chain data. processors set microservices providing the actual runtime environments needed for the execution smart contracts various languages (evm, python, java, javascript, etc). raw storage layer responsible for storing and retrieving raw data local machines. cross-chain connector(s) set microservices providing cross-chain interoperability with third party blockchains like ethereum. provides access under consensus the third party. clock sync microservice responsible for synchronizing clocks between different machines, nodes and services. provides consistent frame reference for absolute time. global clock synchronization not requirement for the helix consensus algorithm but other system services may benefit from this ability. consensus microservice instantiated per virtual chain that responsible for achieving agreement among nodes the order transactions and their validity. implements the consensus algorithm. consists the sub-layers: ordering, validation, transaction pool. state storage microservice instantiated per virtual chain that holds the mutable and immutable state that under consensus. manages efficient caching, sharding and redundancy for the state data. accessed the virtual machine and public api. block storage microservice instantiated per virtual chain that holds the incremental long-term journal all previous closed blocks. manages efficient sharding and redundancy for the blocks' data. used generate and validate the state. https://en.wikipedia.org/wiki/hardware_security_module virtual chain parameters and governance instantiated per virtual chain and holds the virtual chain specific configuration parameters and handles updates and provisioning. resources pools vs. virtual chains the orbs architecture comprised set microservices providing different types resources the network. each type resource can scaled separately according the actual requirements the network. service like public api can scaled aggressively launching multiple instances more concurrent end users connect the network, compared the consensus service that instantiated per node based the number virtual chains. different applications running top the orbs platform may have different requirements for different resources. for example, compute intensive application may require large capacity decentralized compute resources while database application may require large capacity decentralized storage. moreover, the amount resources expected change over time with the introduction new applications and the evolution their needs. order efficiently utilize the resources and microservices available each node, they are regarded shared pool resources that then allocated different virtual chains based their sla requirements. some resources may dedicated virtual chain whereas others are allocated dynamically based demand. architecture based resource pools effectively utilizes the varying capabilities heterogeneous nodes and supports elastic resource capacity. each node paid for the sum the services provided the network, and penalized failed deliver its commitments. this gives node operators the incentives add resources needed, and maintain the committed quality service. consensus consensus pragmatic decentralization and trust consensus one the core subsystems required for blockchain infrastructure and the choice consensus model without doubt one the first decisions have make. the question consensus, above any other, riddled with preconceived notions and strong opinion. debates between the camps proof work (pow) and proof stake (pos) often borderline philosophy. our position, usual, will have emerge from careful analysis our requirements. consensus comes solve the problem agreement decentralized system, where the selection between different possible agreements could create profits losses different parties. centralized system, there are different parties, thus conflict selecting agreement. before diving into the discussion, should examine how decentralized each part the network really is. looking the network entities diagram, let's begin with end users, our first anchor. consumers, users apps like instant messengers, are generally unaware the benefits decentralization, unlike the early adopters bitcoin. the near future, it's also safe say that the vast majority consumers will not grasp the difference between decentralized system and centralized one. contrary the trustless ideal behind bitcoin, end users will never over the source code product before compiling themselves, nor will they verify the signature make sure they've downloaded authentic copy. consumers, always, will place their trust brand. brands are almost always centralized entities: they have one leadership and one policy. they usually rely centralized delivery channels reach consumers, like the apple google app stores and websites with branded domain names managed centrally and hosted centrally-managed servers. consider consumer typing their secret passphrase into mobile app wallet. the consumer must trust that the developer this mobile app isn't stealing their private key, abusing transmitting outside. when interacting with https://download.wpsoftware.net/bitcoin/old-pos.pdf blockchain, will code created and signed brands that will ultimately interface, behalf their users, with decentralized apps. this observation fundamentally changes how evaluate open consensus models: means that any user's voting power essentially delegated the brand whose code they are using. even models like delegated proof stake, the voting power the delegate election implicitly delegated the brand. the case orbs, use randomized proof-of-stake (rpos), randomly select among our federation nodes subset form committees for quick block production. healthy distribution power before discuss political power decentralized network, need clear what this power useful for. most decentralized networks, political power used for two types decisions: real-time validation transactions, and governance the network itself (agreeing protocol upgrades, parameter changes, forks the blockchain, etc). real-time validation rights the effect political power real time validation limited when the protocol well-defined, because the fundamental rules are axiomatic the operation the network. for example, decentralized ledger would not enable any verifier matter how powerful approve transactions that are not signed the payer. did so, violated the rules the protocol, the allegedly-approved transactions will either ignored the network, the network will halt because the consensus broke. clear that egalitarian distributions power, which make harder stage such attacks, leads more robust and sustainable platforms. manipulations that not break the protocol are limited, then, undetectable violations the protocol; for example, deliberately failing propagate transactions, manipulating the order transactions within block, selfish mining, and on. some extent, the ability abuse power this real-time validation can further limited the protocol designed way that limits validators' ability apply such manipulations. governance decision rights efficient mechanism for agreeing network governance issues critical for its long-term relevance. industry that relies state-of-the-art technologies cryptography, distributed systems, network and software infrastructure, can expect steady current innovations that can further improve and extend the abilities given blockchain platform. furthermore, blockchain solutions enter mainstream industries, new uses and new https://www.cs.cornell.edu/~ie/publications/btcprocfc.pdf contexts use expect catered these platforms. adaptability important for any good blockchain platform, and the mechanics network governance should not barrier it. whereas most technological advancements are easily agreed upon, conflicts arise where interests are not aligned. order analyze healthy power distribution patterns, must first understand what interests are play, and who the actors are. with bird's eye view blockchain governance, can see three archetypes stakeholders: end users decentralized app developers catering end users network infrastructure operators (e.g. miners) designers platform that aims serve consumer applications, our approach try and maximize the utility for users. easy see that the interests infrastructure operators (such bitcoin miners) are normally misaligned with those the end users. result, networks are slow adopt changes, even when those are urgently needed. notable example the damages such conflict the -month debate the bitcoin community over the switch segwit (bip) that was designed resolve technical issue the protocol, but had several side-effects expected impact the revenues miners. ultimately, following months great uncertainty for users and app developers, the network forked august developers' interest infrastructure choices are usually well aligned with the end users', except for situations where proposed change could used incumbent fend off competition. app vendors may also divided their preferences between newer and field-proven technologies. vendors mature and established apps tend risk-averse and prefer waiting for technologies ripen, whereas fledgling apps see value adopting avant-garde technologies that have greater potential disrupt incumbents. platform virtualization has great potential mitigating many these conflicts, allows each application govern many aspects its own infrastructure independently from others. for the end users, believe their vote well-aligned their utility, long they are well informed the practical implications their decisions. however, involving end users governance decisions extremely hard decentralized systems: user identities are usually not connected real-world identities, and digital identities can easily forged. this issue usually mitigated weighting user votes with their stake the system's currency, the risk concentrating power the hands few rich users. https://github.com/bitcoin/bips/blob/master/bip-.mediawiki proof work most people are honest, majority vote the integrity public ledger straightforward consensus that decentralized, permissionless and open. but majorities are elusive concept when relying digital identities, the cost generating new identities negligible (sybil attack). ingenious solution this problem pow, proposed dwork and naor which suffrage subject spending computer resources and energy solving cryptographic puzzle. pow widely used today permissionless distributed ledgers. commonly, pow ledger arrives consensus over time: anyone can the public verifier for set transactions (usually, "block"), they are first solve pow puzzle; their efforts the puzzle will compensated cryptocurrency reward. consensus the validity block builds gradually, future blocks refer our block their predecessor. perpetrator will loss for trying publicly validate invalid block, because his expenditure the pow will not reimbursed his (invalid) block not referred future blocks. although pow ledgers achieve the utopian ideal decentralized, permissionless and open consensus, their application far from creating utopia. for pow adequately secure, the cost solving the puzzles must proportional the value the underlying assets; the global impact this mass-market ledgers frightening. illustrate, january bitcoin mining estimated taking nearly the world electricity consumption. cryptocurrencies reach mass market audiences and significantly grow value and transaction volumes, expect that pow ledgers will become unsustainable due the amount emissions involved with their operation. naturally, these costs are imposed the users the infrastructure fees and inflation; costs using pow networks are higher than those the alternatives. order reach the massive scale required for consumer apps, lowering infrastructure costs also core requirement the orbs platform. the near-term, pow poses several immediate and practical challenges mass-market adoption. one with the governance such networks; addition the inherent complexities governing decentralized movement, side effect the proliferation pow that mining has become business specialists, adding another powerful, heavily invested stakeholder the system whose interests aren't aligned with those users app vendors (as discussed above). developers consumer apps are the political group which the orbs platform optimized for, their involvement the network paramount its purpose, yet nobody expects companies like kik become competitive pow miners. another critical barrier using pow mass-market applications the inherent latency associated with eventual consensus. the acceptance block determined the depth https://www.microsoft.com/en-us/research/wp-content/uploads///iptps.pdf ttp://www.wisdom.weizmann.ac.il/~naor/papers/pvp.ps https://digiconomist.net/bitcoin-energy-consumption weight other blocks referring that block; this weight accumulates slowly blocks cannot created too fast without raising the probability conflicts, which blockchain systems come forks the chain. newer protocols can significantly reduce this latency using data structures that embrace forks valid state the blocks' formation. significant work has been done this field sompolinsky, lewenberg and zohar, including the design and validation the spectre protocol that implements block-dag (directed acyclic graph) replace the conventional block-chain. such work shows lot promise advancing pow decentralized payment ledgers beyond their current limitations, but the moment not offer good solution for more abstract systems such smart contracts, their use entails very high complexity calculating the system state. the orbs research group has invested significant efforts based the original spectre research and had discussions with prof. zohar attempt develop practical production implementation the protocol. ultimately, due the difficulty attaining the finality required for the efficient execution smart contracts dag-based systems, and inherent limitations pow general, have decided move away from the spectre research the base for the orbs platform consensus strategy. remain supportive this promising concept and watchful its research matures with advances like phantom. proof stake alternative means for countering sybil attacks tie suffrage ownership digital asset, usually cryptocurrency. the face it, pos provides elegant alternative pow, without the costs and energy waste associated with it. but the fact that pos schemes don't require verifiers risk any exogenous resources requires dealing with whole new set challenges. one major challenge that participation the validation process not direct concern most users the platform. someone using blockchain for transferring value, user application that makes use smart contracts, would usually not aware the mechanics the decentralized ledger, and likely have little motivation participate the process. this especially problematic for real-time validation transactions, which the validator required constantly online and allocate network and processing resources nonstop feed transactions. some platforms try replicate the ecosystem specialist miners that are commonplace pow systems. this includes wide variety models, ranging from purely permissionless models which would-be verifiers need stake burn tokens form earnestness, semi-permissioned models such delegation, where stake-owners trust their voting rights specialist. though the models greatly differ, all face the same fundamental challenges https://eprint.iacr.org//.pdf https://eprint.iacr.org//.pdf lack incentives for validators act honestly and increased risk formation dishonest majority. there are attempts creating full-participation, direct voting pos systems. one notable example algorand chen and micali, which very cleverly weighs random sortition user stake, thus requiring only small sample users participate validation any given moment some kind jury duty. have high hopes for such models, but important note that the moment there are significant practical barriers their implementation mainstream applications. mass-market users cannot expected active the technical process transaction validation, nor verify the software they are using for such validation; they merely download app from app-store. practice, this gives the app developers total control over user's voting power, making the system just good delegated pos system with all its disadvantages. hope that newer advances cryptography, such proof bearing code and other innovations, can make these systems practical for mainstream applications. permissioned models the idealistic nature the blockchain community has traditionally pulled towards consensus designs that are decentralized, permissionless, open and transparent. relaxing the constraint being permissionless, sybil attacks are longer concern, and faster, more efficient consensus algorithms can used. furthermore, permissioned validation also entails that the identity the validators known all. not hiding behind the veil anonymity, validators may required make public commitments abide the rules the protocol; such case even the rules that cannot enforced using technical measures, may enforceable commercial lawsuits. there are two forms for setting public permissioned network decentralized context. the first, consortium which central body governs the network thus distributing the validation permissions. real-time validation permissions may still considered decentralized, although the question whether the governing body carries liability for operating the network remains. the second, federation leaves the governance decentralized: permissions are not common the network but are rather specified each user app developer. different users may seeing different projections the ledger, when they don't share the same set permissioned validators. some architectures, this adds significant complexity the consensus protocol and ledger structures, however remains very simple platforms that provide blockchain virtualization. federated models for public blockchains are well-established the industry with projects like ripple and stellar steadily gaining ground. these projects maintain high degree https://arxiv.org/pdf/..pdf https://ripple.com/ https://www.stellar.org/ decentralization, openness and transparency, where any party can set node and verify the history for transaction integrity. the permissioned aspect the model comes into play the validation new transactions being written onto the chain. every node can specify the list nodes trusts participate the validation its transactions, thus creating combination groups with differing consensus quorums. layered approach how should choose consensus strategy best suited for the use case large-scale apps? the first question ask how should political power distributed the network. apps are already primary and certain stakeholder they drive traffic the network and bring their user base. established that consumers trust consumer brands through which they make transactions decentralized apps. adding additional stakeholders validators permissionless way beneficial for consumers? believe that today, federated blockchains offer the best solution for mass market consumer applications, both performance and alignment with the interests the consumers. not expect consumers directly involved governance the blockchain anytime soon; any practical system that wishes align with the long-term interest the consumer can either empower app developers interested parties such miners. app developers are already the trusted, dominant stakeholder the app market, entrusting them this power maximizes the benefit for the consumer. distribution power between developers should such that limits the individual power held each one separately. all these requirements are best met federated consensus models. are federated models open enough? can try answer this question several ways. from the practical perspective, the answer clearly "yes," puts the trust parties that have clear stake the success the platform and that proved collaborate well most scenarios (with the exception blocking competition). from strategic perspective, unclear whether these models are stable over time, especially comparison pow models which are considered very robust. from the legal and regulatory perspective, there ruling currently the subject, either for against. our analysis (see decentralized ledger security and the de-facto prominence federation models among today's leading blockchain platforms provide some indication that these models are seen sufficiently decentralized. the market matures, new insights new regulatory approaches could tip the scales against federated governance. such circumstance, anticipate that the governance the federation itself (accepting and rejecting federation memberships; changes federation members' permissions; changes the federation rules) will transition permissionless model such delegated pos, similar principle the governing model eos ton. https://eos.io/ https://techcrunch.com////telegram-open-network/ this structure preserves most advantages the pure federated model, but remains our second choice because lacks the simplicity and elegance the federated model. helix consensus algorithm blockchain technology reaches mass-market apps, realize that classic forms decentralized consensus are simply inapplicable. the volumes transactions mass-market setting would cause pow consensus too expensive, too slow and cause too much environmental damage. the fact that the apps themselves, rather than the mass-market users, are control the users' voting power make pos too risky choice for such platform. moreover, the typical pattern app popularity that extreme inequality: any given time and for almost any segment, handful popular apps overpower the infinitely long tail less-popular apps. because think the ideal power distribution should one that avoids significant inequalities power, prefer create system that assures upper limit any one stakeholder's power. with the birth the orbs platform, will introducing helix, decentralized, open and transparent consensus algorithm tailored the ideals mass-market apps. our fundamental assumption that app vendors hold most the power platform that caters apps, and that consensus protocol must designed from ground ensure that vendors' interests are aligned with each other and with the interests their users. for network governance, this means the protocol has work natively with blockchain virtualization, allows the governance each app separate from that other apps. beyond that, voting power distributed between known verifiers that are members federation, thus limiting the power held single voter. for real-time validation, require the protocol fast, immediately-final and for impractical for validators manipulate the selection and ordering transactions. the full details the algorithm are published separate peer-reviewed technical white paper. the primary requirements that dictated the design the algorithm include: finality consensus results the helix consensus algorithm provides immediate transaction finality. business applications, transaction finality highly desirable property, enabling stakeholders provide intended services immediately once the transaction executed. unlike the probabilistic finality transactions systems like bitcoin, stakeholders are not required wait for multiple blocks order gain sufficient confidence that transaction will not reversed. the finality property also enables efficient usage the state database. the state database can updated under consensus the closure each block and its authenticity can easily validated its root hash. keeping state database that always under consensus prevents the need for high bandwidth access large transaction journal and the need for additional checkpoint mechanisms. ordering opaque transactions important property consensus algorithms that rarely gets the attention deserves fairness. many algorithms rely full-nodes miners decide the fair order which new transactions are inserted into blocks, without defining rules method enforce fairness. furthermore, some networks give miners the freedom choose which transactions include block, thus creating preference for high-fee transactions and enabling censorship. the helix consensus algorithm uses ordering opaque transactions ensure fairness and censorship resistance. transactions are encrypted end-users before transmission and are only decrypted after consensus their ordering was reached. this mechanism guarantees clients receive fair service without need trust nodes provide them with direct incentives. separation ordering from validation pending encrypted transactions are first ordered, and only once consensus the ordering achieved, are the decrypted transactions executed, achieving consensus their validation. separation ordering from validation enables higher scalability and higher transaction rate. moreover, allows the system optimize the properties for each stage, such committee size the use encrypted data. fast consensus committees through rpos, grouping suggested nodes are randomly selected form consensus committee. this obtains the speed smaller committees while retaining the security the total number nodes the network. the amount communication consensus protocols highly dependent the number nodes participating the consensus. one hand, desire increase the number nodes order increase the decentralization and security. the other hand, want control the amount inter-node communication order reduce confirmation time and increase throughput. using randomly selected, unpredictable committees that take active part the creation each block allows the system increase the overall number nodes while maintaining upper bound communication overhead. efficient leader election randomized sort many byzantine fault tolerance algorithms, such pbft, are based rotation primary leader node. order ensure liveness, these algorithms require mechanisms http://pmg.csail.mit.edu/papers/osdi.pdf identify faulty leader and act for its deposition. these mechanisms are typically complex, rely timeouts and result slow transition cases where new leader election required. the transition overhead discourages frequent leader rotation resulting imbalance and suboptimal fairness. order efficiently and randomly elect different leaders for each consensus round, helix uses sortition for committee and leader election. for each block, the consensus nodes are sorted based hash the decrypted data the previously ordered block, which provides random and consistent selection. using the decryption that only available after the previous block has reached consensus prevents leader from manipulating the block data order control the next block committee members. the availability sorted list the committee members enables efficient fault tolerant communication protocols. these can reduce the amount network traffic and maximum propagation time, thus improving transaction rate and scalability. node reputation system the consensus algorithm operates byzantine environment, where some the nodes may faulty act maliciously. moreover, not all the consensus nodes are homogeneous and their performance responsiveness may vary. order rapidly identify faulty nodes, balance resources and incentivize nodes behave according the protocol, the helix algorithm maintains decentralized reputation system where every node scored its peers. node reputation affects the political power node, such its chance being included committees. reputation also assists economic incentivization, such payment fees operators. for example, node behaving manner discouraged the protocol will have its reputation score reduced accordingly and will able charge less for its services. service level agreement (sla) service level agreement (sla) industry standard service level agreement (sla) contract that describes the official commitment between service provider and client. describes the expected level service, the metrics used measure and the penalties case the agreed service level not achieved. slas are widely used for services provided between organizations even within organization. industry standard telecommunication, internet providers, online services and also cloud infrastructure service (iaas) providers such aws. separate sla typically defined for each the provided services. for example, iaas platform, each the core services (compute, storage, networking) would have their own sla. users may have choice between different slas, enabling different customers plan according their needs. for example, online consumer application may focus availability and consistent performance. alternatively, offline applications may prioritize average performance over consistency. sla protects both the customer and the service provider. prevents misunderstandings and misinterpretations setting expectations explicitly. moreover, sla helps customers predict the level received service advance and budget accordingly. for service providers, sla provides means estimate required resources and plan ahead. while slas are prevalent for applications running centralized iaas platforms, they are lacking for decentralized ones. the inability predict performance and costs reliably creates challenge for consumer brands transition decentralized businesses. cryptokitties case study cryptokitties social game operating top the ethereum platform that allows players adopt, raise, breed and trade virtual cats. while the kitties themselves are cute and delightful, the surge popularity the game and the amount traffic generated managed bring the ethereum network severe congestion, exceeding its capacity and demonstrating ethereum's extreme need for further scalability cryptokitties was launched the end november and immediately received high interest from users, pouring game-related transactions into the ethereum network. the days that followed the launch, game-related transactions became almost the total transaction volume ethereum. result, the amount unprocessed transactions rose about six-fold and gas transaction fees climbed accordingly. the resulting congestion ethereum has drawn attention from the crypto community and the media. many the articles covering the phenomena raised questions about the general scalability blockchain technology. dappss running top blockchain infrastructure cannot base performance and fee estimations whether not popular game will pop and congest the network. popular apps like cryptokitties should not viewed potential problem; popular decentralized applications showcase the potential blockchain technology and the impact can have everyday life. https://www.theatlas.com/charts/rktjkmzz http://www.bbc.com/news/technology- kin kik interactive launched their kin iplv production the apex the cryptokitties craze. result, their launch suffered from significant side effects the impact cryptokitties had ethereum. their main conclusion was that slas are sorely needed. consumer applications require environment with predictable performance, transaction rate, confirmation time and fee cost. spike increase traffic difficult handle any infrastructure, centralized not. however, infrastructure solution that applies sla rules and isolation among applications would have had minor impact existing applications and would more likely contain this impact agreed-upon boundaries. for example, isolation would assure surge cryptokitties traffic would not cause congestions other dapps. sla decentralized context one challenge providing sla open and decentralized platform that platform users don't have direct agreements with infrastructure providers, they don't have natural counterparty with which make such agreement. basic service the orbs platform provided shared resources, but shared resources get overloaded, the service level cannot guaranteed. the platform introduces service level mechanism allowing application developers using the platform acquire dedicated resources. default, the orbs platform can provide users interested dedicated resources with minimal quality-of-service enforced smart contract code. case the service provided falls below the requested service level, the user will automatically compensated the expense network nodes that did not contribute the processing performance expected from them. smart contact based scheme should sufficient for most consumer applications, alleviating the need for direct legally binding agreements between parties. some users the platform may require legally binding agreements, for example applications that need provide such sla their own users. such requirement arises, the orbs platform could provide mechanism which application developers purchase dedicated resources directly from operators network nodes. acquiring sufficient resources support the throughput required for the operation their application, developers can guarantee minimal service level for their users, backed user agreement. this can conducted marketplace where app developers and node operators can trade directly. such external agreements can facilitated the protocol indicating the usage agreement transaction alongside the signature used authorize it. course, acquisition dedicated resources does not come place decentralization. the acquired capacity will not provided directly the purchaser, but rather added the shared resource pool. so, practice, acquiring the resources establishes sla between the node operator and the shared pool back-to-back with sla between the shared pool and the https://medium.com/kinfoundation/insights-from-kin-initial-product-launch-caece#b purchaser. case the node operator fails deliver the required capacity when the system under load, compensation amount will automatically deducted from their fees. regardless, still possible that other providers the shared pool have vacant resources and the quality service with the purchaser can maintained. predictable fee models discussed the cryptokitties case study, one the main challenges witnessed during the launch kin kik interactive top ethereum unpredictability fees. kin took upon itself subsidize infrastructure costs for kik power users, order encourage end users adopt the token with minimal friction. the main problem, turned out, wasn't that the fees were high, but that they were impossible plan and budget for advance. cryptokitties traffic drove the price both ether and gas the network, imposing higher transaction fees end-users. under the orbs model, transaction fees are not handled the dapp developers. dapp developers purchase storage and processing capacity monthly subscription. monthly payments also bill for transaction fees monthly, rather than every transaction, thus saving computing power. budgeting crucial for the success consumer applications: product development expensive, and entrepreneurs companies want know advance, that their app succeeds, they will get return their investment. know that, they need weigh their operating costs. during the first few months the kin launch, ethereum fees changed full order magnitude. first, the usd price ether, notorious for being volatile, increased during the launch period. since fees are paid ether, this exchange rate fluctuation translated directly increase costs. second, ethereum fees are determined market forces, where transactions offering higher fees will processed first. during the kin launch, the ethereum network became congested, resulting higher bids from users across the network. get its transactions across, the kik app had offer significantly higher fees. the orbs platform designed provide pricing and fee model that predictable and can calculated advance. believe that such certainty fundamental requirement from platform. the industry standard from centralized infrastructure solutions, such aws, provide accurate pricing calculators. prices on-demand services and subscriptions are listed orbs tokens. the fact that services are listed orbs, token with floating exchange rate, creates risks for both service sellers and buyers. case exchange-rate fluctuations, orbs tokens may increase value, effectively raising the infrastructure costs orbs platform users, decrease value, possibly making the operation validating node non-economical. https://calculator.s.amazonaws.com/index.html additionally, operation expenditures are exposed price fluctuations the underlying infrastructure (storage, processing, network access etc), but their prices have tended decline gradually over time. for exchange-rate fluctuations, expect them slow-paced. economic models predict that high rate economic activity cryptocurrency attenuates exchange rate fluctuations, this should the case with orbs tokens, thanks the amount activity expected from the launch partners. accommodate potential price fluctuations and provide service cost stability users, on-demand service prices will normalized periodically match changes service costs. this done pegging the on-demand tariffs index storage and compute unit prices, published major third party cloud service providers such aws. the future, may possible replace the cloud services index with index dedicated capacity prices, these are determined supply and demand free market settings. such solution would more sustainable over time than cloud services index, because directly linked de-facto costs node operators, but its implementation requires some experience terms how the marketplace for dedicated capacity behaves. dedicated, reserved and on-demand resources one the challenges dynamic resource management the inherent trade-off between the ability share resources and the ability guarantee their availability. general, differentiate between three main schemes resource allocation: dedicated resources physical resource dedicated the application, providing maximum isolation, high predictability and visibility. dedicated resources are guaranteed always available for the customer. these resources must paid for, even when unused, making this scheme allocation the most expensive the three. reserved resources amount resources provisioned advanced. reserved resources may guaranteed under some restrictions prioritized over on-demand resources. reserved resources are provisioned advance and allow the service provider plan better, they are typically provided with significant discount over on-demand resources. on-demand resources resources are shared between applications and are allocated on-the-fly based availability. payment normally based actual usage. on-demand resources are recommended for low cost applications for application with unpredictable workloads. common strategy for application looking optimize allocate mix resources. for example, application may allocate dedicated resources guarantee the minimum performance required for basic operation, reserved resources meet typical workload and on-demand resources accommodate peak usage. https://papers.ssrn.com/sol/papers.cfm?abstract_id= virtual chains and blockchain virtualization blockchain virtualization implemented over the orbs platform provides the illusion dedicated blockchain for every app running over orbs while simultaneously running top shared physical node infrastructure, thus enjoying the same security and decentralization provided the shared environment. virtualization separates the resources available applications from the underlying physical ones. the properties blockchain virtualization include isolation, quality service, sla, control, governance, and elastic resource capacity. the majority blockchain implementations today, like ethereum, are shared, where multiple decentralized applications run side side without isolation, suffering from unpredictable performance. blockchain virtualization allows overcome these limitations without compromising the risks centralized private infrastructure. almost two decades ago, the industry started shift towards server virtualization. today, almost every consumer application runs virtual machines. similar shift started decade ago networking, where virtualization enabled large networks with flexible topologies run virtual networks over underlying shared infrastructure, providing the look and feel dedicated private network. expect the same industry shift take place the field blockchain. the term "virtualization" broadly describes layer abstraction that provides separation logical resource from the underlying physical delivery its function. with blockchain virtualization, each component the blockchain infrastructure such the consensus, the state and block storage, and the virtual machine (compute) layer are virtualized. this allows virtual consensus instances allocated with desired transaction confirmation rate that can differ across virtual chains. moreover, different virtual consensus instances can operate concurrently, scale gracefully and provide better utilization resources. unlike private blockchains, virtual consensus instances enjoy the security, resilience, decentralization and compliance benefits the underlying shared infrastructure. dedicated physical infrastructure first generation (bitcoin). each application runs over dedicated infrastructure and has its own separate blockchain. shared infrastructure second generation (ethereum). multiple applications run top shared infrastructure. the consensus, storage and compute services are shared across applications without isolation sla commitments. blockchain virtualization third generation (orbs). each dominant application runs separate virtual blockchain, relying virtual instances the consensus, storage and compute services, but sharing the same physical infrastructure. design principles blockchain virtualization addresses some the challenges that decentralized applications are facing and provides properties that resemble the familiar operation over centralized iaas cloud platforms. the full architecture details are published separate technical white paper. the design principles the solution include: service level agreement (sla) each virtual chain may guarantee service level meet its needs. adhering sla commitment reduce the performance impact other applications that share the same physical infrastructure. isolation the separation block storage and state each virtual chain creates isolation from faults and errors that occur other chains. for example, bug application's smart contract may lead the virtual chain fork but will not impact other virtual chains the network. sharding and scalability virtualization enables inherent sharding the consensus, and first level sharding for compute services and state storage. there synchronization dependency among different virtual chains, their consensus and storage can handled separately and run concurrently. governance while some configuration parameters have align across all virtual chains, many can controlled independently. this allows every virtual chain optimize and cater its application's needs and reduces governance conflicts between stakeholders. elastic capacity separation between physical and virtual resources allows virtual chain add resources demand order meet evolving usage patterns. moreover, elastic capacity allows temporary allocation resources during unexpected bursts. security and decentralization while virtual chains can dedicated single application, the multitude physical nodes operated independent organizations and applications are used practice process its consensus, capitalizing the security decentralization. cross virtual chain smart contracts while isolation important for transactions within application virtual chain, simple cross-chain interoperability proves useful. this requires synchronization all involved chains. such operations are slower and require more resources than standard operation. consumer scale consumer scale throughput and latency the first challenge when designing blockchain infrastructure for consumer scale meeting consumer expectations regarding throughput and latency. successful consumer products have the potential reach millions end users performing billions interactions. this massive scale regularly pushes traditional centralized infrastructure its limit, making the challenge for consensus-based decentralized infrastructure that much greater. throughput defined the number messages per second the network can accommodate. the field blockchain, the number often taken into account the number transactions per second that the network can confirm. traditional blockchain implementations, such the current production version ethereum, can confirm about dozen transactions per second. the gap significant, but this isn't surprising since decentralization comes price. for example, transactions over blockchain are notoriously difficult parallelize, because the result one transaction may depend another. performing transactions synchronously adds significant constraint and makes the implementation much harder scale out. moreover, contrary centralized systems, the consensus process involves number independent nodes that must reach agreement over every transaction. this process incurs significant overhead that centralized systems are not required deal with. latency defined the amount time takes process single message over the network. the field blockchain, the number often perceived users confirmation time if, for instance, netflix was consumer product the blockchain, then request stream video must confirmed immediately that the user would not have wait start enjoying the video. traditional blockchain implementations, such the current production version ethereum, take dozens seconds confirm transaction. this number often grows minutes even hours when the network becomes congested. the gap here not surprising well. first, performing transactions synchronously means transaction must wait line https://blog.ethereum.org////q-roundup/ https://etherscan.io/chart/blocktime and will only processed once every previous transaction has been processed. second, the consensus process between group independent nodes usually requires several roundtrips and constrained propagation time the network which increases more nodes participate. third, long block intervals are essential for security some consensus algorithms. models that rely eventual consensus, actual confirmation only reached when arbitrary number subsequent blocks are generated. failure meet consumer expectations both these regards threatens the very success the product. consumers are notorious for having low tolerance for bad user experience. their expectations are determined the experience they are used getting from current, centralized applications. reasonable expect that most consumers will not aware whether the application they use decentralized not. scalable fee models scalability system goes beyond raw network parameters like throughput and latency. according kin kik interactive, the main barrier scale when launching ethereum was infrastructure fees. the cac (customer acquisition cost) rose above transaction fees alone. quite clear that successful consumer app cannot flourish this environment. reaching ten million users would cost over million beyond the total funding the project. obvious solution reduce infrastructure fees dramatically. the high costs ethereum are closely linked its reliance pow consensus; pow, the operation costs grow proportionally the total value assets the network. case the value grows, the process becomes more wasteful maintain the proportion. addition, the number nodes the ethereum network that validate every transaction more than orders magnitude more than reasonably required distributed system. both these cost factors can eliminated moving away from pow and using committees reduce the number participants consensus. there's more fee scalability than reducing absolute amounts. network usage peaks may cause fees spiral out control. general, although market pricing seemingly the most efficient for determining fees, problematic when markets are too volatile. for instance, may cause entire apps experience outages. consider two popular consumer apps with millions users running side side when demand exceeds the network capacity. once the first app modifies its client and increases the transaction fee bid over the other, one instant its millions users will have precedence over those the other app, causing overwhelming outage for that app. https://medium.com/kin-contributors/kins-blockchain-considerations-ebdbaebd# https://medium.com/kinfoundation/insights-from-kin-initial-product-launch-caece https://www.ethernodes.org/network/ orbs, app developers can purchase reserved capacity advance, protecting themselves from price fluctuations; they can procure dedicated resources, isolating themselves from peaks demand; and they can use monthly subscriptions, reducing the overall exposure price volatility. another fee-related decision that takes significant toll over scalability charging fees per transaction the common approach taken general-purpose blockchains such ethereum. this imposes large overhead the network operation. processing each transaction requires writing the native token's ledger, making transactions harder shard (since even unrelated contracts need synchronized). addition, per-transaction billing adds overhead processing and storage, when compared with bulk subscriptions. different fee model that used reduce per transaction costs the industry minimum balance per wallet. this model used for example blockchain platforms like stellar. the system designed provide the necessary friction reduce spam and fake transaction abuse. once user has proven the platform that their wallet indeed "real", placing certain amount tokens this wallet this case, the platform lifts usage limitations and allows the user place large number transactions from this wallet for negligible fee. the problem with this approach that consumers are not likely commit front for service that they're not sure about. expecting end users pay the minimum balance fee will probably drop conversion below level that consumer products can accept. what happens usually, that consumer-facing digital services, the providers the decentralized apps, attempt subsidize these fees attract customers. once these fees are subsidized party, they lose their edge countering sybil attacks. even worse, they create new target for sybil attacks, enabling attackers pocket the subsidy addition any other gains. enabling subscription payments alternative per-transaction fees, the orbs platform limits the bounty one can find such sybil attack, and the costs can only laid the digital service who the only party power mitigate such attacks. ever-growing storage big cost factor current generation blockchain platforms the fact that resources often scale without correlation actual technical requirements. ethereum, for example, there would many full copies the blockchain storage the number full nodes, and about many processors running every piece smart contract code. while distributed and decentralized systems require certain level redundancy both execution and storage, the proper redundancy for them would likely constant, and most cases not more than dozen two. though fees are only paid the solver the pow puzzle, all miners expect the mining operation cash-flow positive, equilibrium the fees would offset the total costs for all miners. the architecture the orbs platform assures redundancy any component within determined bounds. storage cost generator another sense. orbs storage apis natively define expiration for data, well explicit expiration blockchain history. this ensures that data has defined (rather than infinite) time live, and greatly reduces storage costs magnitude expected cloud services. addition, relying consensus that provides finality allows the orbs platform maintain the state under consensus and removes the need for high bandwidth access block storage. light clients indicated our discussion about network entities consumers will access the network primarily using mobile apps and websites. these usage patterns are characterized extremely low availability resources, thus requiring thin client implementation that commonly referred the industry light client these clients not synchronize over the entire blockchain history like full fledged node and usually must maintain some relationship trust with the node serving them gateway. the need trust gateway node creates dependency the client the node's honest behavior and enables vulnerabilities such man the middle attacks. order mitigate the risks, some clients perform partial validation the state validating block headers. another common strategy validating data querying multiple nodes, which course doesn't scale well. the problem even more significant when client needs query smart contract, requires the client trust node that runs this smart contract its behalf. see value providing light clients that can operate with low level trust gateway node. this capability provided over the orbs platform using network-owned secrets going back the smart contract example, the client will provide the contract address and arguments gateway node, which will perform the query and return signed response. the light client will able validate the signature the network whole, thus reducing the level trust needed from the specific gateway. additional aspect the orbs platform that reduces the need for light client trust node that the protocol guarantees fairness transaction ordering. transmitting encrypted pre-consensus transactions that are opaque consensus nodes, can ensure that transactions will ordered for execution without censorship bias. separation ordering and validation the orbs platform relies multiple strategies increase scalability several orders magnitude order meet the requirements mass-market consumer-facing apps. beyond the careful selection consensus strategy that favors professional nodes that are incentivized towards maintaining high slas regarding connection speed, uptime and processing power, several other strategies are incorporated into the platform. the first strategy separating consensus ordering and validation. the validation process transactions and smart contracts expensive and incurs duplicate computational cost since has run over multiple nodes. when validation and ordering are performed sequentially, transaction throughput limited the overall time required for the completion both. separating the two creates pipeline thus increasing overall throughput. addition improvements throughput, validation ordered transactions easier problem which permits simpler schemes for concurrent computation. moreover, allows the network reduce the amount consensus nodes required for validation, thus promoting better resource utilization overall. many existing blockchain implementations perform validation and ordering sequentially. nodes normally execute all transactions first validate their output and only then propose block comprised entirely valid transactions. separation techniques are used few state-of-the-art implementations like hyperledger-fabric, where transaction first sent group endorsers that execute and return proposed responses. when enough endorser responses are collected, the transaction forwarded the consensus ordering service. performing validation before ordering works well for some applications. however, for http://hyperledger-fabric.readthedocs.io/en/release/arch-deep-dive.html consumer applications see benefit performing ordering first encrypted transactions, order guarantee fairness. efficient consensus via committees (randomized proof-of-stake) the second strategy used the orbs platform increase scalability involves reducing the number nodes directly participating the consensus process through the process randomized proof-of-stake (rpos). this important since most consensus algorithms, message complexity grows quadratically with the number nodes. plan scale the network large number validators important goal for security and decentralization certainly desirable that performance will remain within reasonable bounds. efficient method for reducing dependency the total number nodes relying smaller committees for consensus. randomize committee members between consensus rounds, e.g. every new block, can prevent attacker from knowing which nodes attack. this retains the security large network thousands nodes like ethereum with the speed smaller committees block producers akin eos. the randomization process must fulfill several properties make sure membership cannot manipulated advance else risk compromising the security the entire model. the process discussed detail the technical white paper for the elix consensus algorithm sharding via blockchain virtualization systems engineering, scaling systems cannot always achieved adding more resources, due bottlenecks that cannot grow easily. sharding technique for scaling out systems dividing them into smaller, nearly-independent parts called shards each small enough work well despite bottlenecks. blockchain virtualization constitutes intelligent form sharding, opposed the random sharding proposed for other systems. decentralized consensus unavoidable bottleneck, but the orbs platform decouples tenants different shards allowing the network scale out horizontally new tenant apps are added. does this isolating each dapp orbs onto its own virtual chain, segmenting end-users logically according their likelihood interact (in this case, those using the same dapp). contrary centralized infrastructure solutions like aws, simply adding resources usually not enough increase capacity. when the number products that use aws grows, increasing infrastructure capacity adding hardware like servers and network connections, usually enough meet demand since separate products run completely separately. this normally isn't the case with blockchain. transactions ethereum, for example, even different contracts, may affect one another and therefore must performed sequence. make matters worse, the number verifiers pow blockchains related the level security the blockchain enjoys; reducing unit sizes sharding reducing the level security the same proportion. significant efforts are invested research and development effective sharding techniques ethereum. this problem apparently much simpler solve the proposed architecture for orbs. permissioned consensus models, especially when employing consensus committees via rpos, not weaken its security properties when sharded. different decentralized apps are independent and work with different unrelated assets. this particularly true fees are paid bulk orbs proposes, rather than per transaction. sharding decentralized apps default, the architecture can revolve around parallelization. the orbs infrastructure designed support large number independent dapps running top it. while applications are independent from one another design, when running top this shared infrastructure they enjoy the benefits sharing resources, but still allow the system scale out thanks the natural sharding virtual chains. unlike other forms sharding development, orbs segments traffic those most likely interact with each other users the same dapps. the three types cost factors blockchain applications are consensus rounds, reads and writes state storage, and compute operations. consensus transactions different virtual chains can run independently long there are ordering dependencies among them. therefore, consensus different virtual chains can sharded and run concurrently separate resources. there ordering requirement, the ledgers virtual chains can also maintained independently. compute scheduling requires that dependent transactions will executed order. virtual chains have independent ordering, their computing can performed parallel. moreover, the isolation state for each virtual chain reduces the memory requirements its virtual machine. elastic capacity large-scale applications require ever-growing increase transaction rate, accounts and storage. moreover, additional applications use the infrastructure, there's need for higher resources capacity. transaction rate, compute, storage resources, large they may be, that are allocated initially, can meet future requirements. order meet future capacity recruitments, there need for elastic capacity. elastic capacity requires that the architecture will enable blockchain components such consensus, compute storage scale with the addition resources. moreover, on-the-fly updates resource allocation should performed without interruption the operation decentralized applications. when application requires additional resources centralized system, their capacity can adjusted system administrator providing additional resources, virtual physical. for decentralized infrastrastructure, there need for decentralized mechanism for resource allocation. addition, there need for incentive mechanism for the nodes provide the resources that are required the applications. consumer protection and regulation consumer protection and regulation regulatory evolution his book code lawrence lessig observes pattern which societies that emerged into free, unregulated and anarchic state, grow create the institutions, the structures and the constraints that rule them. lessig shows how this pattern applies the evolution the internet, and how invisible powers shape these institutions; left their own devices, those powers may end stifling the freedom and progress that could exist. bitcoin was introduced years after lessig published code and the crypto state has followed precisely the path laid out. first, blockchain presented itself architecture freedom: unregulatable, self-ordering, free from control. matures, new structures emerge, forming the architecture the ever-growing blockchain society. but the invisible hand forming this architecture not neutral. established companies and distinguished and important members the crypto community are the drivers much the innovation the industry; this may create force that will steer progress towards constructs that enable monopolistic control markets. governments, frequently out genuine desire protect users, use the crude power law shape the interfaces blockchain with the "old world"; this may steer progress towards constructs that enable more control the platform. the designers blockchain protocols assure the architecture we're forming one freedom and progress. established consumer brands through our work with design partners that have established brands outside the blockchain domain, observed the stark difference between their preferences those companies operating entirely inside it. typically, the former have millions existing users and ongoing business operations that are expected maintain their performance. result, they are particularly concerned with the risks regulatory uncertainty associated with blockchain operations, perceiving the possibility encounter with regulators one that puts their http://codev.cc/download+remix/lessig-codev.pdf existing business risk. blockchain companies, the other hand, tend see this uncertainty natural state for new industry let alone one that introduces disruptive business paradigms and ignore industry risk. not derogating from the importance pure blockchain companies and their remarkable contribution the ecosystem, believe wrong for platforms ignore the newcomers' concerns this case. for blockchain technologies become mainstream, vital that established companies enter the field with their existing user bases. these companies cannot afford the legal uncertainty, and platforms enable protocols that can comply with existing regulatory requirements. consumer protection suppose app developer wants their app enable users store transfer valuable assets. this could peer-to-peer payments, trade virtual goods, payment for services and on. the product engineering challenge not big: the developer can choose from plethora industrial grade transactional databases, and put together straightforward implementation ledger. but once the assets transferred are convertible cash, new types problems arise: this ledger becomes big target for thieves, crackers and embezzlers, and anybody with access risk being liable for damages criminal accusations. good protection against these risks elusive goal. some contexts, someone control the ledger can even make profit subtle and indirect methods, such delaying deleting transactions. for business whose core competency consumer applications, properly protecting its users big burden. many cases could force the company alter its procedures and structure ways that will make harder for about its usual business. most prefer avoid such features they're not their main product focus, integrate rd-party solutions provide such risky services. some extent, blockchain technologies have the potential lower the barrier provide such risky services, thanks its reliance secure cryptographic protocols and decentralization that mitigate completely neutralize that risk. decentralized ledger security decentralized implementations for ledger are easier secure because the burden securing the ledger shared between multiple independent entities. when there centralized ownership governance, single entity can control the ledger and jeopardize becomes compromised. simply put, nobody control the ledger, nobody able steal off it. addition, multiple parties constantly audit the integrity the ledger and can identify discrepancies from the agreed upon protocol. established pow platforms such bitcoin ethereum, typical transaction, alice sends some value bob transmitting transaction (signed with alice's private key) which ownership registration certain amount token will modified the shared ledger reflect the transfer. the signed transaction propagated across the peer-to-peer network and reaches miners who verify its validity, and valid, include block candidate. each miner then looks for solution the pow puzzle the block candidate. eventually, one miner will solve the puzzle and publish the closed block. other miners receive the closed block, check its validity, and, valid, use the previous block for their future block candidates. let's see whether validators are control the virtual currency, which means the validators have sufficient credentials authority execute unilaterally indefinitely prevent transactions for user. mallory, malicious miner, can simply prevent transaction for users not including their transactions the block candidates; however she cannot block indefinitely because other miners should eventually include their blocks. could she execute transaction unilaterally? without alice's private key, mallory cannot create valid proof that she has the authority move value bob. but mallory can create block candidate that includes invalid transaction moving alice's funds herself, and with some work can solve the pow puzzle and get that block closed and published. miners future blocks are supposed validate mallory's block and disqualify from being included the blockchain because contains invalid transaction. note that both cases, what limits mallory from wrongdoing knowing that undefined, random group future miners will not confirm her blocks' validity. the case bitcoin and ethereum, see two properties that together assure the validators are not control the ledger: the cryptographic protocol makes impossible for validators send transactions unilaterally, and the openness the network makes impossible for validators indefinitely prevent transactions. the cryptographic protocol defines what valid transactions are, deterministic and universally accepted fashion. this means that invalid transactions are included block, and the network consensus accept the block, then this consensus not following the protocol and essence not consensus the bitcoin ethereum network. allow ourselves use some circular logic, could say that bitcoin accepts invalid blocks, then it's not bitcoin anymore. the openness the network provided the ability anyone join the network validator. alice suspects her transactions are censored the network's validators, she may join the network validator and approve her own transaction. because her block valid, future block validators should include their chain (as said before, they're not following the protocol, it's not the same network). https://coincenter.org/entry/when-does-a-company-actually-control-customer-bitcoins censorship and front-running relying the openness the protocol for combating censorship transactions not ideal some real-world uses. though miners cannot indefinitely prevent user from transacting, miner closing block can arbitrarily choose leave transactions out, delaying them future block closed another miner. this power significant the hands large mining pool leaders. moreover, miners can choose the order which transactions are placed blocks, and even craft transactions that will manipulate them for financial gain. for example, suppose have smart contract implementing two-sided trading market which certain class assets are traded for currency. certain time, alice posts "bid" for asset, for maximum price tokens. bob posts "ask" for the same asset, for minimum price tokens. fair trading contract will split the spread and commit the trade for tokens, leaving both bob and alice with surplus tokens. but mallory, the miner who will close the block, can then add two more transactions: prepend bob's transaction with "bid" for maximum price tokens, and append with transaction containing "ask" with minimum price tokens. the new sequence transactions will cause the smart contract sell bob's asset mallory for tokens and then sell alice for leaving the entire surplus tokens her hands. similar scenario, albeit more complex setting, was proposed emin gun sirer theoretical attack against the bancor smart contract. however, maintain that the challenge combating manipulation miners can tackled with more adequate tools than openness. consensus protocol which validators agree the order transactions without knowing their contents could assure that validators don't have knowledge they can use for manipulations such censorship and front-running. such http://hackingdistributed.com////bancor-is-flawed/#front-running protocols, like honeybadger bft, were proposed. similar scheme used the helix protocol. compliance protocols common problem dealing with blockchain assets conformance the requirements regulation ownership, custodianship and transfers assets. one class international regulation that current cryptocurrency facilities struggle comply with anti-money-laundering regulation (aml). aml regulation has been adopted globally the past two decades and seen systemic measure combat crime and terrorism, eliminating the financial incentives for criminal actions and the funding terrorism. aml regulation that applies financial institutions requires that asset owners identified and their identity recorded, that sources money transfers verified, that large anomalous transfers money reported enforcement agencies, etc. value transfers cryptocurrency platforms not conform with aml standards financial institutions, which sometimes prevent the financial institution's ability register the transaction. for example, some institutions require deposits associated with payment and for the source the payment proven legal. virtual currencies which payers are anonymous, may hard even impossible prove the legitimacy the transaction. another asset class whose management entails regulatory requirements are securities. many jurisdictions, securities law requires ownership securities properly registered; ownership asset single individual exceeds threshold, may also require reporting. some assets may limited the ability owned individuals, such private companies whose equity can only shared small number unaccredited investors. intend develop framework interfaces and smart contracts allow representing common asset classes the blockchain, with the intention being compatible with local regulation, including protocols that allow trading assets between localities when the legal framework allows for that. privacy and aml interesting challenge brought about when designing new protocols for payment ledger that can used normal circumstances and interface with traditional financial institutions. the one hand, consumers expect high level privacy from financial platforms; blockchain platforms that aim major payments method for their users, this will require very high level privacy. many countries, this expectation made mandatory privacy laws. the other hand, existing aml regulation requires significant compromises user privacy. traditional financial institutions, records are kept discreetly and the institution https://eprint.iacr.org//.pdf can maintain users' privacy towards the public eye, while exposing all information enforcement agencies. important make the distinction between existing regulation and long-term enforcement strategy. many enforcement agencies acknowledge that the transparency that shared global ledger provides powerful tool for identifying anomalies, suspicious transactions and problematic accounts. regulations that force virtual currencies comply with procedures that make sense traditional banking diminish both the commercial and the enforcement advantages newer technologies. believe that time, regulators and enforcement agencies will prefer protocols that are more suited the nature virtual currencies and blockchain and are better safeguarding users' privacy. our intention make effort both fronts: design our payment protocols comply much possible with any existing regulation which may apply; and design novel, forward-looking protocols, that can provide users with superior privacy and law agencies with sufficient tools combat crime. the white chain one can expect, not all transactions and not all use cases will see value conforming the protocols. for example, apps that only use small payments that are exempt, apps that predate the release such protocols, are likely choose not adopt them. payment ledger may contain both types accounts and mix conforming and non-conforming transactions. and naturally, some businesses will limit their transactions only the "white-chain" strictly conformant accounts. modern deployment paradigms modern deployment paradigms network governance the past two decades, software engineering methods shifted away from long cycles design, implementation and testing ever-shorter cycles, the point where high-frequency fine-grained releases are the industry standard development back-end servers for mass-market apps. google, facebook, amazon (and particular aws) are the most prominent examples near-unanimous agreement that frequent software releases enable higher quality deployed software, fewer deployment problems, faster response bugs production and enable faster development. for decentralized apps, backend servers are replaced blockchain. however, governance models current-generation blockchain platforms are incompatible with methodologies that rely frequent, fine-grained software release cycles. mass-market applications developed for migrating into decentralized architecture must compromise their development methods, forcing them position disadvantage their competition with their centralized opponents. we're designing the orbs platform aim for continuous integration and continuous delivery the application back-end. that applies both backend endpoints, smart contracts, and the platform core. naturally, decentralization creates barriers quick acceptance changes. our approach combines fine-grained definitions the deployment procedures each component with economic incentives for quorum members testing and deploying changes rapidly, and disincentives for lingering, well for carelessness. fine-grained definition the procedures refers both the form the procedure (for example, implementation optimizations endpoint may tested and deployed every quorum member separately; changes protocols need consensus before any implementation deployed; and on) and the participants. the participants involved different governance procedures may vary based the nature the procedure. some changes need http://eclipsecon.org//sites/eclipsecon.org./files/-- google scale.pdf https://code.facebook.com/posts//rapid-release-at-massive-scale/ https://www.youtube.com/watch?v=dxkbrskoo accepted orbs federation members, some virtual chain's parties interest; some changes, mostly smart contracts relating decentralized applications, may require referendum the affected users, etc. the economic incentives for involvement are applied altering node's reputation scores, which determine the pricing could charge for its services. evergreen nodes important aspect high-frequency deployments that each change small enough quickly reviewed and tested, and perhaps more important, gain full confidence its robustness soon after used production. changes propagate quickly across the network from nodes that are risk-takers nodes that are relatively risk-averse, outdated code can deprecated early, reducing security risks and system complexity. this behavior not simple implement consensus-based decentralized systems where nodes are operated independent organizations. examining historic behavior systems like bitcoin not encouraging, where several proposed changes like segwitx have shown that consensus among participants not always simple achieve. the danger lack consensus this case that the network under risk splitting, where some nodes reject proposed protocol change while the others adopt and fork outside. projects like tezos have been discussing the question governance extensively and proposing several mechanisms make its process consensus more streamlined. believe that these mechanisms are important, but they are not enough the fundamental cohesion the network fragile. this usually the case when network politics create different pressure groups whose interests are misaligned and guided opposing incentives. taking the question fees example, miners are usually favor keeping fees high, naturally because fees provide their means compensation. users, the other hand, are usually favor reducing fees much possible, long they retain the same quality service. the most important design decision towards easing the consensus process eliminating opposing interests assembling the network from similar players that share the same general motivations and view the world. the case the orbs platform, the target audience the network consumer applications, choosing consensus algorithm that allows these same consumer applications become efficient miners, goes long way. further incentivization towards fast resolution governance questions can also applied through economic means. the node reputation system maintained the helix consensus algorithm allows for simple implementation incentives, since reputation score controls the voting power node the consensus process and the pricing could charge for its share the fees thereafter. want incentivize nodes vote quickly making new protocol version official. this can done reducing the reputation those who linger. want https://www.coindesk.com/x-called-off-bitcoin-hard-fork-suspended-lack-consensus/ https://www.tezos.com/static/papers/white_paper.pdf incentivize nodes upgrade the latest version the protocol which under consensus. this can done reducing the reputation those who fail slowly first, when the new protocol versions are still backwards compatible, but more aggressively when the older versions approach end life. the voting mechanisms for governance purposes the orbs platform are implemented smart contracts. another important mechanism for reducing friction providing outlet for changes that are important only for small part the network. consider modification that only required one the consumer brands participating the ecosystem. this change not important anyone else, even worse, impacts performance negative way for those who don't need it, its contributor may find difficult bring consensus. this issue resolved the orbs platform allowing protocol modifications apply specific virtual chain only. this case, the consumer app requiring the modification would limit its effects voluntary configuration that only enabled the dedicated virtual chain renting from other nodes. this would eliminate most the reasons for the other participants oppose the change. gradual migrations once core protocol change has been agreed upon, the question its methodology deployment still exists. migrating the entire network once, process often seen bitcoin protocol modifications, holds substantial risk. what happens unforeseen problems arise only after deployment production? almost impossible guarantee that all malfunctions will identified advance testing and simulation. almost all changes can deployed gradually, enabling the developers and chain administrators gain confidence its correctness based actual performance rather than estimates (reviews, simulations, tests, etc). using the method blue/green deployments, when changes are entering the production system, the entire network clones and directs traffic both the unchanged (blue) and changed (green) code. processed traffic can then considered either live testing; essentially every transaction processed both environments, but the "live" transactions are committed the permanent storage and the "test" transactions are only tested verify that they are correct and maintain set predetermined key performance indicators (kpis) compared the live environment. the deployment process starts with period which the entire "green" traffic testing, then split %-%, %-% and %-%. each such change can approved its developer consensus, after checking performance kpis both systems. another benefit this methodology the ability rollback and return the blue system case major malfunction discovered. this gradual process migration can also used order migrate from previous blockchain solution like ethereum orbs risk free manner. consider secondary token, https://martinfowler.com/bliki/bluegreendeployment.html tok, that was originally launched top the ethereum blockchain. let's assume that the time comes and tok ready migrate from ethereum orbs. naturally, performing full migration once holds risk. instead, propose softer, limited-risk migration. the tok client sdk used consumer apps that support the token will start mirroring all transactions performed end users orbs parallel ethereum. all writes will take place both blockchains, creating duplicate ledger for tok top the orbs platform. this ledger can constantly audited and compared the ethereum ledger which considered the source truth. initially, tok clients perform business decisions based the ethereum reads, but this can changed per user with runtime feature toggle. start the migration, this feature toggle switched for users. everything alright, and finally problem discovered, the feature toggle can switched back and all users will return making their business decisions based ethereum. since all writes are duplicated, there risk losing the ability rollback. upgradable contracts once deployed, smart contracts are immutable nature and cannot updated. after all, what's the point contract one the parties can change single-handedly after has been signed? although this behavior feature smart contracts, immutability poses lot practical concerns. developers are known make mistakes and every piece software always has another bug yet discovered. what happens such bug discovered immutable smart contract? this problem similar nature the governance problem updating protocol versions the node codebase. we've resolved the questions protocol updates using consensus. once majority parties has agreed upgrade the protocol new version, can start enforcing the upgrade throughout the network. makes sense resolve the upgrades smart contacts similar fashion. smart contracts over the orbs platform are encouraged employ upgrade strategy. this strategy implemented another smart contact and controls the process through which the contract can upgraded. contracts for secondary tokens can elect upgrade based stake-weighted vote all holders the token. multi chain hybrids practical design concerns real-world decentralized applications often require that base the complete solution multiple blockchain infrastructures running side side. consider the following challenge we've met while collaborating kin with kik interactive. the kin token was launched the ethereum blockchain, which was the time the facto standard for raising funds part ico (initial coin offering). ethereum has great ecosystem and secondary tokens based its erc standard are easily integrated into exchanges, third party wallets and hardware wallets such trezor. the other hand, ethereum also has severe limitations transaction scale caused high fees, network congestion and low transaction throughput. the inability scale kin top ethereum has led the project consider migration the tokens another blockchain infrastructure. the difficulty with this plan was that the scalable blockchain solutions considered alternative ethereum did not have the same well integrated ecosystem. performing one-way migration them would jeopardize the ability some parties integrate with the token. instead, better strategy would base the kin token hybrid solution two blockchains. the first blockchain would ethereum, used primarily for its extensive ecosystem integrations. the second blockchain would scalable solution like the orbs platform. these would two different implementations the same token. users would able perform swap tokens between the two implementations and the total amount circulating tokens both implementations would always equal the original number tokens created during the kin ico. polyglot cross-chain contracts seems that often better strategy one-way migration between token implementations the addition new implementation parallel. this would provide with hybrid solution relying multiple different blockchains the same time. strategy such this introduces significant technological challenge how would combine multiple different blockchains into one solution? how would they communicate? traditionally, smart contracts are limited their ability access external sources and can only rely data existing the blockchain itself. such the case with ethereum contracts for example. this limitation not surprising because smart contracts operate within closed system trust. external data, provided entity often labeled oracle simply cannot trusted like the data stored chain. the orbs platform overcomes this inherent limitation smart contracts introducing cross-chain contracts these smart contracts running top orbs can read data from other blockchains secure and trusted way. just like smart contract can read variables from the secure on-chain orbs storage, the smart contract can also read variable from ethereum. this expansion opens exciting new class decentralized applications. applications that can span multiple blockchains and choose the most appropriate one hold every piece its data. another interesting ability made possible with this technology seamlessly import smart contracts developed originally for other blockchains directly into the orbs platform. consider system smart contracts originally designed for ethereum. normally, migrate another blockchain infrastructure would require complete rewrite. the orbs platform able run these existing smart contracts almost is. accordingly, the orbs platform designed support the execution multiple languages smart contracts. the most popular smart contract language today for smart contracts ethereum solidity. decentralized applications become mainstream, forcing engineers transition specialized languages for smart contract development creates undeniable friction. orbs' design supports the development smart contracts using common and widespread languages such python, java and javascript, thus lowering the barrier development for established brands even further. because orbs has lower redundancy smart contract execution okay for the accounting loose compared platforms like ethereum. this means that not limited languages that compile custom bytecodes such solidity and evm, which can bill code execution accurate the opcode level. https://solidity.readthedocs.io/en/develop/ designing for consumers designing for consumers brands and trust our discussion about consensus have observed that cannot practically design decentralized system for consumers that completely trustless. this different from the decentralized ideal behind systems like bitcoin, where end users are theoretically expected verify that the client software they use conforms the protocol reviewing its source code and compiling themselves. even end user downloads precompiled binary, they are least theoretically expected validate that the signature this binary matches the community consensus. can assume that the typical consumer uneducated about cryptocurrencies and these extreme security measures. they are probably not looking use decentralized consumer products for the idealistic benefits that decentralization and trustlessness provide. decentralization design choice made applications. consumers that are using application are normally unaware whether the application decentralized not. can therefore assume that the relationship between consumer and the brand providing the product that the consumer using involves trust such brand would abuse the trust placed its users, for example leaking secrets like private keys that users must provide client apps, its image and reputation will suffer the consequences addition any legal ramifications. mobile and web clients the delivery mechanisms that can bring consumer product today the hands millions end users are agnostic whether this product decentralized not. consumers are using mobile and web clients almost exclusively. this different from the primary vehicle for systems like bitcoin, where end users are theoretically expected run client that also full fledged node. only after synchronizing the entire block history can the client truly trust that its perception state accurate. mobile and web clients not have this privilege. storing the entire block history requires significant storage space and the synchronization process takes long time and ample bandwidth. the resource constraints mobile and web clients are too severe make this practical. therefore, when designing blockchain system for consumers, can only rely what the industry refers light clients such clients connect one more full nodes which they can query read blockchain data send transactions through. though they employ some heuristic proofs the validity the data they are getting, they expect have certain degree trust with the nodes they connect to. orbs mechanisms such ordering opaque transactions and network-owned secrets simplify the light client protocol and can significantly reduce the required level trust. consumer patterns network access consumers also have typical pattern network access that may influence infrastructure design. consumers are likely access single account from multiple devices concurrently. for example, the they may rely their mobile phone access app, the office rely their laptop and home use tablet access the same app. certain design decisions the infrastructure layer can make the platform incompatible with such patterns. consider the use nonce transactions ethereum. the purpose the nonce assure uniqueness transaction and make sure the network does not process the same transaction twice. ethereum clients need put sequential numbering the nonce field that increments every transaction sent from account. ethereum relies this numbering and will not process transaction until its predecessor confirmed. this mechanism not suited for use multiple devices concurrently, the sequence numbering needs synchronized across devices. are working avoid this complication entirely using non-sequential mechanism add uniqueness transactions. this comes cost limiting client transactions explicit time window execution, which important feature itself, giving end users bound how long transaction can wait before being either processed discarded. another common access pattern consumers the transmission multiple requests parallel instead one after the other. consider peer-to-peer advertising platform where group chat user shares advertisement with the entire group. the user needs reward all group members for receiving the content, they would probably transmit multiple transactions parallel. ethereum, confirmation time for each transaction can take seconds. how the nonce calculated this case? standard implementation would increment the nonce the client-side and send all transactions parallel with sequential nonce numbers. now, assume that one the transactions failed for some reason. the platform would not process the subsequent transactions because transaction having the first unused nonce https://ethereum.stackexchange.com/questions//what-are-the-ethereum-disk-space-needs https://etherscan.io/chart/blocktime was not confirmed. this edge condition once again circumvented the orbs platform using non-sequential mechanism. infrastructure implications churn churn, short for churn rate measure the number individuals items moving out collective group over specific period. when applied consumer applications, churn refers the proportion end users who leave and stop using the product during given time period. this may due variety reasons like customer dissatisfaction, better alternatives from competition, disappearance amongst the noise and generally shrinking attention span. churn fact life the consumer space. not uncommon for consumer products lose the vast majority their user base churn. figures like all registered users are active given month are within the norm and illustrate just how severe the phenomenon is. when the decentralized app being developed involves token that consumers use, churn likely dictate how distribution behaves over time. the number users lost churn increases monotonously, does the number tokens left inaccessible inside the wallets that they possessed. since the supply such tokens often limited, may discover eventually that the majority tokens end locked forever out circulation. this problematic from another aspect well, since the bootstrap such token economies usually relies stimulus the form subsidies where large amounts tokens are distributed groups consumers order spark critical mass use. may discover that the bulk the amount used for subsidies ends the hands users who will never use it. careful design the token protocol layer can long way towards dealing with churn gracefully. we'll show this with simplified example. suppose that the token smart contracts allow recycling introductory subsidies back the subsidizing body, case the wallet was not used the months following the subsidy. this behavior, although crude, will eliminate the problem churn quite effectively. normally, giving someone the permission reclaim funds out user's account creates risk embezzlement. but this case the rules for recycling are clear and transparent, and enforced decentralized smart contract, nobody control the users' funds. consumer apps and open source blockchain solutions, such the orbs platform, are normally open source and have permissive intellectual property policy. nevertheless, there are dozens different open source licenses and the particular choice license may affect how applicable for the consumer app use case. consumer brands can very particular about their use open source licenses. any open source technology used these brands must careful allow them protect their assets, particularly, reliance the gpl family open source licenses may impact brand's ability incorporate this code closed source asset such its mobile app. this family licenses popular many blockchain projects like ethereum. gpl licenses are copyleft meaning that software that derived from gpl-licensed code required adopt the same license. closed source app, for example, using gpl-licensed library, risk being required open source itself legal liability that most brands will not accept. the orbs platform has clear open source policy and relies within its ecosystem only the mit license. this one the most permissive open source licenses available which explicitly makes impact consumer apps and their commercial assets. unlike gpl, mit-licensed software can used commercial closed source applications without any limitation. the problem private keys cryptocurrencies have yet penetrate the mainstream consumer market. for comparison, facebook, one the top consumer products today, has reach over billion users worldwide. the total number users worldwide who have ever operated cryptocurrency wallet only estimated under million. this gap stems from multitude reasons, one which severe technical barrier entry. access cryptocurrency wallet synonymous with knowing single secret the wallet's private key this key immutable and cannot recovered lost. order protect the wallet against attempts guess the key with brute force, high degree entropy commonly used; bitcoin wallets, for example, use bit keys. safeguarding such private keys from being stolen lost not easy task. consumers are not capable maintaining the procedures required manage and protect strong cryptographic keys large organizations do, and only moderately well with simple authentication methods, such passwords, pin codes, recovery questions, biometrics etc. simple authentications themselves are not safe for protecting valuable assets, such identities large funds, and are usually used part authentication protocol that includes actions the "real world", such delays, fallback between different authentication challenges (for example, try pin code, fall back security questions), multi-factor authentication, access notifications, timelocks, and more. current technology only enables such protocols executed centralized repositories (i.e. bank's computer system can enforce delay between failed pin code entry attempts, but decentralized blockchains cannot). https://en.wikipedia.org/wiki/gnu_general_public_license https://en.wikipedia.org/wiki/mit_license https://newsroom.fb.com/company-info/ http://jbs.cam.ac.uk/faculty-research/centres/alternative-finance/publications/global-cryptocurrency decentralized secret bearing one the unique novelties the orbs platform that enables the platform store and use secrets, particularly secret cryptographic keys. this done using novel protocols that make use secret sharing and threshold cryptography, enabling operations like signing decrypting document with the decentrally-stored key. this functionality opens the door plethora interesting business cases: signing blockchain's state with single canonical signature, signing transactions executed other blockchains, notarizing the state other (connected) blockchains, signing api calls for rd-party infrastructure, and many more. interesting use-case for decentralized secret bearing saving cryptographically-strong private keys decentralized way and enforcing secure authentication protocol which may include delays, multi-factor authentication and other methods popular with consumers decentralized platform. full details about this mechanism are published separate technical white paper. the orbs federation the orbs federation the network built around the orbs platform envisioned community ecosystem participants, primarily comprised organizations that make the target audience orbs decentralized consumer businesses and established consumer brands transitioning into blockchain. for example, organizations like pumapay, zinc kin and companies like ironsource and kik interactive. this collection organizations and companies aligned independent but equal members federation the primary roles members the orbs federation include: operating consensus nodes the network and actively participating the consensus process. contributing the open source development orbs and evolving the platform over time their own requirements come light. providing decentralized governance for the platform such reaching consensus over core updates the protocol. pre-launch design partners the orbs platform initially designed requirements-driven approach through close work with set design partners the production requirements these design partners shape the iterative process which the system designed. the initial design partners also act the founding members the orbs federation and operate the first set consensus nodes. this first set also acts the first customers the platform and the developers the first decentralized applications that run top it. the collaboration process with design partners designed completely open and transparent. all insights learned the process are published public channels for the benefit the orbs community. the orbs reference implementation codebase open source project maintained publicly github. the code provided with the permissive mit license https://github.com/orbs-network for free public use. new members the orbs ecosystem are encouraged contribute the codebase and become active members the orbs federation running nodes. the role the orbs project kicking off this new ecosystem. the initial design proposed the orbs community publishing this position paper and set technical white papers, and providing the first reference open source implementation for the community build on. when the protocol well defined, the platform can launch. this initial design also provides the scaffold for decentralized governance which will steer the platform once the federation formed. true its decentralized nature, the platform will not governed single entity like the orbs project and its founding team. beyond leadership role the early days pre-launch, the orbs project will not involved ongoing governance but will continue research and development the field, like other participants, and propose protocol modifications for the federation evaluate. governance the model federation has been established the industry and demonstrated principle projects like stellar and ripple. contrary consortium where centralized governing body adds each chosen member the collective, federation has point centralized governance. organizations and companies can join the collective approaching some the existing members and asking them for sponsorship. once new member designated other members, they gain their initial status. one the primary roles federation member operating consensus node. consensus node elected participate the consensus process virtual chain random times; one consensus node may find itself participating the consensus various virtual chains any minute. the measure node's influence over consensus and its ability validate transactions governed the protocol. the protocol incentivizes several behaviors for nodes, such maintaining high sla, which manifests during the consensus process the node's reputation and defined decentralized manner the consensus nodes the network. the reputation also takes into account each node's participation evaluating and agreeing protocol upgrades. this enables the orbs platform keep evolving and provide its users with state-of-the-art blockchain technologies. note: this position paper provides initial summary certain business and technology essentials underlying the orbs project and platform. this document expected evolve over time, the project and the development the orbs platform proceeds, and the orbs project may post modifications, revisions and/or updated drafts from time time. definitions this position paper uses certain defined terms, follows "orbs ecosystem" general term referring combination the orbs platform providing core services, together with third party infrastructure developers providing services over the infrastructure marketplace; described the section labeled "the orbs ecosystem". "orbs federation" collection ecosystem participants providing decentralized governance the platform and operating consensus nodes; described the section labeled "the orbs federation". "orbs platform" "orbs" decentralized network governed the orbs federation providing infrastructure service applications; described the section labeled "the orbs platform". "orbs project" "we" orbs ltd. and its shareholders, officers, employees and consultants, constituting together the founding team writing this paper and initially publishing the protocol. "orbs token" "orbs token" the token fueling the platform which used primarily application developers pay for infrastructure fees; described the section labeled "the orbs token". legal disclaimer this position paper for information purposes only and may subject change. cannot guarantee the accuracy the statements made conclusions reached this position paper and expressly disclaim all representations and warranties (whether express implied statute otherwise) whatsoever, including but not limited to: any representations warranties relating merchantability, fitness for particular purpose, suitability, title non-infringement; that the contents this document are accurate and free from any errors; and that such contents not infringe any third party rights. shall have liability for losses damages (whether direct, indirect, consequential any other kind loss damage) arising out the use, reference reliance the contents this position paper, even advised the possibility damages arising. this position paper may contain references third party data and industry publications. far are aware, the information reproduced this position paper accurate and that the estimates and assumptions contained herein are reasonable. however, offer assurances the accuracy completeness this data. although information and data reproduced this position paper are believed have been obtained from reliable sources, have not independently verified any the information data from third party sources referred this position paper ascertained the underlying assumptions relied upon such sources. the information contained this position paper intended for informative purposes only and shall not form the basis of, relied upon connection with, any offer commitment whatsoever any jurisdiction, including (without limitation) the united states the state israel. the information contained herein shall not constitute form part of, and should not construed as, any offer for sale subscription of, solicitation any offer buy subscribe for tokens issued orbs ltd. any products services offered orbs ltd. any offer acquire orbs tokens will made, and any customer should make his its purchase decision, solely the basis the information that will contained the applicable agreement made between orbs ltd. and eligible token purchasers. promises future performance value are will made with respect the orbs platform and/or orbs tokens, including promise inherent value, promise any payments, and guarantee that the orbs platform and/or orbs tokens will hold any particular value. unless prospective participants fully understand and accept the nature the orbs platform and the potential risks associated with the use the orbs platform and the acquisition, storage and transfer orbs tokens, they should not use the orbs platform purchase, acquire otherwise obtain use any orbs tokens. this position paper does not constitute prospectus disclosure document and not offer sell, nor the solicitation any offer buy any investment financial instrument any jurisdiction. orbs tokens should not acquired for speculative investment purposes with the expectation making investment return. regulatory authority has examined approved any the information set out this position paper. such action has will taken under the laws, regulatory requirements rules any jurisdiction. the publication, distribution dissemination this position paper does not imply that applicable laws regulatory requirements have been complied with. the orbs platform and/or orbs tokens could impacted regulatory action, including potential restrictions the ownership, use, possession such tokens. regulators other competent authorities may demand that revise the mechanics the token allocation and/or the functionality orbs platform order comply with regulatory requirements other governmental business obligations. nevertheless, believe are taking commercially reasonable steps ensure that the operation the orbs platform and the token allocation mechanics not violate applicable laws and regulations. this position paper contains forward-looking statements information (collectively "forward-looking statements") that relate our current expectations future events. some cases, these forward-looking statements can identified words phrases such "may", "will", "expect", "anticipate", "aim", "estimate", "intend", "plan", "seek", "believe", "potential", "continue", "is/are likely to" the negative these terms, other similar expressions intended identify forward-looking statements. have based these forward-looking statements current projections about future events and financial trends that believe are relevant the operation the orbs platform. addition statements relating the matters set out here, this position paper contains forward-looking statements related the orbs platform's proposed operating model. the model speaks our objectives only, and not forecast, projection prediction future results operations. the platform operation and development reliant the formation the orbs federation. are unable guarantee that sufficient members will join the federation support and realize the intended design its entirety. forward-looking statements are based certain assumptions and analysis made orbs project team light its experience and perception historical trends, current conditions and expected future developments and other factors believes are appropriate, and are subject risks and uncertainties. although the forward-looking statements contained this position paper are based upon what believe are reasonable assumptions, there are risks, uncertainties, assumptions, and other factors which could cause our actual results, performances, achievements and/or experiences differ materially from the expectations expressed, implied, perceived forward-looking statements. given such risks, you should not place undue reliance these forward-looking statements.