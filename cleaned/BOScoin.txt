the boscoin platform white paper initial version: current version: han-kyul park, changki park, yezune choi, jake hyunduk choi boscoin, the self-evolving cryptocurrency platform abstract. the boscoin platform decentralized self-evolving cryptocurrency that built trust contracts and embedded decision making system called the congress network. trust contracts are securely executable contracts based protocol layer called owlchain, which consists the web ontology language and the timed automata language. trust contracts aim overcome the issues regarding non-decidable smart contracts using more contained and comprehensible programming framework which provides secure and decidable transactions contracts. the congress network the decision making body the boscoin platform which solves governance issues arising decentralized organizations. through clearly defined and automated governance system, aim continuously develop the community and software into more anti-fragile ecosystem. introduction background the blockchain was first conceptualized satoshi nakamoto's white paper "bitcoin: peer-to-peer electronic cash system" the technology was implemented the following year the central technology behind bitcoin. bitcoin uses blockchain technology financial transaction ledger where individuals publicly record transfers currency. bitcoin was the first its kind use the blockchain successfully solve the double spending problem. despite the absence centralized administrator, bitcoin has successfully supported over million peer-to-peer transactions and now has market capitalization more than billion dollars. following the success bitcoin, there have been numerous systems leveraging blockchain technology. there are hundreds competing cryptocurrencies and according recent ibm report, more than banks are investing blockchain technology. currency transactions are the most common applications blockchain technology. however, some groups are also attempting transfer and manage other kinds digital assets using this technology, such financial products and services, logistics information, property satoshi nakamoto, bitcoin: peer-to-peer electronic cash system https://bitcoin.org/bitcoin.pdf leading the pack blockchain banking: trailblazers set the pace https://www-.ibm.com/common/ssi/cgi-bin/ssialias?htmlfid=gbpusen& ownership, identity etc. the cryptocurrency ethereum gained lot traction and aims provide smart contracts the blockchain: blockchain with built-in fully fledged turing-complete programming language that can used create 'contracts' that can used encode arbitrary state transition functions." the goal allow users write any kind program (or contract) onto the blockchain. similar bitcoin, ethereum uses the blockchain and consensus mechanism ensure that malicious node attempts forge the content the contract, the forged contract will eventually removed from the blockchain. bitcoin ensures the integrity the amount bitcoin being transferred between accounts, ethereum must similarly ensure the integrity the contract being executed. smart contracts have the potential paradigm shift the development decentralized applications. programs that are not held centralized server, yet can run the same logic anywhere. smart contracts can used develop: decentralized marketplaces, currency exchange platforms, and projects like golem which aim create decentralized worldwide super-computer. however, the freedom and flexibility provided the turing-complete language which ethereum based the cause for several serious problems. believe that using turing-complete language may inappropriate for writing smart contracts they are inherently undecidable. due this undecidability issue, smart contract based turing-complete language will make difficult know what smart contract will before running it. ethereum attempts overcome this issue applying cost computational work (gas), however the inherent issue the language used program and execute smart contracts has inevitably led series security vulnerabilities and outright failed projects such the dao. proposal trust contracts. boscoin's approach the problem apply domain-specific language which can read easily the average user and can demonstrate mathematically that the smart contract's implementation computationally decidable. thus, with boscoin aim develop platform for trust contracts: securely executable contracts based owlchain technology. additionally, through boscoin attempt solve number commonly recurring issues vitalik buterin, ethereum whitepaper https://github.com/ethereum/wiki/wiki/white-paper golem https://golem.network hodges, andrew alan turing: the enigma, london: burnett books, atzei, bartoletti, cimoli, survey attacks ethereum smart contracts https://eprint.iacr.org//.pdf the dao https://slock.it/dao.html related cryptocurrencies. governance. decentralized systems lack systematic decision making process. there have been several cases the cryptocurrency space, where this led confusion and substantial financial losses. boscoin constitutes governance system whereby node operators referred the congress network can participate creating and voting proposals order continuously improve the software and ecosystem. system changing proposals that are voted the congress network and are accepted, are considered have reached social consensus and the changes the proposal are automatically applied the network. another type proposal funding proposal. these proposals are requests for funds from the commons budget and they are also voted upon the congress network. boscoin sets aside large public budget specifically for the development the boscoin ecosystem through these proposals. anti-centralizing consensus algorithm. cryptocurrencies like bitcoin, that only use proof-of-work(pow) type consensus protocol, are affected issues arising from the non-separation economic and political incentives. buying more mining hardware, user can attain more control the blockchain(political) and also increase their mining income(economic). boscoin overcomes this issue using consensus mechanism(explained more detail below) that separates economic incentives from political ones. attaining either political power economical wealth requires investment into the system. user can either acquire more votes increasing the number nodes(one operational node equals one congressional vote) user can invest freezing and confirmation rewards(rewards relative the amount coins locked away node) maximize mining income. application ecosystem. decentralized currencies many cases tend become speculative islands with limited real applications. believe the value currency intrinsically tied how useful is, the boscoin team will release the coin with two ready-made apps that use boscoin. the applications stardaq and delicracy have already been built and will not only increase the transactional value the coin, but will also help acquire new users. features bitcoin ethereum boscoin coins bitcoin ether boscoin core features financial transactions (bitcoin script) smart contracts (solidity, serpent, etc) trust contracts (owl profiles, sdlang, tal) decision making process non-systematic non-systematic democratic congress (one node one vote) consensus algorithm proof work current: proof work future: casper(?) modified fba(federated byzantine agreement) transaction speed tx/sec tx/sec tx/sec (target) block interval minutes seconds seconds block size dynamic dynamic fig comparison cryptocurrencies trust contracts overview boscoin aims use the owlchain technology which consists the web ontology language(owl) and timed automata language(tal). this architecture designed expand expressive power while retaining decidability support secure and precise execution contracts. these owlchain based contracts the boscoin blockchain are called trust contracts features smart contracts ricardian contracts trust contracts (ethereum) (rcev corda) (boscoin) programming language lll, serpent, solidity ricardian contract pure functions owlchain (owl* tal*) decidability undecidable with gas(fee) undecidable (rd party evaluation) decidable(tal) blockchain type permission-less permission permission-less consensus pow* various mfba* contract inference none none owl reasoning owl*: web ontology language tal*: timed automata language pow*: proof work mfba*: modified federated byzantine agreement fig comparison blockchain-based contracts background there are two primary approaches developing contracts the blockchain. one through using flexible programming language virtual machine, the other use slightly less flexible but decidable domain-specific language. the boscoin team decided with the later. unlike cryptocurrencies based virtual machines, the inference engine based the semantic web technology, possible infer information from the code before the contract run. the contract decidable and the outcome the contract clearly known. this key concept building secure and sustainable currency with contract features. although ethereum attempted solve this issue using market mechanisms and applying price complexity, believe that the stricter owl and tal approach will provide more secure environment for contracts the blockchain. web ontology language reference https://www.w.org/tr/owl-ref development building upon standard web technologies such html, http, rdf and owl which were used serve web pages, these technologies can extended share information way that can predictably read computers. both owl and rdf can used create unambiguous structured data taxonomies. using these characteristics ian grigg proposed the concept the ricardian contracts; contracts which are linked every aspect payment system. despite, both owl and rdf displaying similar characteristics, rdf standards currently supports p-time completeness. using reasoners, tools that infer logical consequences from set previously asserted facts axioms, certain versions the owl standard promise p-time complexity. this means the amount time takes run contract can pre-determined. this feature key reason why owl was selected the language build trust contracts. owl dl(description logic) sublanguage owl, "designed provide the maximum expressiveness possible while retaining computational completeness." owl operates large dictionary predefined vocabularies and taxonomies like the iso specification. boscoin specific features such transactions will not provided the owl dictionaries, these vocabularies and taxonomies need called from outside the contract. solve this technical issue, propose create designated namespace domain the blockchain which can call non-standard primitive types(taxonomies) from the contract. non-standard primitive types will added conservatively order sustain the owl's decidability and taxonomic complexity features. fig boscoin transfer example another issue with regards turing-complete contracts blockchains that turing-complete languages are difficult read non-technical people. 'code were law', the code should comprehensible all the parties involved. currently, currencies using turing-complete languages for contracts can only audited those that can read code. using the owl standard and mapping the syntax languages like sdlang, aim allow anyone read and precisely comprehend what contract meant do. owl web ontology language https://www.w.org/tr/owl-features/ simple declarative language, https://sdlang.org/ fig trust contract example the timed automata language concept based off andrychowicz's paper, 'modeling bitcoin contracts timed automata'. tal will used model the programming logic used trust contract. the html and javascript pairing similar owl and tal. owl provides the structure the data and tal acts operator. operators programming languages are constructs that certain function, such adding, subtracting and comparisons. owl provides the information, and tal tells the computer what with the data. tal slightly different other programming languages there global time factor. this means contracts can tested for how long they take beforehand. running andrychowicz, dziembowski, malinowski and mazurek, modeling bitcoin contracts timed automata lecture notes computer science formal modeling and analysis timed systems, https://arxiv.org/pdf/.v.pdf automated tests all the different possible outcomes beforehand, can promise platform with bug-free contracts the blockchain. the details the above concepts are further explored the technical paper. consensus algorithm overview the consensus algorithm core any blockchain based currency system. the algorithm attempts answer the question, 'how can prove with confidence that all distributed databases hold the same set information?' response this question, boscoin uses modified federated byzantine agreement(mfba) consensus algorithm based stellar's consensus protocol(fba). consensus algorithm decentralized control low latency proof work tendermint flexible trust asymptotic security byzantine agreement fba[] mfba[] (boscoin protocol) governance features federated byzantine agreement modified federated byzantine agreement fig comparison consensus algorithms mazieres defines key features the federated byzantine agreement protocol: decentralized control. anyone able participate and central authority dictates whose approval required for consensus. low latency. practice, nodes can reach consensus timescales humans expect for web payment transactions--i.e., few seconds most. david mazieres, stellar consensus protocol https://www.stellar.org/papers/stellar-consensus-protocol.pdf ibid. flexible trust. users have the freedom trust any combination parties they see fit. for example, small non-profit may play key role keeping much larger institutions honest. asymptotic security. safety rests digital signatures and hash families whose parameters can realistically tuned protect against adversaries with unimaginably vast computing power. governance features. voting and features that are related operating the congress are additional features embedded into the protocol. federated byzantine agreement consensus algorithm bitcoin's consensus mechanism and the traditional byzantine agreement based protocols require unanimous agreement all participants the network. however, the federated byzantine agreement(fba) does not require unanimous agreement all participants and additionally each node can choose which nodes trust. this results faster transactions without losing integrity the financial network and allowing for organic growth the network. fba implemented this type non-unanimous consensus mechanism grouping nodes into teams (also known quorums). when transaction made, the information sent all those the group. rather than waiting for the whole network agree the state the data, node hears the same message from sufficient number trusted nodes, the node assumes the information correct. the overlapping nodes, loose federation nodes, results different nodes that have different sets teams agree the same transactions. this leads system-wide consensus, without requiring unanimous agreement for each transaction block. situations where nodes are disagreement over fraudulent transaction, there ballot system embedded into the system overcome such issues. further technical details regarding fba can found stellar's consensus protocol paper. how the modified federated byzantine agreement(mfba) algorithm different? addition fba, the boscoin consensus protocol also applies proof stake feature for the maintenance the governance system. users can freeze coins units bos within node and forgo liquidity return for newly issued boscoin(similar interest savings) based the total number frozen coin the node. the frozen coins the node then act both economic incentive operate node well collateral for the security and integrity the information held the node's blockchain. according the pre-set rules, the node discovered have forged the blockchain the node, the frozen coins are forfeited the commons budget. ibid. congress network overview the congress network the decision-making body for boscoin consisting individual fully-synchronized node operators. although people refer cryptocurrencies decentralized and autonomous, many cases, this not true. both the code and the information the blockchain are vulnerable influence. order overcome these issues, boscoin proposes decision-making body called the congress network fully decentralize and automate the system. development the source-code, forks, and even marketing resources can allocated from within the system. congress network roles congress members you will regarded congress member you meet the following criteria: run fully-synchronized node stable network speeds freeze least four units (one frozen unit bos) participate voting anyone can become congress member. node could server personal computer that congress member runs. the node can located home remote location, long network speeds are stable. congress members have the choice either invest increasing their political influence through running more nodes increasing their economic return through increasing the boscoin frozen. ii. users users are the beneficiaries the boscoin system. they will interact with the boscoin network three ways: initiating transactions, submitting proposals and earning interest boscoins (coin freezing). these interactions are displayed the figure below. fig interactions between the congress network and user network network interactions transactions when transaction digital assets requested user, the request sent the congress network. for simple transfer boscoin, when node confirms the block roughly every seconds the user's transactions will confirmed, and the boscoin will transferred another wallet. for more complex trust contracts, the pre-defined logic/procedures will also carried out. the initial stage boscoin, transaction fees will fixed bos. the fixed transaction rate can later adjusted the congress network through the voting process. transaction fees act economic incentive for node operators and also defense mechanism against dos attacks. ii. proposals proposals are system changing plans commons budget spending plans that are submitted the congress network. when proposal made, the 'net percentage point difference' between the positive and negative votes must exceed for the proposal passed. for funding proposal the proposal passes, the requested coins will sent the proposer. under some conditions, such when the size the proposal large, the system can define contract that requires report how the coins were spent. iii. coin freezing coin freezing proof stake concept where user locks-in their coins and return they will receive interest based the number coins frozen and the length time the coins are stored. this interest called the freezing reward. users can freeze coins units, which are sets bos. frozen coins are used collateral case attempted forgery the blockchain. node attempts forge the blockchain, portion the frozen coins are confiscated and sent the commons budget. additionally the system requires two weeks prior notice unfreeze coins, mechanism promote price stability. reward system within the congress network, there unique incentive mechanism. congress members can either choose maximize financial rewards, freezing boscoin one node increase their voting power running multiple nodes (one node equals one vote). this deliberate division incentivizes the separation economic motives from decision-making motives similar the separation economic and political power concept. bitcoin suffers from the hash power centralization issue, due its reliance proof work consensus protocol. small number major miners can easily buy large amounts mining hardware, which allows them influence changes code and even threaten the integrity the blockchain. separating the incentives those that wish optimize financial gain, the barriers entry participate the governance process comparatively lower than system that equates decision making power with financial rewards. there are three ways for congress members receive boscoin rewards: the freezing reward, confirmation rewards, and transaction fees. freezing reward: congress members receive the same amount interest normal wallet users when coins are frozen. starting from the first year, total bos distributed equally each unit frozen boscoins. this freezing reward issued every blocks(roughly one hour). the total amount that distributed decreases year year over years. confirmation reward confirmation rewards are given node when block confirmed. this reward crucial providing financial incentive operate node and the reward directly linked the number frozen units node. similar the block reward bitcoin, the number participating nodes increases, the probability winning the confirmation reward decreases. the reward issued relative the proportion frozen units held the node. initially the reward starts with network-wide average boscoins per block. conf irmation reward umber rozen nits average otal system rozen nits initially the block confirmation reward starts boscoins per block, and will decrease year year over roughly years. transaction fee: the transaction fee fixed boscoins. congress nodes receive the collected transactions fee block, and sent the commons budget. transaction fees can adjusted through the congress. decision making process the idea integrated decision-making process within the currency was inspired dash coin where the masternodes vote make decisions. boscoin there are largely two type proposals. there are system proposals and funding proposals. system proposals are proposals that automatically change the code the boscoin platform and funding proposals are proposals that request for funds from the commons budget. anyone with wallet can make proposal, which then reviewed every third monday the month gmt. these proposals are then voted the congress members the fourth monday the month gmt. the 'net percentage point difference' between the positive and negative votes exceed the proposal passed. there the option for neutral vote signal that the congress member participated the decision-making process and votes can also changed any time before the final due date. for funding proposals, order increase the chances proposal being passed, possible provide collateral with the proposal. proposals that provide more than bos become significant proposals. voting participation especially important for significant proposals and congress member does not vote significant proposal, they are penalized having the freezing feature disabled for their node for two weeks. disabling the coin freezing feature means the node will forgo all the benefits from freezing coins and will not able freeze any coins for two weeks. commons budget the commons budget account where boscoins are held and can only transferred proposals that are passed through the congress. the main role commons budget expedite the growth the coin users during the early stages. coins the commons budget are mainly accumulated through two channels; the first the direct issuance bos coins evan duffield, daniel diaz, dash: privacy centric crypto currency https://www.dash.org/wp-content/uploads///dash-whitepaperv.pdf using decentralized governance: proposals, voting, and budgets https://dashpay.atlassian.net/wiki/display/doc/using+decentralized+governance%a+proposals%c+voting %c+and+budgets per block for roughly years and secondly from the transaction fee. out all issued coins, commons budget make the largest proportion coins. this will ensure funds are available growth hack the adoption boscoin. any proposal which passes through the congress can access coins from the commons budget. example proposal airdrop proposal; geo-socially distribute free coins users order increase the number boscoin users. other examples can include funding the development the boscoin eco-system, marketing campaigns and organizing boscoin related meetings. ready-made application ecosystem many cryptocurrencies offer examples how use and build applications their platform. however, few have delivered working applications utilizing currency. although difficult fully understand how much cryptocurrency's value made transactional value and how much made speculative value, boscoin's goal increase the transactional value the currency relative its competitors. the long-run the core-value currency its usefulness. through ready-built applications such stardaq and delicracy released with the currency, users will have sophisticated services available immediately within the boscoin ecosystem. stardaq stardaq international celebrity popularity prediction market. celebrity's popularity represented index and users can place bets whether the popularity the celebrity will rise fall. the bets can only placed with boscoins. delicracy delicracy collective decision making tool that can implemented any organization. all users can participate the decision-making process placing bets set proposals, similar the augur prediction market. the proposal with the most bets passed. this type system can help promote transparency and participation for decision-making processes organizations large and small. these applications serve outlets spend boscoins and also serve channels for airdropping free coins. appropriately using these tools can help grow the ecosystem introducing new users. technical roadmap decentralized prediction market, https://www.augur.net/ the following technical roadmap defining the key milestones. milestones- |modules consensus trust contracts alpha genesis protocol specification implementation unit acceptance test mfba consensus fba key design implementation mfba key design implementation data store store specs sqlite store implementation messagepack history ontologies rule(tal) remittance send receive tokens based trust contracts import and define basic boscoin ontologies blockchain backup restore using isp(aws, azure construct core ontologies construct key governance ontologies governance system specifications proposal vote implementation reasoner optimization formal specification and key design elements reasoner integration with blockchain cli web interface cli design implementation web design wallet wallet formal specification design application poc test sirius mfba optimization governance trust contracts multisig specification inference engine rpc rest api nebula multisig implementation automated proposal implementation android ios spv wallets blockchain explorer fig implementation roadmap coin issuance new coins are issued four ways; initial development budget(.bil, %), confirmation rewards(.bil, %), freezing rewards(.bil, and the commons budget(.bil, %). aim issue total billion coins over the next years. these values are subject change. initial development budget boscoins share decrease rate end issuance confirmation rewards freezing rewards commons budget ,,, ,,, per blocks per blocks genesis block year year year fig issuance summary initial development budget: initial development coins are coins distributed prior the genesis block are intended support the final development the software. these coins are made ico sales and bounties. million boscoins are issued with the genesis block. confirmation rewards: confirmation rewards are financial rewards issued randomly node for every confirmed block(every seconds). the reward distributed randomly, the number nodes increase the probability that node will receive reward decreases. this reward relative the number units frozen node(refer section d). billion boscoin are issued through confirmation rewards. initially boscoins are issued per block. the reward decreases every million blocks -roughly one year- over years. freezing rewards: freezing rewards are distributed relative the number boscoin units frozen node and are issued every blocks(roughly one hour). initially the total amount the reward decreases over every million blocks -roughly year over years. the freezing reward acts important incentive for congress members increase the number coins frozen one node and disincentivize the centralization decision making. commons budget: the commons budget holds boscoins that can only used proposals that have passed the congress network. order create sufficient budget for proposals, commons coins are issued per block for the first million blocks roughly five years. after the first five years the commons budget maintained through the commons fee transactions fees. fig coin issuance plan conclusion the boscoin team aims overcome the technical and operational issues inherent many cryptocurrencies. the incentive scheme and issuance plan aimed towards creating value for the coin while deterring the centralization power. the modified federated byzantine agreement algorithm will allow for low latency transactions while being more energy efficient. the congressional system aimed towards creating more democratic and productive decision making process. trust contracts will provide decidable and approachable framework for creating and executing contracts the blockchain. the boscoin team will aim achieve these goals while leveraging the security and integrity that can gained through blockchain technology. works cited andrychowicz, dziembowski, malinowski and mazurek, modeling bitcoin contracts timed automata lecture notes computer science formal modeling and analysis timed systems, https://arxiv.org/pdf/.v.pdf david mazieres, stellar consensus protocol https://www.stellar.org/papers/stellar-consensus-protocol.pdf decentralized prediction market https://www.augur.net/ evan duffield, daniel diaz, dash: privacy centric crypto currency https://www.dash.org/wp-content/uploads///dash-whitepaperv.pdf golem https://golem.network hodges, andrew alan turing: the enigma, london: burnett books ian grigg, the ricardian contract first ieee international workshop electronic contracting (wec) july http://iang.org/papers/ricardian_contract.html leading the pack blockchain banking: trailblazers set the pace https://www-.ibm.com/common/ssi/cgi-bin/ssialias?htmlfid=gbpusen& atzei, bartoletti, cimoli, survey attacks ethereum smart contracts https://eprint.iacr.org//.pdf satoshi nakamoto, bitcoin: peer-to-peer electronic cash system, https://bitcoin.org/bitcoin.pdf simple declarative language https://sdlang.org/ the dao https://slock.it/dao.html using decentralized governance: proposals, voting, and budgets https://dashpay.atlassian.net/wiki/display/doc/using+decentralized+governance%a+proposals% c+voting%c+and+budgets owl web ontology language https://www.w.org/tr/owl-features/ owl web ontology language reference https://www.w.org/tr/owl-ref vitalik buterin, ethereum whitepaper https://github.com/ethereum/wiki/wiki/white-paper