nxt whitepaper created the nxt community* revision nxt v.. july abstract bitcoin has proven that peer-to-peer electronic cash system can indeed work and fulfill payments processing without requiring trust central mint. however, for entire electronic economy based fully decentralized, peer-to-peer solution, must able the following: process transactions securely, quickly and efficiently, the rate thousands per hour more; provide incentives for people participate securing the network; scale globally with minimal resource footprint; offer range basic transaction types that launch cryptocurrencies past the core feature payment system alone; provide agile architecture that facilitates the addition new core features, and allows for the creation and deployment advanced applications; and able run broad range devices, including mobile ones. nxt (pronounced "next") satisfies all these requirements. contents introduction and overview core technologies proof stake nxt's proof stake model contrast with peercoin proof stake tokens network nodes blocks block creation (forging) base target value target value contributors include the following members the http://nxtforum.org/ community: alias, anon, bluemeanie, brangdon, chuckone, come-from-beyond, daedelus, damelon, devphp, doctorevil, eadeqa, emoneyru, forkedchain, fry, gbeirn, gsxzz, jean-luc, jl, joefox, kushti, lorre, mczarnek, msin, mthcl, nctrl, pandaisftw, pouncer, qbtc, rickyjames, salsacz, sebastien, thomasveil, vanbreuk, wesleyh, and zahlen. sources were compiled, organized, and edited joefox. cumulative difficulty the forging algorithm balance leasing accounts account balance properties wallet.dat transactions transaction fees transaction confirmations transaction deadlines transaction types transaction creation and processing cryptographic foundations encryption algorithm core features advanced javascript agile architecture basic payments alias system arbitrary messages asset exchange digital goods store device portability client concerns proof stake attacks nothing stake history attack distribution transaction fees whitepaper timing additional nxt-related papers and resources introduction and overview nxt proof-of-stake cryptocurrency, constructed from scratch opensource java nxt's unique proof-of-stake algorithm does not depend any implementation the "coin age" concept used other proof-of-stake cryptocurrencies, and resistant so-called "nothing stake" attacks. total quantity billion available tokens were distributed the genesis block. curve cryptography used provide balance security and required processing power, along with more commonly-used sha hashing algorithms. blocks are generated every seconds, average, accounts that are unlocked network nodes. since the full token supply already exists, nxt redistributed source code for nxt available https://bitbucket.org/jeanlucpicard/nxt/src through the inclusion transaction fees which are awarded account when successfully creates block. this process known forging, and akin the "mining" concept employed other cryptocurrencies. transactions are deemed safe after block confirmations, and nxt's current architecture and block size cap allows for the processing transactions per day. nxt transactions are based series core transaction types that not require any script processing transaction input/output processing the part network nodes. these transaction primitives allow core support for: fully-decentralized asset exchange alias creation, transfer and sale storage small, optionally-encryptable strings data the blockchain digital goods store account control features leveraging these primitive transaction types, nxt's core can seen agile, base-layer protocol upon which limitless range services, applications, and other currencies can built. ongoing nxt development includes the implementation novel transparent forging feature which will allow transaction processing capacity increase two orders magnitude using deterministic block generation algorithm, coupled with additional network security mechanisms. the latest development roadmap also outlines the following short-term feature additions the nxt core: voting system asset exchange dividend payments monetary system for facilitating the creation new cryptocurrencies and associated services that are secured the nxt blockchain atomic cross-chain trading, multi-signature transactions and escrow features additional mechanisms for securing the nxt blockchain, including penalties for accounts that not behave expected the network this version the whitepaper documents features and algorithms that are implemented nxt version ... future revisions will made reflect additional planned features and algorithm changes. the july development update located here: https://nxtforum.org/news-andannouncements/development-roadmap-update--- this feature known "economic clustering" and discussion here: https://nxtforum.org/news-and-announcements/economic-clustering/ core technologies proof stake the traditional proof work model used most cryptocurrencies, network security provided peers doing "work". they deploy their resources (computation/processing time) reconcile double-spending transactions, and impose extraordinary cost those who would attempt reverse transactions. tokens are awarded peers exchange for work, with the frequency and amount varying with each cryptocurrency's operational parameters. this process known "mining". the frequency block generation, which determines each cryptocurrency's available mining reward, generally intended stay constant. result, the difficulty the required work for earning reward must increase the work capacity the network increases. proof work network becomes stronger, there less incentive for individual peer support the network, because their potential reward split among greater number peers. search profitability, miners keep adding resources the form specialized, proprietary hardware that requires significant capital investment and high ongoing energy demands. time progresses, the network becomes more and more centralized smaller peers (those who can less work) drop out combine their resources into "pools". bitcoin's creator, satoshi nakamoto, intended for the bitcoin network fully decentralized[?], but nobody could have predicted that the incentives provided proof work systems would result the centralization the mining process. this leads possible vulnerabilities[]. the ghash.io bitcoin pool has reached the bitcoin mining power the past[], and the top five bitcoin mining pools make the bitcoin network's hashing power the concept decentralization risk being completely lost. the proof stake model used nxt, network security governed peers having stake the network. the incentives provided this algorithm not promote centralization the same way that proof work algorithms do, and data shows that the nxt network has remained highly decentralized since its inception: large (and growing) number unique accounts are contributing blocks the network and the top five accounts have generated the total number blocks nxt's proof stake model nxt uses system where each "coin" account can thought tiny mining rig. the more tokens that are held the account, the greater the chance that account will earn the right generate block. the total located https://ghash.io/ https://blockchain.info/pools july https://nxtforum.org/general/network-analysis/ https://nxtblocks.info/#section/blockexplorer_charts july "reward" received result block generation the sum the transaction fees located within the block. nxt does not generate any new tokens result block creation. redistribution nxt takes place result block generators receiving transaction fees, the term "forging" (meaning this context "to create relationship new conditions" used instead "mining". subsequent blocks are generated based verifiable, unique, and almost-unpredictable information from the preceding block. blocks are linked virtue these connections, creating chain blocks (and transactions) that can traced all the way back the genesis block. block generation time targeted seconds, but variations probabilities have resulted average block generation time seconds, with occasionally very long block intervals. adjustment the forging algorithm has been suggested mthcl and modeled sebastien nxtforum.org the security the blockchain always concern proof stake systems. the following basic principles apply nxt's proof stake algorithm: cumulative difficulty value stored parameter each block, and each subsequent block derives its new "difficulty" from the previous block's value. case ambiguity, the network achieves consensus selecting the block chain fragment with the highest cumulative difficulty. this covered more detail page prevent account holders from moving their stake from one account another means manipulating their probability block generation, tokens must stationary within account for blocks before they can contribute the block generation process. tokens that meet this criterion contribute account's effective balance, and this balance used determine forging probability. keep attacker from generating new chain all the way from the genesis block, the network only allows chain re-organization blocks behind the current block height. any block submitted height lower than this threshold rejected. this moving threshold may viewed nxt's only fixed checkpoint. due the extremely low probability any account taking control the blockchain generating its own chain blocks, transactions are deemed safe once they are encoded into block that blocks behind the current block height. contrast with peercoin proof stake peercoin uses coin age parameter part its mining probability algorithm. that system, the longer your peercoins have been stationary your account oxford english dictionary. http://www.oxforddictionaries.com/us/definition/american_english/forge forum thread: https://nxtforum.org/proof-of-stake-algorithm/basetargetadjustment-algorithm/ full (to maximum days), the more power (coin age) they have "mint" block. the act "minting" block requires the consumption coin age value, and the network determines consensus selecting the chain with the largest total consumed coin age. when peercoin blocks are orphaned, the consumed coin age released back the block's originating account. result, the cost attack the peercoin network low, since attackers can keep attempting generate blocks (referred grinding stake) until they succeed. peercoin minimizes these and other risks centrally broadcasting blockchain checkpoints several times day, "freeze" the blockchain and lock transactions[]. nxt does not use coin age part its forging algorithm. account's "chance" forge block depends only its effective balance (which property each account), the time since the last block (which shared all forging accounts) and the base target value (which also shared all accounts). tokens the total supply nxt billion tokens, divisible eight decimal places. all tokens were issued with the creation the genesis block (the first block the nxt blockchain), leaving the genesis account with initial negative balance billion nxt. the existence anti-tokens the genesis account has couple interesting side effects: the genesis account cannot issue transactions any kind, since its balance negative and cannot pay transaction fees. result, the private passphrase for the genesis account free for anyone use any tokens sent the genesis account are effectively destroyed, since that account's negative balance will cancel them out. several thousand nxt tokens have been burned this manner. nxt assets may also burned transferring them the genesis account. the choice the word tokens intentional due nxt's intention used base protocol that provides numerous other functions. nxt's most basic function one traditional payment system, but was designed far more. network nodes node the nxt network any device that contributing transaction block data the network. any device running the nxt software seen node. the genesis account address nxt-mrcc-yls-m-cmaj the genesis account using the passphrase "it was bright cold day april, and the clocks were striking thirteen." access nodes can subdivided into two types: hallmarked and normal. hallmarked node simply node that tagged with encrypted token derived from account's private key; this token can decoded reveal specific nxt account address and balance that are associated with node. the act placing hallmark node adds level accountability and trust, hallmarked nodes are more trusted than non-hallmarked nodes the network. the larger the balance account tied hallmarked node, the more trust given that node. while attacker might wish hallmark node order gain trustworthiness within the network and then use that trust for malicious purposes; the barrier entry (cost nxt required build adequate trust) discourages such abuse. each node the nxt network has the ability process and broadcast both transactions and block information. blocks are validated they are received from other nodes and cases where block validation fails, nodes may "blacklisted" temporarily prevent the propagation invalid block data. each node features built-in ddos (distributed denial services) defence mechanisms which restrict the number network requests from any peer per second. blocks other cryptocurrencies, the ledger nxt transactions built and stored linked series blocks, known blockchain. this ledger provides permanent record transactions that have taken place, and also establishes the order which transactions have occurred. copy the blockchain kept every node the nxt network, and every account that unlocked node (by supplying that account's private key) has the ability generate blocks, long least one incoming transaction the account has been confirmed times. any account that meets these criteria referred active account. nxt, each block contains transactions, all prefaced -byte header that contains identifying parameters. each transaction block represented maximum bytes, and the maximum block size kb. all blocks contain the following parameters: block version, block height value, and block identifier block timestamp, expressed seconds since the genesis block the the account that generated the block, well that account's public key all possible block parameters are verified, including the effective balance the block generator's account. this proves that the generating account actually contains the effective balance (stake) that won the right generate the block. the and hash the previous block the number transactions stored the block the total amount nxt represented transactions and fees the block transaction data for all transactions included the block, including their transaction ids the payload length the block, and the hash value the block payload the block's generation signature signature for the entire block the base target value and cumulative difficulty for the block block creation (forging) three values are key determining which account eligible generate block, which account earns the right generate block, and which block taken the authoritative one times conflict: base target value, target value and cumulative difficulty. base target value order win the right forge (generate) block, all active nxt accounts "compete" attempting generate hash value that lower than given base target value. this base target value varies from block block, and derived from the previous block's base target value multiplied the amount time that was required generate that block. target value each account calculates its own target value, based its current effective stake. this value is: where: the new target value the base target value the time since the last block, seconds see the effective balance the account for explanation these parameters and how they are used. can seen from the formula, the target value grows with each second that passes since the timestamp the previous block. the maximum target value and the minimum target value one half the previous block's base target value. this target value and the base target value are the same for all accounts attempting forge top specific block. the only account-specific parameter the effective balance parameter. cumulative difficulty the cumulative difficulty value derived from the base target value, using the formula: dcb dpb where: dcb the difficulty the current block dpb the difficulty the previous block the base target value for the current block the forging algorithm each block the chain has generation signature parameter. participate the block forging process, active account cryptographically signs the generation signature the previous block with its own public key. this creates -byte signature, which then hashed using sha. the first bytes the resulting hash gives number, referred the account's hit. the hit compared the current target value. the computed hit lower than the target, then the next block can generated. noted the target value formula, the target value increases with each passing second. even there are only few active accounts the network, one them will eventually generate block because the target value will become very large. the corollary this that you can estimate the time that will required for any account forge block comparing that account's hit value the target value. the last point significant. since any node can query the effective balance for any active account, possible iterate through all active accounts order determine their individual hit value. this means possible predict, with reasonable accuracy, which account will next win the right forge block. shuffling attack could mounted moving stake account that will generate the next block, which another reason why nxt stake must stationary for blocks before can contribute forging (via the effective balance value). interestingly, the new base target value for the next block cannot reasonably predicted, the nearly-deterministic process determining who will forge the next block becomes increasingly stochastic attempts are made predict future blocks. this feature the nxt forging algorithm helps form the basis for the development and implementation the transparent forging algorithm. since this algorithm has not yet completely been implemented, and because its implications the nxt network are significant, will outlined separate paper. for in-depth analysis the mathematics and probabilities related nxt block forging, see mthcl's paper, "the math nxt forging", which located http://www.docdroid.net/eh/forging--.pdf.html when active account wins the right generate block, bundles available, unconfirmed transactions into new block, and populates the block with all its required parameters. this block then broadcast the network candidate for the blockchain. the payload value, generating account, and all the signatures each block can verified all network nodes who receive it. situation where multiple blocks are generated, nodes will select the block with the highest cumulative difficulty value the authoritative block. block data shared between peers, forks (non-authoritative chain fragments) are detected and dismantled examining the chains' cumulative difficulty values stored each fork. balance leasing since the ability for account forge based the effective balance parameter, possible "loan" forging power from one account another without giving control the tokens associated with the account. using transaction the "account control" type, account owner may temporarily reduce account's effective balance zero, adding the effective balance another account. the targeted account's forging power increased until the end time period specified the original account owner, after which the effective balance returned the original account. accounts with leased forging power generate blocks more often and earn more transaction fees, but those fees are not automatically returned lease accounts. with bit coding, however, this system allows for the creation nearlytrustless forging pools that can make payouts participants. the most notable current implementation this idea can found http://pool.nxtcrypto.org/ accounts nxt implements brain wallet part its design: all accounts are stored the network, with private keys for each possible account address directly derived from each account's passphrase using combination sha and curve operations. each account represented -bit number, and this number expressed account address using reed-solomon error-correcting notation that allows for detection four errors account address, correction two errors. this format was implemented response concerns that for more information: http://en.wikipedia.org/wiki/reed-solomon_error_correction mistyped account address could result tokens, aliases, assets being irreversibly transferred erroneous destination accounts. account addresses are always prefaced "nxt-", making nxt account addresses easily recognizable and distinguishable from address formats used other cryptocurrencies. the reed-solomon-encoded account address associated with secret passphrase generated follows: the secret passphrase hashed with sha derive the account's private key. the private key encrypted with curve derive the account's public key. the public key hashed with sha derive the account id. the first bits the account are the visible account number. reed-solomon encoding the visible account number, prefixed with "nxt", generates the account address. when account accessed secret passphrase for the very first time, not secured public key. when the first outgoing transaction from account made, the -bit public key derived from the passphrase stored the blockchain, and this secures the account. the address space for public keys larger than the address space for account numbers there one-to-one mapping passphrases account numbers and collisions are possible. these collisions are detected and prevented the following way: once specific passphrase used access account, and that account secured -bit public key, other public-private key pair permitted access that account number. account balance properties for each nxt account, several different types balances are available. each type serves different purpose, and many these values are checked part transaction validation and processing. the effective balance account used the basis for account's forging calculations account's effective balance consists all tokens that have been stationary that account for blocks. addition, the account leasing feature allows account's effective balance assigned another account for temporary period. the guaranteed balance account consists all tokens that have been stationary account for blocks. unlike the effective balance, this balance cannot assigned any other account. the basic balance account accounts for all transactions that have had least one confirmation. see page for more information how this balance used. the forged balance account shows the total quantity nxt that have been earned result successfully forging blocks. the unconfirmed balance account the one that displayed nxt clients. represents the current balance account, minus the tokens involved unconfirmed, sent transactions. guaranteed asset balances lists the guaranteed balances all the assets associated with specific account. unconfirmed asset balances lists the unconfirmed balances all the assets associated with specific account. wallet.dat bitcoin and related currencies often use encrypted file, called wallet, store generated addresses for receiving tokens. the core design nxt does not mimic this functionality, but also does not preclude it. has been demonstrated the offspring client and the online wallet service provided nxtblocks.info possible for client developers implement system where group private keys for nxt accounts are stored encrypted, offline file. transactions transactions are the only means nxt accounts have altering their state balance. each transaction performs only one function, the record which permanently stored the network once that transaction has been included block. transaction fees transaction fees are the primary mechanism through which nxt are recirculated back into the network. every transaction requires minimum fee nxt; currently, the only exception the fee for issuing asset the nxt asset exchange, which nxt. when nxt account forges block, all the transaction fees included that block are awarded the forging account reward. until the size all the transactions block exceeds the current kilobyte block size limit, the minimum fee will sufficient for all transactions included blocks. situations where the number unconfirmed transactions exceeds the number that can placed block, forging accounts will likely select transactions with the highest fees. this suggests that transaction processing may prioritized including fee that higher than the minimum. offspring was funded and created the team behind dgex, and can found http://offspring.dgex.com/ https://nxtblocks.info/#wallet/options transaction confirmations all nxt transactions are considered unconfirmed until they are included valid network block. newly-created blocks are distributed the network the node (and associated account) that creates them, and transaction that included block considered having received one confirmation. subsequent blocks are added the existing blockchain, each additional block adds one more confirmation the number confirmations for transaction. transaction not included block before its deadline, expires and removed from the transaction pool. transaction deadlines every transaction contains deadline parameter, set number minutes from the time the transaction submitted the network. the default deadline minutes hours). transaction that has been broadcast the network but has not been included block referred unconfirmed transaction. transaction has not been included block before the transaction deadline expires, the transaction removed from the network. transactions may left unconfirmed because they are invalid malformed, because blocks are being filled will transactions that have offered pay higher transaction fees. the future, features such multi-signature transactions may able take advantage deadlines means enforcing expiry date. transaction types categorizing nxt transactions into types and subtypes allows for modular growth and development the nxt protocol without creating dependencies other "base" functions. features are added the nxt core, new transaction types and subtypes can added support them. the following five transaction types and associated subtypes are supported nxt. each type dictates given transaction's required and optional parameters, well its processing method. payment: used for sending nxt tokens from one account another ordinary payment messaging: used messaging, alias, voting, and account info features arbitrary message alias assignment poll creation vote casting account info colored coins: implementation the colored coins concept[], which enables the nxt asset exchange asset issuance asset transfer ask order placement bid order placement ask order cancellation bid order cancellation digital goods: transactions that enable the nxt digital goods store listing delisting price change quantity change purchase delivery feedback refund account control transactions that place limits how accounts may may not used. effective balance leasing transaction creation and processing the details creating and processing nxt transaction are follows: the sender specifies parameters for the transaction. types transactions vary and the desired type specified transaction creation, but several parameters must specified for all transactions: the private key for the sending account specified fee for the transaction deadline for the transaction optional referenced transaction see the previous page all values for the transaction inputs are checked. for example, mandatory parameters must specified; fees cannot less than equal zero; transaction deadline cannot less than one minute into the future; referenced transaction specified, then the current transaction cannot processed until the referenced transaction has been processed. exceptions are thrown result parameter checking: (a) the public key for the generating account computed using the supplied secret passphrase (b) account information for the generating account retrieved, and transaction parameters are further validated: the sending account's balance cannot zero the sending account's unconfirmed balance must not lower than the transaction amount plus the transaction fee the sending account has sufficient funds for the transaction: (a) new transaction created, with type and subtype value set match the kind transaction being made. all specified parameters are included. unique transaction generated with the creation the object (b) the transaction signed using the sending account's private key (c) the encrypted transaction data placed within message instructing network peers process the transaction (d) the transaction broadcast all peers the network (e) the server responds with result code: the transaction id, the transaction creation was successful error code and error message any the parameter checks fail. cryptographic foundations key exchange nxt based the curve algorithm, which generates shared secret key using fast, efficient, high-security elliptic-curve diffiehellman function the algorithm was first demonstrated daniel bernstein []. nxt's java-based implementations were reviewed doctorevil march, []. this defined the account's current balance, minus amounts related all unconfirmed, sent transactions. general, this the account balance that displayed real-time nxt client interface. for more information: http://en.wikipedia.org/wiki/diffie%e%%hellman_key_exchange message signing nxt implemented using the elliptic-curve korean certificatebased digital signature algorithm (ec-kcdsa), specified part ieee the kcdsa task force team both algorithms were chosen for their balance speed and security for key size only bytes. encryption algorithm when alice sends encrypted plaintext bob, she: calculates shared secret: shared_secret curve(alice_private_key, bob_public_key) calculates seeds: seedn sha(seedn- where seed sha(shared_secret) calculates keys: keyn sha(inv(seedn )), where inv(x) the inversion all bits encrypts the plaintext: ciphertext[n] plaintext[n] xor keyn upon receipt bob decrypts the ciphertext: calculates shared secret: shared_secret curve(bob_private_key, alice_public_key) calculates seeds (this identical alice's step): seedn sha(seedn- where seed sha(shared_secret) calculates keys (this identical alice's step): keyn sha(inv(seedn )), where inv(x) the inversion all bits decrypts the ciphertext: plaintext[n] ciphertext[n] xor keyn note: someone guesses part the plaintext, can decode some part subsequent messages between alice and bob they use the same key pairs. result, it's advised generate new pair private/public keys for each communication. for more information: http://grouper.ieee.org/groups//pa/contributions/kcdsa.pdf core features advanced javascript client second-generation, user-friendly client application built into the nxt core software distribution, and can accessed through local web browser. the client provides full support for all core nxt features, implemented such that users' private keys are never exposed the network. also includes advanced administrative interface and built-in javadoc documentation for nxt's low-level applications programming interface. agile architecture first-generation cryptocurrencies were primarily designed payment systems. nxt recognizes that decentralized blockchains can enable broad range applications and services, but not prescriptive about what those services should how they should built. design, nxt strips away unnecessary complexity its core, leaving only the most successful components its predecessors intact. result, nxt functions like low-level, foundational protocol: defines the interfaces and operations required operate lightweight blockchain, decentralized communication system, and rapid transaction processing framework, allowing higher-order components build those features. transactions nxt make simple adjustments account balances instead tracing sets "input" "output" credits. addition, the core software does not support any form scripting language. providing set basic, flexible transaction types that can quickly and easily processed, nxt creates foundation that does not limit the ways which those transaction types can used, and does not create significant overhead for using them. this flexibility further amplified nxt's low resource and energy requirements, and its highly readable, highly organized object-oriented source code basic payments the most fundamental feature any cryptocurrency the ability transmit tokens from one account another. this nxt's most fundamental transaction type, and allows for basic payment functionality. alias system the nxt alias system allows any string text permanently associated with specific nxt account. since its inception, convention for the format accessible via local web browser http://...:/ via local web browser http://...:/admin.html accessible via local web browser http://...:/doc/ source code for nxt available https://bitbucket.org/jeanlucpicard/nxt/src accessible these strings, using json notation, has been formalized. result, "alias" can currently "human-friendly" text alias for account address uniform resource identifier (uri) the ability store any uri the nxt blockchain enables the creation any number decentralized services that rely small, persistent strings text, such distributed domain name server (dns) system. one example simple implementation this concept the browser extensions developed wesleyh http://nxtra.org/ arbitrary messages arbitrary strings data bytes length can stored the nxt blockchain using the arbitrary messages feature, and these strings may optionally aes-encrypted these messages are intended removable, the future, when blockchain size needs reduced; nonetheless, they form critical building block for number next-generation features. the basic level, the system can used transmit human-readable messages between accounts, creating decentralized chat system. however, advanced applications can use this feature store structured data, such json objects, that can used trigger facilitate services built top nxt. the most notable current implementation the nxt multigateway (mgw) part the nxtservices layer, which employs the arbitrary messaging system drive nearly-trustless method for automatically transforming bitcoin, litecoin, and other cryptocurrencies into nxt assets (based the colored coins concept) that can traded, bought, and sold the fully-decentralized asset exchange. asset exchange entire class nxt transactions used implement fully-decentralized and automated asset exchange that operates the nxt blockchain. using the colored coins concept, nxt assets may issued and tracked the nxt ecosystem, supported transactions and processing that allow for asset transfer, bid and ask order placement, and automatic order matching. since its inception, the nxt asset exchange has been used for fundraising ipo offerings, "tipping tokens", and the development advanced services such the multigateway (mgw) system. combining the features the nxt asset exchange with other features such the arbitrary messaging system, value-added services can created. most notably, another feature the nxtservices layer system for the automated javascript object notation. see http://json.org/ more information: http://en.wikipedia.org/wiki/uniform_resource_identifier download the extensions, to: http://nxtra.org/alias/ for more information: http://en.wikipedia.org/wiki/advanced_encryption_standard development and testing this feature being tracked here: https://nxtforum.org/nxtservices-releases/ for calculation and disbursement dividends based the performance existing nxt assets digital goods store the nxt digital goods store gives account owners the ability list assets for sale open, decentralized market place. goods can purchased, discounted, delivered, refunded, and transferred, using dedicated class transaction types that manage and secure store listings the decentralized blockchain. device portability due its cross-platform, java-based roots, its proof stake hashing and its future ability reduce the size the block chain, nxt extremely well suited for use small, low-power, low-resource devices. android and iphone applications are currently development, and the nxt software has been ported low-powered arm devices such the raspberrypi and cubietruck platforms. the ability implement nxt low-powered, always-connected devices such smartphones allows envision scenario where the majority the nxt network supported mobile devices. the low cost and resource consumption these devices significantly reduce network costs comparison with traditional proof work cryptocurrencies. concerns proof stake attacks nothing stake "nothing stake" attack, forgers attempt build blocks top every fork they see because doing costs them almost nothing, and because ignoring any fork may mean losing out the block rewards that would earned that fork were become the chain with the largest cumulative difficulty. while this attack theoretically possible, currently not practical. the nxt network does not experience long blockchain forks, and the low block reward does not provide strong profit incentive; further, compromising network security and trust for the sake such small gains would make any victory pyrrhic. development and testing this feature being tracked here: https://nxtforum.org/nxtservices-releases/nxtservices_div-test-release-for-dividendcalculations-at-any-block/ see this guide for help installing nxt raspberry pi: https://wiki.nxtcrypto.org/wiki/how-to:installnrsraspberrypi part nxt's development roadmap feature called economic clustering will provide further protection against attacks this nature forcing transactions include hashes previous blocks, and grouping nodes into "clusters" that can detect unusual behavior the network and impose penalties (in the form temporary loss the ability forge). history attack "history attack", someone acquires large number tokens, sells them, and then attempts create successful fork from just before the time when their tokens were sold traded. the attack fails, the attempt costs nothing because the tokens have already been sold traded; the attack succeeds, the attacker gets their tokens back. extreme forms this attack involve obtaining the private keys from old accounts and using them build successful chain right from the genesis block. nxt, the basic history attack generally fails because all stake must stationary for blocks before can used for forging; moreover, the effective balance the account that generates each block verified part block validation. the extreme form this attack generally fails because the nxt blockchain cannot re-organized more than blocks behind the current block height. this limits the time frame which bad actor could mount this form attack. distribution because blocks may only generated based existing stake, least some the token supply must available when proof stake network bootstrapped. result, nxt issued and distributed its full supply tokens with the creation the genesis block. the initial supply nxt was distributed original stakeholders, most whom have been incentivized further disperse their stake through the use giveaways, contests, and bounties. eight months after its creation, nxt's largest single account contains nxt's total supply contrast, satoshi nakamoto thought hold almost bitcoin's total supply after more than five years that network's existence[]. will never possible for nxt's proponents dispel the distribution concerns raised the wider community. relative the levels profit achieved early investors ibm, apple, google, facebook, and bitcoin, the amount inequality present the nxt blockchain not out line. distribution the available token supply progressing and can tracked http://charts.nxtcrypto.org/cdistribution.aspx the july development update located here: https://nxtforum.org/news-andannouncements/development-roadmap-update--- nxt blockchain explorer http://blocks.nxtcrypto.org/nxt/nxt.cgi?action=&switch=, july when asked: "how would you solve the problem with scam accusations leveled against the 'unfair' distribution nxt big stakeholders?", bcnext (nxt's creator) answered: "this problem can not solved. even had million stakeholders the [other] seven billion people would call this unfair. world with the [sic] money can not perfect." transaction fees the value nxt increases, the cost minimum transactions fees, expressed fiat terms, also increases. plans are underway reduce the minimum fee, scaled according transaction byte-size, order for micro-transactions practical. this will implemented after changes nxt's internal database are made, and that development planned for version the nxt software. whitepaper timing most cryptocurrency creators issue whitepaper before their currency bootstrapped. nxt's first formal whitepaper was created for version the nxt software, almost eight months after the creation the genesis block. the core development team has always been the opinion that nxt's source code its whitepaper: since java human-readable and the full source available anyone welcome gain understanding nxt's mechanics examining the source. this whitepaper can seen translation key components the java source code into english, and was created order make the design and function nxt more accessible people who not possess programming skills. additional nxt-related papers and resources "the math nxt forging", mthcl http://www.docdroid.net/eh/forging--.pdf.html "what are the economic parameters nxt?", hassenblasques https://docs.google.com/file/d/bwagadgnqcrtdxemkfsoahm "nxt network energy and cost efficiency analysis", matthew czarnek and secondleo http://www.nxtcommunity.org/nxt/nxt/nxt-network-energy-and-costefficiency-analysis https://bitcointalk.org/index.php?topic=.msg#msg source code for nxt available at: https://bitbucket.org/jeanlucpicard/nxt/src "nxt: cybernetics perspective proof https://mega.co.nz/#!yywdarl!aaalnhwq_rveckmzxwhriuypxqgrrna "why nxt ought taken seriously", anon https://docs.google.com/document/d/e_toomglxthxynyxeajxafhkyjqxkafscb "nxt myths: what should know about nxt generation pos cryptocurrency", managed salsacz https://docs.google.com/file/d/bwagadgnqcrtmgcuvshzttgm references bitcoin: peer-to-peer electronic cash system. (n.d.). retrieved july from https://bitcoin.org/bitcoin.pdf bitcoin broken. (n.d.). retrieved july http://hackingdistributed.com////bitcoin-is-broken/ from bitcoin miners ditch ghash.io pool over fears attack. (n.d.). retrieved july from http://www.coindesk.com/bitcoin-minersditch-ghash-io-pool--attack/ bitcoin needs scale factor compete with visa. here's how it. (n.d.). retrieved july from http://www.washingtonpost.com/blogs/theswitch/wp////bitcoin-needs-to-scale-by-a-factor-of--tocompete-with-visa-heres-how-to-do-it/ bitcoin security guarantee shattered anonymous miner with network power. (n.d.). retrieved july from http://arstechnica.com/security///bitcoin-security-guaranteeshattered-by-anonymous-miner-with--network-power/ cohen, november global bitcoin computing power now times faster than top supercomputers, combined! retrieved july from http://www.forbes.com/sites/reuvencohen////globalbitcoin-computing-power-now--times-faster-than-top-supercomputers-combined crypto review curve.java crypto.java. (n.d.). retrieved july from https://gist.github.com/doctorevil/ eyal, i., gun sirer, (). majority not enough: bitcoin mining vulnerable. unpublished manuscript. retrieved july from http://arxiv.org/pdf/.v.pdf learn cryptography attack. (n.d.). retrieved july from http://learncryptography.com/-attack/ losing win. june retrieved july from http://www.economist.com/blogs/schumpeter///bitcoin peercoin. (n.d.). retrieved http://www.peercoin.net/whitepaper july from qin, w., zhou, new concurrent digital signature scheme based the computational diffie-hellman problem. the journal china universities posts and telecommunications, (), doi: ./s-()- the well deserved fortune satoshi nakamoto, bitcoin creator, visionary and genius. (n.d.). retrieved july from http://bitslog.wordpress.com////the-well-deserved-fortune-ofsatoshi-nakamoto/ yung, m., dodis, y., kiayias, a., malkin, t., bernstein, (). curve: new diffie-hellman speed records. public key cryptography, doi: ./_ appendix: bitcoin problems addressed nxt nxt was created "cryptocurrency response bitcoin. nxt adopts features that have proved work well bitcoin, and addresses aspects that are cause for concern. this appendix addresses issues with the bitcoin protocol and network that are mitigated nxt technology. blockchain size the bitcoin blockchain the complete sequential collection generated data blocks containing the electronic ledger book for all bitcoin transactions occurring since its launch january four years later january the size the bitcoin blockchain stood gigabytes (gb) about the amount data required store two hour movie dvd disk. eighteen months later, july the size the bitcoin blockchain had swelled almost factor five gigabytes (gb) the bitcoin blockchain undergoing exponential growth and modifications the original bitcoin protocol will required deal with it. http://blockchain.info/charts nxt solutions nxt block size currently capped kb. since its inception, almost blocks have been generated and the blockchain takes space. the future, nxt will implement blockchain pruning feature (still under discussion) that will reduce blockchain size selectively removing information permanent blocks, and deleting other non-persistent data, such arbitrary messages. transactions per day late the number transactions being processed the bitcoin network was peaking per day, which about transactions per second (tps). the current bitcoin standard block size one megabyte, generated every ten minutes (on average) "full node" clients, limits the maximum capacity the current bitcoin network about tps. compare this with the visa network's capacity handle tps and you will see that bitcoin cannot compete exists today. increasing public use the bitcoin system will cause bitcoin soon hit its transaction-per-day limit and halt further growth. forestall this, bitcoin software developers are working the creation "thin clients" that employ simplified payment verification (spv) handle greater throughput the same -minute-average time, spv thin clients will not perform full security check the larger blocks they process. they will instead examine multiple hashed blockchains from competing miners and assume that the blockchain version generated the majority miners correct. the words bitcoin's mike hearn, "instead verifying the entire contents, [spv] just trusts that the majority miners are honest. long the majority honest, [spv] works. [however],the full node does give you better security. you're running online shop for example, makes sense run full node."[] nxt solutions its current state, the nxt network can process transactions per day more than nine times bitcoin's current peak values. the planned implementation transparent forging will allow for near instant transaction processing, drastically increasing this limit. transaction confirmation time transaction confirmation times for bitcoin ranged from minutes for most after the late announcement that chinese banks would not https://nxtblocks.info/#section/blockexplorer_blocks https://en.bitcoin.it/wiki/thin_client_security https://en.bitcoin.it/wiki/scalability#simplified_payment_verification allowed process bitcoins, the average bitcoin transaction time significantly increased minutes, with occasional peaks minutes confirmation times have since resettled the minute range. nonetheless, since multiple verifications are required finalize bitcoin transaction (six confirmations generally preferred), one hour can easily pass before sale assets paid for bitcoin complete. nxt solutions the average block generation time for nxt has historically been shown about seconds, putting the average transaction processing time the same value. transactions are deemed safe after ten confirmations, meaning that transactions are permanent less than minutes. the implementation transparent forging will allow for nearly-instant transactions, which will further reduce this time. centralization concerns the increasing difficulty and combined network hashrate for bitcoin has created high barrier entry for newcomers, and diminished returns for existing mining rigs. the block reward incentive employed bitcoin has driven the creation large, single-owner installations dedicated mining hardware well the reliance small set large mining pools this has resulted "centralization" effect, where large amounts mining power are concentrated the control decreasing number people. not only does this create the kind power structure that bitcoin was designed circumvent, but also presents the real possibility that single mining operation pool could amass the network's total mining power and execute attack[]. attacks requiring little total network hashing power also exist[]. early january, ghash.io began voluntarily decreasing its own mining power because was approaching the level[]. after few days, the pool's mining power was reduced the total network power, but the rate immediately began increase again, and once more reached dangerous levels june []. nxt solutions the incentives provided nxt's proof stake algorithm provide low return investment approximately .%. since new coins are generated with https://blockchain.info/charts/avg-confirmation-time https://blockchain.info/charts/difficulty https://blockchain.info/charts/hash-rate http://money.cnn.com/gallery/technology////bitcoin-mine/index.html https://blockchain.info/pools for some historical statistics, see http://organofcorti.blogspot.ca///-fiftypercent-club.html each block, there additional "mining reward" that incentivizes combining efforts generate blocks. data shows that the nxt network has remained highly decentralized since its inception: large (and growing) number unique accounts are contributing blocks the network and the top five accounts have generated the total number blocks proof work's resource costs confirming transactions for existing bitcoins, and creating new bitcoins into circulation, requires enormous background computing power that must operate continuously. this computing power provided so-called "mining rigs" operated "miners". bitcoin miners compete among themselves add the next transaction block the overall bitcoin blockchain. this done "hashing" bundling all bitcoin transactions occurring over the past ten minutes and trying encrypt them into block data that also coincidentally has certain number consecutive zeros it. most trial blocks generated miner's hashing effort don't have this target number zeros, they make slight change and try again. billion attempts find this "winning" block called gigahash, with mining rig being rated how many gigahashes can perform second, denoted gh/sec. winning miner who first generate the next needle-in-a-haystack, cryptographically-correct bitcoin block currently receives reward newly-mined bitcoins reward worth, the time this writing, around $,usd this competition among miners, with its hefty reward, repeats itself over and over and over every ten minutes so. early over bitcoins per day are generated, worth around million dollars per day. with much money stake, miners have supported blistering arms race mining rig technology better their odds winning. originally bitcoins were mined using the central processing unit (cpu) typical desktop computer. then the specialized graphics processing unit (gpu) chips high-end video cards were used increase speeds. field programmable gate array (fpga) chips were pressed into service next, followed mining rigs specialized application specific integrated circuits (asic) chips. asic technology the top the line for bitcoin miners, but the arms race continues with various generations asic chips now coming into service. the current generation asic chips are the so-called units, based the size their microscopic transistors nanometers. these are due replaced asic units late-. example upcoming state-of-the-art mining rig would butterfly labs "monarch" asic card, which provide gh/sec for electricity consumption watts and price $usd the mining rig infrastructure currently place support ongoing bitcoin https://nxtforum.org/general/network-analysis/ https://nxtblocks.info/#section/blockexplorer_charts july july bitcoinaverage.com places the price per bitcoin around $usd http://www.butterflylabs.com/monarch/ operations astounding. bitcoin asics are like autistic savants they are able only the bitcoin block calculation and nothing more, but they can that one calculation supercomputer speeds. november forbes magazine ran article entitled, "global bitcoin computing power now times faster than top supercomputers, combined!"[]. mid january statistics maintained blockchain.info showed that ongoing support bitcoin operations required continuous hash rate around million gh/sec. during the course one day, that much hashing power produced trillion trial blocks that were generated and rejected bitcoin miners looking for one the magic blocks that would net them million usd. almost all bitcoin computations not towards curing cancer modeling dna searching for radio signals from e.t.; instead, they are totally wasted computations. the power and cost involved this wasteful background mining support bitcoin enormous. all bitcoin mining rigs had "monarch" levels capability described above which they will not, until they are upgraded they would represent pool machines costing over million usd and consuming over megawatts continuous power while running electricity bill over million usd per day the real numbers are significantly higher for the current, less-efficient mining rig pool machines actually supporting bitcoin today. and these numbers are currently headed upward exponential growth curve bitcoin marches from its current one transaction per second its current maximum seven transactions per second. nxt solutions analysis the cost and energy efficiency the nxt network shows that the entire nxt ecosystem can maintained for about $,usd per year, which currently almost times less expensive than the cost running the bitcoin network proof work's resource costs pertaining coinholders addition massive electrical costs, there hidden fee for simply holding bitcoins. for each block found, the entity that generates the block receives stipend. the time writing, this stipend btc, producing inflation the total bitcoin supply this year alone. for each $usd worth bitcoin someone owns, that person paying $usd per bitcoin this year "pay" miners for keeping the network secure. http://blockchain.info/stats nxt network energy and cost efficiency analysis http://www.nxtcommunity.org/nxt/nxt/nxt-network-energy-and-cost-efficiency-analysis nxt solution since the complete supply nxt's billion coins was created with the genesis block, there inflation nxt. deflationary pressures are likely affect nxt the future, and planned feature called antideflation (design progress) will address that problem.