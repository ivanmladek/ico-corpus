iotex decentralized network for internet things powered privacy-centric blockchain the iotex team (support@iotex.io) last updated: july version disclaimer this paper intended technical overview. not intended comprehensive nor the final design; thus non-core aspects are not covered, such apis, bindings programming languages. abstract the majority internet things (iot) devices are deployed centralized way today, though decentralized nature. many problems have been exposed: scalability, high operating cost, privacy concerns, security risks, and lack functional values. blockchain, decentralization design, could good solution these problems. first, blockchain elastic enough solve the scalability challenge iot cost-effective manner. second, retaining data within well-scoped blockchains eliminates the concern iot data being stored cloud and potentially being leaked abused. third, blockchain with smart contract and tokens has huge potential enable autonomous coordination devices create functional values. however, existing blockchains have their limitations facing iot problems because the special characteristics iot, such as, large quantity and heterogeneity devices, and constrains computation, storage and power, etc. this paper introduces iotex, decentralized network for iot powered privacy-centric blockchain with four major innovations: blockchains blockchain for well-balanced distributed network that maximizes scalability and privacy cost-effective way; true privacy blockchain based relayable payment code, constantsize ring signature without trusted setup, and first implementation bulletproof; fast consensus with instant finality greatly improving the throughput the network and reducing transactional cost; flexible and lightweight iotex-based system architectures purpose-built for key iot applications across multiple industry sectors. contents internet things scalability problem lack privacy lack functional values blockchain ingredients operational models benefits and challenges benefits challenges related work blockchain and iot iotex: design and architecture overview design principle architecture: blockchains blockchain root blockchain subchains cross-blockchain communication built-in privacy-preserving transaction hide transaction receiver with relayable payment code enable confidential transactions problem statement cryptographic building blocks our improvements prove transaction amount range with bulletproofs fast consensus with instant finality background proof work proof stake delegated proof stake (dpos) practical byzantine fault tolerance randomized delegated proof stake (roll-dpos) elect candidates form committee propose block finalize block creating periodic checkpoints for light clients token iotex network iotex powered ecosystems shared economies smart home identity management future research work conclusion acknowledgements list figures iotex: blockchains blockchain, rootchain and subchains architecture. cross-blockchain transactions bandwidth model for sharing rootchain capacity transaction the bitcoin blockchain confidential transaction with public verifiability randomized delegated proof stake (roll-dpos) iotex powered shared economy iotex-powered smart home list tables iot benefits from blockchain properties comparison between rootchain and subchain privacy-preserving techniques for blockchains internet things the internet things (iot) rapidly emerging the manifestation the networked society vision everything that benefits from connection connected. yet, this farreaching transformation just the beginning. the number connected iot devices expected grow annually, rising billion and the global market iot expected grow from billion usd billion usd [], compound annual growth rate .%. though many industry experts and excited consumers have pegged iot the next industrial revolution the next internet, there are three main problems that are holding back the massively development and adoption iot. scalability problem the majority iot devices are connected and controlled centralized way today. iot devices are connected back-end infrastructures public cloud services premise server farms transmit data and receive control commands. currently, the scale iot bottlenecked the scalability and elasticity these back-end infrastructures, servers and data centers. the substantially high operating cost running the scale iot unlikely covered the profit from selling devices. consequentially, many iot vendors cannot provide cost-effective devices and applications that are scalable and reliable enough for real-world scenarios []. lack privacy iot expected enable mass participation end users mission critical services such energy, mobility, legal and democratic stability. privacy challenges originate from the fact that iot interacts with the physical world direct and automatic ways, and the amount data collected will increase substantially when scales up. some the common privacy threats, enumerated [], are: identification: associate (persistent) identifier, e.g., name and address pseudonym any kind, with individual; localization and tracking: obtain individual's location through different means; profiling: compile information dossiers about individuals infer interests association with other profiles and data sources; privacy-violating interaction and presentation: conveying private information through public medium and the process disclosing unwanted audience; life cycle transitions: devices often store massive amounts data about their own history throughout their entire life cycle that could leaked during changes control spheres device's life cycle; inventory attack: the unauthorized collection information about the existence and characteristics personal things, e.g., burglars can use inventory data check the property find safe time break in; linkage: linking different previously separated systems such that the combination data sources reveals (truthful erroneous) information that the subject did not disclose the previously isolated sources and, most importantly, also did not want reveal. all these common privacy threats are due data leak device level; or, data leak during communication; or, more often, data leak centralized parties. lack functional values most existing iot solutions lack meaningful value creation. "being connected" the most used value proposition. however, simply enabling connectivity does not make device smart useful. greater portion the value that iot produces comes from interaction, cooperation, and eventually autonomous coordination heterogeneous entities. few good analogies are that individual cells cooperate build multi-cellular organisms, insects build societies, humans build cities and states. cooperating, all these individuals unite build something that has greater value than their own. unfortunately, according [], legacy devices lack ability interact cooperate with each other due compatibility issues. the data sharing for business and operational insights nearly impossible. blockchain blockchain technology was introduced and its first implementation, i.e. bitcoin, was introduced year later, published the paper bitcoin: peer-topeer electronic cash system satoshi nakamoto (alias). essentially, blockchain distributed, transactional database that shared across all the nodes participating the network. this the main technical innovation bitcoin and acts public ledger for the transactions. every node the system has full copy the current chain state, which contains every transaction ever executed. every block contains hash the previous block, linking these two together. the linked blocks become blockchain. ingredients blockchain can perceived four-dimensional continuum that has three horizontal layers including transaction and blocks, consensus, compute interface, and governance, one vertical layer. transaction and blocks the lowest horizontal layer, signed transactions are gossiped among all nodes and blocks are generated full nodes. this the foundation blockchain where transferring digital assets (thus the inherent values) and account security are achieved via crypto primitives like elliptic curve signature, hash function and merkle tree. consensus the middle horizontal layer manifests the peer-to-peer nature the blockchain, where all nodes within the network reach consensus all internal states chain via techniques like proof work (pow), proof stake (pos) and their variants, byzantinefault tolerance (bft) and its variants etc. the consensus layer affects scalability the most. pow usually considered less scalable compared pos. addition, this layer heavily impacts security terms double spending and other attacks focused mutating the blockchain states unanticipated way. compute interface the first two horizontal layers form the shape blockchain while the compute interface layer critical make blockchain useful, which encompasses extensibility and usability. for instances, smart contract has been implemented ethereum enable programmability where one could count the distributed "world computer" for executing the terms contract. sidechain, together with merged mining, has also been developed intensively support programmability. second-layer protocols like raiden network [], state channel has been developed extend the scalability blockchain this layer. addition, tools, sdks, frameworks, and guis are also extremely important usability. the compute interface layer gives developers the capability develop decentralized apps (dapps), essential part making the blockchain useful and valuable. governance with organisms, the most successful blockchains will those that can best adapt their environments. assuming these systems need evolve survive, initial design important, but over long enough timeline, the mechanisms for change are most important, which known the vertical layer governance. there are two critical components governance: incentive: each group the system has their own incentives. those incentives are not always aligned with all other groups the system. groups will propose changes over time which are advantageous for them. organisms are biased towards their own survival. this commonly manifests changes the reward structure, monetary policy, balances power. coordination: since unlikely all groups have incentive alignment all times, the ability for each group coordinate around their common incentives critical for them affect change. one group can coordinate better than another, creates power imbalances their favor. practice, deciding factor how much coordination can done on-chain (e.g., votes the rules the system like tezos [], even roll back the ledger majority stakeholders don't like the change) vs. off-chain (such bitcoin improvement proposals (bips) []). operational models blockchains can categorized permissionless and permissioned depending how operated. for example, bitcoin permissionless meaning that anybody can create address and begin interacting with the network, which "build trust from trustless". contrast, the permissioned blockchain closed and monitored ecosystem where the access each participant defined and differentiated based role, which "build trust from less trusted". there are benefits and drawbacks each approach. regardless, all these considerations boil down fundamental design trade-offs among trust, scalability, computation and complexity. for example, bitcoin and ethereum are blockchains built top trustless nodes because scalability strongly desired. hence, either lots computation needed (in the case pow) more sophisticated consensus mechanism needed. contrast, fabric permissioned blockchain where all nodes are considered trusted and have cryptographic identities, e.g., issued member services like public key infrastructure (pki), which makes them highly scalable with low computation and relatively straightforward consensus mechanism. table iot benefits from blockchain properties blockchain property iot benefits from decentralization byzantine fault tolerance transparency immutability programmability scalability, privacy availability, security anchoring trust extensibility benefits and challenges blockchain and iot sensing and perception, transformation and transmission, and processing are the essence most intelligent things this planet. for iot, while the sensing and perception layer spontaneously distributed, the latter two are not for the time being, which the root for most scalability, privacy and extensibility problems. envision blockchain technology, serves the spinal cord and nervous system iot, the best candidate address the aforementioned iot-specific problems. benefits embracing blockchain technology, iot immediately benefits from the following aspects thanks blockchain's properties including decentralization, byzantine fault tolerance, transparency and immutability. table summarizes how iot benefits from blockchain properties. decentralization decentralization frees users and devices from centralized controlled and consistent monitoring, thus partially addressing the privacy concern imposed centralized parties who monopolize the market and try understand every aspect user/device for their own benefits, e.g., advertising. decentralization, under the context cryptoeconomy, also indicates "elasticity" that often defined "the degree which system able adapt workload changes provisioning and de-provisioning resources autonomic manner, such that each point time the available resources match the current demand closely possible". blockchain and the underlying cryptoeconomy can designed way that elastic enough and costeffective enough for iot scenarios and applications. for example, more blockchain nodes could spun the network has enough computation tasks with enough incentives perform. byzantine fault tolerance (bft) the objective byzantine fault tolerance defend against failures which components system fail arbitrary ways, i.e., not just stopping crashing but processing requests incorrectly, corrupting their local state, and/or producing incorrect inconsistent outputs. the byzantine failure models real-world environments which computers and networks may behave unexpected ways due hardware failures, network congestion and disconnection, well malicious attacks. bft property can leveraged achieve many desired security properties the context iot, e.g., eliminate man-in-the-middle (mitm) attacks there single thread communication that can intercepted and tampered, make denial service (dos) attacks almost impossible. transparency and immutability blockchain provides cryptographic assurances that the data anchored the chain always transparency and immutable, which can useful many scenarios, e.g., anchor states the iot world the blockchain for the purpose auditing, notarization and forensic analysis, identity management, authentication and authorization. programmability bitcoin came with basic programmability allow transaction succeed only the underlying small script execute successfully. ethereum enhances this feature achieve the turing-complete smart contract which written high-level programming language and executed small virtual machine known evm. this programmability can and should extended iot devices, some which currently only have simple and hard-coded logic that can't further programmed once shipped. challenges benefiting from common properties provided blockchains does not mean every blockchain suitable for iot use. fact, doesn't seem like any existing public blockchain can applied iot since there are quite few challenging problems. native privacy guarantee not enough native privacy guarantees from blockchain can only help address the privacy pain point iot the degree that retains data the chain rather than centralized servers, using pseudonymity. however, device's pseudonym ever linked its identity, everything ever did under that pseudonym will now linked it. silver bullet blockchain exists mentioned above, iot universe heterogeneous systems and devices with different purposes and capabilities. impossible find silver bullet blockchain solution that suits most scenarios. for instance, blockchain for coordinating millions industrial iot nodes should focus high scalability and transaction throughput, while blockchain for coordinating smart devices home should focus privacy and extensibility. macro level, the iot devices one specie definitely evolving fast pace, i.e., new technologies are integrated, new standards are developed, new devices are manufactured with new capabilities. contrast, micro level, the individual iot device's capability, purpose and operational environment also keep changing over time. chain operations are heavyweight the iot world, many devices are considered weak nodes because they are: incapable performing pow-based mining due the power and computation constraints; not able store large amount data (e.g., gigabyte level, not mentioning terabyte-level and petabyte-level) due the power and storage constraints; not able verify all transactions processing the whole blockchain; not able connect peers all the time, depending its uptime and connectivity quality. therefore, most existing blockchains are too heavyweight for iot. related work iota, which recently launched, built based upon unconventional technology known the tangle []. iota attempts decouple the state transition mechanism with the consensus canonicalisation mechanism throwing away concepts like blocks and chain. instead, transaction issuers are also transaction approvers and transaction verification constructed using directed acyclic graph (dag) make transaction fast and zero cost. the efficiency obtained losing globally definite states, which makes desired features like simple payment verification (spv) for light clients and smart contracts quite challenging. iot chain (itc) [], another iot blockchain project based china, inherits the same tangle structure from iota, and thus has the same pros and cons. hdac another recently proposed blockchain for iot korea, which partnered with hyundai group, will focus more specific fields iot such device authentication and machine-to-machine (mm) transaction. iotex: design and architecture overview design principle iotex aims become the privacy-centric and scalable spinal cord and nervous system for iot. achieve this and address the aforementioned challenges, our architecture design has the following principles. separation duties directly connecting all iot nodes into one single blockchain dream that can't become true. besides the fact that different iot applications require fundamentally different feature sets blockchain, hosting every iot node one blockchain makes grow fast size and computation, and eventually become too heavyweight for many iot devices. instead, separation duties makes sure each blockchain interacts with specific group iot nodes, and, the same time, interacts with other blockchains when needed. this analogous the internet heterogeneous devices first form intra-connected group, intranet. smaller intranets can further form larger intranet, which eventually connects the backbone the internet and communicates with each other. "separation duties" usually creates well balanced system maximize both efficiency and privacy. occam's razor each blockchain has different usages and applications, and should designed and optimized toward different directions. for example, blockchain that dedicated relaying transactions between its subchains does not need have turing-complete contract running top it; another blockchain that connects devices the same trust zone should not care about transactional privacy too much. iot friendly aforementioned, iot world full heterogeneous systems and nodes, stronger weaker terms their resources computation, storage and power. since opera tions that can done weak nodes can easily done strong nodes, operations the chain should designed and optimized for weak nodes, i.e., operations should lightweight enough conserve resources like computation, storage and energy. architecture: blockchains blockchain iotex network many blockchains that are hierarchically arranged, where many blockchains can run concurrently with one another while retaining interoperability. the iotex world, shown figure the root blockchain manages many independent blockchains, subchains. subchain connects and interacts with iot devices that share something common, e.g., they have similar functional purpose, operate similar environments, share the similar level trust. subchain does not function well, e.g., being attacked experiencing software bugs, the rootchain completely unaffected. addition, cross blockchain transactions are supported transfer value and data from subchains the rootchain from one subchain another via the rootchain. figure iotex: blockchains blockchain, rootchain and subchains architecture. the root blockchain public chain accessible anyone, which has three main objectives: relay value and data across subchains privacy-preserving way enable interoperability among subchains; table comparison between rootchain and subchain properties rootchain subchain public private public public private scalable required varies robust strongly required required privacy-centric required varies extensibility non-turing complete turing complete instant block finality required required supervision subchains, e.g., penalize the bonded operators subchain bond confiscation; settlement and anchoring payments and trust for subchains. with these defined objectives, the rootchain specifically focuses scalability, robustness, privacy-preserving functions and the ability orchestrate subchains. subchain, the other hand, could potentially private blockchain and relies the rootchain relay interact with other subchains. subchain desires flexibility and extensibility adapt diversified requirements different iot applications. subchain very likely run operators whose role contingent upon sufficiently high bond being deposited the rootchain. optionally, the system allows operators nominate one more operators act for with without extra bond. the operator acts like light client the rootchain, and full node the subchain seal new blocks. all, the properties the rootchain and subchains are summarized table root blockchain the root blockchain uses uxto-based model bitcoin and monero for the following reasons: transaction ordering becomes trivial without the need for nonce sequence numbers, which places minimal demands consensus schemes and allows transactions processed parallel; applying existent privacy-preserving techniques such ring signature, and zksnarks for hiding sender, receiver and transaction amount becomes possible. the root blockchain composed hash-linked blocks, and block composed header that hash-links the previous block and list transactions. the rootchain allows primarily two types transaction: basic transactions including ppkh, psh, multisig and etc., and advanced transactions that enable cross blockchain operations like bondedregistration, lock, relock, reorg and etc.. validated transactions are added into block that has dynamic size, upper-bounded mb. block produced every three seconds our consensus scheme detailed the next section. the rootchain designed non-turing-complete with the support stack-based script and rich set opcodes. subchains iotex comes with framework for developing and provisioning tailored subchain for decentralized iot applications encapsulating low layer primitives like gossip protocol and consensus mechanism. the permission model, specification, parameters, and transaction types the subchain can customized fit into its application. iotex subchains use account-based model, which better for tracking state transitions. there are two types accounts, similar with ethereum, regular accounts and contracts. valid transactions are added into the block, which produced the same consensus scheme the root chain achieve the same degree finality make cross-blockchain communication more efficient. subchains either use the root chain's token, iotextoken, define their own token. the token defined developers subchains can distributed publicly token sales exchanging public traded exchanges. smart contract supported subchains and runs top the lightweight and efficient virtual machine. are currently evaluating web assembly (wasm) [], emerging web standard for building high-performance web applications. wasm efficient and fast, and can made deterministic and sandboxed with some modifications attempted eos project []. other options are also being explored. with smart contract, iot devices connected the same subchain utilize the shared state two ways, first, devices can interact with the physical environment based their subchains' states, e.g., light bulbs turn and off themselves based "clock state" the subchain; the other hand, devices can mutate the state subchains when the physical environment changes, e.g., thermostat updates temperature via smart contract based its sensor data. cross-blockchain communication cross-blockchain communication expected used with high frequency iot applications. there always the need for iot device subchain coordinate with another device different subchain. again, limited iot devices' low computation and storage footprint, are motivated design cross-blockchain communication fast and cost-effective way. pegging and block finality pegging mechanism for scaling the bitcoin network via sidechains, originally proposed []. heavily relies simplified payment verification (spv) [], and allows bitcoins effectively "move" from the bitcoin blockchain the sidechain and back. the underlying idea simple: tokens are sent special address locked the bitcoin blockchain; once this lock transaction has been confirmed, one sends reorg transaction the sidechain including the lock transaction and proof inclusion the form merkle branch. the sidechain uses spv verify reorg transaction and, validated, creates the same amount tokens and sends them desired address the sidechain. today, pegging serves primitive for almost all cross-blockchain communication protocols, e.g., cosmos, lisk, rootstock. two separate pegging flows can easily coupled together make the so-called two-way pegging (wp) make transfer tokens back and forth. block finality the guarantee that the new block generated final and cannot changed. block finality impacts the concrete implementation pegging substantially one has wait until block finality achieved (at least with high pliability) the sending blockchain before requesting reorg. most public blockchains like bitcoin not have instant finality. the receiving blockchain can only get probabilistic assurance, e.g., more pow miners confirm transaction, more probable the transaction has been accepted. utilizing finalizing consensus addresses this problem because the receiving chain has assurance with one block confirmation the sending blockchain. for iot applications, cross-blockchain transferring value and data expected fast and cost-effective, which requires finalizing consensus mechanism both rootchain and subchains. iotex consensus achieves instant block finality, detailed the next section. cross-blockchain communication protocol let's review the protocol high level assuming address named charlie subchain wishes dispatch transaction address named david subchain and all three blockchains use the same type token without transaction fee for simplicity. note that applying pegging naively, four transactions are needed make "remote call" from subchain subchain via rootchain, i.e., lock transaction subchain reorg transaction against rootchain; another lock transaction rootchain; and another reorg transaction against subchain this process indicates david has wait for least blocks accept this "remote call", and data this "remote call" carries needs stored all three blockchains, which makes slow and expensive. aim optimize this process combing and into one relock transaction, which not only speeds the entire process but also avoids storing data subchain and the rootchain. our protocol depicted figure figure cross-blockchain transactions iotex cross-blockchain protocol has the following steps. each subchain registered the rootchain submitting transaction called bondedregistration the rootchain, including its chain name, chain id, configuration, genesis block, and nomination operators; this one-time process; when charlie wishes dispatch transaction david, initiates lock(x, h(d), f/t transaction where the amount tokens, h(d) the hash the data attached, f/t indicates the from and addresses including ids for both chains; once lock transaction has been included subchain charlie initiates relock(x, h(d), f/t transaction the rootchain including h(d), f/t some current stats subchain denoted well proof-of-inclusion that includes merkle branches recent block headers and merkle branches proving lock transaction has been included; the rootchain validates relock transaction and accepts including the latest block, and creates tokens and locked them special address; once relock transaction has been included the rootchain, charlie broadcasts reorg(x, f/t transaction rootchain's network with f/t and another proof-of-inclusion that proves the inclusion relock transaction; operators subchain become aware reorg transaction, and they validate and create the same amount tokens subchain and send them address david with associated. sharing the root blockchain's "bandwidth" one possible concern regarding cross-blockchain communication that malicious subchain spams the rootchain another subchain sending over huge amount cross-blockchain transactions that exhausted other blockchains' capacity. one way mitigate let each subchain bid for its quota and "rate-limit" transactions from subchain its quota exhausted. figure bandwidth model for sharing rootchain capacity one can define quota based the storage space within one block. assuming block size maximum, and reserved for normal transactions happening the table privacy-preserving techniques for blockchains techinique hide sender hide receiver hide amount stealth address pedersen commitments ring signatures zk-snarks rootchain, and reserved for all cross-blockchain transactions, which further divided into, say quota piece with each quota piece kb. subchain bids for quota pieces (with certain upper bound) according the intended usage putting down deposit proportional each round, only nkb can used within new block for transactions from this subchain and each such transaction charged "bandwidth" fee from the deposit (to reward miners who help enforce this rule); remaining transactions are queued and eventually dropped when timeout. the quota allocation could dynamic the sense that gets changes when the rootchain grows, shown figure one subchain spams others, burns out its deposit fast pace and eventually loses the quota. the other hand, one subchain puts down big deposit merely reserve big chunk bandwidth without actually using it, the rootchain will have mechanism refund part the deposit based the ratio between the average number transactions per block and the reserved bandwidth, which helps stabilize the reserved bandwidth close the actual usage. built-in privacy-preserving transaction the privacy provided natively bitcoin and ethereum limited pseudonymity. transaction details are not confidential. the transaction amount and the assets being transferred, its metadata, and its relationships other transactions, can trivially learned anyone. fact, there are three aspects privacy, sender privacy, receiver privacy and privacy transaction details this context. various cryptographic schemes can applied address them, shown table iotex integrates stealth address for receiver privacy, ring signature for sender privacy and pedersen commitments for hiding transaction amount with the following innovations and improvements: lightweight stealth address scheme designed exempt receivers from scanning the entire blockchain aware incoming transactions; ring signature optimized make compact size with distributed trusted setup. hide transaction receiver with relayable payment code stealth address stealth address technique originated from cryptonote protocol [], which solves the receiver problem using "half round" diffie-hellman key exchange protocol. assuming bob wants hide the fact that receives tokens from alice, here how works: bob creates two pairs private and public keys, denote (a, and (b, b), where and where the base point elliptic curve. bob publishes public keys (a, which are known his stealth address; alice calculates and sends tokens h(ra) using hash function random big number and bob's stealth address this transaction broadcast along with bob watches all transactions, calculates (h(ar) (since knows and with the hope that equals bob could spend tokens send with private key h(ar) one obvious drawback stealth address that the receiver has either scan all transactions (which not ideal iot world) the network rely the assistance trusted full node (which compromises privacy certain degree). payment code payment code has been designed address the above drawback stealth address with certain sacrifice privacy. the idea that alice notifies bob payment code confidential way and bob only watches transactions against addresses deriving from that code. therefore, this proposal has two flows notification, which one-time setup between two certain parties, and sending, which can happen multiple times between these two parties. assuming alice has master public-private key pair (mpubalice mprialice where mpubalice mprialice and wallet public-private key pair (wpubalice wprialice where wpubalice wprialice bob has master public-private key pair (mpubbob mpribob where mpubbob mpribob the one-time notification flow works below: bob derives (mpribob hash(, seed, metadata)) converts notification address addr(b publishes and listens alice picks chain code random; (mpubalice ||cc) the payment code for alice; alice calculates shared secret wprialice and sends masked payment code (mpubalice ||cc) ac(xof addr(b upon receipt, bob learns wpubalice and recovers wpubalice unmasks obtain (mpubalice ||cc). once the notification flow done, alice and bob establish one uni-directional private channel for sending tokens. the first sending flow works below: alice derives new address from the her payment code that already shared with bob) mpubalice hash(, seed, metadata) alice selects the next unused public key derived from note that the unused public key for the first round. alice calculates the new shared secret and calculates the ephemeral public key used send the transaction which sha(s bob could derive non-interactively since knows alice's payment code, and only listens address derived from sha(s and upon receipt, bob could use the tokens with private key sha(s the following sending flows works similarly. bob does not need scan rely full node scan all transactions. the notification transaction does leak the intention alice wants send something bob, but the actual "sending something" hidden from everyone else. relayable payment code further minimize the privacy leak, designed the relayable payment code top the original payment code proposal. while the sending flow remains the same, improved the notification flow make possible for alice secretly share her payment code with charlie without using the notification transaction, assuming alice and bob have one uni-directional private channel, and bob and charlie have another unidirectional private channel. achieve that, leverage hashed timelock contracts (htlcs), which require that the receiver payment either acknowledge receiving the payment prior deadline generating cryptographic proof payment forfeit the ability claim the payment, returning the sender. assuming charlie has master public-private key pair (mpubcharlie mpricharlie where mpubcharlie mpricharlie the improved notification flow works follows. charlie derives (mpricharlie hash(, seed, metadata)) converts notification address addr(c publishes it. note that published for alice calculate the shared secret, but not for receiving any transactions; alice generates her payment code (mpubalice ||cc) the same way; alice calculates shared secret wprialice and sends masked payment code (mpubalice ||cc) ac(xof with tokens incentive and lc(hash (cc)) bob using their uni-directional private channel, where lc, part the locking redeem script, states that the tokens become spendable the pre-image hash (v) given, i.e., hash(cc); bob, incentivized the tokens sent over from alice, sends tokens and lc(hash (v)) charlie using their uni-directional private channel; charlie, upon receiving bob's transaction, calculates wpubalice unmask alice's payment code, and spent the transaction disclosing hash(cc), which makes alice-to-bob transaction spendable reward bob. once this flow done, alice and charlie establish one uni-directional private channel for sending tokens. noteworthy that the routing alice's transaction could multiple hops. our relayable payment codes offer better privacy terms hiding the intention "sending something" the chain leveraging the existing private channels without adding any computation storage overhead the nodes, which, while designed for iot scenarios, usable for most blockchains like bitcoin. enable confidential transactions problem statement typical transaction the bitcoin blockchain shown figure essentially, blockchain transactions just tuple ({pkin,i {pkout,j {vi,j }), where {pkin,i are input addresses, {pkout,j are output addresses, and {vi,j are transaction amounts among input and output addresses. because bitcoin transactions are stored cleartext the public ledger, has raised lot security and privacy concerns. figure transaction the bitcoin blockchain the goal confidential transactions (see figure enable only senders and receivers transactions reveal the {vi,j values and conceal them from the rest the world. moreover, confidential transactions also allow other network entities verify the validity those transactions question without seeing the actual amounts. the realization confidential transactions blockchain requires number advanced cryptographic techniques. figure confidential transaction with public verifiability cryptographic building blocks proof knowledge proof knowledge, denoted (p, interactive proof between prover and verifier which the prover wants demonstrate that knows some information. more specifically, has (x, belonging relation where the problem and the solution (also called witness). knows and accepts only could convince that knows zero-knowledge proof zero-knowledge proof protocol, the prover proves statement the verifier without revealing anything about the statement other than that true, which protects the prover against the malicious verifier, which attempts gain more knowledge than what intended. the protocol can either interactive non-interactive. the key difference with non-interactive proofs that all interactions consist single message sent the prover the verifier. use the notation nizkpok(a, denote non-interactive, zero-knowledge proof knowledge the values and such that and all values not enclosed parenthesis are assumed known the verifier. when use non-interactive zero-knowledge proof authenticate auxiliary data, the resulting scheme referred signature knowledge []. basically, signature knowledge scheme means that one possession solution the problem has singed the message for the above nizkpok, use notation sok[m](a, denote signature knowledge message ring signature the concept ring signature was first introduced rivest al.[] special kind group signature. ring signature, the message signer selects set ring members including themselves the possible message signers. the verifier can convinced that the signature was indeed generated one the ring members. however, the verifier not able tell which member actually generated the signature. unlike general group signature, ring signature scheme does not involve designating group manager for managing the set ring members, thereby eliminating the possibility revealing the identity the actual message signer the the group manager. order provide anonymity smart contract token transactions, special kind ring signature, so-called linkable ring signature, has been employed the privacy-focused cryptocurrency monero []. linkable ring signature has additional property that any signatures generated the same signer, whether signing the same message disparate messages, has identifier (called tag) linking the signatures. this property enables third parties efficiently verify that the signatures were generated the same signer, without leaking the actual signer's identity. the linkable ring signature used monero called multi-layered linkable spontaneous anonymous group signature (mlsag) [], which ring signature set key-vectors and has communication complexity o(m(n )), where the number public/private key pairs owned the signer and the size ring. accumulator one-way accumulators, which were first proposed benaloh and mare [], are defined one-way hash functions with the property being quasi-commutative. quasi-commutative function satisfies that, for all and for all have (x, (x, one-way accumulator allows combine set values into secure digest and this digest does not depend the order which the values are accumulated can also used generate witness that enables one attest that given value actually part the accumulator. commitment scheme commitment scheme protocol enabling user commit value his choice without revealing that value the recipient the commitment. later phase, when the user asked reveal the committed value, the recipient will have the means verify that his revealed value indeed unconditionally linked his commitment. commitment scheme should meet two requirements. while the hiding requirement prevents the recipient from learning the content the commitment, the biding requirement prevents the user from cheating when opening this commitment. pedersen commitment scheme [], the domain parameters are cyclic group prime order and generators for committing the vala random number and set the commitment ues one picksq pedcom(v our improvements [], sun al.presented ringct which employed cryptographic accumulator further reduce the communication complexity o(n) the cost additional computations. note that although ringct reduced the communication complexity significantly when compared mlsag, the domain parameter generation the accumulator requires one-time "trusted setup" process liked zcash. hence one has trust that whoever generated the secret parameters destroy them when they are done, which has raised security and privacy concerns for the system. address this issue, our solution employ secure multi-party computation (smpc) protocol among set bootstrapping nodes the blockchain generate secret domain parameters secure and distributed manner. addition, the following directions are currently being investigated improve the ringct-like protocols terms communication and computational overhead: new linkable ring signature scheme with communication complexity less than o(n) new approach for aggregating multiple linkable ring signatures sigma protocol for trustless setup secret domain parameters aim propose novel confidential transaction solution that able achieve good trade-off between communication and computation cost. prove transaction amount range with bulletproofs drop-in replacement pedersen commitments, bulletproofs [], new noninteractive zero-knowledge proof protocol with very short proofs and without trusted setup, has been proposed recently, which reduces the size range proof from linear sublinear and further reduces the transaction size without additional computation overhead. since bulletproofs fit iotex's design principle well, are going integrate bulletproofs into iotex. fast consensus with instant finality background proof work proof work (pow) the backbone reach the global consensus most blockchains, including bitcoin and ethereum. pow makes computationally difficult construct valid block and attach blockchain. the longer the blockchain becomes, the harder reverse any transaction recorded previously the blockchain. manipulate the blockchain, attacker needs own percent the whole computation power pow-based blockchain network. although pow provides elegant solution for the global consensus large distributed blockchains, has several inherent drawbacks. the overall computation cost maintain the global consensus the same cost the percent attack. this means that even the majority the blockchain participants are honest, they still have use lot electricity maintain the blockchain, which not suitable for the environment iot networks that usually favor energy efficiency. addition, the level individual devices, computing pow usually costs lot cpu cycles and memory usage, which poses difficult requirements the hardware manufacturing and costs embedded iot devices. last but not lease, pow does not provide instant finality which critical property required construct efficient cross-chain communication. proof stake proof stake (pos) was proposed efficient alternative pow for blockchains reaching consensus, which aims avoid the above mentioned issues pow. the basic idea pos that randomly chosen set nodes vote the next block, and their votes are weighted based the size their deposits (i.e. stake). certain nodes misbehave, they may lose their deposits. this way, without computationally intensive pow, the blockchain can run much more efficiently, and can achieve economic stability: the more stake participant has, the more incentive the node has maintain the global consensus, and the less likely the node misbehaves. there are couple public pos designs and implementations, such tendermint that has been adopted many applications []. delegated proof stake (dpos) delegated proof stake (dpos) improves upon the idea pos the way that dpos allows participants choose some delegates represent their portions stakes the network. for example, alice can send message the network grant bob the ability represent her stake and vote behalf her. dpos offers several benefits for our iot applications: small players can pool their stakes have higher chance together participate block proposing and voting, and share the rewards afterwards. resource-constrained nodes can choose their delegates, not all the nodes need stay online contribute consensus. delegates can the nodes with strong power supply and network conditions, and also can chosen dynamically and randomly, will have higher overall availability for the network reaching consensus. the typical cryptocurrencies using dpos include eos and lisk []. practical byzantine fault tolerance practical byzantine fault tolerance (pbft) was proposed castro and liskov efficient and attack-resistant algorithm for reaching agreements distributed asynchronous network. plan use pbft for the underlying voting algorithm our dpos consensus mechanism, because concise and well-studied algorithm that provides quick finality that critically important for building efficient and salable blockchain. demonstrated castro and liskov's original paper, pbft offers both availability and safety most third the network nodes are faulty malicious, and the network cost pbft very minimum, i.e. about percent compared unreplicated network system. the typical cryptocurrencies based pbft include stellar and zilliaq []. randomized delegated proof stake (roll-dpos) have fast and efficient consensus mechanism with instant block finality the context iot, combine the concepts dpos, pbft and verifiable random functions (vrfs). vrf was first introduced micali al. and family functions that can produce publicly verifiable proofs for the correctness their random outputs. high level, our proposed roll-dpos has four phases elect candidates, form committee, propose block and finalize block. figure randomized delegated proof stake (roll-dpos) elect candidates all notes the iotex network could participate this phase terms voting for the committee candidates. encourage nodes vote, the system makes sure the delegates share forged rewards with their voters. the candidates forms set least delegates; this number will increase the future further avoid the centralization the mining power. once the candidates are selected, they will fixed one epoch, which consistent iterations. form committee each iteration, random committee size selected from the candidate pool using vrf for creating blocks the next rounds. the idea use the hash the block the last iteration and the node's private key inputs the vrf produce boolean output indicating one selected the committee member, priority indicating one's order propose block and proof indicating one's qualification for proposing the block certain round. the use vrf important provides non-interactive way sort all delegates for proposing blocks fairness and security way. this end, use the efficient vrf being used algorand []. propose block each round (which roughly every seconds), every committee node proposes new block and broadcasts the network, together with the priority and the proof. only the block proposed committee node with highest priority and has not been proposed the same iteration considered other nodes, which called candidate block. finalize block the same round, all other nodes uses pbft vote for/against the candidate block. more than committee nodes agree candidate block's validness, finalized and appended the blockchain everyone the network. after that, propose block and finalize block are executed the next round; the current iteration finishes, another random committee will formed before propose block and finalize block are executed. creating periodic checkpoints for light clients iot networks, expect lot devices are light clients, which are the blockchain participants that don't record the full transaction history locally. considering the storage overhead the full blockchain, e.g., over for bitcoin [], many embedded low-cost iot devices may not have the capacity download the full blockchain. however, these light clients still have ability quickly verify the correctness the blockchain and interact with the design included satoshi's original bitcoin whitepaper []. however, using pos instead pow has disadvantage for light clients. when verifying correctness pos based blockchains, clients need download list public keys and signatures for block proposers and voters, and the sets block proposers and voters may change for each block. thus, when light clients come back online after staying offline for while, the clients may need download large number public keys and signatures, and then verify all them. mitigate this performance issue, vitalik, the inventor ethereum, has proposed creating periodic checkpoints the blockchain, called epochs [], for example every blocks. each checkpoint can verified based the previous checkpoint, such that light clients can catch with the whole blockchain much faster. token iotex network the native digital cryptographically-secured token the iotex network (iotx) major component the ecosystem the iotex network, and designed used solely the network. prior the launch iotex mainnet, the token will exist erc compatible token the ethereum blockchain, which will migrated token the iotex mainnet when the same launched. iotx required virtual crypto "fuel" for using certain designed functions the iotex network (such executing transactions and running the distributed applications the iotex network), providing the economic incentives which will consumed encourage participants contribute and maintain the ecosystem the iotex network. computational resources are required for running various applications and executing transactions the iotex network, well the validation and verification additional blocks information the blockchain, thus providers these services resources would require economic incentives for the provision these resources (i.e. "mining" the iotex network) maintain network integrity, and iotx will used the unit exchange quantify and pay the costs the consumed computational resources. iotx will mineable for years, with rewards the mining reducing over time based linear gradient reduction model. iotx integral and indispensable part the iotex network, because the absence iotx, there would common unit exchange pay for these costs, thus rendering the ecosystem the iotex network unsustainable. iotx non-refundable functional utility token which will used the unit exchange between participants the iotex network. the goal introducing iotx provide convenient and secure mode payment and settlement between participants who interact within the ecosystem the iotex network. iotx does not any way represent any shareholding, participation, right, title, interest iotex foundation ltd. (the foundation), its affiliates, any other company, enterprise undertaking, nor will iotx entitle token holders any promise fees, revenue, profits investment returns, and are not intended constitute securities singapore any relevant jurisdiction. iotx may only utilized the iotex network, and ownership iotx carries rights, express implied, other than the right use iotx means enable usage and interaction with the iotex network. particular, iotx: (a) non-refundable and cannot exchanged for cash (or its equivalent value any other virtual currency) any payment obligation the foundation any affiliate; (b) does not represent confer the token holder any right any form with respect the foundation (or any its affiliates) its revenues assets, including without limitation any right receive future revenue, shares, ownership right stake, share security, any voting, distribution, redemption, liquidation, proprietary (including all forms intellectual property), other financial legal rights equivalent rights, intellectual property rights any other form participation relating the iotex network, the foundation, the distributor and/or their service providers; (c) not intended representation money (including electronic money), security, commodity, bond, debt instrument any other kind financial instrument investment; (d) not loan the foundation any its affiliates, not intended represent debt owed the foundation any its affiliates, and there expectation profit; and (e) does not provide the token holder with any ownership other interest the foundation any its affiliates. iotex powered ecosystems the iotex blockchain supports variety iot ecosystems, shared economies, smart home, autonomous vehicles, and supply chain, etc. different types developers leverage iotex different ways. the developers supported iotex include iot hardware manufacturers, iot device control system developers, smart home app developers, shared economies device manufacturers, supply chain data integrator, data crowdsourcing vendors, autonomous cars developers, etc. this section describes few iotex powered ecosystems. shared economies recent years, many companies have focused shared economies, from rides sharing such uber/lyft/didi, home sharing such airbnb, bikes sharing such mobike/ ofo, small item level sharing like battery bank, umbrella, etc. they all provide people with better living, although some them are suffering from their business models. different topic discuss their business models; here mainly focus their technological architecture. among all shared economies, ride sharing the one that can't avoid human operation, viz., drivers. not iot powered economy. however, the future, when autonomous car technology becomes mature and popular, ride sharing will powered iot. all iot powered shared economies share some similarities: they all require lock that can opened deposit and rental fee. very possible and also efficient power the whole sharing and returning process using iot device. centralized world, the economies are powered centralized cloud. there are various drawbacks: large deposit held company that may not trustworthy. recently, there have been many cases where the company that runs shared bike service china can't pay back deposits its users; the shared economies are not completely driven community. many shared things are owned company. this has caused waste society resource. take shared bikes example. when the shared bikes companies are out business, the bikes are disposed. due the centralized nature, the user data will stored and controlled one company. there are risk that either the cloud the client can hacked obtain user data. iotex, infrastructure, could utilized power these applications without the issues above and make shared economies decentralized and more efficient. concretely, iotex-powered shared economy provides the following benefits: deposit completely settled smart contract. with one holding back the money, returning the deposit always guaranteed. users don't have trust the company use the service. figure iotex powered shared economy each shared thing realizes its value and mission autonomous way. the ecosystem, doesn't matter who owns the shared things it. everyone can own and contribute the ecosystem. the economy can run community. result, companies can play role maintaining the iot lock and manage the community. much lighter business model that companies can fast expand and serve more people. again, users don't have trust the company maintain their data. their data kept the chain with privacy protection. fig. describes how shared economy works based iotex blockchain. smart home the existing smart home market, many iot device manufacturers are still using out-of-date technologies develop their products. they need large amount development work their cloud. the cost development and maintenance high, and performance low because the round trip required the cloud. deploying their products onto iotex blockchain will largely reduce operating cost engineering and cloud computing, and the same time, largely increase the performance their devices. simple smart light bulb example, with cloud technology, takes two trips from user instruction changing the state light bulb. manufacturers are not cloud experts often their service not optimal. the round trip can take one three seconds. this forces them use cloud service big companies. there are two downsides using these cloud services: manufacturers can't fully control the availability cloud services. they need continuously pay for the cloud service despite their one-time charge selling their iot devices. there are risks their cloud, client side, intranet being hacked causing user data stolen home security problems. contrast, iotex blockchain manages the devices locally and interact with public chain the internet when necessary. the public chain maintained community. there maintenance cost for iot manufacturers. iotex blockchain has privacy protection that can prevent leaking data control being hacked even the intranet not safe. figure iotex-powered smart home addition allowing iot manufacturers deploy their iot devices iotex blockchain, iotex will partner with iot chip makers develop iotex blockchainenabled chips accelerate the design and manufacture cycles iot devices. iot manufacturers will simply integrate the chip get their devices supported iotex blockchain. identity management the growing world iot has impacted how identity and access management (iam) need work. terms the identity things, iam must able manage user-todevice, device-to-device, and/or device-to-service/system. one straightforward way for identity management consider iotex blockchain decentralized pki system (thanks its immutability) where each entity issued cryptographic identity the form tls certificate and the corresponding private. this certificate, which tends short-lived one, signed the device's built-in and long-lived certificate and published iotex blockchain (either rootchain subchain). peers and other entities can access and trust the short-lived certificate anchored the blockchain, and things can then authenticate when they come online, ensuring secure communication between other devices, services and users, and prove their integrity. addition, the built-in and long-lived certificates for devices could arranged hierarchy, like the conventional pki, where parent devices could sign children certificate. with the hierarchy, revoking and rotating certificates becomes possible. for example, one device gets compromised, its parent device even grandparent device could sign revocation command and send the blockchain where the latter invalidate the device's certificate. future research work some ongoing and future directions research improve iotex are follows. privacy-preserving computation there are several areas this direction are actively exploring: how retain confidential states the blockchain which can used for computing certain group nodes; privacy-preserving smart contract where smart contract can evaluated when its business logic protected encryption. while fully homophobic encryption and indistinguishable obfuscation schemes are the holy grail theory, practical proposals like hawk promising for the near future; further reduce the computation and storage footprint the privacy-preserving techniques iotex currently using; the quantum-safe version privacy-preserving techniques iotex currently using such quantum-safe ring signature. states pruning and transferring are evaluating different ways safely prune the states stored subchains reduce the storage footprint since many iot devices have limited storage. compression blocks and transactions definitely low-hanging fruit. besides, transferring states from subchain rootchain (since the latter stronger terms storage) efficient and privacy-preserving way also interesting topic investigate. governance and self-amending while iotex blockchains offer incentives for maintaining consensus its ledgers, does not have on-chain mechanism for now that seamlessly amends the rules governing its protocol and rewards protocol development. plan conduct research governance and self-amending address this. tree structured blockchains the current iotex two-layer blockchain and naturally, should extended tree blockchains leveraging techniques like plasma and cosmos. the plan evaluate these proposal and enhance the current design iotex eventually support more complex hierarchical structures. conclusion this white paper, introduced iotex, scalable, private, and extensible blockchain dedicated for internet things, with its architecture and core technologies including blockchains blockchain maximize scalability and privacy, true privacy blockchain based relayable payment code, constant-size ring signature without trusted setup, and first implementation bulletproofs, fast consensus with instant finality based vrf and pos for high throughput and instant finality, and flexible and lightweight iotex-based system architectures. acknowledgements would like express our gratitude our mentors and advisers and the many people the iot, cryptography and cryptocurrency communities for their early feedback and constructive suggestions. references adam back al. "enabling blockchain innovations with pegged sidechains". in: url: http://www. opensciencereview. com/papers//enablingblockchaininnovations-with-pegged-sidechains (). josh benaloh and michael mare. "one-way accumulators: decentralized alternative digital signatures". in: advances cryptology eurocrypt workshop the theory and application cryptographic techniques lofthus, norway, may proceedings. ed. tor helleseth. berlin, heidelberg: springer berlin heidelberg, pp. isbn: ---. doi: ./---_. url: https://doi.org/. /---_. bitcoin improvement proposals. https://github.com/bitcoin/bips. blockchain size. https://blockchain.info/charts/blocks-size. benedikt bunz al. bulletproofs: efficient range proofs for confidential transactions. cryptology eprint archive, report https://eprint.iacr. org//. vitalik buterin. light clients and proof stake. https://blog.ethereum. org////light-clients-proof-stake/. miguel castro, barbara liskov, al. "practical byzantine fault tolerance". in: osdi. vol. pp. melissa chase and anna lysyanskaya. "on signatures knowledge". in: advances cryptology crypto annual international cryptology conference, santa barbara, california, usa, august proceedings. ed. cynthia dwork. berlin, heidelberg: springer berlin heidelberg, pp. isbn: ----. doi: ./_. url: https: //doi.org/./_. eos. https://eos.io/. ericsson. "ericsson mobility report: the pulse the networked society". in: ericsson, sweden, tech. rep. eab- (). sanjam garg al. "candidate indistinguishability obfuscation and functional encryption for all circuits". in: siam journal computing (), pp. yossi gilad al. "algorand: scaling byzantine agreements for cryptocurrencies". in: proceedings the symposium operating systems principles. acm. pp. hdac blockchain for iot. https://hdac.io/. hyperledger fabric. https://www.ibm.com/blockchain/hyperledger.html. internet things (iot) market software solution (real-time streaming analytics, security solution, data management, remote monitoring, and network bandwidth management), service, platform, application area, and region global forecast https://www.jasper.com/sites/default/files/ cisco-jasper-hidden-costs-of-delivering-iiot-services-en_.pdf. itc blockchain for iot. https://iotchain.io/. ahmed kosba al. "hawk: the blockchain model cryptography and privacypreserving smart contracts". in: security and privacy (sp), ieee symposium on. ieee. pp. lisk. https://lisk.io/. silvio micali, michael rabin, and salil vadhan. "verifiable random functions". in: foundations computer science, annual symposium on. ieee. pp. monero private digital currency. https://getmonero.org/. satoshi nakamoto. bitcoin: peer-to-peer electronic cash system. shen noether and adam mackenzie. "ring confidential transactions". in: ledger vol. (), pp. doi: https://doi.org/./ledger. torben pryds pedersen. "non-interactive and information-theoretic secure verifiable secret sharing". in: advances cryptology crypto proceedings. ed. joan feigenbaum. berlin, heidelberg: springer berlin heidelberg, pp. isbn: ----. doi: ./--_. url: https://doi.org/./---_. serguei popov. "the tangle". in: iota (). raiden network. https://raiden.network/. ronald rivest, len adleman, and michael dertouzos. "on data banks and privacy homomorphisms". in: foundations secure computation (), pp. ronald rivest, adi shamir, and yael tauman. "how leak secret". in: advances cryptology--asiacrypt (), pp. nicolas van saberhagen. cryptonote samsung. samsung artik and successful strategies for industrial iot deployment. samsung, stellar. https://www.stellar.org/. shi-feng sun al. "ringct compact accumulator-based (linkable ring signature) protocol for blockchain cryptocurrency monero". in: computer security esorics european symposium research computer security, oslo, norway, september proceedings, part ii. ed. simon foley, dieter gollmann, and einar snekkenes. cham: springer international publishing, pp. isbn: ---. doi: ./----_. url: https://doi.org/./ ----_. tendermint. https://tendermint.com/. tendermint ecosystem. https://tendermint.readthedocs.io/en/master/ ecosystem.html. tezos: new digital commonwealth. https://www.tezos.com/. the hidden costs delivering iiot services. https www jasper com sites default files cisco jasper hidden costs delivering iiot-services-en_.pdf. webassembly. http://webassembly.org/. jan henrik ziegeldorf, oscar garcia morchon, and klaus wehrle. "privacy the internet things: threats and challenges". in: security and communication networks (), pp. zilliqa. https://www.zilliqa.com/.