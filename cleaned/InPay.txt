inpay: -way pegged smart-contract system the waves platform version commit exypno kouneli june introduction developers have been experimenting with decentralized applications, dapps, since early days decentralized ledgers. the applications were proposed both separate blockchains, such namecoin [], datacoin and several others, and applications top the existing blockchains, like omni and counterparty []. big step forward for dapps adoption was made ethereum project []. general-purpose system created buterin, wood, wilcke and many others has set the way for explosive growth other decentralized ecosystems. the time writing this paper, market capitalization ethereum platform has reached billion usd, while total capitalization dapps projects was billion usd. main direction dapps development ethereum creating real-world agnostic blockchain contracts. the same time many industries are experiencing the growing need for easy-to-use blockchain tokens backed real world. with this mind, ivanov created waves [], system focused providing means create tokens for anybody without specific technical expertise. waves platform presumes that blockchain applications, that are crucial for complex use case scenarios, should developed plugins waves. this paper describes the principles that allow ethereum-compatible smart contract system function plugin waves. this paper organized follows: first describe the rules which inpay detects transactions waves blockchain that should processed inpay contracts system phonon; then observe principles inpay transaction-based state machine. finally briefly describe principles phonon system (details are published separate paper []). intend develop these principles into stable features inpay due the fact that the project community strong and keeps growing, despite having suffered major setbacks that could crumble other projects. another factor influencing our choice good distribution among cryptocurrency enthusiasts, that allows expect steady price growth and avoid speculation and emerging price action followed only loss volume and interest. inpay transaction matching inpay plugin operation based the upcoming update for waves blockchain that introduces new datatransaction transaction type. this type transactions contains data field with arbitrary length and per-byte fees. inpay plugin matches all transactions waves blockchain and executes those, that follow inpay transaction ruleset, the inpay virtual machine (ipvm). ipvm has its own state based its own ledger and contract objects with memory. ipvm also has its own inpay token that equal waves-based inpay token and can swapped via phonon system. detected inpay transaction, datatransaction transaction should follow this set rules: fees should paid inpay tokens first five bytes data-field should set (encoded "inpay" marker) sixth byte version byte and should set appropriate value. currently supported versions are (for inpay virtual machine), (for phonon) and xff (miner signaling). inpay transaction fees paid waves blockchain are counted during contract execution ipvm. thus fees can paid partly waves chain via waves-based inpay tokens and partly ipvm chain via inpay-based inpay tokens. however, fees for datatransaction transaction still should paid fully waves blockchain and contrast ethereum, excessive fees for inpay are not returned sender. special inpay transaction with version xff (miner signaling) should processed only sender address exactly the same coinbase address. structure miner signalling transaction: vesrion -byte version inpay plugin runned miner node payload arbitrary size encoded json-dictionary with signaling options. miner signaling transactions will used the future synchronize inpay plugin updates. should noted that miner may not include miner signaling transaction, for instance, not aware inpay payload. inpay contract system following ethereum, inpay virtual machine transaction-based state machine. can fully described state and ruleset any moment. change state carried out applying ruleset transaction and previous state u(s every transaction, and thus every state change, determined and reversible case waves blockchain reorganisation. transactions inpay system set values: nonce: integer value equal the number transactions sent the sender gasprice: integer value equal the number minimal unit paid per unit gas for all computation costs incurred result the execution this transaction gas: up-front paid fees to: the -byte address the message call's recipient or, for contract creation transaction -byte zero-string value: integer value equal the number indivisible units ipvm inpay tokens transferred the message call's recipient the case contract creation, endowment the newly created account [optional] init: unlimited size byte array specifying the evm-code for the account initialisation procedure [optional] data: unlimited size byte array specifying the input data the message call meanings fields coincide with meanings field evm transactions []. some differences between evm transactions and ipvm transactions should made: excesses up-front paid gas are not returned sender instead -bit ethereum addresses are using waves addresses without hashsum (-byte version -byte blockchain bytes hash) ipvm transaction doesn't contain signature (authorization processed transport level waves blockchain) transaction execution follows the rules evm. execution environment coincides with described with the only exception: instead ethereum block header the environment contains information about waves block, where gaslimit set the fee schedule for ipvm the same evm for simple operations: name value description* gzero nothing paid for operations the set wzero gbase amount gas pay for operations the set wbase gverylow amount gas pay for operations the set wverylow glow amount gas pay for operations the set wlow gmid amount gas pay for operations the set wmid ghigh amount gas pay for operations the set whigh gextcode amount gas pay for operations the set wextcode gbalance amount gas pay for balance operation. gsload paid for sload operation. gjumpdest paid for jumpdest operation. while being significantly cheaper for work with memory and other contracts: name value description* gsset gsreset rsclear rself destruct gself destruct gcreate gcodedeposit gcall gcallvalue gcallstipend gnewaccount gexp gexpbyte gmemory gtxdatazero gtxdatanonzero gtransaction glog glogdata glogtopic gsha gshaword gcopy gblockhash paid for sstore operation when the storage value set non-zero from zero. paid for sstore operation when the storage value's zeroness remains unchanged. refund given when the storage value set zero from non-zero. refund given (added into refund counter) for self-destructing account. amount gas pay for selfdestruct operation. paid for create operation. paid per byte for create operation succeed placing code into state. paid for call operation. paid for non-zero value transfer part the call operation. stipend for the called contract subtracted from gcallvalue for non-zero value transfer. paid for call selfdestruct operation which creates account. partial payment for exp operation. partial payment when multiplied dlog (exponent)e for the exp operation. paid for every additional word when expanding memory. paid for every zero byte data code for transaction. paid for every non-zero byte data code for transaction. paid for every transaction. partial payment for log operation. paid for each byte log operation's data. paid for each topic log operation. paid for each sha operation. paid for each word (rounded up) for input data sha operation. partial payment for *copy operations, multiplied words copied, rounded up. payment for blockhash operation. phonon system detailed specification phonon published separate paper []. here briefly describe principles phonon system. phonon system uses masternode architecture provide the bridge between waves and ipvm blockchains. become masternode, inpay node should lock collateral multisig (upcoming waves feature) account with one key belonging the node, one developer's account and one inpay community manager. later, when more than miners operate with inpay plugin, this requirement will substituted with locking collateral anyone-can-spend address (address with known secret key), however miners with inpay plugin will not process transactions from this address masternode follows phonon rules. special contract will mined ipvm blockchain and served universal multi-asset. supports erc interface, adding the 'asset id' parameter every operation. 'asset id' parameter coincide with asset waves. waves assets can exchanged corresponding ipvm assets sending them one the masternodes. thus masternode that receive special transaction with waves asset should issue the same amount asset ipvm and send the address provided the transaction. while less than miners operate with inpay plugin, masternodes should process exchanges only for the most liquid assets like wtc and mrt, and reaching threshold will allow any asset exchanged. all assets received masternode are available for withdrawals from ipvm via special transaction, user can choose any masternode that has enough corresponding assets. wallets should not send and masternodes should not process deposits that increase assets balance inpay (ratio asset inpay tokens should determined via dex []) higher than collateral. masternode's portfolio value reaches collateral due increase some assets prices, that masternode should redistribute assets other masternodes. masternodes receive special fee for deposit and withdrawal operations. additionally inpay community members are planning create special fund which will reward operation masternodes. case malfunction (including long offline asset portfolio spending) collateral used compensate for losses. conclusion this paper propose -way pegged smart contract system the waves platform built plugin waves node and utilizing new datatransaction type. inpay implements transaction based state machine with its own transaction database, blockchain state and accounts. since inpay state machine based evm (ethereum virtual machine), large part ethereum ecosystem can easily transferred inpay blockchain, however some changes will still needed meet the requirements waves fees calculation. besides that, inpay introduces phonon: the bridge between waves assets and special contract assets inpay state machine. this system based masternodes that serve liquidity providers, and allows easily transfer arbitrary tokens from waves inpay blockchains and vice versa. references vinced, namecoin repository, https://github.com/vinced/namecoin datacoin website, http://datacoin.info gross and co-authors, omni specification, https://github.com/omnilayer/spec zuber and co-authors, counterparty documentation, https://counterparty.io/docs g.wood, ethereum yellow paper, https://ethereum.github.io/yellowpaper/paper.pdf s.ivanov, waves whitepaper, https://wavesplatform.com/files/whitepaper_v.pdf exypno kouneli, not yet published kiselev, tolmachev, nazarov, git branch, https://github.com/wavesplatform/waves/commits/ t-data-transaction ethereum wiki, erc pag, https://theethereum.wiki/w/index.php/erc_token_standard waves platform blog, https://blog.wavesplatform.com/what-is-waves-dex-cda