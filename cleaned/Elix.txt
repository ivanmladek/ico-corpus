abstract due its trustless nature, blockchain technology will come dominate many interconnected systems its rate adoption grows. when cryptocurrencies first became available the public, initial methods mining blocks used tremendous amounts hashing power. however, elixir proposes and implements new mining system based proof time and batch creation with genesis transfers. elixir will also the base token lending platform capable analyzing financial transactions between borrowers and lenders, and rewarding them for successful loan payoffs. the pages below, the mining system which elixir built will explained full detail, well the initial market that elixir intends pursue introduce cryptocurrencies the mainstream and provide real world use-cases this new blockchain technology. introduction and purpose ethereum smart contracts are revolutionizing the way information distributed across the world. the ethereum blockchain can include these contracts, allowing new tokens and services created for all manner applications. the financial industry incredibly large and centralized, and has often been regarded unfriendly and profiteering market that does not have the best interest its clients mind. with the creation and mass adoption blockchain technology, now possible move towards decentralized and more trustworthy system. elixir aims revolutionize the way lenders and borrowers make and receive loans with one another. traditional model, borrower will request amount money from lender, usually bank credit union, and pay back through installments over specified amount time with interest addition the principal sum. this results lender being rewarded via interets, while the borrower has received suitable loan they have paid back time. however, the borrower left unrewarded for completing their part the deal. the elixir lending platform intends reward both lender and borrower for completing loan successfully and uses rewards incentivize each borrowing participant pay back their loans their agreed installments and time. additionally, the lending service will eliminate the need pay for brokers, allowing the lender and borrower receive the best deal between one another. help financial applications cryptocurrencies become mainstream (in way other than simply functioning currency, such bitcoin), the initial lending service will provided the form mobile application. this application will serve kind social payment network between friends and family. addition, this initial lending service will include zero collateral and interest, providing purely incentivized reward system for borrowers and lenders partake. the long term, this lending service will expand global scale, allowing anonymous participants create loans and borrow from others decentralized manner. this system will track the credibility borrower show how trustworthy they are, and give the lender idea any potential risk loan being made borrower would have. elixir aims simplify the process requesting loan. receive loan from bank credit union, one must apply through the bank's lending department and identify how much being borrowed, for what reason, the length time, and what interest rate. all these factors are then taken into account and decision made based the worthiness the borrower's credit score, which also calculated way that favors people who have simply had credit profile for longer amount time. one elix's goals develop new credibility/reputation system tied user's wallet address, without requiring participants divulge information that will kept central server. this creditability system will used the global lending service, and will implemented after the friend and family lending application. requesting loan the global lending platform will simple providing the amount elixir borrower wants, the time they need pay back, the number installments that will made, and the collateral that will put ensure the repayment loan. genesis pair mining elixir can mined transferring any amount elixor (the base layer elix) from parent child genesis address. elixor was distributed genesis address holders, who provided parent and child ethereum address that were locked into the elixir smart contract. there are three types addresses that exist exor, the base layer elix: parent addresses, child addresses, and normal ethereum addresses. each parent address has associated child address. each child address begins with one unit currency. every other type address begins with zero balance. when the owner parent-child pair wishes generate currency, they move nonzero amount currency into the parent from its child. the first ten transactions from child its parent trigger the generation currency the child. elaborate, each owner parent-child pair can only create ten batches tokens. the longer the owner waits create batches, the more tokens they will receive. specifically, the tokens per batch created linear function that allows maximum token generation when the system goes online, and after years. the maximum number tokens per batch tokens. therefore, the theoretical maximum number tokens per parent-child pair the increased batch return over time meant incentivize long term interest the token. only the aforementioned interaction between parent-child pairs produces batches. all other interactions occur expected. the number tokens given per batch mined can represented by: where the time since the contract deployment, represented years. help better understand the benefits waiting mine batch between genesis address, list several possible scenarios are shown below: scenario you deploy all batches when the contract goes online. for each batch, you get the minimum batch reward: exor. total, you get exor. this summarized the following table: batch number year created reward (tokens) total tokens created scenario you deploy all batches years after the contract goes online. for each batch, you get the maximum batch reward: tokens. total, you get exor. this illustrated the following table: batch number year created reward (tokens) total tokens created scenario you deploy batches when the contract goes online, batches after waiting years after the contract goes online, and the remaining batches years after the contract goes online. total, you get exor. this shown the following table: batch number year created reward (tokens) total tokens created scenario you create batch every year starting year after the contract goes online, and continue until you have created batches. total, you get exor. this summarized the following table: batch number year created reward (tokens) total tokens created because elixir relies proof time mining system, the total supply the elixir token cannot determined this moment, but range value can calculated finding the minimum total supply count and the maximum total supply count. assumed here that all batches will created, which probably will not the case. the minimum total supply count can calculated taking the total number genesis address pairs (,) and multiplying the minimum batch size every batch (,). the resulting minimum total supply would therefore ,,. contrast, the maximum total supply count with the maximum batch size every batch (,) would result total ,,. however, the time revising this whitepaper, the current maximum total supply size and the minimum total supply size ,,. should noted that because this mining model, the total supply count will follow pattern convergence; the sooner genesis pair address holders mine their batches, the lower the maximum total supply will be. however, the longer they hold, the higher the minimum total supply will rise. early creation batches will cause low inflation the long term. the time this whitepaper revision, batches have been mined. eventually, these values will converge and elix will reach final total supply count. estimate that this value will most likely around million tokens. lending service consider borrower and lender. the borrower takes some amount currency, uses for purpose, and returns later time. virtual currency can sent quickly lender, and borrower can receive that currency almost instantly. this document proposes system which both the borrower and lender are rewarded when the borrower returns loan. the act repaying the loan will analogous trigger from child parent, except this system both the child and parent will earn currency. miners who not need loans for temporary spending can issue loans themselves moving tokens between pairs addresses. through the process issuing and repaying loans, currency will generated. simple mining: miner owns address and address the miner would like pair the addresses mine more tokens. the miner initially has tokens and plans mine for month. the miner would like address charge address zero percent interest over the loan period, since can maximize loan reward minimizing interest. the miner lets the smart contract know would like form borrower-lender pair. interaction with the contract specifies the loan period, loan amount, and interest rate. the miner moves the tokens the loan repayment time, and then holds the tokens for long waited pay back the loan. both addresses are rewarded. the reward for each address proportional the loan amount and time the miner waited move the loan amount back clever mining: once miner has created loan, there something clever can do. can issue himself loan for half the repayment time the previous loan, thereby reaping some extra reward before the holding period the first loan. indeed, though this behavior may seem unfair first, the miner will never more than double his rewards for given time period. fact, this loan halving procedure how this new currency expected mined. real borrowers, who need spend currency sent them will likely participate less this process. mathematically, the longest loan required paid back within blocks and even, clever miner idealized case with zero gas costs could receive the following total reward after waiting blocks, where the reward for the longest loan: this sum converges increases. idealized miners who choose odd number blocks for the largest loan will get slightly less reward per block r/x due the necessity make the number blocks the second loan even. this idealized example, the miner was able insert two transactions specific order into the same ethereum block. reality, miners will probably leave break between the end the last holding period and the next loan repayment deadline ensure they can pay off their next loan time. automated systems will likely make this mining process more precise. the hashing power these automated systems, however, will not interest. these automated systems will only perform few transfers rapid succession between the end the last holding period and the next payment time. borrower who does not participate this halving procedure but borrows loan equal magnitude for equal time will receive reward this makes sense that miners who use halving and have pay extra gas costs will rewarded more. the actual number loans the miner chooses create within time frame will limited the price gas. either the loan time period too short the loan amount too small, the gas cost for executing the loan will more than the reward. mobile application mentioned previously, the mobile application will the first demonstration the lending service's capabilities reward users for repaying loans between family and friends. the mobile space largely untapped market for cryptocurrencies. although many wallets and trading services have been adapted provide mobile interfaces, financial services using cryptocurrency (like lending and borrowing) have not been added mainstream stores like apple and google stores. this lack products likely due these factors: the technology behind cryptocurrencies new and has not developed large extent. this includes cryptocurrencies themselves and the technology required integrate them into businesses seamlessly. most people aren't aware the wider applications cryptocurrencies. for our first product, will creating mobile lending and borrowing platform with the following key advantages over current services like paypal and venmo: token-backed reputations that double earnings lower transaction costs higher security greater privacy reduction fraud imagine you need borrow money from close friend finish paying off your rent for the month. you might pull out your phone, open popular app like venmo, and request your friend send you the money you need. next week when your paycheck comes in, you'll pay them back possibly the same way. after doing this for while, you hear about the elix app. using elix, you can borrow money from your friend, pay them back later, and both you receive reward for you repaying your friend. better yet, that reward isn't the form useless "points" "stars" instead, you receive tokens which you can trade for cash. you might need borrow money frequently. that's many people the world do. but given the choice between app like venmo and elix, which would you choose? after you borrow your elix, you can sell them for usd, withdraw that usd, and use the money for whatever you need. when you have the money pay your friend back, you can buy elix and square up. finally, after holding period, you and your friend can out dinner using the tokens backing your now improved reputation. through the elix app, plan use cryptocurrency re-imagine borrowing for people around the world. there are also additional considerations integrate purchasing/selling into the mobile application. this includes using payment apis like stripe linked company elix wallet, which would streamline the transition and from fiat. this app the first service and beginning step our journey decentralize lending using incentive driven payments. security security has increasingly become issue the financial sector. just recently, security breach the company equifax affected the personal data estimated million american customers. having sensitive financial data central server, especially data used authenticate financial transactions, not ideal. another primary issue with credit cards the linking personal data like social security numbers and names financial history. ethereum provides way around this using addresses make transactions. this also increases user privacy. fraud also easier combat with decentralized systems, since there centralized authority required execute transactions. credit system one the long-term goals elix build credit score system backed tokens. credit score can represented tally token rewards. general sense, rewards are generated when users behave positive manner, such successfully paying off loans the number installments specified over period time. other factors can include the number trades wallet address has made, and the amount money had already traded. these factors would all read and analyzed through smart contract, and would not require any information saved database other than the blockchain. our mobile app, token rewards will awarded when borrower returns loans. the mechanism behind these rewards could the beginning much more complicated credit system executed automated contracts. business model the mobile application space has variety options for generating revenue. many mobile platforms rely paid features generate revenue. this includes apps gaming, lifestyle, and many other categories. these profit models extend into the financial sector well. some companies require payments for each use service. for example, from the paypal website there fee send money personal payment using debit card credit card. the fee the u.s. plus usd the amount you send. for example, you send usd credit card, the fee would usd ($. $.). since want make the elix mobile app simple and cheap use, not plan collect money for user transactions. there reason payment usd should forfeit the customer over dollars. our view, sending payment should cost maximum tens cents. one variable our model scales directly with both the size and involvement the user base. more users join the app, and more miners buy tokens mine, this demand will reflected increased net rewards. sustain continuous development the product, the company can allocate percentage these rewards for company use. this way, the business continuously generates capital. receiving this capital depends upon delivering great user experience and onboarding more users. there are variety other features often incorporated into apps that could introduced well. many apps have paid features and limitations freemium models. however, because our freemium model generates revenue, can focus the above business model first. this model will simple implement and requires the addition only several lines code. not need teams engineers build memberships paid upgrades; rather, can focus our product and base our revenue stream only its quality. fees the only transactional costs between borrowers and lenders will gas costs. our goal engineer the reward function such way that these costs are more than offset.